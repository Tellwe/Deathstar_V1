

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Tue May 09 21:55:40 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.40
    61                           ; Generated 01/12/2016 GMT
    62                           ; 
    63                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F886 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  07FF                     __pidataBANK0:	
   173                           
   174                           ;initializer for _bValueFromPot
   175  07FF  3401               	retlw	1
   176                           
   177                           	psect	idataBANK1
   178  0B1A                     __pidataBANK1:	
   179                           
   180                           ;initializer for _intLightOnTime
   181  0B1A  342C               	retlw	44
   182  0B1B  3401               	retlw	1
   183                           
   184                           ;initializer for _intNumberOfBlinks
   185  0B1C  342C               	retlw	44
   186  0B1D  3401               	retlw	1
   187                           
   188                           	psect	strings
   189  060C                     __pstrings:	
   190  060C                     stringtab:	
   191  060C                     __stringtab:	
   192                           
   193                           ;	String table - string pointers are 1 byte each
   194  060C  1BFF               	btfsc	btemp+1,7
   195  060D  2E16               	ljmp	stringcode
   196  060E  1383               	bcf	3,7
   197  060F  187F               	btfsc	btemp+1,0
   198  0610  1783               	bsf	3,7
   199  0611  0800               	movf	0,w
   200  0612  0A84               	incf	4,f
   201  0613  1903               	skipnz
   202  0614  0AFF               	incf	btemp+1,f
   203  0615  0008               	return
   204  0616                     stringcode:	
   205  0616                     stringdir:	
   206  0616  3006               	movlw	high stringdir
   207  0617  008A               	movwf	10
   208  0618  0804               	movf	4,w
   209  0619  0A84               	incf	4,f
   210  061A  0782               	addwf	2,f
   211  061B                     __stringbase:	
   212  061B  3400               	retlw	0
   213  061C                     __end_of__stringtab:	
   214  061C                     _ChannelP:	
   215  061C  343F               	retlw	63
   216  061D  3447               	retlw	71
   217  061E  344F               	retlw	79
   218  061F  3457               	retlw	87
   219  0620  345F               	retlw	95
   220  0621  3477               	retlw	119
   221  0622  347E               	retlw	126
   222  0623  347F               	retlw	127
   223  0624  3486               	retlw	134
   224  0625  3487               	retlw	135
   225  0626  3437               	retlw	55
   226  0627  3467               	retlw	103
   227  0628  346F               	retlw	111
   228  0629                     __end_of_ChannelP:	
   229  0629                     _ChannelR:	
   230  0629  344F               	retlw	79
   231  062A  3459               	retlw	89
   232  062B  3463               	retlw	99
   233  062C  346D               	retlw	109
   234  062D  3477               	retlw	119
   235  062E  3495               	retlw	149
   236  062F  349F               	retlw	159
   237  0630  349F               	retlw	159
   238  0631  34A9               	retlw	169
   239  0632  34A9               	retlw	169
   240  0633  3445               	retlw	69
   241  0634  3481               	retlw	129
   242  0635  348B               	retlw	139
   243  0636                     __end_of_ChannelR:	
   244  0636                     _ChannelS:	
   245  0636  3418               	retlw	24
   246  0637  341B               	retlw	27
   247  0638  341E               	retlw	30
   248  0639  3421               	retlw	33
   249  063A  3424               	retlw	36
   250  063B  342D               	retlw	45
   251  063C  347B               	retlw	123
   252  063D  3430               	retlw	48
   253  063E  347E               	retlw	126
   254  063F  3433               	retlw	51
   255  0640  3415               	retlw	21
   256  0641  3427               	retlw	39
   257  0642  342A               	retlw	42
   258  0643                     __end_of_ChannelS:	
   259  001F                     _ADCON0bits	set	31
   260  001E                     _ADRESH	set	30
   261  000B                     _INTCONbits	set	11
   262  000C                     _PIR1bits	set	12
   263  0005                     _PORTA	set	5
   264  0005                     _PORTAbits	set	5
   265  0006                     _PORTB	set	6
   266  0006                     _PORTBbits	set	6
   267  0007                     _PORTC	set	7
   268  0007                     _PORTCbits	set	7
   269  0013                     _SSPBUF	set	19
   270  0014                     _SSPCONbits	set	20
   271  0010                     _T1CON	set	16
   272  0010                     _T1CONbits	set	16
   273  000F                     _TMR1H	set	15
   274  000E                     _TMR1L	set	14
   275  0018                     _CARRY	set	24
   276  005F                     _GIE	set	95
   277  0058                     _RBIF	set	88
   278  0060                     _TMR1IF	set	96
   279  0080                     _TMR1ON	set	128
   280  009F                     _ADCON1bits	set	159
   281  0096                     _IOCBbits	set	150
   282  0081                     _OPTION_REGbits	set	129
   283  008F                     _OSCCONbits	set	143
   284  008C                     _PIE1bits	set	140
   285  0094                     _SSPSTATbits	set	148
   286  0085                     _TRISA	set	133
   287  0086                     _TRISB	set	134
   288  0087                     _TRISC	set	135
   289  0095                     _WPUBbits	set	149
   290  0463                     _SSPIE	set	1123
   291  010D                     _EEADR	set	269
   292  010C                     _EEDATA	set	268
   293  0188                     _ANSEL	set	392
   294  0189                     _ANSELH	set	393
   295  0188                     _ANSELbits	set	392
   296  018C                     _EECON1	set	396
   297  018D                     _EECON2	set	397
   298  0C60                     _RD	set	3168
   299  0C61                     _WR	set	3169
   300  0C62                     _WREN	set	3170
   301  0643                     STR_13:	
   302  0643  344E               	retlw	78	;'N'
   303  0644  346F               	retlw	111	;'o'
   304  0645  3474               	retlw	116	;'t'
   305  0646  3420               	retlw	32	;' '
   306  0647  3444               	retlw	68	;'D'
   307  0648  3461               	retlw	97	;'a'
   308  0649  3472               	retlw	114	;'r'
   309  064A  346B               	retlw	107	;'k'
   310  064B  3420               	retlw	32	;' '
   311  064C  3420               	retlw	32	;' '
   312  064D  3420               	retlw	32	;' '
   313  064E  3420               	retlw	32	;' '
   314  064F  3420               	retlw	32	;' '
   315  0650  3400               	retlw	0
   316  0651                     STR_12:	
   317  0651  3449               	retlw	73	;'I'
   318  0652  3474               	retlw	116	;'t'
   319  0653  3427               	retlw	39	;'''
   320  0654  3473               	retlw	115	;'s'
   321  0655  3420               	retlw	32	;' '
   322  0656  3444               	retlw	68	;'D'
   323  0657  3461               	retlw	97	;'a'
   324  0658  3472               	retlw	114	;'r'
   325  0659  346B               	retlw	107	;'k'
   326  065A  3420               	retlw	32	;' '
   327  065B  3420               	retlw	32	;' '
   328  065C  3420               	retlw	32	;' '
   329  065D  3420               	retlw	32	;' '
   330  065E  3400               	retlw	0
   331  065F                     STR_2:	
   332  065F  344E               	retlw	78	;'N'
   333  0660  3431               	retlw	49	;'1'
   334  0661  3453               	retlw	83	;'S'
   335  0662  3454               	retlw	84	;'T'
   336  0663  3441               	retlw	65	;'A'
   337  0664  3452               	retlw	82	;'R'
   338  0665  3454               	retlw	84	;'T'
   339  0666  3445               	retlw	69	;'E'
   340  0667  3444               	retlw	68	;'D'
   341  0668  3400               	retlw	0
   342  0669                     STR_4:	
   343  0669  344E               	retlw	78	;'N'
   344  066A  3432               	retlw	50	;'2'
   345  066B  3453               	retlw	83	;'S'
   346  066C  3454               	retlw	84	;'T'
   347  066D  3441               	retlw	65	;'A'
   348  066E  3452               	retlw	82	;'R'
   349  066F  3454               	retlw	84	;'T'
   350  0670  3445               	retlw	69	;'E'
   351  0671  3444               	retlw	68	;'D'
   352  0672  3400               	retlw	0
   353  0673                     STR_11:	
   354  0673  3444               	retlw	68	;'D'
   355  0674  3441               	retlw	65	;'A'
   356  0675  3452               	retlw	82	;'R'
   357  0676  344B               	retlw	75	;'K'
   358  0677  3443               	retlw	67	;'C'
   359  0678  3441               	retlw	65	;'A'
   360  0679  344C               	retlw	76	;'L'
   361  067A  3443               	retlw	67	;'C'
   362  067B  3400               	retlw	0
   363  067C                     STR_17:	
   364  067C  3443               	retlw	67	;'C'
   365  067D  3448               	retlw	72	;'H'
   366  067E  3453               	retlw	83	;'S'
   367  067F  3454               	retlw	84	;'T'
   368  0680  3441               	retlw	65	;'A'
   369  0681  3454               	retlw	84	;'T'
   370  0682  3445               	retlw	69	;'E'
   371  0683  3400               	retlw	0
   372  0684                     STR_1:	
   373  0684  344E               	retlw	78	;'N'
   374  0685  3431               	retlw	49	;'1'
   375  0686  3442               	retlw	66	;'B'
   376  0687  344C               	retlw	76	;'L'
   377  0688  3449               	retlw	73	;'I'
   378  0689  344E               	retlw	78	;'N'
   379  068A  344B               	retlw	75	;'K'
   380  068B  3400               	retlw	0
   381  068C                     STR_3:	
   382  068C  344E               	retlw	78	;'N'
   383  068D  3432               	retlw	50	;'2'
   384  068E  3442               	retlw	66	;'B'
   385  068F  344C               	retlw	76	;'L'
   386  0690  3449               	retlw	73	;'I'
   387  0691  344E               	retlw	78	;'N'
   388  0692  344B               	retlw	75	;'K'
   389  0693  3400               	retlw	0
   390  0694                     STR_9:	
   391  0694  3453               	retlw	83	;'S'
   392  0695  3445               	retlw	69	;'E'
   393  0696  344E               	retlw	78	;'N'
   394  0697  3453               	retlw	83	;'S'
   395  0698  3456               	retlw	86	;'V'
   396  0699  3441               	retlw	65	;'A'
   397  069A  344C               	retlw	76	;'L'
   398  069B  3400               	retlw	0
   399  069C                     STR_14:	
   400  069C  3453               	retlw	83	;'S'
   401  069D  3454               	retlw	84	;'T'
   402  069E  3441               	retlw	65	;'A'
   403  069F  3454               	retlw	84	;'T'
   404  06A0  3445               	retlw	69	;'E'
   405  06A1  343F               	retlw	63	;'?'
   406  06A2  3400               	retlw	0
   407  06A3                     STR_8:	
   408  06A3  3446               	retlw	70	;'F'
   409  06A4  344C               	retlw	76	;'L'
   410  06A5  3441               	retlw	65	;'A'
   411  06A6  3453               	retlw	83	;'S'
   412  06A7  3448               	retlw	72	;'H'
   413  06A8  3442               	retlw	66	;'B'
   414  06A9  3400               	retlw	0
   415  06AA                     STR_10:	
   416  06AA  3450               	retlw	80	;'P'
   417  06AB  344F               	retlw	79	;'O'
   418  06AC  3454               	retlw	84	;'T'
   419  06AD  3456               	retlw	86	;'V'
   420  06AE  3441               	retlw	65	;'A'
   421  06AF  344C               	retlw	76	;'L'
   422  06B0  3400               	retlw	0
   423  06B1                     STR_7:	
   424  06B1  3446               	retlw	70	;'F'
   425  06B2  344C               	retlw	76	;'L'
   426  06B3  3441               	retlw	65	;'A'
   427  06B4  3453               	retlw	83	;'S'
   428  06B5  3448               	retlw	72	;'H'
   429  06B6  344C               	retlw	76	;'L'
   430  06B7  3400               	retlw	0
   431  06B8                     STR_19:	
   432  06B8  3453               	retlw	83	;'S'
   433  06B9  3445               	retlw	69	;'E'
   434  06BA  3454               	retlw	84	;'T'
   435  06BB  3444               	retlw	68	;'D'
   436  06BC  3456               	retlw	86	;'V'
   437  06BD  3400               	retlw	0
   438  06BE                     STR_18:	
   439  06BE  3452               	retlw	82	;'R'
   440  06BF  344D               	retlw	77	;'M'
   441  06C0  3444               	retlw	68	;'D'
   442  06C1  3456               	retlw	86	;'V'
   443  06C2  3400               	retlw	0
   444  06C3                     STR_16:	
   445  06C3  3450               	retlw	80	;'P'
   446  06C4  3449               	retlw	73	;'I'
   447  06C5  3443               	retlw	67	;'C'
   448  06C6  3400               	retlw	0
   449  06C7                     STR_15:	
   450  06C7  3450               	retlw	80	;'P'
   451  06C8  346F               	retlw	111	;'o'
   452  06C9  3474               	retlw	116	;'t'
   453  06CA  3400               	retlw	0
   454  065F                     
   455                           ; #config settings
   456  0000                     
   457                           	psect	cinit
   458  0015                     start_initialization:	
   459  0015                     __initialization:	
   460                           
   461                           ; Initialize objects allocated to BANK1
   462  0015  1683               	bsf	3,5	;RP0=1, select bank1
   463  0016  1303               	bcf	3,6	;RP1=0, select bank1
   464  0017  120A  158A  231A  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   465  001C  00D8               	movwf	__pdataBANK1& (0+127)
   466  001D  120A  158A  231B  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   467  0022  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   468  0023  120A  158A  231C  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   469  0028  00DA               	movwf	(__pdataBANK1+2)& (0+127)
   470  0029  120A  158A  231D  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   471  002E  00DB               	movwf	(__pdataBANK1+3)& (0+127)
   472                           
   473                           ; Initialize objects allocated to BANK0
   474  002F  1283               	bcf	3,5	;RP0=0, select bank0
   475  0030  1303               	bcf	3,6	;RP1=0, select bank0
   476  0031  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   477  0036  00EF               	movwf	__pdataBANK0& (0+127)
   478                           
   479                           ; Clear objects allocated to BANK3
   480  0037  1783               	bsf	3,7	;select IRP bank2
   481  0038  3090               	movlw	low __pbssBANK3
   482  0039  0084               	movwf	4
   483  003A  30B8               	movlw	low (__pbssBANK3+40)
   484  003B  120A  158A  2326  120A  118A  	fcall	clear_ram0
   485                           
   486                           ; Clear objects allocated to BANK1
   487  0040  1383               	bcf	3,7	;select IRP bank0
   488  0041  30A0               	movlw	low __pbssBANK1
   489  0042  0084               	movwf	4
   490  0043  30D8               	movlw	low (__pbssBANK1+56)
   491  0044  120A  158A  2326   	fcall	clear_ram0
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0047  01E8               	clrf	__pbssBANK0& (0+127)
   495  0048  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   496  0049  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   497  004A  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   498  004B  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   499  004C  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   500  004D  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   501                           
   502                           ; Clear objects allocated to COMMON
   503  004E  01FC               	clrf	__pbssCOMMON& (0+127)
   504  004F  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   505  0050                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0050                     __end_of__initialization:	
   509  0050  0183               	clrf	3
   510  0051  120A  118A  2ECB   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssCOMMON
   513  007C                     __pbssCOMMON:	
   514  007C                     _addressDarknessValue:	
   515  007C                     	ds	2
   516                           
   517                           	psect	bssBANK0
   518  0068                     __pbssBANK0:	
   519  0068                     _intBlinkCycle:	
   520  0068                     	ds	2
   521  006A                     _intSecondCounter:	
   522  006A                     	ds	2
   523  006C                     _bDark:	
   524  006C                     	ds	1
   525  006D                     _bTransiverModeReceive:	
   526  006D                     	ds	1
   527  006E                     _btnPush:	
   528  006E                     	ds	1
   529                           
   530                           	psect	dataBANK0
   531  006F                     __pdataBANK0:	
   532  006F                     _bValueFromPot:	
   533  006F                     	ds	1
   534                           
   535                           	psect	bssBANK1
   536  00A0                     __pbssBANK1:	
   537  00A0                     _intClockTimer:	
   538  00A0                     	ds	10
   539  00AA                     _bTimerComplete:	
   540  00AA                     	ds	5
   541  00AF                     _channelFound:	
   542  00AF                     	ds	2
   543  00B1                     _intBlinkCounter:	
   544  00B1                     	ds	2
   545  00B3                     _intDarkCheckIntervall:	
   546  00B3                     	ds	2
   547  00B5                     _intHalfSecondCounter:	
   548  00B5                     	ds	2
   549  00B7                     _intMinuteCounter:	
   550  00B7                     	ds	2
   551  00B9                     _bChannelFound:	
   552  00B9                     	ds	1
   553  00BA                     _TransmittedString:	
   554  00BA                     	ds	30
   555                           
   556                           	psect	dataBANK1
   557  00D8                     __pdataBANK1:	
   558  00D8                     _intLightOnTime:	
   559  00D8                     	ds	2
   560  00DA                     _intNumberOfBlinks:	
   561  00DA                     	ds	2
   562                           
   563                           	psect	bssBANK3
   564  0190                     __pbssBANK3:	
   565  0190                     _ReceivedData:	
   566  0190                     	ds	40
   567                           
   568                           	psect	clrtext
   569  0B26                     clear_ram0:	
   570                           ;	Called with FSR containing the base address, and
   571                           ;	W with the last address+1
   572                           
   573  0B26  0064               	clrwdt	;clear the watchdog before getting into this loop
   574  0B27                     clrloop0:	
   575  0B27  0180               	clrf	0	;clear RAM location pointed to by FSR
   576  0B28  0A84               	incf	4,f	;increment pointer
   577  0B29  0604               	xorwf	4,w	;XOR with final address
   578  0B2A  1903               	btfsc	3,2	;have we reached the end yet?
   579  0B2B  3400               	retlw	0	;all done for this memory range, return
   580  0B2C  0604               	xorwf	4,w	;XOR again to restore value
   581  0B2D  2B27               	goto	clrloop0	;do the next byte
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:	
   585  0070                     ?_isdigit:	
   586  0070                     ?_init:	
   587                           ; 1 bit 
   588                           
   589  0070                     ?_OperationMode:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_TransiverInit:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Mode_0:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Mode_1:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Mode_2:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Mode_3:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Mode_4:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Mode_5:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_TransiverToReceive:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_TransiverReadFIFO:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_SetRFMode:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_RegisterRead:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_FindChannel:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_ReadFIFO:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_TransmittedDataHandler:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_AnalogValue:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_DarknessCheck:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_eeprom_read:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_WriteFIFO:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_LightWithSensController:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_TimerCounter:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_TimerCounter:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_WriteSPI:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_ReadSPI:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_tc_int:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?i1_OperationMode:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??i1_OperationMode:	
   671                           ; 1 bytes @ 0x0
   672                           
   673                           
   674                           ; 1 bytes @ 0x0
   675  0070                     	ds	1
   676  0071                     i1OperationMode@bracketStatus:	
   677                           
   678                           ; 1 bytes @ 0x1
   679  0071                     	ds	2
   680  0073                     TimerCounter@i:	
   681                           
   682                           ; 2 bytes @ 0x3
   683  0073                     	ds	2
   684  0075                     ??_tc_int:	
   685                           
   686                           ; 1 bytes @ 0x5
   687  0075                     	ds	7
   688                           
   689                           	psect	cstackBANK0
   690  0020                     __pcstackBANK0:	
   691  0020                     ??_init:	
   692  0020                     ??_OperationMode:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0020                     ?_timerFunction:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?_DelayDs:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0020                     ??_eeprom_read:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ?_eeprom_write:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ??_isdigit:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0020                     ?_strchr:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0020                     ??_WriteSPI:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0020                     ?_strlen:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0020                     ?___wmul:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0020                     eeprom_write@value:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0020                     _isdigit$1091:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     timerFunction@intTimerNumber:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0020                     DelayDs@cnt:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ___wmul@multiplier:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     strchr@chr:	
   738                           ; 2 bytes @ 0x0
   739                           
   740                           
   741                           ; 2 bytes @ 0x0
   742  0020                     	ds	1
   743  0021                     ??_eeprom_write:	
   744  0021                     WriteSPI@buffer:	
   745                           ; 1 bytes @ 0x1
   746                           
   747  0021                     OperationMode@bracketStatus:	
   748                           ; 1 bytes @ 0x1
   749                           
   750  0021                     eeprom_read@addr:	
   751                           ; 1 bytes @ 0x1
   752                           
   753  0021                     isdigit@c:	
   754                           ; 1 bytes @ 0x1
   755                           
   756                           
   757                           ; 1 bytes @ 0x1
   758  0021                     	ds	1
   759  0022                     ??_DelayDs:	
   760  0022                     ??_strlen:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0022                     ??_strchr:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0022                     WriteSPI@databyte:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0022                     eeprom_write@addr:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0022                     strchr@ptr:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0022                     timerFunction@intSetSeconds:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0022                     ___wmul@multiplicand:	
   779                           ; 2 bytes @ 0x2
   780                           
   781                           
   782                           ; 2 bytes @ 0x2
   783  0022                     	ds	1
   784  0023                     ??_RegisterRead:	
   785  0023                     ??_ReadFIFO:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0023                     ??_WriteFIFO:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0023                     ??_ReadSPI:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0023                     WriteFIFO@Data:	
   795                           ; 1 bytes @ 0x3
   796                           
   797                           
   798                           ; 1 bytes @ 0x3
   799  0023                     	ds	1
   800  0024                     ??_timerFunction:	
   801  0024                     ??___wmul:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0024                     ReadFIFO@value:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0024                     DelayDs@i:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0024                     ___wmul@product:	
   811                           ; 2 bytes @ 0x4
   812                           
   813                           
   814                           ; 2 bytes @ 0x4
   815  0024                     	ds	1
   816  0025                     RegisterRead@value:	
   817                           
   818                           ; 1 bytes @ 0x5
   819  0025                     	ds	1
   820  0026                     ??_AnalogValue:	
   821  0026                     ?_Blink:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0026                     ?_atoi:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0026                     RegisterRead@adress:	
   828                           ; 2 bytes @ 0x6
   829                           
   830  0026                     strlen@s:	
   831                           ; 1 bytes @ 0x6
   832                           
   833  0026                     Blink@n:	
   834                           ; 1 bytes @ 0x6
   835                           
   836                           
   837                           ; 2 bytes @ 0x6
   838  0026                     	ds	1
   839  0027                     ?_RegisterSet:	
   840  0027                     RegisterSet@value:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0027                     AnalogValue@channel:	
   844                           ; 1 bytes @ 0x7
   845                           
   846  0027                     strlen@cp:	
   847                           ; 1 bytes @ 0x7
   848                           
   849                           
   850                           ; 1 bytes @ 0x7
   851  0027                     	ds	1
   852  0028                     ??_RegisterSet:	
   853  0028                     ??_DarknessCheck:	
   854                           ; 1 bytes @ 0x8
   855                           
   856  0028                     ??_atoi:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0028                     ??_Blink:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0028                     ?_strncmp:	
   863                           ; 1 bytes @ 0x8
   864                           
   865  0028                     strncmp@s2:	
   866                           ; 2 bytes @ 0x8
   867                           
   868                           
   869                           ; 1 bytes @ 0x8
   870  0028                     	ds	1
   871  0029                     DarknessCheck@darknessValue:	
   872  0029                     Blink@i:	
   873                           ; 1 bytes @ 0x9
   874                           
   875  0029                     strncmp@len:	
   876                           ; 2 bytes @ 0x9
   877                           
   878                           
   879                           ; 2 bytes @ 0x9
   880  0029                     	ds	1
   881  002A                     ??_Mode_0:	
   882  002A                     ??_Mode_1:	
   883                           ; 1 bytes @ 0xA
   884                           
   885  002A                     ??_Mode_2:	
   886                           ; 1 bytes @ 0xA
   887                           
   888  002A                     ??_Mode_3:	
   889                           ; 1 bytes @ 0xA
   890                           
   891  002A                     ??_LightWithSensController:	
   892                           ; 1 bytes @ 0xA
   893                           
   894  002A                     RegisterSet@adress:	
   895                           ; 1 bytes @ 0xA
   896                           
   897  002A                     atoi@sign:	
   898                           ; 1 bytes @ 0xA
   899                           
   900                           
   901                           ; 1 bytes @ 0xA
   902  002A                     	ds	1
   903  002B                     ??_SetRFMode:	
   904  002B                     ??_strncmp:	
   905                           ; 1 bytes @ 0xB
   906                           
   907  002B                     atoi@a:	
   908                           ; 1 bytes @ 0xB
   909                           
   910                           
   911                           ; 2 bytes @ 0xB
   912  002B                     	ds	1
   913  002C                     SetRFMode@mode:	
   914                           
   915                           ; 1 bytes @ 0xC
   916  002C                     	ds	1
   917  002D                     SetRFMode@mcparam0_read:	
   918  002D                     atoi@s:	
   919                           ; 1 bytes @ 0xD
   920                           
   921  002D                     strncmp@s1:	
   922                           ; 1 bytes @ 0xD
   923                           
   924                           
   925                           ; 1 bytes @ 0xD
   926  002D                     	ds	1
   927  002E                     ??_FindChannel:	
   928  002E                     ?_strstr:	
   929                           ; 1 bytes @ 0xE
   930                           
   931  002E                     strstr@s2:	
   932                           ; 1 bytes @ 0xE
   933                           
   934                           
   935                           ; 1 bytes @ 0xE
   936  002E                     	ds	1
   937  002F                     ??_strstr:	
   938                           
   939                           ; 1 bytes @ 0xF
   940  002F                     	ds	2
   941  0031                     FindChannel@cnt:	
   942                           
   943                           ; 2 bytes @ 0x11
   944  0031                     	ds	1
   945  0032                     strstr@s1:	
   946                           
   947                           ; 1 bytes @ 0x12
   948  0032                     	ds	1
   949  0033                     FindChannel@i:	
   950                           
   951                           ; 2 bytes @ 0x13
   952  0033                     	ds	2
   953  0035                     ??_TransiverInit:	
   954  0035                     ??_TransiverToReceive:	
   955                           ; 1 bytes @ 0x15
   956                           
   957  0035                     ?_TransmittString:	
   958                           ; 1 bytes @ 0x15
   959                           
   960  0035                     TransmittString@dataString:	
   961                           ; 1 bytes @ 0x15
   962                           
   963                           
   964                           ; 2 bytes @ 0x15
   965  0035                     	ds	1
   966  0036                     TransiverInit@i:	
   967                           
   968                           ; 2 bytes @ 0x16
   969  0036                     	ds	1
   970  0037                     ??_TransmittString:	
   971                           
   972                           ; 1 bytes @ 0x17
   973  0037                     	ds	3
   974  003A                     TransmittString@i:	
   975                           
   976                           ; 2 bytes @ 0x1A
   977  003A                     	ds	2
   978  003C                     ??_Mode_4:	
   979  003C                     ??_Mode_5:	
   980                           ; 1 bytes @ 0x1C
   981                           
   982  003C                     ??_TransmittedDataHandler:	
   983                           ; 1 bytes @ 0x1C
   984                           
   985                           
   986                           ; 1 bytes @ 0x1C
   987  003C                     	ds	1
   988  003D                     TransmittedDataHandler@slask:	
   989                           
   990                           ; 8 bytes @ 0x1D
   991  003D                     	ds	8
   992  0045                     TransmittedDataHandler@slask_706:	
   993                           
   994                           ; 8 bytes @ 0x25
   995  0045                     	ds	8
   996  004D                     TransmittedDataHandler@slask_715:	
   997                           
   998                           ; 8 bytes @ 0x2D
   999  004D                     	ds	8
  1000  0055                     TransmittedDataHandler@slask_718:	
  1001                           
  1002                           ; 8 bytes @ 0x35
  1003  0055                     	ds	8
  1004  005D                     TransmittedDataHandler@value:	
  1005                           
  1006                           ; 2 bytes @ 0x3D
  1007  005D                     	ds	2
  1008  005F                     ??_TransiverReadFIFO:	
  1009                           
  1010                           ; 1 bytes @ 0x3F
  1011  005F                     	ds	2
  1012  0061                     TransiverReadFIFO@i:	
  1013                           
  1014                           ; 2 bytes @ 0x41
  1015  0061                     	ds	2
  1016  0063                     TransiverReadFIFO@j:	
  1017                           
  1018                           ; 2 bytes @ 0x43
  1019  0063                     	ds	2
  1020  0065                     ??_main:	
  1021                           
  1022                           ; 1 bytes @ 0x45
  1023  0065                     	ds	3
  1024                           
  1025                           	psect	maintext
  1026  06CB                     __pmaintext:	
  1027 ;;
  1028 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1029 ;;
  1030 ;; *************** function _main *****************
  1031 ;; Defined at:
  1032 ;;		line 121 in file "../Main Card V10.0.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;		None
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;		None
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : B00/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0
  1047 ;;      Locals:         0       0       0       0       0
  1048 ;;      Temps:          0       3       0       0       0
  1049 ;;      Totals:         0       3       0       0       0
  1050 ;;Total ram usage:        3 bytes
  1051 ;; Hardware stack levels required when called:   10
  1052 ;; This function calls:
  1053 ;;		_Mode_0
  1054 ;;		_Mode_1
  1055 ;;		_Mode_2
  1056 ;;		_Mode_3
  1057 ;;		_Mode_4
  1058 ;;		_Mode_5
  1059 ;;		_OperationMode
  1060 ;;		_TransiverInit
  1061 ;;		_TransiverReadFIFO
  1062 ;;		_TransiverToReceive
  1063 ;;		_init
  1064 ;; This function is called by:
  1065 ;;		Startup code after reset
  1066 ;; This function uses a non-reentrant model
  1067 ;;
  1068                           
  1069                           
  1070                           ;psect for function _main
  1071  06CB                     _main:	
  1072                           
  1073                           ;Main Card V10.0.c: 124: init();
  1074                           
  1075                           ;incstack = 0
  1076 ;; hardware stack exceeded
  1077                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1078  06CB  120A  158A  267C  120A  118A  	fcall	_init
  1079                           
  1080                           ;Main Card V10.0.c: 126: if(OperationMode() == 3){
  1081  06D0  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1082  06D5  3A03               	xorlw	3
  1083  06D6  1D03               	skipz
  1084  06D7  2EE2               	goto	l175
  1085                           
  1086                           ;Main Card V10.0.c: 127: intNumberOfBlinks = 180;
  1087  06D8  30B4               	movlw	180
  1088  06D9  1683               	bsf	3,5	;RP0=1, select bank1
  1089  06DA  1303               	bcf	3,6	;RP1=0, select bank1
  1090  06DB  00DA               	movwf	_intNumberOfBlinks^(0+128)
  1091  06DC  3000               	movlw	0
  1092  06DD  00DB               	movwf	(_intNumberOfBlinks^(0+128)+1)
  1093                           
  1094                           ;Main Card V10.0.c: 128: intLightOnTime = 180;
  1095  06DE  30B4               	movlw	180
  1096  06DF  00D8               	movwf	_intLightOnTime^(0+128)
  1097  06E0  3000               	movlw	0
  1098  06E1  00D9               	movwf	(_intLightOnTime^(0+128)+1)
  1099  06E2                     l175:	
  1100                           
  1101                           ;Main Card V10.0.c: 129: }
  1102                           ;Main Card V10.0.c: 130: _delay((unsigned long)((800)*(4000000/4000.0)));
  1103  06E2  3005               	movlw	5
  1104  06E3  1283               	bcf	3,5	;RP0=0, select bank0
  1105  06E4  1303               	bcf	3,6	;RP1=0, select bank0
  1106  06E5  00E7               	movwf	??_main+2
  1107  06E6  300F               	movlw	15
  1108  06E7  00E6               	movwf	??_main+1
  1109  06E8  30F0               	movlw	240
  1110  06E9  00E5               	movwf	??_main
  1111  06EA                     u2357:	
  1112  06EA  0BE5               	decfsz	??_main,f
  1113  06EB  2EEA               	goto	u2357
  1114  06EC  0BE6               	decfsz	??_main+1,f
  1115  06ED  2EEA               	goto	u2357
  1116  06EE  0BE7               	decfsz	??_main+2,f
  1117  06EF  2EEA               	goto	u2357
  1118  06F0  0000               	nop
  1119                           
  1120                           ;Main Card V10.0.c: 131: TransiverInit();
  1121  06F1  120A  118A  223D  120A  118A  	fcall	_TransiverInit
  1122  06F6                     l2452:	
  1123                           ;Main Card V10.0.c: 133: while(1)
  1124                           
  1125                           
  1126                           ;Main Card V10.0.c: 134: {
  1127                           ;Main Card V10.0.c: 135: if(OperationMode() == 0)
  1128  06F6  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1129  06FB  3A00               	xorlw	0
  1130  06FC  1D03               	skipz
  1131  06FD  2F03               	goto	l2456
  1132                           
  1133                           ;Main Card V10.0.c: 136: {
  1134                           ;Main Card V10.0.c: 137: Mode_0();
  1135  06FE  120A  158A  2316  120A  118A  	fcall	_Mode_0
  1136  0703                     l2456:	
  1137                           
  1138                           ;Main Card V10.0.c: 138: }
  1139                           ;Main Card V10.0.c: 139: if(OperationMode() == 1)
  1140  0703  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1141  0708  3A01               	xorlw	1
  1142  0709  1D03               	skipz
  1143  070A  2F10               	goto	l2460
  1144                           
  1145                           ;Main Card V10.0.c: 140: {
  1146                           ;Main Card V10.0.c: 141: Mode_1();
  1147  070B  120A  158A  23C5  120A  118A  	fcall	_Mode_1
  1148  0710                     l2460:	
  1149                           
  1150                           ;Main Card V10.0.c: 142: }
  1151                           ;Main Card V10.0.c: 144: if(OperationMode() == 2)
  1152  0710  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1153  0715  3A02               	xorlw	2
  1154  0716  1D03               	skipz
  1155  0717  2F1D               	goto	l2464
  1156                           
  1157                           ;Main Card V10.0.c: 145: {
  1158                           ;Main Card V10.0.c: 146: Mode_2();
  1159  0718  120A  158A  234C  120A  118A  	fcall	_Mode_2
  1160  071D                     l2464:	
  1161                           
  1162                           ;Main Card V10.0.c: 147: }
  1163                           ;Main Card V10.0.c: 148: if(OperationMode() == 3)
  1164  071D  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1165  0722  3A03               	xorlw	3
  1166  0723  1D03               	skipz
  1167  0724  2F2A               	goto	l2468
  1168                           
  1169                           ;Main Card V10.0.c: 149: {
  1170                           ;Main Card V10.0.c: 150: Mode_3();
  1171  0725  120A  158A  23AC  120A  118A  	fcall	_Mode_3
  1172  072A                     l2468:	
  1173                           
  1174                           ;Main Card V10.0.c: 151: }
  1175                           ;Main Card V10.0.c: 153: if(OperationMode() == 4)
  1176  072A  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1177  072F  3A04               	xorlw	4
  1178  0730  1D03               	skipz
  1179  0731  2F37               	goto	l2472
  1180                           
  1181                           ;Main Card V10.0.c: 154: {
  1182                           ;Main Card V10.0.c: 155: Mode_4();
  1183  0732  120A  158A  23F9  120A  118A  	fcall	_Mode_4
  1184  0737                     l2472:	
  1185                           
  1186                           ;Main Card V10.0.c: 156: }
  1187                           ;Main Card V10.0.c: 158: if(OperationMode() == 5)
  1188  0737  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1189  073C  3A05               	xorlw	5
  1190  073D  1D03               	skipz
  1191  073E  2F44               	goto	l2476
  1192                           
  1193                           ;Main Card V10.0.c: 159: {
  1194                           ;Main Card V10.0.c: 160: Mode_5();
  1195  073F  120A  158A  2413  120A  118A  	fcall	_Mode_5
  1196  0744                     l2476:	
  1197                           
  1198                           ;Main Card V10.0.c: 161: }
  1199                           ;Main Card V10.0.c: 165: if(!bTransiverModeReceive)
  1200  0744  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0745  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0746  086D               	movf	_bTransiverModeReceive,w
  1203  0747  1D03               	btfss	3,2
  1204  0748  2F4E               	goto	l2480
  1205                           
  1206                           ;Main Card V10.0.c: 166: TransiverToReceive();
  1207  0749  120A  158A  26CF  120A  118A  	fcall	_TransiverToReceive
  1208  074E                     l2480:	
  1209                           
  1210                           ;Main Card V10.0.c: 167: if(PORTBbits.RB4 && bTransiverModeReceive)
  1211  074E  1283               	bcf	3,5	;RP0=0, select bank0
  1212  074F  1303               	bcf	3,6	;RP1=0, select bank0
  1213  0750  1E06               	btfss	6,4	;volatile
  1214  0751  2EF6               	goto	l2452
  1215  0752  086D               	movf	_bTransiverModeReceive,w
  1216  0753  1903               	btfsc	3,2
  1217  0754  2EF6               	goto	l2452
  1218                           
  1219                           ;Main Card V10.0.c: 168: TransiverReadFIFO();
  1220  0755  120A  158A  272B  120A  118A  	fcall	_TransiverReadFIFO
  1221  075A  2EF6               	goto	l2452
  1222  075B                     __end_of_main:	
  1223                           
  1224                           	psect	text1
  1225  0E7C                     __ptext1:	
  1226 ;; *************** function _init *****************
  1227 ;; Defined at:
  1228 ;;		line 558 in file "../Main Card V10.0.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       0       0       0       0
  1245 ;;      Totals:         0       0       0       0       0
  1246 ;;Total ram usage:        0 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    2
  1249 ;; This function calls:
  1250 ;;		Nothing
  1251 ;; This function is called by:
  1252 ;;		_main
  1253 ;; This function uses a non-reentrant model
  1254 ;;
  1255                           
  1256                           
  1257                           ;psect for function _init
  1258  0E7C                     _init:	
  1259                           
  1260                           ;Main Card V10.0.c: 561: OSCCONbits.IRCF2 = 1;
  1261                           
  1262                           ;incstack = 0
  1263                           ; Regs used in _init: [wreg+status,2+status,0]
  1264  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  1265  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  1266  0E7E  170F               	bsf	15,6	;volatile
  1267                           
  1268                           ;Main Card V10.0.c: 562: OSCCONbits.IRCF1 = 1;
  1269  0E7F  168F               	bsf	15,5	;volatile
  1270                           
  1271                           ;Main Card V10.0.c: 563: OSCCONbits.IRCF0 = 0;
  1272  0E80  120F               	bcf	15,4	;volatile
  1273                           
  1274                           ;Main Card V10.0.c: 564: OSCCONbits.SCS = 1;
  1275  0E81  140F               	bsf	15,0	;volatile
  1276                           
  1277                           ;Main Card V10.0.c: 567: PORTA = 0x00;
  1278  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1279  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1280  0E84  0185               	clrf	5	;volatile
  1281                           
  1282                           ;Main Card V10.0.c: 568: PORTB = 0x00;
  1283  0E85  0186               	clrf	6	;volatile
  1284                           
  1285                           ;Main Card V10.0.c: 569: PORTC = 0x00;
  1286  0E86  0187               	clrf	7	;volatile
  1287                           
  1288                           ;Main Card V10.0.c: 570: TRISA = 0b00001011;
  1289  0E87  300B               	movlw	11
  1290  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  1291  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  1292  0E8A  0085               	movwf	5	;volatile
  1293                           
  1294                           ;Main Card V10.0.c: 571: TRISB = 0b00111111;
  1295  0E8B  303F               	movlw	63
  1296  0E8C  0086               	movwf	6	;volatile
  1297                           
  1298                           ;Main Card V10.0.c: 572: TRISC = 0b00010000;
  1299  0E8D  3010               	movlw	16
  1300  0E8E  0087               	movwf	7	;volatile
  1301                           
  1302                           ;Main Card V10.0.c: 573: ANSEL = 0b00000000;
  1303  0E8F  1683               	bsf	3,5	;RP0=1, select bank3
  1304  0E90  1703               	bsf	3,6	;RP1=1, select bank3
  1305  0E91  0188               	clrf	8	;volatile
  1306                           
  1307                           ;Main Card V10.0.c: 574: ANSELH = 0b00000000;
  1308  0E92  0189               	clrf	9	;volatile
  1309                           
  1310                           ;Main Card V10.0.c: 575: ANSELbits.ANS0 = 1;
  1311  0E93  1408               	bsf	8,0	;volatile
  1312                           
  1313                           ;Main Card V10.0.c: 576: ANSELbits.ANS3 = 1;
  1314  0E94  1588               	bsf	8,3	;volatile
  1315                           
  1316                           ;Main Card V10.0.c: 577: OPTION_REGbits.nRBPU = 0;
  1317  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  1318  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  1319  0E97  1381               	bcf	1,7	;volatile
  1320                           
  1321                           ;Main Card V10.0.c: 578: WPUBbits.WPUB5 = 0;
  1322  0E98  1295               	bcf	21,5	;volatile
  1323  0E99                     l299:	
  1324                           ;Main Card V10.0.c: 579: while(!PORTBbits.RB5);
  1325                           
  1326  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1327  0E9A  1E86               	btfss	6,5	;volatile
  1328  0E9B  2E99               	goto	l299
  1329                           
  1330                           ;Main Card V10.0.c: 582: SSPCONbits.SSPM=0x00;
  1331  0E9C  30F0               	movlw	-16
  1332  0E9D  0594               	andwf	20,f	;volatile
  1333                           
  1334                           ;Main Card V10.0.c: 583: SSPCONbits.CKP=0;
  1335  0E9E  1214               	bcf	20,4	;volatile
  1336                           
  1337                           ;Main Card V10.0.c: 584: SSPSTATbits.CKE=1;
  1338  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  1339  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  1340  0EA1  1714               	bsf	20,6	;volatile
  1341                           
  1342                           ;Main Card V10.0.c: 585: SSPSTATbits.SMP=0;
  1343  0EA2  1394               	bcf	20,7	;volatile
  1344                           
  1345                           ;Main Card V10.0.c: 586: SSPCONbits.SSPEN=0x01;
  1346  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  1347  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  1348  0EA5  1694               	bsf	20,5	;volatile
  1349                           
  1350                           ;Main Card V10.0.c: 587: SSPIE = 0;
  1351  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  1352  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  1353  0EA8  118C               	bcf	12,3	;volatile
  1354                           
  1355                           ;Main Card V10.0.c: 590: PORTAbits.RA5 = 1;
  1356  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1357  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  1358  0EAB  1685               	bsf	5,5	;volatile
  1359                           
  1360                           ;Main Card V10.0.c: 591: PORTAbits.RA4 = 1;
  1361  0EAC  1605               	bsf	5,4	;volatile
  1362                           
  1363                           ;Main Card V10.0.c: 594: INTCONbits.RBIE = 1;
  1364  0EAD  158B               	bsf	11,3	;volatile
  1365                           
  1366                           ;Main Card V10.0.c: 595: INTCONbits.PEIE = 1;
  1367  0EAE  170B               	bsf	11,6	;volatile
  1368                           
  1369                           ;Main Card V10.0.c: 596: PIE1bits.TMR1IE = 1;
  1370  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  1371  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  1372  0EB1  140C               	bsf	12,0	;volatile
  1373                           
  1374                           ;Main Card V10.0.c: 597: INTCONbits.GIE = 1;
  1375  0EB2  178B               	bsf	11,7	;volatile
  1376                           
  1377                           ;Main Card V10.0.c: 598: IOCBbits.IOCB5 = 1;
  1378  0EB3  1696               	bsf	22,5	;volatile
  1379                           
  1380                           ;Main Card V10.0.c: 601: T1CON = 0b00110000;
  1381  0EB4  3030               	movlw	48
  1382  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  1383  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  1384  0EB7  0090               	movwf	16	;volatile
  1385                           
  1386                           ;Main Card V10.0.c: 602: TMR1H = 0x0B;
  1387  0EB8  300B               	movlw	11
  1388  0EB9  008F               	movwf	15	;volatile
  1389                           
  1390                           ;Main Card V10.0.c: 603: TMR1L = 0xDB;
  1391  0EBA  30DB               	movlw	219
  1392  0EBB  008E               	movwf	14	;volatile
  1393                           
  1394                           ;Main Card V10.0.c: 604: T1CONbits.TMR1ON = 1;
  1395  0EBC  1410               	bsf	16,0	;volatile
  1396                           
  1397                           ;Main Card V10.0.c: 607: ADCON0bits.ADCS0 = 0;
  1398  0EBD  131F               	bcf	31,6	;volatile
  1399                           
  1400                           ;Main Card V10.0.c: 608: ADCON0bits.ADCS1 = 0;
  1401  0EBE  139F               	bcf	31,7	;volatile
  1402                           
  1403                           ;Main Card V10.0.c: 609: ADCON1bits.ADFM = 0;
  1404  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  1405  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  1406  0EC1  139F               	bcf	31,7	;volatile
  1407                           
  1408                           ;Main Card V10.0.c: 610: ADCON1bits.VCFG1 = 0;
  1409  0EC2  129F               	bcf	31,5	;volatile
  1410                           
  1411                           ;Main Card V10.0.c: 611: ADCON1bits.VCFG0 = 0;
  1412  0EC3  121F               	bcf	31,4	;volatile
  1413                           
  1414                           ;Main Card V10.0.c: 614: intSecondCounter = 0;
  1415  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1416  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1417  0EC6  01EA               	clrf	_intSecondCounter
  1418  0EC7  01EB               	clrf	_intSecondCounter+1
  1419                           
  1420                           ;Main Card V10.0.c: 615: intHalfSecondCounter = 0;
  1421  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1422  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  1423  0ECA  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1424  0ECB  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1425                           
  1426                           ;Main Card V10.0.c: 616: intMinuteCounter = 0;
  1427  0ECC  01B7               	clrf	_intMinuteCounter^(0+128)
  1428  0ECD  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1429  0ECE  0008               	return
  1430  0ECF                     __end_of_init:	
  1431                           
  1432                           	psect	text2
  1433  0F2B                     __ptext2:	
  1434 ;; *************** function _TransiverReadFIFO *****************
  1435 ;; Defined at:
  1436 ;;		line 203 in file "../Main Card V10.0.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  j               2   67[BANK0 ] int 
  1441 ;;  i               2   65[BANK0 ] int 
  1442 ;; Return value:  Size  Location     Type
  1443 ;;                  1    wreg      void 
  1444 ;; Registers used:
  1445 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1446 ;; Tracked objects:
  1447 ;;		On entry : 0/0
  1448 ;;		On exit  : 0/0
  1449 ;;		Unchanged: 0/0
  1450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1451 ;;      Params:         0       0       0       0       0
  1452 ;;      Locals:         0       4       0       0       0
  1453 ;;      Temps:          0       2       0       0       0
  1454 ;;      Totals:         0       6       0       0       0
  1455 ;;Total ram usage:        6 bytes
  1456 ;; Hardware stack levels used:    1
  1457 ;; Hardware stack levels required when called:    9
  1458 ;; This function calls:
  1459 ;;		_ReadFIFO
  1460 ;;		_SetRFMode
  1461 ;;		_TransmittedDataHandler
  1462 ;;		_timerFunction
  1463 ;; This function is called by:
  1464 ;;		_main
  1465 ;; This function uses a non-reentrant model
  1466 ;;
  1467                           
  1468                           
  1469                           ;psect for function _TransiverReadFIFO
  1470  0F2B                     _TransiverReadFIFO:	
  1471                           
  1472                           ;Main Card V10.0.c: 205: timerFunction(3, 5);
  1473                           
  1474                           ;incstack = 0
  1475 ;; hardware stack exceeded
  1476                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1477  0F2B  3003               	movlw	3
  1478  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0F2E  00A0               	movwf	timerFunction@intTimerNumber
  1481  0F2F  3000               	movlw	0
  1482  0F30  00A1               	movwf	timerFunction@intTimerNumber+1
  1483  0F31  3005               	movlw	5
  1484  0F32  00A2               	movwf	timerFunction@intSetSeconds
  1485  0F33  3000               	movlw	0
  1486  0F34  00A3               	movwf	timerFunction@intSetSeconds+1
  1487  0F35  120A  158A  2385  120A  158A  	fcall	_timerFunction
  1488                           
  1489                           ;Main Card V10.0.c: 207: SetRFMode(0x20);
  1490  0F3A  3020               	movlw	32
  1491  0F3B  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1492                           
  1493                           ;Main Card V10.0.c: 208: bTransiverModeReceive = 0;
  1494  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1495  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1496  0F42  01ED               	clrf	_bTransiverModeReceive
  1497                           
  1498                           ;Main Card V10.0.c: 209: int i = 0;
  1499  0F43  01E1               	clrf	TransiverReadFIFO@i
  1500  0F44  01E2               	clrf	TransiverReadFIFO@i+1
  1501                           
  1502                           ;Main Card V10.0.c: 210: for (int j = 0; j < 30; ++j)
  1503  0F45  01E3               	clrf	TransiverReadFIFO@j
  1504  0F46  01E4               	clrf	TransiverReadFIFO@j+1
  1505  0F47                     L1:	
  1506  0F47  0864               	movf	TransiverReadFIFO@j+1,w
  1507  0F48  3A80               	xorlw	128
  1508  0F49  00FF               	movwf	127
  1509  0F4A  3080               	movlw	128
  1510  0F4B  027F               	subwf	127,w
  1511  0F4C  1D03               	skipz
  1512  0F4D  2F50               	goto	u2045
  1513  0F4E  301E               	movlw	30
  1514  0F4F  0263               	subwf	TransiverReadFIFO@j,w
  1515  0F50                     u2045:	
  1516  0F50  1803               	btfsc	3,0
  1517  0F51  2F74               	goto	l2412
  1518                           
  1519                           ;Main Card V10.0.c: 211: {
  1520                           ;Main Card V10.0.c: 212: TransmittedString[j] = 0;
  1521  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1522  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1523  0F54  0863               	movf	TransiverReadFIFO@j,w
  1524  0F55  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1525  0F56  0084               	movwf	4
  1526  0F57  1383               	bcf	3,7	;select IRP bank1
  1527  0F58  0180               	clrf	0
  1528  0F59  3001               	movlw	1
  1529  0F5A  07E3               	addwf	TransiverReadFIFO@j,f
  1530  0F5B  1803               	skipnc
  1531  0F5C  0AE4               	incf	TransiverReadFIFO@j+1,f
  1532  0F5D  3000               	movlw	0
  1533  0F5E  07E4               	addwf	TransiverReadFIFO@j+1,f
  1534  0F5F  2F47               	goto	L1
  1535  0F60                     l2408:	
  1536                           ;Main Card V10.0.c: 213: }
  1537                           ;Main Card V10.0.c: 214: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1538                           
  1539                           
  1540                           ;Main Card V10.0.c: 215: {
  1541                           ;Main Card V10.0.c: 216: TransmittedString[i] = ReadFIFO();
  1542  0F60  120A  158A  2367  120A  158A  	fcall	_ReadFIFO
  1543  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1544  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1545  0F67  00DF               	movwf	??_TransiverReadFIFO
  1546  0F68  0861               	movf	TransiverReadFIFO@i,w
  1547  0F69  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1548  0F6A  0084               	movwf	4
  1549  0F6B  085F               	movf	??_TransiverReadFIFO,w
  1550  0F6C  1383               	bcf	3,7	;select IRP bank1
  1551  0F6D  0080               	movwf	0
  1552                           
  1553                           ;Main Card V10.0.c: 217: i++;
  1554  0F6E  3001               	movlw	1
  1555  0F6F  07E1               	addwf	TransiverReadFIFO@i,f
  1556  0F70  1803               	skipnc
  1557  0F71  0AE2               	incf	TransiverReadFIFO@i+1,f
  1558  0F72  3000               	movlw	0
  1559  0F73  07E2               	addwf	TransiverReadFIFO@i+1,f
  1560  0F74                     l2412:	
  1561  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1562  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0F76  1D86               	btfss	6,3	;volatile
  1564  0F77  2F7D               	goto	l2416
  1565  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1566  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1567  0F7A  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1568  0F7B  1903               	btfsc	3,2
  1569  0F7C  2F60               	goto	l2408
  1570  0F7D                     l2416:	
  1571                           
  1572                           ;Main Card V10.0.c: 218: }
  1573                           ;Main Card V10.0.c: 220: _delay((unsigned long)((10)*(4000000/4000.0)));
  1574  0F7D  300D               	movlw	13
  1575  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1576  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1577  0F80  00E0               	movwf	??_TransiverReadFIFO+1
  1578  0F81  30FB               	movlw	251
  1579  0F82  00DF               	movwf	??_TransiverReadFIFO
  1580  0F83                     u2367:	
  1581  0F83  0BDF               	decfsz	??_TransiverReadFIFO,f
  1582  0F84  2F83               	goto	u2367
  1583  0F85  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1584  0F86  2F83               	goto	u2367
  1585                           
  1586                           ;Main Card V10.0.c: 221: SetRFMode(0x00);
  1587  0F87  3000               	movlw	0
  1588  0F88  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1589                           
  1590                           ;Main Card V10.0.c: 222: TransmittedDataHandler();
  1591  0F8D  120A  118A  2054   	fcall	_TransmittedDataHandler
  1592  0F90  0008               	return
  1593  0F91                     __end_of_TransiverReadFIFO:	
  1594                           
  1595                           	psect	text3
  1596  0054                     __ptext3:	
  1597 ;; *************** function _TransmittedDataHandler *****************
  1598 ;; Defined at:
  1599 ;;		line 224 in file "../Main Card V10.0.c"
  1600 ;; Parameters:    Size  Location     Type
  1601 ;;		None
  1602 ;; Auto vars:     Size  Location     Type
  1603 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1604 ;;  value           2   61[BANK0 ] int 
  1605 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1606 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1607 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1617 ;;      Params:         0       0       0       0       0
  1618 ;;      Locals:         0      34       0       0       0
  1619 ;;      Temps:          0       1       0       0       0
  1620 ;;      Totals:         0      35       0       0       0
  1621 ;;Total ram usage:       35 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    8
  1624 ;; This function calls:
  1625 ;;		_AnalogValue
  1626 ;;		_DarknessCheck
  1627 ;;		_DelayDs
  1628 ;;		_OperationMode
  1629 ;;		_TransmittString
  1630 ;;		_atoi
  1631 ;;		_eeprom_read
  1632 ;;		_eeprom_write
  1633 ;;		_strstr
  1634 ;; This function is called by:
  1635 ;;		_TransiverReadFIFO
  1636 ;; This function uses a non-reentrant model
  1637 ;;
  1638                           
  1639                           
  1640                           ;psect for function _TransmittedDataHandler
  1641  0054                     _TransmittedDataHandler:	
  1642                           
  1643                           ;Main Card V10.0.c: 227: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1644                           
  1645                           ;incstack = 0
  1646 ;; hardware stack exceeded
  1647                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1648  0054  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1649  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1650  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1651  0057  00BC               	movwf	??_TransmittedDataHandler
  1652  0058  083C               	movf	??_TransmittedDataHandler,w
  1653  0059  00AE               	movwf	strstr@s2
  1654  005A  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1655  005B  120A  158A  25E7  120A  118A  	fcall	_strstr
  1656  0060  3A00               	xorlw	0
  1657  0061  1903               	skipnz
  1658  0062  287F               	goto	l2118
  1659  0063  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1660  0068  3A06               	xorlw	6
  1661  0069  1D03               	skipz
  1662  006A  287F               	goto	l2118
  1663                           
  1664                           ;Main Card V10.0.c: 228: {
  1665                           ;Main Card V10.0.c: 229: intBlinkCycle = 1;
  1666  006B  3001               	movlw	1
  1667  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1668  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1669  006E  00E8               	movwf	_intBlinkCycle
  1670  006F  3000               	movlw	0
  1671  0070  00E9               	movwf	_intBlinkCycle+1
  1672                           
  1673                           ;Main Card V10.0.c: 230: intBlinkCounter = 0;
  1674  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1675  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1676  0073  01B1               	clrf	_intBlinkCounter^(0+128)
  1677  0074  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1678                           
  1679                           ;Main Card V10.0.c: 232: TransmittString("N1STARTED");
  1680  0075  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1681  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1682  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1683  0078  00B5               	movwf	TransmittString@dataString
  1684  0079  3080               	movlw	128
  1685  007A  00B6               	movwf	TransmittString@dataString+1
  1686  007B  120A  118A  253A   	fcall	_TransmittString
  1687                           
  1688                           ;Main Card V10.0.c: 233: }
  1689  007E  0008               	return
  1690  007F                     l2118:	
  1691                           
  1692                           ;Main Card V10.0.c: 234: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1693  007F  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1694  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1695  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1696  0082  00BC               	movwf	??_TransmittedDataHandler
  1697  0083  083C               	movf	??_TransmittedDataHandler,w
  1698  0084  00AE               	movwf	strstr@s2
  1699  0085  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1700  0086  120A  158A  25E7  120A  118A  	fcall	_strstr
  1701  008B  3A00               	xorlw	0
  1702  008C  1903               	skipnz
  1703  008D  28AA               	goto	l2128
  1704  008E  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1705  0093  3A07               	xorlw	7
  1706  0094  1D03               	skipz
  1707  0095  28AA               	goto	l2128
  1708                           
  1709                           ;Main Card V10.0.c: 235: {
  1710                           ;Main Card V10.0.c: 236: intBlinkCycle = 1;
  1711  0096  3001               	movlw	1
  1712  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1713  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1714  0099  00E8               	movwf	_intBlinkCycle
  1715  009A  3000               	movlw	0
  1716  009B  00E9               	movwf	_intBlinkCycle+1
  1717                           
  1718                           ;Main Card V10.0.c: 237: intBlinkCounter = 0;
  1719  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1720  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1721  009E  01B1               	clrf	_intBlinkCounter^(0+128)
  1722  009F  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1723                           
  1724                           ;Main Card V10.0.c: 239: TransmittString("N2STARTED");
  1725  00A0  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1726  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1727  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1728  00A3  00B5               	movwf	TransmittString@dataString
  1729  00A4  3080               	movlw	128
  1730  00A5  00B6               	movwf	TransmittString@dataString+1
  1731  00A6  120A  118A  253A   	fcall	_TransmittString
  1732                           
  1733                           ;Main Card V10.0.c: 240: }
  1734  00A9  0008               	return
  1735  00AA                     l2128:	
  1736                           
  1737                           ;Main Card V10.0.c: 241: else if((strstr(TransmittedString, "N1STARTED")) && (OperationM
      +                          ode() == 4))
  1738  00AA  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1739  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1740  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1741  00AD  00BC               	movwf	??_TransmittedDataHandler
  1742  00AE  083C               	movf	??_TransmittedDataHandler,w
  1743  00AF  00AE               	movwf	strstr@s2
  1744  00B0  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1745  00B1  120A  158A  25E7  120A  118A  	fcall	_strstr
  1746  00B6  3A00               	xorlw	0
  1747  00B7  1903               	skipnz
  1748  00B8  28CC               	goto	l2136
  1749  00B9  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1750  00BE  3A04               	xorlw	4
  1751  00BF  1D03               	skipz
  1752  00C0  28CC               	goto	l2136
  1753                           
  1754                           ;Main Card V10.0.c: 242: {
  1755                           ;Main Card V10.0.c: 243: intBlinkCycle = 1;
  1756  00C1  3001               	movlw	1
  1757  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1758  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1759  00C4  00E8               	movwf	_intBlinkCycle
  1760  00C5  3000               	movlw	0
  1761  00C6  00E9               	movwf	_intBlinkCycle+1
  1762                           
  1763                           ;Main Card V10.0.c: 244: intBlinkCounter = 0;
  1764  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1765  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1766  00C9  01B1               	clrf	_intBlinkCounter^(0+128)
  1767  00CA  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1768                           
  1769                           ;Main Card V10.0.c: 246: }
  1770  00CB  0008               	return
  1771  00CC                     l2136:	
  1772                           
  1773                           ;Main Card V10.0.c: 247: else if((strstr(TransmittedString, "N2STARTED")) && (OperationM
      +                          ode() == 5))
  1774  00CC  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1775  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1776  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1777  00CF  00BC               	movwf	??_TransmittedDataHandler
  1778  00D0  083C               	movf	??_TransmittedDataHandler,w
  1779  00D1  00AE               	movwf	strstr@s2
  1780  00D2  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1781  00D3  120A  158A  25E7  120A  118A  	fcall	_strstr
  1782  00D8  3A00               	xorlw	0
  1783  00D9  1903               	skipnz
  1784  00DA  28EE               	goto	l2144
  1785  00DB  120A  158A  2337  120A  118A  	fcall	_OperationMode
  1786  00E0  3A05               	xorlw	5
  1787  00E1  1D03               	skipz
  1788  00E2  28EE               	goto	l2144
  1789                           
  1790                           ;Main Card V10.0.c: 248: {
  1791                           ;Main Card V10.0.c: 249: intBlinkCycle = 1;
  1792  00E3  3001               	movlw	1
  1793  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1794  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1795  00E6  00E8               	movwf	_intBlinkCycle
  1796  00E7  3000               	movlw	0
  1797  00E8  00E9               	movwf	_intBlinkCycle+1
  1798                           
  1799                           ;Main Card V10.0.c: 250: intBlinkCounter = 0;
  1800  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1801  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  1802  00EB  01B1               	clrf	_intBlinkCounter^(0+128)
  1803  00EC  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1804                           
  1805                           ;Main Card V10.0.c: 252: }
  1806  00ED  0008               	return
  1807  00EE                     l2144:	
  1808                           
  1809                           ;Main Card V10.0.c: 253: else if((strstr(TransmittedString,"FLASHL")))
  1810  00EE  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1811  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1812  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1813  00F1  00BC               	movwf	??_TransmittedDataHandler
  1814  00F2  083C               	movf	??_TransmittedDataHandler,w
  1815  00F3  00AE               	movwf	strstr@s2
  1816  00F4  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1817  00F5  120A  158A  25E7  120A  118A  	fcall	_strstr
  1818  00FA  3A00               	xorlw	0
  1819  00FB  1903               	skipnz
  1820  00FC  2914               	goto	l2152
  1821                           
  1822                           ;Main Card V10.0.c: 254: {
  1823                           ;Main Card V10.0.c: 255: PORTCbits.RC2 = 1;
  1824  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1825  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1826  00FF  1507               	bsf	7,2	;volatile
  1827                           
  1828                           ;Main Card V10.0.c: 256: DelayDs(10);
  1829  0100  300A               	movlw	10
  1830  0101  00A0               	movwf	DelayDs@cnt
  1831  0102  3000               	movlw	0
  1832  0103  00A1               	movwf	DelayDs@cnt+1
  1833  0104  120A  158A  2449  120A  118A  	fcall	_DelayDs
  1834                           
  1835                           ;Main Card V10.0.c: 257: PORTCbits.RC2 = 0;
  1836  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1837  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1838  010B  1107               	bcf	7,2	;volatile
  1839                           
  1840                           ;Main Card V10.0.c: 258: DelayDs(5);
  1841  010C  3005               	movlw	5
  1842  010D  00A0               	movwf	DelayDs@cnt
  1843  010E  3000               	movlw	0
  1844  010F  00A1               	movwf	DelayDs@cnt+1
  1845  0110  120A  158A  2449   	fcall	_DelayDs
  1846                           
  1847                           ;Main Card V10.0.c: 259: }
  1848  0113  0008               	return
  1849  0114                     l2152:	
  1850                           
  1851                           ;Main Card V10.0.c: 260: else if((strstr(TransmittedString,"FLASHB")))
  1852  0114  3088               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1853  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1854  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1855  0117  00BC               	movwf	??_TransmittedDataHandler
  1856  0118  083C               	movf	??_TransmittedDataHandler,w
  1857  0119  00AE               	movwf	strstr@s2
  1858  011A  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1859  011B  120A  158A  25E7  120A  118A  	fcall	_strstr
  1860  0120  3A00               	xorlw	0
  1861  0121  1903               	skipnz
  1862  0122  293A               	goto	l2160
  1863                           
  1864                           ;Main Card V10.0.c: 261: {
  1865                           ;Main Card V10.0.c: 262: PORTCbits.RC1 = 1;
  1866  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1867  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1868  0125  1487               	bsf	7,1	;volatile
  1869                           
  1870                           ;Main Card V10.0.c: 263: DelayDs(10);
  1871  0126  300A               	movlw	10
  1872  0127  00A0               	movwf	DelayDs@cnt
  1873  0128  3000               	movlw	0
  1874  0129  00A1               	movwf	DelayDs@cnt+1
  1875  012A  120A  158A  2449  120A  118A  	fcall	_DelayDs
  1876                           
  1877                           ;Main Card V10.0.c: 264: PORTCbits.RC1 = 0;
  1878  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1879  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1880  0131  1087               	bcf	7,1	;volatile
  1881                           
  1882                           ;Main Card V10.0.c: 265: DelayDs(5);
  1883  0132  3005               	movlw	5
  1884  0133  00A0               	movwf	DelayDs@cnt
  1885  0134  3000               	movlw	0
  1886  0135  00A1               	movwf	DelayDs@cnt+1
  1887  0136  120A  158A  2449   	fcall	_DelayDs
  1888                           
  1889                           ;Main Card V10.0.c: 266: }
  1890  0139  0008               	return
  1891  013A                     l2160:	
  1892                           
  1893                           ;Main Card V10.0.c: 267: else if((strstr(TransmittedString,"SENSVAL")))
  1894  013A  3079               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1895  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1896  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1897  013D  00BC               	movwf	??_TransmittedDataHandler
  1898  013E  083C               	movf	??_TransmittedDataHandler,w
  1899  013F  00AE               	movwf	strstr@s2
  1900  0140  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1901  0141  120A  158A  25E7  120A  118A  	fcall	_strstr
  1902  0146  3A00               	xorlw	0
  1903  0147  1903               	skipnz
  1904  0148  295C               	goto	l2166
  1905                           
  1906                           ;Main Card V10.0.c: 268: {
  1907                           ;Main Card V10.0.c: 269: unsigned char slask[8];
  1908                           ;Main Card V10.0.c: 270: slask[0] = AnalogValue(0);
  1909  0149  3000               	movlw	0
  1910  014A  120A  158A  24B3  120A  118A  	fcall	_AnalogValue
  1911  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1912  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1913  0151  00BC               	movwf	??_TransmittedDataHandler
  1914  0152  083C               	movf	??_TransmittedDataHandler,w
  1915  0153  00BD               	movwf	TransmittedDataHandler@slask
  1916                           
  1917                           ;Main Card V10.0.c: 271: TransmittString(slask);
  1918  0154  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1919  0155  00B5               	movwf	TransmittString@dataString
  1920  0156  3000               	movlw	0
  1921  0157  00B6               	movwf	TransmittString@dataString+1
  1922  0158  120A  118A  253A   	fcall	_TransmittString
  1923                           
  1924                           ;Main Card V10.0.c: 272: }
  1925  015B  0008               	return
  1926  015C                     l2166:	
  1927                           
  1928                           ;Main Card V10.0.c: 273: else if((strstr(TransmittedString,"POTVAL")))
  1929  015C  308F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1930  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1931  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1932  015F  00BC               	movwf	??_TransmittedDataHandler
  1933  0160  083C               	movf	??_TransmittedDataHandler,w
  1934  0161  00AE               	movwf	strstr@s2
  1935  0162  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1936  0163  120A  158A  25E7  120A  118A  	fcall	_strstr
  1937  0168  3A00               	xorlw	0
  1938  0169  1903               	skipnz
  1939  016A  297E               	goto	l2172
  1940                           
  1941                           ;Main Card V10.0.c: 274: {
  1942                           ;Main Card V10.0.c: 275: unsigned char slask[8];
  1943                           ;Main Card V10.0.c: 276: slask[0] = AnalogValue(3);
  1944  016B  3003               	movlw	3
  1945  016C  120A  158A  24B3  120A  118A  	fcall	_AnalogValue
  1946  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1947  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1948  0173  00BC               	movwf	??_TransmittedDataHandler
  1949  0174  083C               	movf	??_TransmittedDataHandler,w
  1950  0175  00C5               	movwf	TransmittedDataHandler@slask_706
  1951                           
  1952                           ;Main Card V10.0.c: 277: TransmittString(slask);
  1953  0176  3045               	movlw	(low (TransmittedDataHandler@slask_706| 0))& (0+255)
  1954  0177  00B5               	movwf	TransmittString@dataString
  1955  0178  3000               	movlw	0
  1956  0179  00B6               	movwf	TransmittString@dataString+1
  1957  017A  120A  118A  253A   	fcall	_TransmittString
  1958                           
  1959                           ;Main Card V10.0.c: 278: }
  1960  017D  0008               	return
  1961  017E                     l2172:	
  1962                           
  1963                           ;Main Card V10.0.c: 279: else if((strstr(TransmittedString,"DARKCALC")))
  1964  017E  3058               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1965  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1966  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1967  0181  00BC               	movwf	??_TransmittedDataHandler
  1968  0182  083C               	movf	??_TransmittedDataHandler,w
  1969  0183  00AE               	movwf	strstr@s2
  1970  0184  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1971  0185  120A  158A  25E7  120A  118A  	fcall	_strstr
  1972  018A  3A00               	xorlw	0
  1973  018B  1903               	skipnz
  1974  018C  29A9               	goto	l2182
  1975                           
  1976                           ;Main Card V10.0.c: 280: {
  1977                           ;Main Card V10.0.c: 281: DarknessCheck();
  1978  018D  120A  158A  24DC  120A  118A  	fcall	_DarknessCheck
  1979                           
  1980                           ;Main Card V10.0.c: 282: if(bDark)
  1981  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1982  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1983  0194  086C               	movf	_bDark,w
  1984  0195  1903               	btfsc	3,2
  1985  0196  299F               	goto	l2180
  1986                           
  1987                           ;Main Card V10.0.c: 283: TransmittString("It's Dark    ");
  1988  0197  3036               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1989  0198  00B5               	movwf	TransmittString@dataString
  1990  0199  3080               	movlw	128
  1991  019A  00B6               	movwf	TransmittString@dataString+1
  1992  019B  120A  118A  253A   	fcall	_TransmittString
  1993  019E  0008               	return
  1994  019F                     l2180:	
  1995                           
  1996                           ;Main Card V10.0.c: 284: else
  1997                           ;Main Card V10.0.c: 285: TransmittString("Not Dark     ");
  1998  019F  3028               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1999  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  2000  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  2001  01A2  00B5               	movwf	TransmittString@dataString
  2002  01A3  3080               	movlw	128
  2003  01A4  00B6               	movwf	TransmittString@dataString+1
  2004  01A5  120A  118A  253A   	fcall	_TransmittString
  2005                           
  2006                           ;Main Card V10.0.c: 286: }
  2007  01A8  0008               	return
  2008  01A9                     l2182:	
  2009                           
  2010                           ;Main Card V10.0.c: 287: else if((strstr(TransmittedString,"STATE?")))
  2011  01A9  3081               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2012  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2013  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2014  01AC  00BC               	movwf	??_TransmittedDataHandler
  2015  01AD  083C               	movf	??_TransmittedDataHandler,w
  2016  01AE  00AE               	movwf	strstr@s2
  2017  01AF  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2018  01B0  120A  158A  25E7  120A  118A  	fcall	_strstr
  2019  01B5  3A00               	xorlw	0
  2020  01B6  1903               	skipnz
  2021  01B7  29CF               	goto	l2190
  2022                           
  2023                           ;Main Card V10.0.c: 288: {
  2024                           ;Main Card V10.0.c: 289: if(bValueFromPot == TRUE)
  2025  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2026  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2027  01BA  036F               	decf	_bValueFromPot,w
  2028  01BB  1D03               	btfss	3,2
  2029  01BC  29C5               	goto	l2188
  2030                           
  2031                           ;Main Card V10.0.c: 290: TransmittString("Pot");
  2032  01BD  30AC               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2033  01BE  00B5               	movwf	TransmittString@dataString
  2034  01BF  3080               	movlw	128
  2035  01C0  00B6               	movwf	TransmittString@dataString+1
  2036  01C1  120A  118A  253A   	fcall	_TransmittString
  2037  01C4  0008               	return
  2038  01C5                     l2188:	
  2039                           
  2040                           ;Main Card V10.0.c: 291: else
  2041                           ;Main Card V10.0.c: 292: TransmittString("PIC");
  2042  01C5  30A8               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2043  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2044  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2045  01C8  00B5               	movwf	TransmittString@dataString
  2046  01C9  3080               	movlw	128
  2047  01CA  00B6               	movwf	TransmittString@dataString+1
  2048  01CB  120A  118A  253A   	fcall	_TransmittString
  2049                           
  2050                           ;Main Card V10.0.c: 294: }
  2051  01CE  0008               	return
  2052  01CF                     l2190:	
  2053                           
  2054                           ;Main Card V10.0.c: 295: else if((strstr(TransmittedString,"CHSTATE")))
  2055  01CF  3061               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2056  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2057  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2058  01D2  00BC               	movwf	??_TransmittedDataHandler
  2059  01D3  083C               	movf	??_TransmittedDataHandler,w
  2060  01D4  00AE               	movwf	strstr@s2
  2061  01D5  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2062  01D6  120A  158A  25E7  120A  118A  	fcall	_strstr
  2063  01DB  3A00               	xorlw	0
  2064  01DC  1903               	skipnz
  2065  01DD  29E8               	goto	l2196
  2066                           
  2067                           ;Main Card V10.0.c: 296: {
  2068                           ;Main Card V10.0.c: 297: if(bValueFromPot== TRUE)
  2069  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2070  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2071  01E0  036F               	decf	_bValueFromPot,w
  2072  01E1  1D03               	btfss	3,2
  2073  01E2  29E5               	goto	l232
  2074                           
  2075                           ;Main Card V10.0.c: 298: bValueFromPot= FALSE;
  2076  01E3  01EF               	clrf	_bValueFromPot
  2077  01E4  0008               	return
  2078  01E5                     l232:	
  2079                           
  2080                           ;Main Card V10.0.c: 299: else
  2081                           ;Main Card V10.0.c: 300: bValueFromPot=TRUE;
  2082  01E5  01EF               	clrf	_bValueFromPot
  2083  01E6  0AEF               	incf	_bValueFromPot,f
  2084                           
  2085                           ;Main Card V10.0.c: 301: }
  2086  01E7  0008               	return
  2087  01E8                     l2196:	
  2088                           
  2089                           ;Main Card V10.0.c: 303: else if((strstr(TransmittedString,"RMDV")))
  2090  01E8  30A3               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2091  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2092  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2093  01EB  00BC               	movwf	??_TransmittedDataHandler
  2094  01EC  083C               	movf	??_TransmittedDataHandler,w
  2095  01ED  00AE               	movwf	strstr@s2
  2096  01EE  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2097  01EF  120A  158A  25E7  120A  118A  	fcall	_strstr
  2098  01F4  3A00               	xorlw	0
  2099  01F5  1903               	skipnz
  2100  01F6  2A0A               	goto	l2202
  2101                           
  2102                           ;Main Card V10.0.c: 304: {
  2103                           ;Main Card V10.0.c: 305: unsigned char slask[8];
  2104                           ;Main Card V10.0.c: 306: slask[0] = eeprom_read(addressDarknessValue);
  2105  01F7  087C               	movf	_addressDarknessValue,w
  2106  01F8  120A  158A  248F  120A  118A  	fcall	_eeprom_read
  2107  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2108  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2109  01FF  00BC               	movwf	??_TransmittedDataHandler
  2110  0200  083C               	movf	??_TransmittedDataHandler,w
  2111  0201  00CD               	movwf	TransmittedDataHandler@slask_715
  2112                           
  2113                           ;Main Card V10.0.c: 307: TransmittString(slask);
  2114  0202  304D               	movlw	(low (TransmittedDataHandler@slask_715| 0))& (0+255)
  2115  0203  00B5               	movwf	TransmittString@dataString
  2116  0204  3000               	movlw	0
  2117  0205  00B6               	movwf	TransmittString@dataString+1
  2118  0206  120A  118A  253A   	fcall	_TransmittString
  2119                           
  2120                           ;Main Card V10.0.c: 309: }
  2121  0209  0008               	return
  2122  020A                     l2202:	
  2123                           
  2124                           ;Main Card V10.0.c: 311: else if((strstr(TransmittedString,"SETDV")))
  2125  020A  309D               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2126  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2127  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2128  020D  00BC               	movwf	??_TransmittedDataHandler
  2129  020E  083C               	movf	??_TransmittedDataHandler,w
  2130  020F  00AE               	movwf	strstr@s2
  2131  0210  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2132  0211  120A  158A  25E7  120A  118A  	fcall	_strstr
  2133  0216  3A00               	xorlw	0
  2134  0217  1903               	skipnz
  2135  0218  0008               	return
  2136                           
  2137                           ;Main Card V10.0.c: 312: {
  2138                           ;Main Card V10.0.c: 314: int value;
  2139                           ;Main Card V10.0.c: 315: unsigned char slask[8];
  2140                           ;Main Card V10.0.c: 316: value = atoi(&TransmittedString[6]);
  2141  0219  30C0               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2142  021A  120A  118A  275B  120A  118A  	fcall	_atoi
  2143  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2144  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2145  0221  0827               	movf	?_atoi+1,w
  2146  0222  00DE               	movwf	TransmittedDataHandler@value+1
  2147  0223  0826               	movf	?_atoi,w
  2148  0224  00DD               	movwf	TransmittedDataHandler@value
  2149                           
  2150                           ;Main Card V10.0.c: 317: slask[0] = (unsigned char)value;
  2151  0225  085D               	movf	TransmittedDataHandler@value,w
  2152  0226  00BC               	movwf	??_TransmittedDataHandler
  2153  0227  083C               	movf	??_TransmittedDataHandler,w
  2154  0228  00D5               	movwf	TransmittedDataHandler@slask_718
  2155                           
  2156                           ;Main Card V10.0.c: 318: TransmittString(slask);
  2157  0229  3055               	movlw	(low (TransmittedDataHandler@slask_718| 0))& (0+255)
  2158  022A  00B5               	movwf	TransmittString@dataString
  2159  022B  3000               	movlw	0
  2160  022C  00B6               	movwf	TransmittString@dataString+1
  2161  022D  120A  118A  253A  120A  118A  	fcall	_TransmittString
  2162                           
  2163                           ;Main Card V10.0.c: 319: eeprom_write(addressDarknessValue,(unsigned char)value);
  2164  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2165  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2166  0234  085D               	movf	TransmittedDataHandler@value,w
  2167  0235  00BC               	movwf	??_TransmittedDataHandler
  2168  0236  083C               	movf	??_TransmittedDataHandler,w
  2169  0237  00A0               	movwf	eeprom_write@value
  2170  0238  087C               	movf	_addressDarknessValue,w
  2171  0239  120A  158A  2531   	fcall	_eeprom_write
  2172  023C  0008               	return
  2173  023D                     __end_of_TransmittedDataHandler:	
  2174                           
  2175                           	psect	text4
  2176  0DE7                     __ptext4:	
  2177 ;; *************** function _strstr *****************
  2178 ;; Defined at:
  2179 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strstr.c"
  2180 ;; Parameters:    Size  Location     Type
  2181 ;;  s1              1    wreg     PTR const unsigned char 
  2182 ;;		 -> NULL(0), TransmittedString(30), 
  2183 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2184 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2185 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2186 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2187 ;;		 -> STR_1(8), 
  2188 ;; Auto vars:     Size  Location     Type
  2189 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2190 ;;		 -> NULL(0), TransmittedString(30), 
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      PTR unsigned char 
  2193 ;; Registers used:
  2194 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       1       0       0       0
  2201 ;;      Locals:         0       1       0       0       0
  2202 ;;      Temps:          0       3       0       0       0
  2203 ;;      Totals:         0       5       0       0       0
  2204 ;;Total ram usage:        5 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    3
  2207 ;; This function calls:
  2208 ;;		_strchr
  2209 ;;		_strlen
  2210 ;;		_strncmp
  2211 ;; This function is called by:
  2212 ;;		_TransmittedDataHandler
  2213 ;; This function uses a non-reentrant model
  2214 ;;
  2215                           
  2216                           
  2217                           ;psect for function _strstr
  2218  0DE7                     _strstr:	
  2219                           
  2220                           ;incstack = 0
  2221                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2222                           ;strstr@s1 stored from wreg
  2223  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2224  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2225  0DE9  00B2               	movwf	strstr@s1
  2226  0DEA  2E22               	goto	l1956
  2227  0DEB                     l1948:	
  2228  0DEB  082E               	movf	strstr@s2,w
  2229  0DEC  00AF               	movwf	??_strstr
  2230  0DED  082F               	movf	??_strstr,w
  2231  0DEE  00A8               	movwf	strncmp@s2
  2232  0DEF  082E               	movf	strstr@s2,w
  2233  0DF0  120A  158A  2505  120A  158A  	fcall	_strlen
  2234  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  2235  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  2236  0DF7  0821               	movf	?_strlen+1,w
  2237  0DF8  00AA               	movwf	strncmp@len+1
  2238  0DF9  0820               	movf	?_strlen,w
  2239  0DFA  00A9               	movwf	strncmp@len
  2240  0DFB  0832               	movf	strstr@s1,w
  2241  0DFC  120A  158A  25A3  120A  158A  	fcall	_strncmp
  2242  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0E03  0828               	movf	?_strncmp,w
  2245  0E04  0429               	iorwf	?_strncmp+1,w
  2246  0E05  1D03               	btfss	3,2
  2247  0E06  2E09               	goto	l1954
  2248  0E07  0832               	movf	strstr@s1,w
  2249  0E08  0008               	return
  2250  0E09                     l1954:	
  2251  0E09  082E               	movf	strstr@s2,w
  2252  0E0A  0084               	movwf	4
  2253  0E0B  120A  118A  2616  120A  158A  	fcall	stringdir
  2254  0E10  00AF               	movwf	??_strstr
  2255  0E11  01B0               	clrf	??_strstr+1
  2256  0E12  082F               	movf	??_strstr,w
  2257  0E13  00A0               	movwf	strchr@chr
  2258  0E14  0830               	movf	??_strstr+1,w
  2259  0E15  00A1               	movwf	strchr@chr+1
  2260  0E16  0832               	movf	strstr@s1,w
  2261  0E17  3E01               	addlw	1
  2262  0E18  120A  158A  2397  120A  158A  	fcall	_strchr
  2263  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2264  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2265  0E1F  00B1               	movwf	??_strstr+2
  2266  0E20  0831               	movf	??_strstr+2,w
  2267  0E21  00B2               	movwf	strstr@s1
  2268  0E22                     l1956:	
  2269  0E22  0832               	movf	strstr@s1,w
  2270  0E23  1903               	btfsc	3,2
  2271  0E24  2E2B               	goto	l1960
  2272  0E25  0832               	movf	strstr@s1,w
  2273  0E26  0084               	movwf	4
  2274  0E27  1383               	bcf	3,7	;select IRP bank0
  2275  0E28  0800               	movf	0,w
  2276  0E29  1D03               	btfss	3,2
  2277  0E2A  2DEB               	goto	l1948
  2278  0E2B                     l1960:	
  2279  0E2B  3000               	movlw	0
  2280  0E2C  0008               	return
  2281  0E2D                     __end_of_strstr:	
  2282                           
  2283                           	psect	text5
  2284  0DA3                     __ptext5:	
  2285 ;; *************** function _strncmp *****************
  2286 ;; Defined at:
  2287 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strncmp.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;  s1              1    wreg     PTR const unsigned char 
  2290 ;;		 -> NULL(0), TransmittedString(30), 
  2291 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2292 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2293 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2294 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2295 ;;		 -> STR_1(8), 
  2296 ;;  len             2    9[BANK0 ] unsigned int 
  2297 ;; Auto vars:     Size  Location     Type
  2298 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2299 ;;		 -> NULL(0), TransmittedString(30), 
  2300 ;; Return value:  Size  Location     Type
  2301 ;;                  2    8[BANK0 ] int 
  2302 ;; Registers used:
  2303 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2309 ;;      Params:         0       3       0       0       0
  2310 ;;      Locals:         0       1       0       0       0
  2311 ;;      Temps:          0       2       0       0       0
  2312 ;;      Totals:         0       6       0       0       0
  2313 ;;Total ram usage:        6 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:    2
  2316 ;; This function calls:
  2317 ;;		Nothing
  2318 ;; This function is called by:
  2319 ;;		_strstr
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           
  2324                           ;psect for function _strncmp
  2325  0DA3                     _strncmp:	
  2326                           
  2327                           ;incstack = 0
  2328                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2329                           ;strncmp@s1 stored from wreg
  2330  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2331  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2332  0DA5  00AD               	movwf	strncmp@s1
  2333  0DA6                     l922:	
  2334  0DA6  3001               	movlw	1
  2335  0DA7  02A9               	subwf	strncmp@len,f
  2336  0DA8  3000               	movlw	0
  2337  0DA9  1C03               	skipc
  2338  0DAA  03AA               	decf	strncmp@len+1,f
  2339  0DAB  02AA               	subwf	strncmp@len+1,f
  2340  0DAC  0A29               	incf	strncmp@len,w
  2341  0DAD  1903               	btfsc	3,2
  2342  0DAE  0A2A               	incf	strncmp@len+1,w
  2343  0DAF  1903               	btfsc	3,2
  2344  0DB0  2DE4               	goto	l1924
  2345  0DB1  082D               	movf	strncmp@s1,w
  2346  0DB2  0084               	movwf	4
  2347  0DB3  1383               	bcf	3,7	;select IRP bank0
  2348  0DB4  0800               	movf	0,w
  2349  0DB5  1903               	btfsc	3,2
  2350  0DB6  2DC5               	goto	l1918
  2351  0DB7  0828               	movf	strncmp@s2,w
  2352  0DB8  0084               	movwf	4
  2353  0DB9  120A  118A  2616  120A  158A  	fcall	stringdir
  2354  0DBE  00AB               	movwf	??_strncmp
  2355  0DBF  082D               	movf	strncmp@s1,w
  2356  0DC0  0084               	movwf	4
  2357  0DC1  0800               	movf	0,w
  2358  0DC2  062B               	xorwf	??_strncmp,w
  2359  0DC3  1903               	skipnz
  2360  0DC4  2DDB               	goto	l1922
  2361  0DC5                     l1918:	
  2362  0DC5  0828               	movf	strncmp@s2,w
  2363  0DC6  0084               	movwf	4
  2364  0DC7  120A  118A  2616   	fcall	stringdir
  2365  0DCA  00AB               	movwf	??_strncmp
  2366  0DCB  01AC               	clrf	??_strncmp+1
  2367  0DCC  09AB               	comf	??_strncmp,f
  2368  0DCD  09AC               	comf	??_strncmp+1,f
  2369  0DCE  0AAB               	incf	??_strncmp,f
  2370  0DCF  1903               	skipnz
  2371  0DD0  0AAC               	incf	??_strncmp+1,f
  2372  0DD1  082D               	movf	strncmp@s1,w
  2373  0DD2  0084               	movwf	4
  2374  0DD3  0800               	movf	0,w
  2375  0DD4  072B               	addwf	??_strncmp,w
  2376  0DD5  00A8               	movwf	?_strncmp
  2377  0DD6  082C               	movf	??_strncmp+1,w
  2378  0DD7  1803               	skipnc
  2379  0DD8  0A2C               	incf	??_strncmp+1,w
  2380  0DD9  00A9               	movwf	?_strncmp+1
  2381  0DDA  0008               	return
  2382  0DDB                     l1922:	
  2383  0DDB  3001               	movlw	1
  2384  0DDC  00AB               	movwf	??_strncmp
  2385  0DDD  082B               	movf	??_strncmp,w
  2386  0DDE  07AD               	addwf	strncmp@s1,f
  2387  0DDF  3001               	movlw	1
  2388  0DE0  00AB               	movwf	??_strncmp
  2389  0DE1  082B               	movf	??_strncmp,w
  2390  0DE2  07A8               	addwf	strncmp@s2,f
  2391  0DE3  2DA6               	goto	l922
  2392  0DE4                     l1924:	
  2393  0DE4  01A8               	clrf	?_strncmp
  2394  0DE5  01A9               	clrf	?_strncmp+1
  2395  0DE6  0008               	return
  2396  0DE7                     __end_of_strncmp:	
  2397                           
  2398                           	psect	text6
  2399  0D05                     __ptext6:	
  2400 ;; *************** function _strlen *****************
  2401 ;; Defined at:
  2402 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  2403 ;; Parameters:    Size  Location     Type
  2404 ;;  s               1    wreg     PTR const unsigned char 
  2405 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2406 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2407 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2408 ;;		 -> STR_1(8), 
  2409 ;; Auto vars:     Size  Location     Type
  2410 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2411 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2412 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2413 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2414 ;;		 -> STR_1(8), 
  2415 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2416 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2417 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2418 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2419 ;;		 -> STR_1(8), 
  2420 ;; Return value:  Size  Location     Type
  2421 ;;                  2    0[BANK0 ] unsigned int 
  2422 ;; Registers used:
  2423 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2424 ;; Tracked objects:
  2425 ;;		On entry : 0/0
  2426 ;;		On exit  : 0/0
  2427 ;;		Unchanged: 0/0
  2428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2429 ;;      Params:         0       2       0       0       0
  2430 ;;      Locals:         0       2       0       0       0
  2431 ;;      Temps:          0       4       0       0       0
  2432 ;;      Totals:         0       8       0       0       0
  2433 ;;Total ram usage:        8 bytes
  2434 ;; Hardware stack levels used:    1
  2435 ;; Hardware stack levels required when called:    2
  2436 ;; This function calls:
  2437 ;;		Nothing
  2438 ;; This function is called by:
  2439 ;;		_strstr
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _strlen
  2445  0D05                     _strlen:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2449                           ;strlen@s stored from wreg
  2450  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  2451  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  2452  0D07  00A6               	movwf	strlen@s
  2453  0D08  0826               	movf	strlen@s,w
  2454  0D09  00A2               	movwf	??_strlen
  2455  0D0A  0822               	movf	??_strlen,w
  2456  0D0B  00A7               	movwf	strlen@cp
  2457  0D0C                     l1906:	
  2458  0D0C  0827               	movf	strlen@cp,w
  2459  0D0D  0084               	movwf	4
  2460  0D0E  120A  118A  2616  120A  158A  	fcall	stringdir
  2461  0D13  3A00               	xorlw	0
  2462  0D14  1903               	btfsc	3,2
  2463  0D15  2D1B               	goto	l1908
  2464  0D16  3001               	movlw	1
  2465  0D17  00A2               	movwf	??_strlen
  2466  0D18  0822               	movf	??_strlen,w
  2467  0D19  07A7               	addwf	strlen@cp,f
  2468  0D1A  2D0C               	goto	l1906
  2469  0D1B                     l1908:	
  2470  0D1B  0826               	movf	strlen@s,w
  2471  0D1C  00A2               	movwf	??_strlen
  2472  0D1D  3080               	movlw	128
  2473  0D1E  00A3               	movwf	??_strlen+1
  2474  0D1F  09A2               	comf	??_strlen,f
  2475  0D20  09A3               	comf	??_strlen+1,f
  2476  0D21  0AA2               	incf	??_strlen,f
  2477  0D22  1903               	skipnz
  2478  0D23  0AA3               	incf	??_strlen+1,f
  2479  0D24  0827               	movf	strlen@cp,w
  2480  0D25  00A4               	movwf	??_strlen+2
  2481  0D26  3080               	movlw	128
  2482  0D27  00A5               	movwf	??_strlen+3
  2483  0D28  0822               	movf	??_strlen,w
  2484  0D29  0724               	addwf	??_strlen+2,w
  2485  0D2A  00A0               	movwf	?_strlen
  2486  0D2B  0823               	movf	??_strlen+1,w
  2487  0D2C  1803               	skipnc
  2488  0D2D  0A23               	incf	??_strlen+1,w
  2489  0D2E  0725               	addwf	??_strlen+3,w
  2490  0D2F  00A1               	movwf	?_strlen+1
  2491  0D30  0008               	return
  2492  0D31                     __end_of_strlen:	
  2493                           
  2494                           	psect	text7
  2495  0B97                     __ptext7:	
  2496 ;; *************** function _strchr *****************
  2497 ;; Defined at:
  2498 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strchr.c"
  2499 ;; Parameters:    Size  Location     Type
  2500 ;;  ptr             1    wreg     PTR const unsigned char 
  2501 ;;		 -> NULL(0), TransmittedString(30), 
  2502 ;;  chr             2    0[BANK0 ] int 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2505 ;;		 -> NULL(0), TransmittedString(30), 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      PTR unsigned char 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2515 ;;      Params:         0       2       0       0       0
  2516 ;;      Locals:         0       1       0       0       0
  2517 ;;      Temps:          0       0       0       0       0
  2518 ;;      Totals:         0       3       0       0       0
  2519 ;;Total ram usage:        3 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    2
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_strstr
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           
  2530                           ;psect for function _strchr
  2531  0B97                     _strchr:	
  2532                           
  2533                           ;incstack = 0
  2534                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2535                           ;strchr@ptr stored from wreg
  2536  0B97  1283               	bcf	3,5	;RP0=0, select bank0
  2537  0B98  1303               	bcf	3,6	;RP1=0, select bank0
  2538  0B99  00A2               	movwf	strchr@ptr
  2539  0B9A                     l910:	
  2540  0B9A  0822               	movf	strchr@ptr,w
  2541  0B9B  0084               	movwf	4
  2542  0B9C  1383               	bcf	3,7	;select IRP bank0
  2543  0B9D  0800               	movf	0,w
  2544  0B9E  0620               	xorwf	strchr@chr,w
  2545  0B9F  1D03               	skipz
  2546  0BA0  2BA3               	goto	l1934
  2547  0BA1  0822               	movf	strchr@ptr,w
  2548  0BA2  0008               	return
  2549  0BA3                     l1934:	
  2550  0BA3  0822               	movf	strchr@ptr,w
  2551  0BA4  0084               	movwf	4
  2552  0BA5  3001               	movlw	1
  2553  0BA6  07A2               	addwf	strchr@ptr,f
  2554  0BA7  0800               	movf	0,w
  2555  0BA8  1D03               	btfss	3,2
  2556  0BA9  2B9A               	goto	l910
  2557  0BAA  3000               	movlw	0
  2558  0BAB  0008               	return
  2559  0BAC                     __end_of_strchr:	
  2560                           
  2561                           	psect	text8
  2562  0D31                     __ptext8:	
  2563 ;; *************** function _eeprom_write *****************
  2564 ;; Defined at:
  2565 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  addr            1    wreg     unsigned char 
  2568 ;;  value           1    0[BANK0 ] unsigned char 
  2569 ;; Auto vars:     Size  Location     Type
  2570 ;;  addr            1    2[BANK0 ] unsigned char 
  2571 ;; Return value:  Size  Location     Type
  2572 ;;                  1    wreg      void 
  2573 ;; Registers used:
  2574 ;;		wreg, status,2, status,0
  2575 ;; Tracked objects:
  2576 ;;		On entry : 0/0
  2577 ;;		On exit  : 0/0
  2578 ;;		Unchanged: 0/0
  2579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2580 ;;      Params:         0       1       0       0       0
  2581 ;;      Locals:         0       1       0       0       0
  2582 ;;      Temps:          0       1       0       0       0
  2583 ;;      Totals:         0       3       0       0       0
  2584 ;;Total ram usage:        3 bytes
  2585 ;; Hardware stack levels used:    1
  2586 ;; Hardware stack levels required when called:    2
  2587 ;; This function calls:
  2588 ;;		Nothing
  2589 ;; This function is called by:
  2590 ;;		_TransmittedDataHandler
  2591 ;; This function uses a non-reentrant model
  2592 ;;
  2593                           
  2594                           
  2595                           ;psect for function _eeprom_write
  2596  0D31                     _eeprom_write:	
  2597                           
  2598                           ;incstack = 0
  2599                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2600                           ;eeprom_write@addr stored from wreg
  2601  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  2602  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  2603  0D33  00A2               	movwf	eeprom_write@addr
  2604  0D34                     l428:	
  2605  0D34  1683               	bsf	3,5	;RP0=1, select bank3
  2606  0D35  1703               	bsf	3,6	;RP1=1, select bank3
  2607  0D36  188C               	btfsc	12,1	;volsfr
  2608  0D37  2D34               	goto	l428
  2609  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  2610  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  2611  0D3A  0822               	movf	eeprom_write@addr,w
  2612  0D3B  1283               	bcf	3,5	;RP0=0, select bank2
  2613  0D3C  1703               	bsf	3,6	;RP1=1, select bank2
  2614  0D3D  008D               	movwf	13	;volatile
  2615  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  2616  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  2617  0D40  0820               	movf	eeprom_write@value,w
  2618  0D41  1283               	bcf	3,5	;RP0=0, select bank2
  2619  0D42  1703               	bsf	3,6	;RP1=1, select bank2
  2620  0D43  008C               	movwf	12	;volatile
  2621  0D44  303F               	movlw	63
  2622  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2623  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2624  0D47  00A1               	movwf	??_eeprom_write
  2625  0D48  0821               	movf	??_eeprom_write,w
  2626  0D49  1683               	bsf	3,5	;RP0=1, select bank3
  2627  0D4A  1703               	bsf	3,6	;RP1=1, select bank3
  2628  0D4B  058C               	andwf	12,f	;volsfr
  2629  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2630  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2631  0D4E  1003               	bcf	3,0	;volatile
  2632  0D4F  1B8B               	btfsc	11,7	;volatile
  2633  0D50  1403               	bsf	3,0	;volatile
  2634  0D51  138B               	bcf	11,7	;volatile
  2635  0D52  1683               	bsf	3,5	;RP0=1, select bank3
  2636  0D53  1703               	bsf	3,6	;RP1=1, select bank3
  2637  0D54  150C               	bsf	12,2	;volsfr
  2638  0D55  3055               	movlw	85
  2639  0D56  008D               	movwf	13	;volsfr
  2640  0D57  30AA               	movlw	170
  2641  0D58  008D               	movwf	13	;volsfr
  2642  0D59  148C               	bsf	12,1	;volsfr
  2643  0D5A  110C               	bcf	12,2	;volsfr
  2644  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  2645  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  2646  0D5D  1C03               	btfss	3,0	;volatile
  2647  0D5E  0008               	return
  2648  0D5F  178B               	bsf	11,7	;volatile
  2649  0D60  0008               	return
  2650  0D61                     __end_of_eeprom_write:	
  2651                           
  2652                           	psect	text9
  2653  075B                     __ptext9:	
  2654 ;; *************** function _atoi *****************
  2655 ;; Defined at:
  2656 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  2657 ;; Parameters:    Size  Location     Type
  2658 ;;  s               1    wreg     PTR const unsigned char 
  2659 ;;		 -> TransmittedString(30), 
  2660 ;; Auto vars:     Size  Location     Type
  2661 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2662 ;;		 -> TransmittedString(30), 
  2663 ;;  a               2   11[BANK0 ] int 
  2664 ;;  sign            1   10[BANK0 ] unsigned char 
  2665 ;; Return value:  Size  Location     Type
  2666 ;;                  2    6[BANK0 ] int 
  2667 ;; Registers used:
  2668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2669 ;; Tracked objects:
  2670 ;;		On entry : 0/0
  2671 ;;		On exit  : 0/0
  2672 ;;		Unchanged: 0/0
  2673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2674 ;;      Params:         0       2       0       0       0
  2675 ;;      Locals:         0       4       0       0       0
  2676 ;;      Temps:          0       2       0       0       0
  2677 ;;      Totals:         0       8       0       0       0
  2678 ;;Total ram usage:        8 bytes
  2679 ;; Hardware stack levels used:    1
  2680 ;; Hardware stack levels required when called:    3
  2681 ;; This function calls:
  2682 ;;		___wmul
  2683 ;;		_isdigit
  2684 ;; This function is called by:
  2685 ;;		_TransmittedDataHandler
  2686 ;; This function uses a non-reentrant model
  2687 ;;
  2688                           
  2689                           
  2690                           ;psect for function _atoi
  2691  075B                     _atoi:	
  2692                           
  2693                           ;incstack = 0
  2694                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2695                           ;atoi@s stored from wreg
  2696  075B  1283               	bcf	3,5	;RP0=0, select bank0
  2697  075C  1303               	bcf	3,6	;RP1=0, select bank0
  2698  075D  00AD               	movwf	atoi@s
  2699  075E                     l2028:	
  2700  075E  082D               	movf	atoi@s,w
  2701  075F  0084               	movwf	4
  2702  0760  3020               	movlw	32
  2703  0761  1383               	bcf	3,7	;select IRP bank0
  2704  0762  0600               	xorwf	0,w
  2705  0763  1D03               	btfss	3,2
  2706  0764  2F6A               	goto	l2030
  2707  0765                     l2026:	
  2708  0765  3001               	movlw	1
  2709  0766  00A8               	movwf	??_atoi
  2710  0767  0828               	movf	??_atoi,w
  2711  0768  07AD               	addwf	atoi@s,f
  2712  0769  2F5E               	goto	l2028
  2713  076A                     l2030:	
  2714  076A  082D               	movf	atoi@s,w
  2715  076B  0084               	movwf	4
  2716  076C  3009               	movlw	9
  2717  076D  0600               	xorwf	0,w
  2718  076E  1903               	btfsc	3,2
  2719  076F  2F65               	goto	l2026
  2720  0770  01AB               	clrf	atoi@a
  2721  0771  01AC               	clrf	atoi@a+1
  2722  0772  01AA               	clrf	atoi@sign
  2723  0773  082D               	movf	atoi@s,w
  2724  0774  0084               	movwf	4
  2725  0775  302D               	movlw	45
  2726  0776  0600               	xorwf	0,w
  2727  0777  1D03               	btfss	3,2
  2728  0778  2F7E               	goto	l2038
  2729  0779  3001               	movlw	1
  2730  077A  00A8               	movwf	??_atoi
  2731  077B  0828               	movf	??_atoi,w
  2732  077C  07AA               	addwf	atoi@sign,f
  2733  077D  2F84               	goto	l2044
  2734  077E                     l2038:	
  2735  077E  082D               	movf	atoi@s,w
  2736  077F  0084               	movwf	4
  2737  0780  302B               	movlw	43
  2738  0781  0600               	xorwf	0,w
  2739  0782  1D03               	btfss	3,2
  2740  0783  2F88               	goto	l2046
  2741  0784                     l2044:	
  2742  0784  3001               	movlw	1
  2743  0785  00A8               	movwf	??_atoi
  2744  0786  0828               	movf	??_atoi,w
  2745  0787  07AD               	addwf	atoi@s,f
  2746  0788                     l2046:	
  2747  0788  082D               	movf	atoi@s,w
  2748  0789  0084               	movwf	4
  2749  078A  0800               	movf	0,w
  2750  078B  120A  158A  2375  120A  118A  	fcall	_isdigit
  2751  0790  1C03               	btfss	3,0
  2752  0791  2FB6               	goto	l2048
  2753  0792  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0793  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0794  082C               	movf	atoi@a+1,w
  2756  0795  00A1               	movwf	___wmul@multiplier+1
  2757  0796  082B               	movf	atoi@a,w
  2758  0797  00A0               	movwf	___wmul@multiplier
  2759  0798  300A               	movlw	10
  2760  0799  00A2               	movwf	___wmul@multiplicand
  2761  079A  3000               	movlw	0
  2762  079B  00A3               	movwf	___wmul@multiplicand+1
  2763  079C  120A  158A  246C  120A  118A  	fcall	___wmul
  2764  07A1  1283               	bcf	3,5	;RP0=0, select bank0
  2765  07A2  1303               	bcf	3,6	;RP1=0, select bank0
  2766  07A3  082D               	movf	atoi@s,w
  2767  07A4  0084               	movwf	4
  2768  07A5  1383               	bcf	3,7	;select IRP bank0
  2769  07A6  0800               	movf	0,w
  2770  07A7  0720               	addwf	?___wmul,w
  2771  07A8  00A8               	movwf	??_atoi
  2772  07A9  0821               	movf	?___wmul+1,w
  2773  07AA  1803               	skipnc
  2774  07AB  0A21               	incf	?___wmul+1,w
  2775  07AC  00A9               	movwf	??_atoi+1
  2776  07AD  0828               	movf	??_atoi,w
  2777  07AE  3ED0               	addlw	208
  2778  07AF  00AB               	movwf	atoi@a
  2779  07B0  0829               	movf	??_atoi+1,w
  2780  07B1  1803               	skipnc
  2781  07B2  3E01               	addlw	1
  2782  07B3  3EFF               	addlw	255
  2783  07B4  00AC               	movwf	atoi@a+1
  2784  07B5  2F84               	goto	l2044
  2785  07B6                     l2048:	
  2786  07B6  1283               	bcf	3,5	;RP0=0, select bank0
  2787  07B7  1303               	bcf	3,6	;RP1=0, select bank0
  2788  07B8  082A               	movf	atoi@sign,w
  2789  07B9  1903               	btfsc	3,2
  2790  07BA  2FC7               	goto	l2054
  2791  07BB  092B               	comf	atoi@a,w
  2792  07BC  00A8               	movwf	??_atoi
  2793  07BD  092C               	comf	atoi@a+1,w
  2794  07BE  00A9               	movwf	??_atoi+1
  2795  07BF  0AA8               	incf	??_atoi,f
  2796  07C0  1903               	skipnz
  2797  07C1  0AA9               	incf	??_atoi+1,f
  2798  07C2  0828               	movf	??_atoi,w
  2799  07C3  00A6               	movwf	?_atoi
  2800  07C4  0829               	movf	??_atoi+1,w
  2801  07C5  00A7               	movwf	?_atoi+1
  2802  07C6  0008               	return
  2803  07C7                     l2054:	
  2804  07C7  082C               	movf	atoi@a+1,w
  2805  07C8  00A7               	movwf	?_atoi+1
  2806  07C9  082B               	movf	atoi@a,w
  2807  07CA  00A6               	movwf	?_atoi
  2808  07CB  0008               	return
  2809  07CC                     __end_of_atoi:	
  2810                           
  2811                           	psect	text10
  2812  0B75                     __ptext10:	
  2813 ;; *************** function _isdigit *****************
  2814 ;; Defined at:
  2815 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2816 ;; Parameters:    Size  Location     Type
  2817 ;;  c               1    wreg     unsigned char 
  2818 ;; Auto vars:     Size  Location     Type
  2819 ;;  c               1    1[BANK0 ] unsigned char 
  2820 ;; Return value:  Size  Location     Type
  2821 ;;		None               void
  2822 ;; Registers used:
  2823 ;;		wreg, status,2, status,0
  2824 ;; Tracked objects:
  2825 ;;		On entry : 0/0
  2826 ;;		On exit  : 0/0
  2827 ;;		Unchanged: 0/0
  2828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2829 ;;      Params:         0       0       0       0       0
  2830 ;;      Locals:         0       2       0       0       0
  2831 ;;      Temps:          0       0       0       0       0
  2832 ;;      Totals:         0       2       0       0       0
  2833 ;;Total ram usage:        2 bytes
  2834 ;; Hardware stack levels used:    1
  2835 ;; Hardware stack levels required when called:    2
  2836 ;; This function calls:
  2837 ;;		Nothing
  2838 ;; This function is called by:
  2839 ;;		_atoi
  2840 ;; This function uses a non-reentrant model
  2841 ;;
  2842                           
  2843                           
  2844                           ;psect for function _isdigit
  2845  0B75                     _isdigit:	
  2846                           
  2847                           ;incstack = 0
  2848                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2849                           ;isdigit@c stored from wreg
  2850  0B75  1283               	bcf	3,5	;RP0=0, select bank0
  2851  0B76  1303               	bcf	3,6	;RP1=0, select bank0
  2852  0B77  00A1               	movwf	isdigit@c
  2853  0B78  01A0               	clrf	_isdigit$1091
  2854  0B79  303A               	movlw	58
  2855  0B7A  0221               	subwf	isdigit@c,w
  2856  0B7B  1803               	skipnc
  2857  0B7C  2B83               	goto	l1898
  2858  0B7D  3030               	movlw	48
  2859  0B7E  0221               	subwf	isdigit@c,w
  2860  0B7F  1C03               	skipc
  2861  0B80  2B83               	goto	l1898
  2862  0B81  01A0               	clrf	_isdigit$1091
  2863  0B82  0AA0               	incf	_isdigit$1091,f
  2864  0B83                     l1898:	
  2865  0B83  0C20               	rrf	_isdigit$1091,w
  2866  0B84  0008               	return
  2867  0B85                     __end_of_isdigit:	
  2868                           
  2869                           	psect	text11
  2870  0C6C                     __ptext11:	
  2871 ;; *************** function ___wmul *****************
  2872 ;; Defined at:
  2873 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2874 ;; Parameters:    Size  Location     Type
  2875 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2876 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2877 ;; Auto vars:     Size  Location     Type
  2878 ;;  product         2    4[BANK0 ] unsigned int 
  2879 ;; Return value:  Size  Location     Type
  2880 ;;                  2    0[BANK0 ] unsigned int 
  2881 ;; Registers used:
  2882 ;;		wreg, status,2, status,0
  2883 ;; Tracked objects:
  2884 ;;		On entry : 0/0
  2885 ;;		On exit  : 0/0
  2886 ;;		Unchanged: 0/0
  2887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2888 ;;      Params:         0       4       0       0       0
  2889 ;;      Locals:         0       2       0       0       0
  2890 ;;      Temps:          0       0       0       0       0
  2891 ;;      Totals:         0       6       0       0       0
  2892 ;;Total ram usage:        6 bytes
  2893 ;; Hardware stack levels used:    1
  2894 ;; Hardware stack levels required when called:    2
  2895 ;; This function calls:
  2896 ;;		Nothing
  2897 ;; This function is called by:
  2898 ;;		_atoi
  2899 ;; This function uses a non-reentrant model
  2900 ;;
  2901                           
  2902                           
  2903                           ;psect for function ___wmul
  2904  0C6C                     ___wmul:	
  2905                           
  2906                           ;incstack = 0
  2907                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2908  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2909  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2910  0C6E  01A4               	clrf	___wmul@product
  2911  0C6F  01A5               	clrf	___wmul@product+1
  2912  0C70                     l1878:	
  2913  0C70  1C20               	btfss	___wmul@multiplier,0
  2914  0C71  2C78               	goto	l518
  2915  0C72  0822               	movf	___wmul@multiplicand,w
  2916  0C73  07A4               	addwf	___wmul@product,f
  2917  0C74  1803               	skipnc
  2918  0C75  0AA5               	incf	___wmul@product+1,f
  2919  0C76  0823               	movf	___wmul@multiplicand+1,w
  2920  0C77  07A5               	addwf	___wmul@product+1,f
  2921  0C78                     l518:	
  2922  0C78  3001               	movlw	1
  2923  0C79                     u1275:	
  2924  0C79  1003               	clrc
  2925  0C7A  0DA2               	rlf	___wmul@multiplicand,f
  2926  0C7B  0DA3               	rlf	___wmul@multiplicand+1,f
  2927  0C7C  3EFF               	addlw	-1
  2928  0C7D  1D03               	skipz
  2929  0C7E  2C79               	goto	u1275
  2930  0C7F  3001               	movlw	1
  2931  0C80                     u1285:	
  2932  0C80  1003               	clrc
  2933  0C81  0CA1               	rrf	___wmul@multiplier+1,f
  2934  0C82  0CA0               	rrf	___wmul@multiplier,f
  2935  0C83  3EFF               	addlw	-1
  2936  0C84  1D03               	skipz
  2937  0C85  2C80               	goto	u1285
  2938  0C86  0820               	movf	___wmul@multiplier,w
  2939  0C87  0421               	iorwf	___wmul@multiplier+1,w
  2940  0C88  1D03               	btfss	3,2
  2941  0C89  2C70               	goto	l1878
  2942  0C8A  0825               	movf	___wmul@product+1,w
  2943  0C8B  00A1               	movwf	?___wmul+1
  2944  0C8C  0824               	movf	___wmul@product,w
  2945  0C8D  00A0               	movwf	?___wmul
  2946  0C8E  0008               	return
  2947  0C8F                     __end_of___wmul:	
  2948                           
  2949                           	psect	text12
  2950  0B37                     __ptext12:	
  2951 ;; *************** function _OperationMode *****************
  2952 ;; Defined at:
  2953 ;;		line 1085 in file "../Main Card V10.0.c"
  2954 ;; Parameters:    Size  Location     Type
  2955 ;;		None
  2956 ;; Auto vars:     Size  Location     Type
  2957 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  1    wreg      unsigned char 
  2960 ;; Registers used:
  2961 ;;		wreg, status,2
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2967 ;;      Params:         0       0       0       0       0
  2968 ;;      Locals:         0       1       0       0       0
  2969 ;;      Temps:          0       1       0       0       0
  2970 ;;      Totals:         0       2       0       0       0
  2971 ;;Total ram usage:        2 bytes
  2972 ;; Hardware stack levels used:    1
  2973 ;; Hardware stack levels required when called:    2
  2974 ;; This function calls:
  2975 ;;		Nothing
  2976 ;; This function is called by:
  2977 ;;		_main
  2978 ;;		_TransmittedDataHandler
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           
  2983                           ;psect for function _OperationMode
  2984  0B37                     _OperationMode:	
  2985                           
  2986                           ;Main Card V10.0.c: 1087: unsigned char bracketStatus;
  2987                           ;Main Card V10.0.c: 1088: bracketStatus = ((~PORTB) & 0b00000111) ;
  2988                           
  2989                           ;incstack = 0
  2990                           ; Regs used in _OperationMode: [wreg+status,2]
  2991  0B37  1283               	bcf	3,5	;RP0=0, select bank0
  2992  0B38  1303               	bcf	3,6	;RP1=0, select bank0
  2993  0B39  0906               	comf	6,w	;volatile
  2994  0B3A  3907               	andlw	7
  2995  0B3B  00A0               	movwf	??_OperationMode
  2996  0B3C  0820               	movf	??_OperationMode,w
  2997  0B3D  00A1               	movwf	OperationMode@bracketStatus
  2998                           
  2999                           ;Main Card V10.0.c: 1090: return bracketStatus;
  3000  0B3E  0821               	movf	OperationMode@bracketStatus,w
  3001  0B3F  0008               	return
  3002  0B40                     __end_of_OperationMode:	
  3003                           
  3004                           	psect	text13
  3005  0B67                     __ptext13:	
  3006 ;; *************** function _ReadFIFO *****************
  3007 ;; Defined at:
  3008 ;;		line 894 in file "../Main Card V10.0.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  value           1    4[BANK0 ] unsigned char 
  3013 ;; Return value:  Size  Location     Type
  3014 ;;                  1    wreg      unsigned char 
  3015 ;; Registers used:
  3016 ;;		wreg, status,2, status,0, pclath, cstack
  3017 ;; Tracked objects:
  3018 ;;		On entry : 0/0
  3019 ;;		On exit  : 0/0
  3020 ;;		Unchanged: 0/0
  3021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3022 ;;      Params:         0       0       0       0       0
  3023 ;;      Locals:         0       1       0       0       0
  3024 ;;      Temps:          0       1       0       0       0
  3025 ;;      Totals:         0       2       0       0       0
  3026 ;;Total ram usage:        2 bytes
  3027 ;; Hardware stack levels used:    1
  3028 ;; Hardware stack levels required when called:    4
  3029 ;; This function calls:
  3030 ;;		_ReadSPI
  3031 ;; This function is called by:
  3032 ;;		_TransiverReadFIFO
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           
  3037                           ;psect for function _ReadFIFO
  3038  0B67                     _ReadFIFO:	
  3039                           
  3040                           ;Main Card V10.0.c: 896: BYTE value;
  3041                           ;Main Card V10.0.c: 897: PORTAbits.RA5 = 0;
  3042                           
  3043                           ;incstack = 0
  3044                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  3045  0B67  1283               	bcf	3,5	;RP0=0, select bank0
  3046  0B68  1303               	bcf	3,6	;RP1=0, select bank0
  3047  0B69  1285               	bcf	5,5	;volatile
  3048                           
  3049                           ;Main Card V10.0.c: 898: value = ReadSPI();
  3050  0B6A  120A  158A  231E   	fcall	_ReadSPI
  3051  0B6D  1283               	bcf	3,5	;RP0=0, select bank0
  3052  0B6E  1303               	bcf	3,6	;RP1=0, select bank0
  3053  0B6F  00A3               	movwf	??_ReadFIFO
  3054  0B70  0823               	movf	??_ReadFIFO,w
  3055  0B71  00A4               	movwf	ReadFIFO@value
  3056                           
  3057                           ;Main Card V10.0.c: 899: PORTAbits.RA5 = 1;
  3058  0B72  1685               	bsf	5,5	;volatile
  3059                           
  3060                           ;Main Card V10.0.c: 900: return value;
  3061  0B73  0824               	movf	ReadFIFO@value,w
  3062  0B74  0008               	return
  3063  0B75                     __end_of_ReadFIFO:	
  3064                           
  3065                           	psect	text14
  3066  023D                     __ptext14:	
  3067 ;; *************** function _TransiverInit *****************
  3068 ;; Defined at:
  3069 ;;		line 650 in file "../Main Card V10.0.c"
  3070 ;; Parameters:    Size  Location     Type
  3071 ;;		None
  3072 ;; Auto vars:     Size  Location     Type
  3073 ;;  i               2   22[BANK0 ] int 
  3074 ;; Return value:  Size  Location     Type
  3075 ;;                  1    wreg      void 
  3076 ;; Registers used:
  3077 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3078 ;; Tracked objects:
  3079 ;;		On entry : 0/0
  3080 ;;		On exit  : 0/0
  3081 ;;		Unchanged: 0/0
  3082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3083 ;;      Params:         0       0       0       0       0
  3084 ;;      Locals:         0       2       0       0       0
  3085 ;;      Temps:          0       1       0       0       0
  3086 ;;      Totals:         0       3       0       0       0
  3087 ;;Total ram usage:        3 bytes
  3088 ;; Hardware stack levels used:    1
  3089 ;; Hardware stack levels required when called:    7
  3090 ;; This function calls:
  3091 ;;		_Blink
  3092 ;;		_DelayDs
  3093 ;;		_FindChannel
  3094 ;;		_RegisterRead
  3095 ;;		_RegisterSet
  3096 ;;		_SetRFMode
  3097 ;; This function is called by:
  3098 ;;		_main
  3099 ;; This function uses a non-reentrant model
  3100 ;;
  3101                           
  3102                           
  3103                           ;psect for function _TransiverInit
  3104  023D                     _TransiverInit:	
  3105                           
  3106                           ;Main Card V10.0.c: 653: RegisterSet(0x00, 0x30);
  3107                           
  3108                           ;incstack = 0
  3109                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3110  023D  3030               	movlw	48
  3111  023E  1283               	bcf	3,5	;RP0=0, select bank0
  3112  023F  1303               	bcf	3,6	;RP1=0, select bank0
  3113  0240  00B5               	movwf	??_TransiverInit
  3114  0241  0835               	movf	??_TransiverInit,w
  3115  0242  00A7               	movwf	RegisterSet@value
  3116  0243  3000               	movlw	0
  3117  0244  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3118                           
  3119                           ;Main Card V10.0.c: 654: RegisterSet(0x01,(0xA8));
  3120  0249  30A8               	movlw	168
  3121  024A  1283               	bcf	3,5	;RP0=0, select bank0
  3122  024B  1303               	bcf	3,6	;RP1=0, select bank0
  3123  024C  00B5               	movwf	??_TransiverInit
  3124  024D  0835               	movf	??_TransiverInit,w
  3125  024E  00A7               	movwf	RegisterSet@value
  3126  024F  3001               	movlw	1
  3127  0250  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3128                           
  3129                           ;Main Card V10.0.c: 655: RegisterSet(0x02, 0x09);
  3130  0255  3009               	movlw	9
  3131  0256  1283               	bcf	3,5	;RP0=0, select bank0
  3132  0257  1303               	bcf	3,6	;RP1=0, select bank0
  3133  0258  00B5               	movwf	??_TransiverInit
  3134  0259  0835               	movf	??_TransiverInit,w
  3135  025A  00A7               	movwf	RegisterSet@value
  3136  025B  3002               	movlw	2
  3137  025C  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3138                           
  3139                           ;Main Card V10.0.c: 656: RegisterSet(0x03, 0x07);
  3140  0261  3007               	movlw	7
  3141  0262  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0263  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0264  00B5               	movwf	??_TransiverInit
  3144  0265  0835               	movf	??_TransiverInit,w
  3145  0266  00A7               	movwf	RegisterSet@value
  3146  0267  3003               	movlw	3
  3147  0268  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3148                           
  3149                           ;Main Card V10.0.c: 657: RegisterSet(0x05,(0x0A));
  3150  026D  300A               	movlw	10
  3151  026E  1283               	bcf	3,5	;RP0=0, select bank0
  3152  026F  1303               	bcf	3,6	;RP1=0, select bank0
  3153  0270  00B5               	movwf	??_TransiverInit
  3154  0271  0835               	movf	??_TransiverInit,w
  3155  0272  00A7               	movwf	RegisterSet@value
  3156  0273  3005               	movlw	5
  3157  0274  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3158                           
  3159                           ;Main Card V10.0.c: 658: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3160  0279  30B9               	movlw	185
  3161  027A  1283               	bcf	3,5	;RP0=0, select bank0
  3162  027B  1303               	bcf	3,6	;RP1=0, select bank0
  3163  027C  00B5               	movwf	??_TransiverInit
  3164  027D  0835               	movf	??_TransiverInit,w
  3165  027E  00A7               	movwf	RegisterSet@value
  3166  027F  300D               	movlw	13
  3167  0280  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3168                           
  3169                           ;Main Card V10.0.c: 659: RegisterSet(0x0E,(0x01|0x10|0x01));
  3170  0285  3011               	movlw	17
  3171  0286  1283               	bcf	3,5	;RP0=0, select bank0
  3172  0287  1303               	bcf	3,6	;RP1=0, select bank0
  3173  0288  00B5               	movwf	??_TransiverInit
  3174  0289  0835               	movf	??_TransiverInit,w
  3175  028A  00A7               	movwf	RegisterSet@value
  3176  028B  300E               	movlw	14
  3177  028C  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3178                           
  3179                           ;Main Card V10.0.c: 660: RegisterSet(0x10, 0xA3);
  3180  0291  30A3               	movlw	163
  3181  0292  1283               	bcf	3,5	;RP0=0, select bank0
  3182  0293  1303               	bcf	3,6	;RP1=0, select bank0
  3183  0294  00B5               	movwf	??_TransiverInit
  3184  0295  0835               	movf	??_TransiverInit,w
  3185  0296  00A7               	movwf	RegisterSet@value
  3186  0297  3010               	movlw	16
  3187  0298  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3188                           
  3189                           ;Main Card V10.0.c: 661: RegisterSet(0x12,(0x18|0x20|0x06));
  3190  029D  303E               	movlw	62
  3191  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3192  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3193  02A0  00B5               	movwf	??_TransiverInit
  3194  02A1  0835               	movf	??_TransiverInit,w
  3195  02A2  00A7               	movwf	RegisterSet@value
  3196  02A3  3012               	movlw	18
  3197  02A4  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3198                           
  3199                           ;Main Card V10.0.c: 662: RegisterSet(0x16,('S'));
  3200  02A9  3053               	movlw	83
  3201  02AA  1283               	bcf	3,5	;RP0=0, select bank0
  3202  02AB  1303               	bcf	3,6	;RP1=0, select bank0
  3203  02AC  00B5               	movwf	??_TransiverInit
  3204  02AD  0835               	movf	??_TransiverInit,w
  3205  02AE  00A7               	movwf	RegisterSet@value
  3206  02AF  3016               	movlw	22
  3207  02B0  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3208                           
  3209                           ;Main Card V10.0.c: 663: RegisterSet(0x17,('Y'));
  3210  02B5  3059               	movlw	89
  3211  02B6  1283               	bcf	3,5	;RP0=0, select bank0
  3212  02B7  1303               	bcf	3,6	;RP1=0, select bank0
  3213  02B8  00B5               	movwf	??_TransiverInit
  3214  02B9  0835               	movf	??_TransiverInit,w
  3215  02BA  00A7               	movwf	RegisterSet@value
  3216  02BB  3017               	movlw	23
  3217  02BC  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3218                           
  3219                           ;Main Card V10.0.c: 664: RegisterSet(0x18,('N'));
  3220  02C1  304E               	movlw	78
  3221  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  3222  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  3223  02C4  00B5               	movwf	??_TransiverInit
  3224  02C5  0835               	movf	??_TransiverInit,w
  3225  02C6  00A7               	movwf	RegisterSet@value
  3226  02C7  3018               	movlw	24
  3227  02C8  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3228                           
  3229                           ;Main Card V10.0.c: 665: RegisterSet(0x19,('C'));
  3230  02CD  3043               	movlw	67
  3231  02CE  1283               	bcf	3,5	;RP0=0, select bank0
  3232  02CF  1303               	bcf	3,6	;RP1=0, select bank0
  3233  02D0  00B5               	movwf	??_TransiverInit
  3234  02D1  0835               	movf	??_TransiverInit,w
  3235  02D2  00A7               	movwf	RegisterSet@value
  3236  02D3  3019               	movlw	25
  3237  02D4  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3238                           
  3239                           ;Main Card V10.0.c: 666: RegisterSet(0x1A, 0x72);
  3240  02D9  3072               	movlw	114
  3241  02DA  1283               	bcf	3,5	;RP0=0, select bank0
  3242  02DB  1303               	bcf	3,6	;RP1=0, select bank0
  3243  02DC  00B5               	movwf	??_TransiverInit
  3244  02DD  0835               	movf	??_TransiverInit,w
  3245  02DE  00A7               	movwf	RegisterSet@value
  3246  02DF  301A               	movlw	26
  3247  02E0  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3248                           
  3249                           ;Main Card V10.0.c: 667: RegisterSet(0x1B, 0x3C);
  3250  02E5  303C               	movlw	60
  3251  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  3252  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  3253  02E8  00B5               	movwf	??_TransiverInit
  3254  02E9  0835               	movf	??_TransiverInit,w
  3255  02EA  00A7               	movwf	RegisterSet@value
  3256  02EB  301B               	movlw	27
  3257  02EC  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3258                           
  3259                           ;Main Card V10.0.c: 668: RegisterSet(0x1F, 0x80);
  3260  02F1  3080               	movlw	128
  3261  02F2  1283               	bcf	3,5	;RP0=0, select bank0
  3262  02F3  1303               	bcf	3,6	;RP1=0, select bank0
  3263  02F4  00B5               	movwf	??_TransiverInit
  3264  02F5  0835               	movf	??_TransiverInit,w
  3265  02F6  00A7               	movwf	RegisterSet@value
  3266  02F7  301F               	movlw	31
  3267  02F8  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3268                           
  3269                           ;Main Card V10.0.c: 669: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3270  02FD  3000               	movlw	0
  3271  02FE  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3272  0303  3801               	iorlw	1
  3273  0304  1283               	bcf	3,5	;RP0=0, select bank0
  3274  0305  1303               	bcf	3,6	;RP1=0, select bank0
  3275  0306  00B5               	movwf	??_TransiverInit
  3276  0307  0835               	movf	??_TransiverInit,w
  3277  0308  00A7               	movwf	RegisterSet@value
  3278  0309  3000               	movlw	0
  3279  030A  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3280                           
  3281                           ;Main Card V10.0.c: 671: if(FindChannel() == 1)
  3282  030F  120A  118A  2364  120A  118A  	fcall	_FindChannel
  3283  0314  3A01               	xorlw	1
  3284  0315  1D03               	skipz
  3285  0316  2B23               	goto	l2326
  3286                           
  3287                           ;Main Card V10.0.c: 672: Blink(1);
  3288  0317  3001               	movlw	1
  3289  0318  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0319  1303               	bcf	3,6	;RP1=0, select bank0
  3291  031A  00A6               	movwf	Blink@n
  3292  031B  3000               	movlw	0
  3293  031C  00A7               	movwf	Blink@n+1
  3294  031D  120A  118A  27CC  120A  118A  	fcall	_Blink
  3295  0322  2B5F               	goto	l2340
  3296  0323                     l2326:	
  3297                           
  3298                           ;Main Card V10.0.c: 673: else{
  3299                           ;Main Card V10.0.c: 674: for(int i = 1;i<=3;i++)
  3300  0323  3001               	movlw	1
  3301  0324  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0325  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0326  00B6               	movwf	TransiverInit@i
  3304  0327  3000               	movlw	0
  3305  0328  00B7               	movwf	TransiverInit@i+1
  3306  0329  0837               	movf	TransiverInit@i+1,w
  3307  032A  3A80               	xorlw	128
  3308  032B  00FF               	movwf	127
  3309  032C  3080               	movlw	128
  3310  032D  027F               	subwf	127,w
  3311  032E  1D03               	skipz
  3312  032F  2B32               	goto	u1925
  3313  0330  3004               	movlw	4
  3314  0331  0236               	subwf	TransiverInit@i,w
  3315  0332                     u1925:	
  3316  0332  1803               	btfsc	3,0
  3317  0333  2B5F               	goto	l2340
  3318  0334                     l322:	
  3319                           
  3320                           ;Main Card V10.0.c: 675: {
  3321                           ;Main Card V10.0.c: 676: PORTCbits.RC1 = 1;
  3322  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3323  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3324  0336  1487               	bsf	7,1	;volatile
  3325                           
  3326                           ;Main Card V10.0.c: 677: DelayDs(1);
  3327  0337  3001               	movlw	1
  3328  0338  00A0               	movwf	DelayDs@cnt
  3329  0339  3000               	movlw	0
  3330  033A  00A1               	movwf	DelayDs@cnt+1
  3331  033B  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3332                           
  3333                           ;Main Card V10.0.c: 678: PORTCbits.RC1 = 0;
  3334  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3336  0342  1087               	bcf	7,1	;volatile
  3337                           
  3338                           ;Main Card V10.0.c: 679: DelayDs(1);
  3339  0343  3001               	movlw	1
  3340  0344  00A0               	movwf	DelayDs@cnt
  3341  0345  3000               	movlw	0
  3342  0346  00A1               	movwf	DelayDs@cnt+1
  3343  0347  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3344  034C  3001               	movlw	1
  3345  034D  1283               	bcf	3,5	;RP0=0, select bank0
  3346  034E  1303               	bcf	3,6	;RP1=0, select bank0
  3347  034F  07B6               	addwf	TransiverInit@i,f
  3348  0350  1803               	skipnc
  3349  0351  0AB7               	incf	TransiverInit@i+1,f
  3350  0352  3000               	movlw	0
  3351  0353  07B7               	addwf	TransiverInit@i+1,f
  3352  0354  0837               	movf	TransiverInit@i+1,w
  3353  0355  3A80               	xorlw	128
  3354  0356  00FF               	movwf	127
  3355  0357  3080               	movlw	128
  3356  0358  027F               	subwf	127,w
  3357  0359  1D03               	skipz
  3358  035A  2B5D               	goto	u1935
  3359  035B  3004               	movlw	4
  3360  035C  0236               	subwf	TransiverInit@i,w
  3361  035D                     u1935:	
  3362  035D  1C03               	skipc
  3363  035E  2B34               	goto	l322
  3364  035F                     l2340:	
  3365                           
  3366                           ;Main Card V10.0.c: 680: }
  3367                           ;Main Card V10.0.c: 681: }
  3368                           ;Main Card V10.0.c: 682: SetRFMode(0x00);
  3369  035F  3000               	movlw	0
  3370  0360  120A  158A  2791   	fcall	_SetRFMode
  3371  0363  0008               	return
  3372  0364                     __end_of_TransiverInit:	
  3373                           
  3374                           	psect	text15
  3375  07CC                     __ptext15:	
  3376 ;; *************** function _Blink *****************
  3377 ;; Defined at:
  3378 ;;		line 807 in file "../Main Card V10.0.c"
  3379 ;; Parameters:    Size  Location     Type
  3380 ;;  n               2    6[BANK0 ] int 
  3381 ;; Auto vars:     Size  Location     Type
  3382 ;;  i               2    9[BANK0 ] int 
  3383 ;; Return value:  Size  Location     Type
  3384 ;;                  1    wreg      void 
  3385 ;; Registers used:
  3386 ;;		wreg, status,2, status,0, pclath, cstack
  3387 ;; Tracked objects:
  3388 ;;		On entry : 0/0
  3389 ;;		On exit  : 0/0
  3390 ;;		Unchanged: 0/0
  3391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3392 ;;      Params:         0       2       0       0       0
  3393 ;;      Locals:         0       2       0       0       0
  3394 ;;      Temps:          0       1       0       0       0
  3395 ;;      Totals:         0       5       0       0       0
  3396 ;;Total ram usage:        5 bytes
  3397 ;; Hardware stack levels used:    1
  3398 ;; Hardware stack levels required when called:    3
  3399 ;; This function calls:
  3400 ;;		_DelayDs
  3401 ;; This function is called by:
  3402 ;;		_TransiverInit
  3403 ;; This function uses a non-reentrant model
  3404 ;;
  3405                           
  3406                           
  3407                           ;psect for function _Blink
  3408  07CC                     _Blink:	
  3409                           
  3410                           ;Main Card V10.0.c: 809: for(int i = 1;i<=n;i++)
  3411                           
  3412                           ;incstack = 0
  3413                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3414  07CC  3001               	movlw	1
  3415  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  3416  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  3417  07CF  00A9               	movwf	Blink@i
  3418  07D0  3000               	movlw	0
  3419  07D1  00AA               	movwf	Blink@i+1
  3420  07D2                     l2246:	
  3421  07D2  0827               	movf	Blink@n+1,w
  3422  07D3  3A80               	xorlw	128
  3423  07D4  00A8               	movwf	??_Blink
  3424  07D5  082A               	movf	Blink@i+1,w
  3425  07D6  3A80               	xorlw	128
  3426  07D7  0228               	subwf	??_Blink,w
  3427  07D8  1D03               	skipz
  3428  07D9  2FDC               	goto	u1895
  3429  07DA  0829               	movf	Blink@i,w
  3430  07DB  0226               	subwf	Blink@n,w
  3431  07DC                     u1895:	
  3432  07DC  1C03               	btfss	3,0
  3433  07DD  0008               	return
  3434                           
  3435                           ;Main Card V10.0.c: 810: {
  3436                           ;Main Card V10.0.c: 811: PORTCbits.RC1 = 1;
  3437  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3438  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3439  07E0  1487               	bsf	7,1	;volatile
  3440                           
  3441                           ;Main Card V10.0.c: 812: DelayDs(2);
  3442  07E1  3002               	movlw	2
  3443  07E2  00A0               	movwf	DelayDs@cnt
  3444  07E3  3000               	movlw	0
  3445  07E4  00A1               	movwf	DelayDs@cnt+1
  3446  07E5  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3447                           
  3448                           ;Main Card V10.0.c: 813: PORTCbits.RC1 = 0;
  3449  07EA  1283               	bcf	3,5	;RP0=0, select bank0
  3450  07EB  1303               	bcf	3,6	;RP1=0, select bank0
  3451  07EC  1087               	bcf	7,1	;volatile
  3452                           
  3453                           ;Main Card V10.0.c: 814: DelayDs(6);
  3454  07ED  3006               	movlw	6
  3455  07EE  00A0               	movwf	DelayDs@cnt
  3456  07EF  3000               	movlw	0
  3457  07F0  00A1               	movwf	DelayDs@cnt+1
  3458  07F1  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3459  07F6  3001               	movlw	1
  3460  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  3461  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  3462  07F9  07A9               	addwf	Blink@i,f
  3463  07FA  1803               	skipnc
  3464  07FB  0AAA               	incf	Blink@i+1,f
  3465  07FC  3000               	movlw	0
  3466  07FD  07AA               	addwf	Blink@i+1,f
  3467  07FE  2FD2               	goto	l2246
  3468  07FF                     __end_of_Blink:	
  3469                           
  3470                           	psect	text16
  3471  0C13                     __ptext16:	
  3472 ;; *************** function _Mode_5 *****************
  3473 ;; Defined at:
  3474 ;;		line 456 in file "../Main Card V10.0.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;		None
  3477 ;; Auto vars:     Size  Location     Type
  3478 ;;		None
  3479 ;; Return value:  Size  Location     Type
  3480 ;;                  1    wreg      void 
  3481 ;; Registers used:
  3482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3483 ;; Tracked objects:
  3484 ;;		On entry : 0/0
  3485 ;;		On exit  : 0/0
  3486 ;;		Unchanged: 0/0
  3487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3488 ;;      Params:         0       0       0       0       0
  3489 ;;      Locals:         0       0       0       0       0
  3490 ;;      Temps:          0       0       0       0       0
  3491 ;;      Totals:         0       0       0       0       0
  3492 ;;Total ram usage:        0 bytes
  3493 ;; Hardware stack levels used:    1
  3494 ;; Hardware stack levels required when called:    8
  3495 ;; This function calls:
  3496 ;;		_LightWithSensController
  3497 ;;		_TransiverToReceive
  3498 ;;		_TransmittString
  3499 ;; This function is called by:
  3500 ;;		_main
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           
  3505                           ;psect for function _Mode_5
  3506  0C13                     _Mode_5:	
  3507                           
  3508                           ;Main Card V10.0.c: 458: if(btnPush)
  3509                           
  3510                           ;incstack = 0
  3511 ;; hardware stack exceeded
  3512                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3513  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  3514  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  3515  0C15  086E               	movf	_btnPush,w
  3516  0C16  1903               	btfsc	3,2
  3517  0C17  2C29               	goto	l2388
  3518                           
  3519                           ;Main Card V10.0.c: 459: {
  3520                           ;Main Card V10.0.c: 460: TransmittString("N2BLINK");
  3521  0C18  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3522  0C19  00B5               	movwf	TransmittString@dataString
  3523  0C1A  3080               	movlw	128
  3524  0C1B  00B6               	movwf	TransmittString@dataString+1
  3525  0C1C  120A  118A  253A  120A  158A  	fcall	_TransmittString
  3526                           
  3527                           ;Main Card V10.0.c: 461: TransiverToReceive();
  3528  0C21  120A  158A  26CF  120A  158A  	fcall	_TransiverToReceive
  3529                           
  3530                           ;Main Card V10.0.c: 462: btnPush=FALSE;
  3531  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  3532  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  3533  0C28  01EE               	clrf	_btnPush
  3534  0C29                     l2388:	
  3535                           
  3536                           ;Main Card V10.0.c: 463: }
  3537                           ;Main Card V10.0.c: 465: LightWithSensController();
  3538  0C29  120A  158A  262D   	fcall	_LightWithSensController
  3539  0C2C  0008               	return
  3540  0C2D                     __end_of_Mode_5:	
  3541                           
  3542                           	psect	text17
  3543  0BF9                     __ptext17:	
  3544 ;; *************** function _Mode_4 *****************
  3545 ;; Defined at:
  3546 ;;		line 441 in file "../Main Card V10.0.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3560 ;;      Params:         0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    8
  3567 ;; This function calls:
  3568 ;;		_LightWithSensController
  3569 ;;		_TransiverToReceive
  3570 ;;		_TransmittString
  3571 ;; This function is called by:
  3572 ;;		_main
  3573 ;; This function uses a non-reentrant model
  3574 ;;
  3575                           
  3576                           
  3577                           ;psect for function _Mode_4
  3578  0BF9                     _Mode_4:	
  3579                           
  3580                           ;Main Card V10.0.c: 443: if(btnPush)
  3581                           
  3582                           ;incstack = 0
  3583 ;; hardware stack exceeded
  3584                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3585  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3586  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3587  0BFB  086E               	movf	_btnPush,w
  3588  0BFC  1903               	btfsc	3,2
  3589  0BFD  2C0F               	goto	l2380
  3590                           
  3591                           ;Main Card V10.0.c: 444: {
  3592                           ;Main Card V10.0.c: 445: TransmittString("N1BLINK");
  3593  0BFE  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3594  0BFF  00B5               	movwf	TransmittString@dataString
  3595  0C00  3080               	movlw	128
  3596  0C01  00B6               	movwf	TransmittString@dataString+1
  3597  0C02  120A  118A  253A  120A  158A  	fcall	_TransmittString
  3598                           
  3599                           ;Main Card V10.0.c: 446: TransiverToReceive();
  3600  0C07  120A  158A  26CF  120A  158A  	fcall	_TransiverToReceive
  3601                           
  3602                           ;Main Card V10.0.c: 447: btnPush=FALSE;
  3603  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3604  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  3605  0C0E  01EE               	clrf	_btnPush
  3606  0C0F                     l2380:	
  3607                           
  3608                           ;Main Card V10.0.c: 448: }
  3609                           ;Main Card V10.0.c: 450: LightWithSensController();
  3610  0C0F  120A  158A  262D   	fcall	_LightWithSensController
  3611  0C12  0008               	return
  3612  0C13                     __end_of_Mode_4:	
  3613                           
  3614                           	psect	text18
  3615  053A                     __ptext18:	
  3616 ;; *************** function _TransmittString *****************
  3617 ;; Defined at:
  3618 ;;		line 342 in file "../Main Card V10.0.c"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3621 ;;		 -> STR_21(8), STR_20(8), TransmittedDataHandler@slask_718(8), TransmittedDataHandler@slask_715(8), 
  3622 ;;		 -> STR_16(4), STR_15(4), STR_13(14), STR_12(14), 
  3623 ;;		 -> TransmittedDataHandler@slask_706(8), TransmittedDataHandler@slask(8), STR_4(10), STR_2(10), 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  i               2   26[BANK0 ] int 
  3626 ;; Return value:  Size  Location     Type
  3627 ;;                  1    wreg      void 
  3628 ;; Registers used:
  3629 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3630 ;; Tracked objects:
  3631 ;;		On entry : 0/0
  3632 ;;		On exit  : 0/0
  3633 ;;		Unchanged: 0/0
  3634 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3635 ;;      Params:         0       2       0       0       0
  3636 ;;      Locals:         0       2       0       0       0
  3637 ;;      Temps:          0       3       0       0       0
  3638 ;;      Totals:         0       7       0       0       0
  3639 ;;Total ram usage:        7 bytes
  3640 ;; Hardware stack levels used:    1
  3641 ;; Hardware stack levels required when called:    7
  3642 ;; This function calls:
  3643 ;;		_FindChannel
  3644 ;;		_RegisterRead
  3645 ;;		_RegisterSet
  3646 ;;		_SetRFMode
  3647 ;;		_WriteFIFO
  3648 ;;		_timerFunction
  3649 ;; This function is called by:
  3650 ;;		_TransmittedDataHandler
  3651 ;;		_Mode_4
  3652 ;;		_Mode_5
  3653 ;; This function uses a non-reentrant model
  3654 ;;
  3655                           
  3656                           
  3657                           ;psect for function _TransmittString
  3658  053A                     _TransmittString:	
  3659                           
  3660                           ;Main Card V10.0.c: 344: timerFunction(4, 5);
  3661                           
  3662                           ;incstack = 0
  3663 ;; hardware stack exceeded
  3664                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3665  053A  3004               	movlw	4
  3666  053B  1283               	bcf	3,5	;RP0=0, select bank0
  3667  053C  1303               	bcf	3,6	;RP1=0, select bank0
  3668  053D  00A0               	movwf	timerFunction@intTimerNumber
  3669  053E  3000               	movlw	0
  3670  053F  00A1               	movwf	timerFunction@intTimerNumber+1
  3671  0540  3005               	movlw	5
  3672  0541  00A2               	movwf	timerFunction@intSetSeconds
  3673  0542  3000               	movlw	0
  3674  0543  00A3               	movwf	timerFunction@intSetSeconds+1
  3675  0544  120A  158A  2385  120A  118A  	fcall	_timerFunction
  3676                           
  3677                           ;Main Card V10.0.c: 346: int i = 0;
  3678  0549  1283               	bcf	3,5	;RP0=0, select bank0
  3679  054A  1303               	bcf	3,6	;RP1=0, select bank0
  3680  054B  01BA               	clrf	TransmittString@i
  3681  054C  01BB               	clrf	TransmittString@i+1
  3682                           
  3683                           ;Main Card V10.0.c: 349: SetRFMode(0x20);
  3684  054D  3020               	movlw	32
  3685  054E  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3686                           
  3687                           ;Main Card V10.0.c: 350: _delay((unsigned long)((10)*(4000000/4000.0)));
  3688  0553  300D               	movlw	13
  3689  0554  1283               	bcf	3,5	;RP0=0, select bank0
  3690  0555  1303               	bcf	3,6	;RP1=0, select bank0
  3691  0556  00B8               	movwf	??_TransmittString+1
  3692  0557  30FB               	movlw	251
  3693  0558  00B7               	movwf	??_TransmittString
  3694  0559                     u2377:	
  3695  0559  0BB7               	decfsz	??_TransmittString,f
  3696  055A  2D59               	goto	u2377
  3697  055B  0BB8               	decfsz	??_TransmittString+1,f
  3698  055C  2D59               	goto	u2377
  3699                           
  3700                           ;Main Card V10.0.c: 351: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3701  055D  300E               	movlw	14
  3702  055E  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3703  0563  3802               	iorlw	2
  3704  0564  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0565  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0566  00B7               	movwf	??_TransmittString
  3707  0567  0837               	movf	??_TransmittString,w
  3708  0568  00A7               	movwf	RegisterSet@value
  3709  0569  300E               	movlw	14
  3710  056A  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3711                           
  3712                           ;Main Card V10.0.c: 352: SetRFMode(0x40);
  3713  056F  3040               	movlw	64
  3714  0570  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3715  0575                     l1980:	
  3716                           ;Main Card V10.0.c: 353: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3717                           
  3718  0575  300E               	movlw	14
  3719  0576  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3720  057B  3902               	andlw	2
  3721  057C  1D03               	btfss	3,2
  3722  057D  2D88               	goto	l1982
  3723                           
  3724                           ;Main Card V10.0.c: 354: {
  3725                           ;Main Card V10.0.c: 355: if(bTimerComplete[4])
  3726  057E  1683               	bsf	3,5	;RP0=1, select bank1
  3727  057F  1303               	bcf	3,6	;RP1=0, select bank1
  3728  0580  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3729  0581  1903               	btfsc	3,2
  3730  0582  2D75               	goto	l1980
  3731                           
  3732                           ;Main Card V10.0.c: 356: {
  3733                           ;Main Card V10.0.c: 357: FindChannel();
  3734  0583  120A  118A  2364  120A  118A  	fcall	_FindChannel
  3735  0588                     l1982:	
  3736                           ;Main Card V10.0.c: 358: break;
  3737                           
  3738                           
  3739                           ;Main Card V10.0.c: 359: }
  3740                           ;Main Card V10.0.c: 361: }
  3741                           ;Main Card V10.0.c: 362: SetRFMode(0x80);
  3742  0588  3080               	movlw	128
  3743  0589  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3744                           
  3745                           ;Main Card V10.0.c: 363: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3746  058E  30A5               	movlw	165
  3747  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3748  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3749  0591  00B7               	movwf	??_TransmittString
  3750  0592                     u2387:	
  3751  0592  0BB7               	decfsz	??_TransmittString,f
  3752  0593  2D92               	goto	u2387
  3753  0594  2D95               	nop2
  3754                           
  3755                           ;Main Card V10.0.c: 366: WriteFIFO('S');
  3756  0595  3053               	movlw	83
  3757  0596  120A  158A  2340  120A  118A  	fcall	_WriteFIFO
  3758                           
  3759                           ;Main Card V10.0.c: 367: WriteFIFO('Y');
  3760  059B  3059               	movlw	89
  3761  059C  120A  158A  2340  120A  118A  	fcall	_WriteFIFO
  3762                           
  3763                           ;Main Card V10.0.c: 368: WriteFIFO('N');
  3764  05A1  304E               	movlw	78
  3765  05A2  120A  158A  2340  120A  118A  	fcall	_WriteFIFO
  3766                           
  3767                           ;Main Card V10.0.c: 369: WriteFIFO('C');
  3768  05A7  3043               	movlw	67
  3769  05A8  120A  158A  2340  120A  118A  	fcall	_WriteFIFO
  3770  05AD                     l1998:	
  3771                           ;Main Card V10.0.c: 372: while(dataString[i] != 0)
  3772                           
  3773  05AD  1283               	bcf	3,5	;RP0=0, select bank0
  3774  05AE  1303               	bcf	3,6	;RP1=0, select bank0
  3775  05AF  083A               	movf	TransmittString@i,w
  3776  05B0  0735               	addwf	TransmittString@dataString,w
  3777  05B1  00B8               	movwf	??_TransmittString+1
  3778  05B2  0836               	movf	TransmittString@dataString+1,w
  3779  05B3  00B7               	movwf	??_TransmittString
  3780  05B4  1803               	skipnc
  3781  05B5  0AB7               	incf	??_TransmittString,f
  3782  05B6  1BBA               	btfsc	TransmittString@i,7
  3783  05B7  03B7               	decf	??_TransmittString,f
  3784  05B8  1283               	bcf	3,5	;RP0=0, select bank0
  3785  05B9  1303               	bcf	3,6	;RP1=0, select bank0
  3786  05BA  0837               	movf	??_TransmittString,w
  3787  05BB  00B9               	movwf	??_TransmittString+2
  3788  05BC  0839               	movf	??_TransmittString+2,w
  3789  05BD  00FF               	movwf	127
  3790  05BE  0838               	movf	??_TransmittString+1,w
  3791  05BF  0084               	movwf	4
  3792  05C0  120A  118A  260C  120A  118A  	fcall	stringtab
  3793  05C5  3A00               	xorlw	0
  3794  05C6  1903               	btfsc	3,2
  3795  05C7  2DF3               	goto	l248
  3796                           
  3797                           ;Main Card V10.0.c: 373: {
  3798                           ;Main Card V10.0.c: 374: WriteFIFO(dataString[i]);
  3799  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  3800  05C9  1303               	bcf	3,6	;RP1=0, select bank0
  3801  05CA  083A               	movf	TransmittString@i,w
  3802  05CB  0735               	addwf	TransmittString@dataString,w
  3803  05CC  00B8               	movwf	??_TransmittString+1
  3804  05CD  0836               	movf	TransmittString@dataString+1,w
  3805  05CE  00B7               	movwf	??_TransmittString
  3806  05CF  1803               	skipnc
  3807  05D0  0AB7               	incf	??_TransmittString,f
  3808  05D1  1BBA               	btfsc	TransmittString@i,7
  3809  05D2  03B7               	decf	??_TransmittString,f
  3810  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3811  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3812  05D5  0837               	movf	??_TransmittString,w
  3813  05D6  00B9               	movwf	??_TransmittString+2
  3814  05D7  0839               	movf	??_TransmittString+2,w
  3815  05D8  00FF               	movwf	127
  3816  05D9  0838               	movf	??_TransmittString+1,w
  3817  05DA  0084               	movwf	4
  3818  05DB  120A  118A  260C  120A  118A  	fcall	stringtab
  3819  05E0  120A  158A  2340  120A  118A  	fcall	_WriteFIFO
  3820                           
  3821                           ;Main Card V10.0.c: 375: i++;
  3822  05E5  3001               	movlw	1
  3823  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  3824  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  3825  05E8  07BA               	addwf	TransmittString@i,f
  3826  05E9  1803               	skipnc
  3827  05EA  0ABB               	incf	TransmittString@i+1,f
  3828  05EB  3000               	movlw	0
  3829  05EC  07BB               	addwf	TransmittString@i+1,f
  3830  05ED  2DAD               	goto	l1998
  3831  05EE                     l2000:	
  3832                           ;Main Card V10.0.c: 376: }
  3833                           ;Main Card V10.0.c: 379: while(!PORTBbits.RB4)
  3834                           
  3835                           
  3836                           ;Main Card V10.0.c: 380: {
  3837                           ;Main Card V10.0.c: 381: if(bTimerComplete[4])
  3838  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3839  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3840  05F0  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3841  05F1  1D03               	btfss	3,2
  3842  05F2  2DF6               	goto	l2004
  3843  05F3                     l248:	
  3844                           ;Main Card V10.0.c: 382: break;
  3845                           
  3846  05F3  1283               	bcf	3,5	;RP0=0, select bank0
  3847  05F4  1E06               	btfss	6,4	;volatile
  3848  05F5  2DEE               	goto	l2000
  3849  05F6                     l2004:	
  3850                           
  3851                           ;Main Card V10.0.c: 383: }
  3852                           ;Main Card V10.0.c: 384: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3853  05F6  3002               	movlw	2
  3854  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3855  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3856  05F9  00B7               	movwf	??_TransmittString
  3857  05FA                     u2397:	
  3858  05FA  0BB7               	decfsz	??_TransmittString,f
  3859  05FB  2DFA               	goto	u2397
  3860  05FC  0000               	nop
  3861                           
  3862                           ;Main Card V10.0.c: 385: SetRFMode(0x00);
  3863  05FD  3000               	movlw	0
  3864  05FE  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3865                           
  3866                           ;Main Card V10.0.c: 386: _delay((unsigned long)((1)*(4000000/4000.0)));
  3867  0603  30C7               	movlw	199
  3868  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3869  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3870  0606  00B7               	movwf	??_TransmittString
  3871  0607                     u2407:	
  3872  0607  2E08               	nop2
  3873  0608  0BB7               	decfsz	??_TransmittString,f
  3874  0609  2E07               	goto	u2407
  3875  060A  2E0B               	nop2
  3876  060B  0008               	return
  3877  060C                     __end_of_TransmittString:	
  3878                           
  3879                           	psect	text19
  3880  0B40                     __ptext19:	
  3881 ;; *************** function _WriteFIFO *****************
  3882 ;; Defined at:
  3883 ;;		line 921 in file "../Main Card V10.0.c"
  3884 ;; Parameters:    Size  Location     Type
  3885 ;;  Data            1    wreg     unsigned char 
  3886 ;; Auto vars:     Size  Location     Type
  3887 ;;  Data            1    3[BANK0 ] unsigned char 
  3888 ;; Return value:  Size  Location     Type
  3889 ;;                  1    wreg      void 
  3890 ;; Registers used:
  3891 ;;		wreg, status,2, status,0, pclath, cstack
  3892 ;; Tracked objects:
  3893 ;;		On entry : 0/0
  3894 ;;		On exit  : 0/0
  3895 ;;		Unchanged: 0/0
  3896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3897 ;;      Params:         0       0       0       0       0
  3898 ;;      Locals:         0       1       0       0       0
  3899 ;;      Temps:          0       0       0       0       0
  3900 ;;      Totals:         0       1       0       0       0
  3901 ;;Total ram usage:        1 bytes
  3902 ;; Hardware stack levels used:    1
  3903 ;; Hardware stack levels required when called:    3
  3904 ;; This function calls:
  3905 ;;		_WriteSPI
  3906 ;; This function is called by:
  3907 ;;		_TransmittString
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           
  3912                           ;psect for function _WriteFIFO
  3913  0B40                     _WriteFIFO:	
  3914                           
  3915                           ;incstack = 0
  3916                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3917                           ;WriteFIFO@Data stored from wreg
  3918  0B40  1283               	bcf	3,5	;RP0=0, select bank0
  3919  0B41  1303               	bcf	3,6	;RP1=0, select bank0
  3920  0B42  00A3               	movwf	WriteFIFO@Data
  3921                           
  3922                           ;Main Card V10.0.c: 923: PORTAbits.RA5 = 0;
  3923  0B43  1285               	bcf	5,5	;volatile
  3924                           
  3925                           ;Main Card V10.0.c: 924: WriteSPI(Data);
  3926  0B44  0823               	movf	WriteFIFO@Data,w
  3927  0B45  120A  158A  2359   	fcall	_WriteSPI
  3928                           
  3929                           ;Main Card V10.0.c: 925: PORTAbits.RA5 = 1;
  3930  0B48  1283               	bcf	3,5	;RP0=0, select bank0
  3931  0B49  1303               	bcf	3,6	;RP1=0, select bank0
  3932  0B4A  1685               	bsf	5,5	;volatile
  3933  0B4B  0008               	return
  3934  0B4C                     __end_of_WriteFIFO:	
  3935                           
  3936                           	psect	text20
  3937  0ECF                     __ptext20:	
  3938 ;; *************** function _TransiverToReceive *****************
  3939 ;; Defined at:
  3940 ;;		line 177 in file "../Main Card V10.0.c"
  3941 ;; Parameters:    Size  Location     Type
  3942 ;;		None
  3943 ;; Auto vars:     Size  Location     Type
  3944 ;;		None
  3945 ;; Return value:  Size  Location     Type
  3946 ;;                  1    wreg      void 
  3947 ;; Registers used:
  3948 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3949 ;; Tracked objects:
  3950 ;;		On entry : 0/0
  3951 ;;		On exit  : 0/0
  3952 ;;		Unchanged: 0/0
  3953 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3954 ;;      Params:         0       0       0       0       0
  3955 ;;      Locals:         0       0       0       0       0
  3956 ;;      Temps:          0       2       0       0       0
  3957 ;;      Totals:         0       2       0       0       0
  3958 ;;Total ram usage:        2 bytes
  3959 ;; Hardware stack levels used:    1
  3960 ;; Hardware stack levels required when called:    7
  3961 ;; This function calls:
  3962 ;;		_FindChannel
  3963 ;;		_RegisterRead
  3964 ;;		_RegisterSet
  3965 ;;		_SetRFMode
  3966 ;;		_timerFunction
  3967 ;; This function is called by:
  3968 ;;		_main
  3969 ;;		_Mode_4
  3970 ;;		_Mode_5
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           
  3974                           
  3975                           ;psect for function _TransiverToReceive
  3976  0ECF                     _TransiverToReceive:	
  3977                           
  3978                           ;Main Card V10.0.c: 179: timerFunction(2, 5);
  3979                           
  3980                           ;incstack = 0
  3981                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3982  0ECF  3002               	movlw	2
  3983  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  3984  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  3985  0ED2  00A0               	movwf	timerFunction@intTimerNumber
  3986  0ED3  3000               	movlw	0
  3987  0ED4  00A1               	movwf	timerFunction@intTimerNumber+1
  3988  0ED5  3005               	movlw	5
  3989  0ED6  00A2               	movwf	timerFunction@intSetSeconds
  3990  0ED7  3000               	movlw	0
  3991  0ED8  00A3               	movwf	timerFunction@intSetSeconds+1
  3992  0ED9  120A  158A  2385  120A  158A  	fcall	_timerFunction
  3993                           
  3994                           ;Main Card V10.0.c: 183: SetRFMode(0x20);
  3995  0EDE  3020               	movlw	32
  3996  0EDF  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3997                           
  3998                           ;Main Card V10.0.c: 184: _delay((unsigned long)((10)*(4000000/4000.0)));
  3999  0EE4  300D               	movlw	13
  4000  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  4001  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  4002  0EE7  00B6               	movwf	??_TransiverToReceive+1
  4003  0EE8  30FB               	movlw	251
  4004  0EE9  00B5               	movwf	??_TransiverToReceive
  4005  0EEA                     u2417:	
  4006  0EEA  0BB5               	decfsz	??_TransiverToReceive,f
  4007  0EEB  2EEA               	goto	u2417
  4008  0EEC  0BB6               	decfsz	??_TransiverToReceive+1,f
  4009  0EED  2EEA               	goto	u2417
  4010                           
  4011                           ;Main Card V10.0.c: 185: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4012  0EEE  300E               	movlw	14
  4013  0EEF  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  4014  0EF4  3802               	iorlw	2
  4015  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  4016  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  4017  0EF7  00B5               	movwf	??_TransiverToReceive
  4018  0EF8  0835               	movf	??_TransiverToReceive,w
  4019  0EF9  00A7               	movwf	RegisterSet@value
  4020  0EFA  300E               	movlw	14
  4021  0EFB  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4022                           
  4023                           ;Main Card V10.0.c: 186: SetRFMode(0x40);
  4024  0F00  3040               	movlw	64
  4025  0F01  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  4026  0F06                     l2090:	
  4027                           ;Main Card V10.0.c: 187: while((RegisterRead(0x0E) & 0b00000010) == 0)
  4028                           
  4029  0F06  300E               	movlw	14
  4030  0F07  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  4031  0F0C  3902               	andlw	2
  4032  0F0D  1D03               	btfss	3,2
  4033  0F0E  2F19               	goto	l2092
  4034                           
  4035                           ;Main Card V10.0.c: 188: {
  4036                           ;Main Card V10.0.c: 189: if(bTimerComplete[2])
  4037  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  4038  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  4039  0F11  082C               	movf	(_bTimerComplete^(0+128)+2),w
  4040  0F12  1903               	btfsc	3,2
  4041  0F13  2F06               	goto	l2090
  4042                           
  4043                           ;Main Card V10.0.c: 190: {
  4044                           ;Main Card V10.0.c: 191: FindChannel();
  4045  0F14  120A  118A  2364  120A  158A  	fcall	_FindChannel
  4046  0F19                     l2092:	
  4047                           ;Main Card V10.0.c: 192: break;
  4048                           
  4049                           
  4050                           ;Main Card V10.0.c: 193: }
  4051                           ;Main Card V10.0.c: 194: }
  4052                           ;Main Card V10.0.c: 196: SetRFMode(0x60);
  4053  0F19  3060               	movlw	96
  4054  0F1A  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  4055                           
  4056                           ;Main Card V10.0.c: 197: _delay((unsigned long)((500)*(4000000/4000000.0)));
  4057  0F1F  30A5               	movlw	165
  4058  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  4059  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  4060  0F22  00B5               	movwf	??_TransiverToReceive
  4061  0F23                     u2427:	
  4062  0F23  0BB5               	decfsz	??_TransiverToReceive,f
  4063  0F24  2F23               	goto	u2427
  4064  0F25  2F26               	nop2
  4065                           
  4066                           ;Main Card V10.0.c: 198: bTransiverModeReceive = 1;
  4067  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  4068  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  4069  0F28  01ED               	clrf	_bTransiverModeReceive
  4070  0F29  0AED               	incf	_bTransiverModeReceive,f
  4071  0F2A  0008               	return
  4072  0F2B                     __end_of_TransiverToReceive:	
  4073                           
  4074                           	psect	text21
  4075  0364                     __ptext21:	
  4076 ;; *************** function _FindChannel *****************
  4077 ;; Defined at:
  4078 ;;		line 704 in file "../Main Card V10.0.c"
  4079 ;; Parameters:    Size  Location     Type
  4080 ;;		None
  4081 ;; Auto vars:     Size  Location     Type
  4082 ;;  i               2   19[BANK0 ] int 
  4083 ;;  cnt             2   17[BANK0 ] int 
  4084 ;; Return value:  Size  Location     Type
  4085 ;;                  1    wreg      unsigned char 
  4086 ;; Registers used:
  4087 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4088 ;; Tracked objects:
  4089 ;;		On entry : 0/0
  4090 ;;		On exit  : 0/0
  4091 ;;		Unchanged: 0/0
  4092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4093 ;;      Params:         0       0       0       0       0
  4094 ;;      Locals:         0       4       0       0       0
  4095 ;;      Temps:          0       3       0       0       0
  4096 ;;      Totals:         0       7       0       0       0
  4097 ;;Total ram usage:        7 bytes
  4098 ;; Hardware stack levels used:    1
  4099 ;; Hardware stack levels required when called:    6
  4100 ;; This function calls:
  4101 ;;		_RegisterRead
  4102 ;;		_RegisterSet
  4103 ;;		_SetRFMode
  4104 ;; This function is called by:
  4105 ;;		_TransiverToReceive
  4106 ;;		_TransmittString
  4107 ;;		_TransiverInit
  4108 ;; This function uses a non-reentrant model
  4109 ;;
  4110                           
  4111                           
  4112                           ;psect for function _FindChannel
  4113  0364                     _FindChannel:	
  4114                           
  4115                           ;Main Card V10.0.c: 706: int cnt = 0;
  4116                           
  4117                           ;incstack = 0
  4118 ;; using string table level
  4119                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4120  0364  1283               	bcf	3,5	;RP0=0, select bank0
  4121  0365  1303               	bcf	3,6	;RP1=0, select bank0
  4122  0366  01B1               	clrf	FindChannel@cnt
  4123  0367  01B2               	clrf	FindChannel@cnt+1
  4124                           
  4125                           ;Main Card V10.0.c: 707: bChannelFound = 0;
  4126  0368  1683               	bsf	3,5	;RP0=1, select bank1
  4127  0369  1303               	bcf	3,6	;RP1=0, select bank1
  4128  036A  01B9               	clrf	_bChannelFound^(0+128)
  4129                           
  4130                           ;Main Card V10.0.c: 708: channelFound = 0;
  4131  036B  01AF               	clrf	_channelFound^(0+128)
  4132  036C  01B0               	clrf	(_channelFound+1)^(0+128)
  4133                           
  4134                           ;Main Card V10.0.c: 710: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4135  036D  3006               	movlw	6
  4136  036E  1283               	bcf	3,5	;RP0=0, select bank0
  4137  036F  1303               	bcf	3,6	;RP1=0, select bank0
  4138  0370  00B0               	movwf	??_FindChannel+2
  4139  0371  3013               	movlw	19
  4140  0372  00AF               	movwf	??_FindChannel+1
  4141  0373  30AD               	movlw	173
  4142  0374  00AE               	movwf	??_FindChannel
  4143  0375                     u2437:	
  4144  0375  0BAE               	decfsz	??_FindChannel,f
  4145  0376  2B75               	goto	u2437
  4146  0377  0BAF               	decfsz	??_FindChannel+1,f
  4147  0378  2B75               	goto	u2437
  4148  0379  0BB0               	decfsz	??_FindChannel+2,f
  4149  037A  2B75               	goto	u2437
  4150                           
  4151                           ;Main Card V10.0.c: 711: for (int i = 0; i < 13; i++)
  4152  037B  1283               	bcf	3,5	;RP0=0, select bank0
  4153  037C  1303               	bcf	3,6	;RP1=0, select bank0
  4154  037D  01B3               	clrf	FindChannel@i
  4155  037E  01B4               	clrf	FindChannel@i+1
  4156  037F  0834               	movf	FindChannel@i+1,w
  4157  0380  3A80               	xorlw	128
  4158  0381  00FF               	movwf	127
  4159  0382  3080               	movlw	128
  4160  0383  027F               	subwf	127,w
  4161  0384  1D03               	skipz
  4162  0385  2B88               	goto	u1205
  4163  0386  300D               	movlw	13
  4164  0387  0233               	subwf	FindChannel@i,w
  4165  0388                     u1205:	
  4166  0388  1803               	btfsc	3,0
  4167  0389  2C64               	goto	l1848
  4168  038A                     l1824:	
  4169                           
  4170                           ;Main Card V10.0.c: 712: {
  4171                           ;Main Card V10.0.c: 713: RegisterSet(0x06,ChannelR[i]);
  4172  038A  1283               	bcf	3,5	;RP0=0, select bank0
  4173  038B  1303               	bcf	3,6	;RP1=0, select bank0
  4174  038C  0833               	movf	FindChannel@i,w
  4175  038D  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4176  038E  0084               	movwf	4
  4177  038F  120A  118A  2616  120A  118A  	fcall	stringdir
  4178  0394  00AE               	movwf	??_FindChannel
  4179  0395  082E               	movf	??_FindChannel,w
  4180  0396  00A7               	movwf	RegisterSet@value
  4181  0397  3006               	movlw	6
  4182  0398  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4183                           
  4184                           ;Main Card V10.0.c: 714: RegisterSet(0x07,ChannelP[i]);
  4185  039D  1283               	bcf	3,5	;RP0=0, select bank0
  4186  039E  1303               	bcf	3,6	;RP1=0, select bank0
  4187  039F  0833               	movf	FindChannel@i,w
  4188  03A0  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4189  03A1  0084               	movwf	4
  4190  03A2  120A  118A  2616  120A  118A  	fcall	stringdir
  4191  03A7  00AE               	movwf	??_FindChannel
  4192  03A8  082E               	movf	??_FindChannel,w
  4193  03A9  00A7               	movwf	RegisterSet@value
  4194  03AA  3007               	movlw	7
  4195  03AB  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4196                           
  4197                           ;Main Card V10.0.c: 715: RegisterSet(0x08,ChannelS[i]);
  4198  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  4199  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  4200  03B2  0833               	movf	FindChannel@i,w
  4201  03B3  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4202  03B4  0084               	movwf	4
  4203  03B5  120A  118A  2616  120A  118A  	fcall	stringdir
  4204  03BA  00AE               	movwf	??_FindChannel
  4205  03BB  082E               	movf	??_FindChannel,w
  4206  03BC  00A7               	movwf	RegisterSet@value
  4207  03BD  3008               	movlw	8
  4208  03BE  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4209                           
  4210                           ;Main Card V10.0.c: 716: RegisterSet(0x09,ChannelR[i]);
  4211  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  4212  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  4213  03C5  0833               	movf	FindChannel@i,w
  4214  03C6  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4215  03C7  0084               	movwf	4
  4216  03C8  120A  118A  2616  120A  118A  	fcall	stringdir
  4217  03CD  00AE               	movwf	??_FindChannel
  4218  03CE  082E               	movf	??_FindChannel,w
  4219  03CF  00A7               	movwf	RegisterSet@value
  4220  03D0  3009               	movlw	9
  4221  03D1  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4222                           
  4223                           ;Main Card V10.0.c: 717: RegisterSet(0x0A,ChannelP[i]);
  4224  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  4225  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  4226  03D8  0833               	movf	FindChannel@i,w
  4227  03D9  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4228  03DA  0084               	movwf	4
  4229  03DB  120A  118A  2616  120A  118A  	fcall	stringdir
  4230  03E0  00AE               	movwf	??_FindChannel
  4231  03E1  082E               	movf	??_FindChannel,w
  4232  03E2  00A7               	movwf	RegisterSet@value
  4233  03E3  300A               	movlw	10
  4234  03E4  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4235                           
  4236                           ;Main Card V10.0.c: 718: RegisterSet(0x0B,ChannelS[i]);
  4237  03E9  1283               	bcf	3,5	;RP0=0, select bank0
  4238  03EA  1303               	bcf	3,6	;RP1=0, select bank0
  4239  03EB  0833               	movf	FindChannel@i,w
  4240  03EC  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4241  03ED  0084               	movwf	4
  4242  03EE  120A  118A  2616  120A  118A  	fcall	stringdir
  4243  03F3  00AE               	movwf	??_FindChannel
  4244  03F4  082E               	movf	??_FindChannel,w
  4245  03F5  00A7               	movwf	RegisterSet@value
  4246  03F6  300B               	movlw	11
  4247  03F7  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4248                           
  4249                           ;Main Card V10.0.c: 719: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4250  03FC  300E               	movlw	14
  4251  03FD  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  4252  0402  3802               	iorlw	2
  4253  0403  1283               	bcf	3,5	;RP0=0, select bank0
  4254  0404  1303               	bcf	3,6	;RP1=0, select bank0
  4255  0405  00AE               	movwf	??_FindChannel
  4256  0406  082E               	movf	??_FindChannel,w
  4257  0407  00A7               	movwf	RegisterSet@value
  4258  0408  300E               	movlw	14
  4259  0409  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4260                           
  4261                           ;Main Card V10.0.c: 720: SetRFMode(0x40);
  4262  040E  3040               	movlw	64
  4263  040F  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  4264                           
  4265                           ;Main Card V10.0.c: 721: cnt = 0;
  4266  0414  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0415  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0416  01B1               	clrf	FindChannel@cnt
  4269  0417  01B2               	clrf	FindChannel@cnt+1
  4270  0418                     l1842:	
  4271                           ;Main Card V10.0.c: 722: while(cnt < 5)
  4272                           
  4273  0418  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0419  1303               	bcf	3,6	;RP1=0, select bank0
  4275  041A  0832               	movf	FindChannel@cnt+1,w
  4276  041B  3A80               	xorlw	128
  4277  041C  00FF               	movwf	127
  4278  041D  3080               	movlw	128
  4279  041E  027F               	subwf	127,w
  4280  041F  1D03               	skipz
  4281  0420  2C23               	goto	u1225
  4282  0421  3005               	movlw	5
  4283  0422  0231               	subwf	FindChannel@cnt,w
  4284  0423                     u1225:	
  4285  0423  1803               	btfsc	3,0
  4286  0424  2C51               	goto	l1844
  4287                           
  4288                           ;Main Card V10.0.c: 723: {
  4289                           ;Main Card V10.0.c: 725: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4290  0425  300E               	movlw	14
  4291  0426  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  4292  042B  3902               	andlw	2
  4293  042C  1903               	btfsc	3,2
  4294  042D  2C40               	goto	l1840
  4295                           
  4296                           ;Main Card V10.0.c: 726: {
  4297                           ;Main Card V10.0.c: 727: bChannelFound = 1;
  4298  042E  1683               	bsf	3,5	;RP0=1, select bank1
  4299  042F  1303               	bcf	3,6	;RP1=0, select bank1
  4300  0430  01B9               	clrf	_bChannelFound^(0+128)
  4301  0431  0AB9               	incf	_bChannelFound^(0+128),f
  4302                           
  4303                           ;Main Card V10.0.c: 728: channelFound = i;
  4304  0432  1283               	bcf	3,5	;RP0=0, select bank0
  4305  0433  1303               	bcf	3,6	;RP1=0, select bank0
  4306  0434  0834               	movf	FindChannel@i+1,w
  4307  0435  1683               	bsf	3,5	;RP0=1, select bank1
  4308  0436  1303               	bcf	3,6	;RP1=0, select bank1
  4309  0437  00B0               	movwf	(_channelFound+1)^(0+128)
  4310  0438  1283               	bcf	3,5	;RP0=0, select bank0
  4311  0439  1303               	bcf	3,6	;RP1=0, select bank0
  4312  043A  0833               	movf	FindChannel@i,w
  4313  043B  1683               	bsf	3,5	;RP0=1, select bank1
  4314  043C  1303               	bcf	3,6	;RP1=0, select bank1
  4315  043D  00AF               	movwf	_channelFound^(0+128)
  4316                           
  4317                           ;Main Card V10.0.c: 729: return 1;
  4318  043E  3001               	movlw	1
  4319  043F  0008               	return
  4320  0440                     l1840:	
  4321                           
  4322                           ;Main Card V10.0.c: 730: }
  4323                           ;Main Card V10.0.c: 731: cnt++;
  4324  0440  3001               	movlw	1
  4325  0441  1283               	bcf	3,5	;RP0=0, select bank0
  4326  0442  1303               	bcf	3,6	;RP1=0, select bank0
  4327  0443  07B1               	addwf	FindChannel@cnt,f
  4328  0444  1803               	skipnc
  4329  0445  0AB2               	incf	FindChannel@cnt+1,f
  4330  0446  3000               	movlw	0
  4331  0447  07B2               	addwf	FindChannel@cnt+1,f
  4332                           
  4333                           ;Main Card V10.0.c: 732: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4334  0448  30C7               	movlw	199
  4335  0449  1283               	bcf	3,5	;RP0=0, select bank0
  4336  044A  1303               	bcf	3,6	;RP1=0, select bank0
  4337  044B  00AE               	movwf	??_FindChannel
  4338  044C                     u2447:	
  4339  044C  2C4D               	nop2
  4340  044D  0BAE               	decfsz	??_FindChannel,f
  4341  044E  2C4C               	goto	u2447
  4342  044F  2C50               	nop2
  4343  0450  2C18               	goto	l1842
  4344  0451                     l1844:	
  4345  0451  3001               	movlw	1
  4346  0452  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0453  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0454  07B3               	addwf	FindChannel@i,f
  4349  0455  1803               	skipnc
  4350  0456  0AB4               	incf	FindChannel@i+1,f
  4351  0457  3000               	movlw	0
  4352  0458  07B4               	addwf	FindChannel@i+1,f
  4353  0459  0834               	movf	FindChannel@i+1,w
  4354  045A  3A80               	xorlw	128
  4355  045B  00FF               	movwf	127
  4356  045C  3080               	movlw	128
  4357  045D  027F               	subwf	127,w
  4358  045E  1D03               	skipz
  4359  045F  2C62               	goto	u1235
  4360  0460  300D               	movlw	13
  4361  0461  0233               	subwf	FindChannel@i,w
  4362  0462                     u1235:	
  4363  0462  1C03               	skipc
  4364  0463  2B8A               	goto	l1824
  4365  0464                     l1848:	
  4366                           
  4367                           ;Main Card V10.0.c: 733: }
  4368                           ;Main Card V10.0.c: 736: }
  4369                           ;Main Card V10.0.c: 737: return 0;
  4370  0464  3000               	movlw	0
  4371  0465  0008               	return
  4372  0466                     __end_of_FindChannel:	
  4373                           
  4374                           	psect	text22
  4375  0F91                     __ptext22:	
  4376 ;; *************** function _SetRFMode *****************
  4377 ;; Defined at:
  4378 ;;		line 759 in file "../Main Card V10.0.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;  mode            1    wreg     unsigned char 
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;  mode            1   12[BANK0 ] unsigned char 
  4383 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4384 ;; Return value:  Size  Location     Type
  4385 ;;                  1    wreg      void 
  4386 ;; Registers used:
  4387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4388 ;; Tracked objects:
  4389 ;;		On entry : 0/0
  4390 ;;		On exit  : 0/0
  4391 ;;		Unchanged: 0/0
  4392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4393 ;;      Params:         0       0       0       0       0
  4394 ;;      Locals:         0       2       0       0       0
  4395 ;;      Temps:          0       1       0       0       0
  4396 ;;      Totals:         0       3       0       0       0
  4397 ;;Total ram usage:        3 bytes
  4398 ;; Hardware stack levels used:    1
  4399 ;; Hardware stack levels required when called:    5
  4400 ;; This function calls:
  4401 ;;		_RegisterRead
  4402 ;;		_RegisterSet
  4403 ;; This function is called by:
  4404 ;;		_TransiverToReceive
  4405 ;;		_TransiverReadFIFO
  4406 ;;		_TransmittString
  4407 ;;		_TransiverInit
  4408 ;;		_FindChannel
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412                           
  4413                           ;psect for function _SetRFMode
  4414  0F91                     _SetRFMode:	
  4415                           
  4416                           ;incstack = 0
  4417                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4418                           ;SetRFMode@mode stored from wreg
  4419  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0F93  00AC               	movwf	SetRFMode@mode
  4422                           
  4423                           ;Main Card V10.0.c: 761: PORTAbits.RA4 = 0;
  4424  0F94  1205               	bcf	5,4	;volatile
  4425                           
  4426                           ;Main Card V10.0.c: 762: BYTE mcparam0_read;
  4427                           ;Main Card V10.0.c: 763: mcparam0_read = RegisterRead(0);
  4428  0F95  3000               	movlw	0
  4429  0F96  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  4430  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4431  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4432  0F9D  00AB               	movwf	??_SetRFMode
  4433  0F9E  082B               	movf	??_SetRFMode,w
  4434  0F9F  00AD               	movwf	SetRFMode@mcparam0_read
  4435                           
  4436                           ;Main Card V10.0.c: 764: switch (mode) {
  4437  0FA0  2FE9               	goto	l1804
  4438  0FA1                     l1792:	
  4439                           ;Main Card V10.0.c: 765: case 0x80:
  4440                           
  4441                           
  4442                           ;Main Card V10.0.c: 766: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4443  0FA1  082D               	movf	SetRFMode@mcparam0_read,w
  4444  0FA2  391F               	andlw	31
  4445  0FA3  3880               	iorlw	128
  4446  0FA4  00AB               	movwf	??_SetRFMode
  4447  0FA5  082B               	movf	??_SetRFMode,w
  4448  0FA6  00A7               	movwf	RegisterSet@value
  4449  0FA7  3000               	movlw	0
  4450  0FA8  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4451                           
  4452                           ;Main Card V10.0.c: 768: break;
  4453  0FAD  2FFC               	goto	l338
  4454  0FAE                     l1794:	
  4455                           ;Main Card V10.0.c: 769: case 0x60:
  4456                           
  4457                           
  4458                           ;Main Card V10.0.c: 770: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4459  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4460  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4461  0FB0  082D               	movf	SetRFMode@mcparam0_read,w
  4462  0FB1  391F               	andlw	31
  4463  0FB2  3860               	iorlw	96
  4464  0FB3  00AB               	movwf	??_SetRFMode
  4465  0FB4  082B               	movf	??_SetRFMode,w
  4466  0FB5  00A7               	movwf	RegisterSet@value
  4467  0FB6  3000               	movlw	0
  4468  0FB7  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4469                           
  4470                           ;Main Card V10.0.c: 772: break;
  4471  0FBC  2FFC               	goto	l338
  4472  0FBD                     l1796:	
  4473                           ;Main Card V10.0.c: 773: case 0x40:
  4474                           
  4475                           
  4476                           ;Main Card V10.0.c: 774: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4477  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4478  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4479  0FBF  082D               	movf	SetRFMode@mcparam0_read,w
  4480  0FC0  391F               	andlw	31
  4481  0FC1  3840               	iorlw	64
  4482  0FC2  00AB               	movwf	??_SetRFMode
  4483  0FC3  082B               	movf	??_SetRFMode,w
  4484  0FC4  00A7               	movwf	RegisterSet@value
  4485  0FC5  3000               	movlw	0
  4486  0FC6  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4487                           
  4488                           ;Main Card V10.0.c: 776: break;
  4489  0FCB  2FFC               	goto	l338
  4490  0FCC                     l1798:	
  4491                           ;Main Card V10.0.c: 777: case 0x20:
  4492                           
  4493                           
  4494                           ;Main Card V10.0.c: 778: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4495  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  4496  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  4497  0FCE  082D               	movf	SetRFMode@mcparam0_read,w
  4498  0FCF  391F               	andlw	31
  4499  0FD0  3820               	iorlw	32
  4500  0FD1  00AB               	movwf	??_SetRFMode
  4501  0FD2  082B               	movf	??_SetRFMode,w
  4502  0FD3  00A7               	movwf	RegisterSet@value
  4503  0FD4  3000               	movlw	0
  4504  0FD5  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4505                           
  4506                           ;Main Card V10.0.c: 780: break;
  4507  0FDA  2FFC               	goto	l338
  4508  0FDB                     l1800:	
  4509                           ;Main Card V10.0.c: 781: case 0x00:
  4510                           
  4511                           
  4512                           ;Main Card V10.0.c: 782: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4513  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4514  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4515  0FDD  082D               	movf	SetRFMode@mcparam0_read,w
  4516  0FDE  391F               	andlw	31
  4517  0FDF  00AB               	movwf	??_SetRFMode
  4518  0FE0  082B               	movf	??_SetRFMode,w
  4519  0FE1  00A7               	movwf	RegisterSet@value
  4520  0FE2  3000               	movlw	0
  4521  0FE3  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4522                           
  4523                           ;Main Card V10.0.c: 785: }
  4524                           
  4525                           ;Main Card V10.0.c: 784: break;
  4526  0FE8  2FFC               	goto	l338
  4527  0FE9                     l1804:	
  4528  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0FEB  082C               	movf	SetRFMode@mode,w
  4531                           
  4532                           ; Switch size 1, requested type "space"
  4533                           ; Number of cases is 5, Range of values is 0 to 128
  4534                           ; switch strategies available:
  4535                           ; Name         Instructions Cycles
  4536                           ; simple_byte           16     9 (average)
  4537                           ; jumptable            260     6 (fixed)
  4538                           ;	Chosen strategy is simple_byte
  4539  0FEC  3A00               	xorlw	0	; case 0
  4540  0FED  1903               	skipnz
  4541  0FEE  2FDB               	goto	l1800
  4542  0FEF  3A20               	xorlw	32	; case 32
  4543  0FF0  1903               	skipnz
  4544  0FF1  2FCC               	goto	l1798
  4545  0FF2  3A60               	xorlw	96	; case 64
  4546  0FF3  1903               	skipnz
  4547  0FF4  2FBD               	goto	l1796
  4548  0FF5  3A20               	xorlw	32	; case 96
  4549  0FF6  1903               	skipnz
  4550  0FF7  2FAE               	goto	l1794
  4551  0FF8  3AE0               	xorlw	224	; case 128
  4552  0FF9  1903               	skipnz
  4553  0FFA  2FA1               	goto	l1792
  4554  0FFB  2FFC               	goto	l338
  4555  0FFC                     l338:	
  4556                           
  4557                           ;Main Card V10.0.c: 786: PORTAbits.RA4 = 1;
  4558  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0FFE  1605               	bsf	5,4	;volatile
  4561  0FFF  0008               	return
  4562  1000                     __end_of_SetRFMode:	
  4563                           
  4564                           	psect	text23
  4565  0BDF                     __ptext23:	
  4566 ;; *************** function _RegisterSet *****************
  4567 ;; Defined at:
  4568 ;;		line 868 in file "../Main Card V10.0.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  adress          1    wreg     unsigned char 
  4571 ;;  value           1    7[BANK0 ] unsigned char 
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;  adress          1   10[BANK0 ] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         0       1       0       0       0
  4584 ;;      Locals:         0       1       0       0       0
  4585 ;;      Temps:          0       2       0       0       0
  4586 ;;      Totals:         0       4       0       0       0
  4587 ;;Total ram usage:        4 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    3
  4590 ;; This function calls:
  4591 ;;		_WriteSPI
  4592 ;; This function is called by:
  4593 ;;		_TransiverToReceive
  4594 ;;		_TransmittString
  4595 ;;		_TransiverInit
  4596 ;;		_FindChannel
  4597 ;;		_SetRFMode
  4598 ;; This function uses a non-reentrant model
  4599 ;;
  4600                           
  4601                           
  4602                           ;psect for function _RegisterSet
  4603  0BDF                     _RegisterSet:	
  4604                           
  4605                           ;incstack = 0
  4606                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4607                           ;RegisterSet@adress stored from wreg
  4608  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  4609  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  4610  0BE1  00AA               	movwf	RegisterSet@adress
  4611                           
  4612                           ;Main Card V10.0.c: 870: PORTAbits.RA4 = 0;
  4613  0BE2  1205               	bcf	5,4	;volatile
  4614                           
  4615                           ;Main Card V10.0.c: 871: adress = (adress<<1);
  4616  0BE3  082A               	movf	RegisterSet@adress,w
  4617  0BE4  00A8               	movwf	??_RegisterSet
  4618  0BE5  0728               	addwf	??_RegisterSet,w
  4619  0BE6  00A9               	movwf	??_RegisterSet+1
  4620  0BE7  0829               	movf	??_RegisterSet+1,w
  4621  0BE8  00AA               	movwf	RegisterSet@adress
  4622                           
  4623                           ;Main Card V10.0.c: 872: WriteSPI(adress);
  4624  0BE9  082A               	movf	RegisterSet@adress,w
  4625  0BEA  120A  158A  2359  120A  158A  	fcall	_WriteSPI
  4626                           
  4627                           ;Main Card V10.0.c: 873: WriteSPI(value);
  4628  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4629  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4630  0BF1  0827               	movf	RegisterSet@value,w
  4631  0BF2  120A  158A  2359   	fcall	_WriteSPI
  4632                           
  4633                           ;Main Card V10.0.c: 874: PORTAbits.RA4 = 1;
  4634  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  4635  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  4636  0BF7  1605               	bsf	5,4	;volatile
  4637  0BF8  0008               	return
  4638  0BF9                     __end_of_RegisterSet:	
  4639                           
  4640                           	psect	text24
  4641  0C2D                     __ptext24:	
  4642 ;; *************** function _RegisterRead *****************
  4643 ;; Defined at:
  4644 ;;		line 838 in file "../Main Card V10.0.c"
  4645 ;; Parameters:    Size  Location     Type
  4646 ;;  adress          1    wreg     unsigned char 
  4647 ;; Auto vars:     Size  Location     Type
  4648 ;;  adress          1    6[BANK0 ] unsigned char 
  4649 ;;  value           1    5[BANK0 ] unsigned char 
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  1    wreg      unsigned char 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0, pclath, cstack
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4659 ;;      Params:         0       0       0       0       0
  4660 ;;      Locals:         0       2       0       0       0
  4661 ;;      Temps:          0       2       0       0       0
  4662 ;;      Totals:         0       4       0       0       0
  4663 ;;Total ram usage:        4 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; Hardware stack levels required when called:    4
  4666 ;; This function calls:
  4667 ;;		_ReadSPI
  4668 ;;		_WriteSPI
  4669 ;; This function is called by:
  4670 ;;		_TransiverToReceive
  4671 ;;		_TransmittString
  4672 ;;		_TransiverInit
  4673 ;;		_FindChannel
  4674 ;;		_SetRFMode
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           
  4679                           ;psect for function _RegisterRead
  4680  0C2D                     _RegisterRead:	
  4681                           
  4682                           ;incstack = 0
  4683                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4684                           ;RegisterRead@adress stored from wreg
  4685  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  4686  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  4687  0C2F  00A6               	movwf	RegisterRead@adress
  4688                           
  4689                           ;Main Card V10.0.c: 840: BYTE value;
  4690                           ;Main Card V10.0.c: 841: PORTAbits.RA4 = 0;
  4691  0C30  1205               	bcf	5,4	;volatile
  4692                           
  4693                           ;Main Card V10.0.c: 842: adress = ((adress<<1)|0x40);
  4694  0C31  0826               	movf	RegisterRead@adress,w
  4695  0C32  00A3               	movwf	??_RegisterRead
  4696  0C33  0723               	addwf	??_RegisterRead,w
  4697  0C34  3840               	iorlw	64
  4698  0C35  00A4               	movwf	??_RegisterRead+1
  4699  0C36  0824               	movf	??_RegisterRead+1,w
  4700  0C37  00A6               	movwf	RegisterRead@adress
  4701                           
  4702                           ;Main Card V10.0.c: 843: WriteSPI(adress);
  4703  0C38  0826               	movf	RegisterRead@adress,w
  4704  0C39  120A  158A  2359  120A  158A  	fcall	_WriteSPI
  4705                           
  4706                           ;Main Card V10.0.c: 844: value = ReadSPI();
  4707  0C3E  120A  158A  231E   	fcall	_ReadSPI
  4708  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  4709  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  4710  0C43  00A3               	movwf	??_RegisterRead
  4711  0C44  0823               	movf	??_RegisterRead,w
  4712  0C45  00A5               	movwf	RegisterRead@value
  4713                           
  4714                           ;Main Card V10.0.c: 845: PORTAbits.RA4 = 1;
  4715  0C46  1605               	bsf	5,4	;volatile
  4716                           
  4717                           ;Main Card V10.0.c: 846: return value;
  4718  0C47  0825               	movf	RegisterRead@value,w
  4719  0C48  0008               	return
  4720  0C49                     __end_of_RegisterRead:	
  4721                           
  4722                           	psect	text25
  4723  0B1E                     __ptext25:	
  4724 ;; *************** function _ReadSPI *****************
  4725 ;; Defined at:
  4726 ;;		line 642 in file "../Main Card V10.0.c"
  4727 ;; Parameters:    Size  Location     Type
  4728 ;;		None
  4729 ;; Auto vars:     Size  Location     Type
  4730 ;;		None
  4731 ;; Return value:  Size  Location     Type
  4732 ;;                  1    wreg      unsigned char 
  4733 ;; Registers used:
  4734 ;;		wreg, status,2, status,0, pclath, cstack
  4735 ;; Tracked objects:
  4736 ;;		On entry : 0/0
  4737 ;;		On exit  : 0/0
  4738 ;;		Unchanged: 0/0
  4739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4740 ;;      Params:         0       0       0       0       0
  4741 ;;      Locals:         0       0       0       0       0
  4742 ;;      Temps:          0       0       0       0       0
  4743 ;;      Totals:         0       0       0       0       0
  4744 ;;Total ram usage:        0 bytes
  4745 ;; Hardware stack levels used:    1
  4746 ;; Hardware stack levels required when called:    3
  4747 ;; This function calls:
  4748 ;;		_WriteSPI
  4749 ;; This function is called by:
  4750 ;;		_RegisterRead
  4751 ;;		_ReadFIFO
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function _ReadSPI
  4757  0B1E                     _ReadSPI:	
  4758                           
  4759                           ;Main Card V10.0.c: 644: WriteSPI(0x00);
  4760                           
  4761                           ;incstack = 0
  4762                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4763  0B1E  3000               	movlw	0
  4764  0B1F  120A  158A  2359   	fcall	_WriteSPI
  4765                           
  4766                           ;Main Card V10.0.c: 645: return SSPBUF;
  4767  0B22  1283               	bcf	3,5	;RP0=0, select bank0
  4768  0B23  1303               	bcf	3,6	;RP1=0, select bank0
  4769  0B24  0813               	movf	19,w	;volatile
  4770  0B25  0008               	return
  4771  0B26                     __end_of_ReadSPI:	
  4772                           
  4773                           	psect	text26
  4774  0B59                     __ptext26:	
  4775 ;; *************** function _WriteSPI *****************
  4776 ;; Defined at:
  4777 ;;		line 630 in file "../Main Card V10.0.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;  databyte        1    wreg     unsigned char 
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  databyte        1    2[BANK0 ] unsigned char 
  4782 ;;  buffer          1    1[BANK0 ] unsigned char 
  4783 ;; Return value:  Size  Location     Type
  4784 ;;                  1    wreg      void 
  4785 ;; Registers used:
  4786 ;;		wreg
  4787 ;; Tracked objects:
  4788 ;;		On entry : 0/0
  4789 ;;		On exit  : 0/0
  4790 ;;		Unchanged: 0/0
  4791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4792 ;;      Params:         0       0       0       0       0
  4793 ;;      Locals:         0       2       0       0       0
  4794 ;;      Temps:          0       1       0       0       0
  4795 ;;      Totals:         0       3       0       0       0
  4796 ;;Total ram usage:        3 bytes
  4797 ;; Hardware stack levels used:    1
  4798 ;; Hardware stack levels required when called:    2
  4799 ;; This function calls:
  4800 ;;		Nothing
  4801 ;; This function is called by:
  4802 ;;		_ReadSPI
  4803 ;;		_RegisterRead
  4804 ;;		_RegisterSet
  4805 ;;		_WriteFIFO
  4806 ;; This function uses a non-reentrant model
  4807 ;;
  4808                           
  4809                           
  4810                           ;psect for function _WriteSPI
  4811  0B59                     _WriteSPI:	
  4812                           
  4813                           ;incstack = 0
  4814                           ; Regs used in _WriteSPI: [wreg]
  4815                           ;WriteSPI@databyte stored from wreg
  4816  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  4817  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  4818  0B5B  00A2               	movwf	WriteSPI@databyte
  4819                           
  4820                           ;Main Card V10.0.c: 632: unsigned char buffer;
  4821                           ;Main Card V10.0.c: 633: buffer = SSPBUF;
  4822  0B5C  0813               	movf	19,w	;volatile
  4823  0B5D  00A0               	movwf	??_WriteSPI
  4824  0B5E  0820               	movf	??_WriteSPI,w
  4825  0B5F  00A1               	movwf	WriteSPI@buffer
  4826                           
  4827                           ;Main Card V10.0.c: 634: PIR1bits.SSPIF=0;
  4828  0B60  118C               	bcf	12,3	;volatile
  4829                           
  4830                           ;Main Card V10.0.c: 635: SSPBUF = databyte;
  4831  0B61  0822               	movf	WriteSPI@databyte,w
  4832  0B62  0093               	movwf	19	;volatile
  4833  0B63                     l311:	
  4834                           ;Main Card V10.0.c: 636: while(PIR1bits.SSPIF == 0);
  4835                           
  4836  0B63  1D8C               	btfss	12,3	;volatile
  4837  0B64  2B63               	goto	l311
  4838                           
  4839                           ;Main Card V10.0.c: 637: PIR1bits.SSPIF = 0;
  4840  0B65  118C               	bcf	12,3	;volatile
  4841  0B66  0008               	return
  4842  0B67                     __end_of_WriteSPI:	
  4843                           
  4844                           	psect	text27
  4845  0BAC                     __ptext27:	
  4846 ;; *************** function _Mode_3 *****************
  4847 ;; Defined at:
  4848 ;;		line 428 in file "../Main Card V10.0.c"
  4849 ;; Parameters:    Size  Location     Type
  4850 ;;		None
  4851 ;; Auto vars:     Size  Location     Type
  4852 ;;		None
  4853 ;; Return value:  Size  Location     Type
  4854 ;;                  1    wreg      void 
  4855 ;; Registers used:
  4856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4857 ;; Tracked objects:
  4858 ;;		On entry : 0/0
  4859 ;;		On exit  : 0/0
  4860 ;;		Unchanged: 0/0
  4861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4862 ;;      Params:         0       0       0       0       0
  4863 ;;      Locals:         0       0       0       0       0
  4864 ;;      Temps:          0       0       0       0       0
  4865 ;;      Totals:         0       0       0       0       0
  4866 ;;Total ram usage:        0 bytes
  4867 ;; Hardware stack levels used:    1
  4868 ;; Hardware stack levels required when called:    6
  4869 ;; This function calls:
  4870 ;;		_LightWithSensController
  4871 ;; This function is called by:
  4872 ;;		_main
  4873 ;; This function uses a non-reentrant model
  4874 ;;
  4875                           
  4876                           
  4877                           ;psect for function _Mode_3
  4878  0BAC                     _Mode_3:	
  4879                           
  4880                           ;Main Card V10.0.c: 430: LightWithSensController();
  4881                           
  4882                           ;incstack = 0
  4883                           ; Regs used in _Mode_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4884  0BAC  120A  158A  262D  120A  158A  	fcall	_LightWithSensController
  4885                           
  4886                           ;Main Card V10.0.c: 431: if(bDark && PORTAbits.RA1 && intBlinkCycle == 0)
  4887  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4888  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4889  0BB3  086C               	movf	_bDark,w
  4890  0BB4  1903               	btfsc	3,2
  4891  0BB5  0008               	return
  4892  0BB6  1C85               	btfss	5,1	;volatile
  4893  0BB7  0008               	return
  4894  0BB8  0868               	movf	_intBlinkCycle,w
  4895  0BB9  0469               	iorwf	_intBlinkCycle+1,w
  4896  0BBA  1D03               	btfss	3,2
  4897  0BBB  0008               	return
  4898                           
  4899                           ;Main Card V10.0.c: 432: {
  4900                           ;Main Card V10.0.c: 433: intBlinkCycle = 1;
  4901  0BBC  3001               	movlw	1
  4902  0BBD  00E8               	movwf	_intBlinkCycle
  4903  0BBE  3000               	movlw	0
  4904  0BBF  00E9               	movwf	_intBlinkCycle+1
  4905                           
  4906                           ;Main Card V10.0.c: 434: intBlinkCounter = 0;
  4907  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  4908  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  4909  0BC2  01B1               	clrf	_intBlinkCounter^(0+128)
  4910  0BC3  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  4911  0BC4  0008               	return
  4912  0BC5                     __end_of_Mode_3:	
  4913                           
  4914                           	psect	text28
  4915  0B4C                     __ptext28:	
  4916 ;; *************** function _Mode_2 *****************
  4917 ;; Defined at:
  4918 ;;		line 417 in file "../Main Card V10.0.c"
  4919 ;; Parameters:    Size  Location     Type
  4920 ;;		None
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;		None
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      void 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4932 ;;      Params:         0       0       0       0       0
  4933 ;;      Locals:         0       0       0       0       0
  4934 ;;      Temps:          0       0       0       0       0
  4935 ;;      Totals:         0       0       0       0       0
  4936 ;;Total ram usage:        0 bytes
  4937 ;; Hardware stack levels used:    1
  4938 ;; Hardware stack levels required when called:    6
  4939 ;; This function calls:
  4940 ;;		_LightWithSensController
  4941 ;; This function is called by:
  4942 ;;		_main
  4943 ;; This function uses a non-reentrant model
  4944 ;;
  4945                           
  4946                           
  4947                           ;psect for function _Mode_2
  4948  0B4C                     _Mode_2:	
  4949                           
  4950                           ;Main Card V10.0.c: 419: LightWithSensController();
  4951                           
  4952                           ;incstack = 0
  4953                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4954  0B4C  120A  158A  262D  120A  158A  	fcall	_LightWithSensController
  4955                           
  4956                           ;Main Card V10.0.c: 420: if(PORTCbits.RC2)
  4957  0B51  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0B52  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0B53  1D07               	btfss	7,2	;volatile
  4960  0B54  2B57               	goto	l264
  4961                           
  4962                           ;Main Card V10.0.c: 421: PORTCbits.RC1 = 1;
  4963  0B55  1487               	bsf	7,1	;volatile
  4964  0B56  0008               	return
  4965  0B57                     l264:	
  4966                           
  4967                           ;Main Card V10.0.c: 422: else
  4968                           ;Main Card V10.0.c: 423: PORTCbits.RC1 = 0;
  4969  0B57  1087               	bcf	7,1	;volatile
  4970  0B58  0008               	return
  4971  0B59                     __end_of_Mode_2:	
  4972                           
  4973                           	psect	text29
  4974  0BC5                     __ptext29:	
  4975 ;; *************** function _Mode_1 *****************
  4976 ;; Defined at:
  4977 ;;		line 403 in file "../Main Card V10.0.c"
  4978 ;; Parameters:    Size  Location     Type
  4979 ;;		None
  4980 ;; Auto vars:     Size  Location     Type
  4981 ;;		None
  4982 ;; Return value:  Size  Location     Type
  4983 ;;                  1    wreg      void 
  4984 ;; Registers used:
  4985 ;;		wreg, status,2, status,0, pclath, cstack
  4986 ;; Tracked objects:
  4987 ;;		On entry : 0/0
  4988 ;;		On exit  : 0/0
  4989 ;;		Unchanged: 0/0
  4990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4991 ;;      Params:         0       0       0       0       0
  4992 ;;      Locals:         0       0       0       0       0
  4993 ;;      Temps:          0       0       0       0       0
  4994 ;;      Totals:         0       0       0       0       0
  4995 ;;Total ram usage:        0 bytes
  4996 ;; Hardware stack levels used:    1
  4997 ;; Hardware stack levels required when called:    5
  4998 ;; This function calls:
  4999 ;;		_DarknessCheck
  5000 ;; This function is called by:
  5001 ;;		_main
  5002 ;; This function uses a non-reentrant model
  5003 ;;
  5004                           
  5005                           
  5006                           ;psect for function _Mode_1
  5007  0BC5                     _Mode_1:	
  5008                           
  5009                           ;Main Card V10.0.c: 406: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  5010                           
  5011                           ;incstack = 0
  5012                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  5013  0BC5  301E               	movlw	30
  5014  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  5015  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  5016  0BC8  066A               	xorwf	_intSecondCounter,w
  5017  0BC9  046B               	iorwf	_intSecondCounter+1,w
  5018  0BCA  1903               	btfsc	3,2
  5019  0BCB  1907               	btfsc	7,2	;volatile
  5020  0BCC  2BD2               	goto	l2350
  5021                           
  5022                           ;Main Card V10.0.c: 407: DarknessCheck();
  5023  0BCD  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  5024  0BD2                     l2350:	
  5025                           
  5026                           ;Main Card V10.0.c: 408: if((intBlinkCycle == 1)&&(bDark == 1))
  5027  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0BD4  0368               	decf	_intBlinkCycle,w
  5030  0BD5  0469               	iorwf	_intBlinkCycle+1,w
  5031  0BD6  1D03               	btfss	3,2
  5032  0BD7  2BDD               	goto	l259
  5033  0BD8  036C               	decf	_bDark,w
  5034  0BD9  1D03               	btfss	3,2
  5035  0BDA  2BDD               	goto	l259
  5036                           
  5037                           ;Main Card V10.0.c: 409: PORTCbits.RC2 = 1;
  5038  0BDB  1507               	bsf	7,2	;volatile
  5039  0BDC  0008               	return
  5040  0BDD                     l259:	
  5041                           
  5042                           ;Main Card V10.0.c: 410: else
  5043                           ;Main Card V10.0.c: 411: PORTCbits.RC2 = 0;
  5044  0BDD  1107               	bcf	7,2	;volatile
  5045  0BDE  0008               	return
  5046  0BDF                     __end_of_Mode_1:	
  5047                           
  5048                           	psect	text30
  5049  0B16                     __ptext30:	
  5050 ;; *************** function _Mode_0 *****************
  5051 ;; Defined at:
  5052 ;;		line 395 in file "../Main Card V10.0.c"
  5053 ;; Parameters:    Size  Location     Type
  5054 ;;		None
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;		None
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5066 ;;      Params:         0       0       0       0       0
  5067 ;;      Locals:         0       0       0       0       0
  5068 ;;      Temps:          0       0       0       0       0
  5069 ;;      Totals:         0       0       0       0       0
  5070 ;;Total ram usage:        0 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    6
  5073 ;; This function calls:
  5074 ;;		_LightWithSensController
  5075 ;; This function is called by:
  5076 ;;		_main
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           
  5080                           
  5081                           ;psect for function _Mode_0
  5082  0B16                     _Mode_0:	
  5083                           
  5084                           ;Main Card V10.0.c: 397: LightWithSensController();
  5085                           
  5086                           ;incstack = 0
  5087                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5088  0B16  120A  158A  262D   	fcall	_LightWithSensController
  5089  0B19  0008               	return
  5090  0B1A                     __end_of_Mode_0:	
  5091                           
  5092                           	psect	text31
  5093  0E2D                     __ptext31:	
  5094 ;; *************** function _LightWithSensController *****************
  5095 ;; Defined at:
  5096 ;;		line 472 in file "../Main Card V10.0.c"
  5097 ;; Parameters:    Size  Location     Type
  5098 ;;		None
  5099 ;; Auto vars:     Size  Location     Type
  5100 ;;		None
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5110 ;;      Params:         0       0       0       0       0
  5111 ;;      Locals:         0       0       0       0       0
  5112 ;;      Temps:          0       0       0       0       0
  5113 ;;      Totals:         0       0       0       0       0
  5114 ;;Total ram usage:        0 bytes
  5115 ;; Hardware stack levels used:    1
  5116 ;; Hardware stack levels required when called:    5
  5117 ;; This function calls:
  5118 ;;		_DarknessCheck
  5119 ;;		_timerFunction
  5120 ;; This function is called by:
  5121 ;;		_Mode_0
  5122 ;;		_Mode_2
  5123 ;;		_Mode_3
  5124 ;;		_Mode_4
  5125 ;;		_Mode_5
  5126 ;; This function uses a non-reentrant model
  5127 ;;
  5128                           
  5129                           
  5130                           ;psect for function _LightWithSensController
  5131  0E2D                     _LightWithSensController:	
  5132                           
  5133                           ;Main Card V10.0.c: 476: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  5134                           
  5135                           ;incstack = 0
  5136                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5137  0E2D  301E               	movlw	30
  5138  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5139  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5140  0E30  066A               	xorwf	_intSecondCounter,w
  5141  0E31  046B               	iorwf	_intSecondCounter+1,w
  5142  0E32  1903               	btfsc	3,2
  5143  0E33  1907               	btfsc	7,2	;volatile
  5144  0E34  2E3A               	goto	l2218
  5145                           
  5146                           ;Main Card V10.0.c: 477: DarknessCheck();
  5147  0E35  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  5148  0E3A                     l2218:	
  5149                           
  5150                           ;Main Card V10.0.c: 481: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  5151  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  5152  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  5153  0E3C  036C               	decf	_bDark,w
  5154  0E3D  1903               	btfsc	3,2
  5155  0E3E  1C85               	btfss	5,1	;volatile
  5156  0E3F  2E57               	goto	l2228
  5157  0E40  1907               	btfsc	7,2	;volatile
  5158  0E41  2E57               	goto	l2228
  5159                           
  5160                           ;Main Card V10.0.c: 482: {
  5161                           ;Main Card V10.0.c: 484: PORTCbits.RC2 = 1;
  5162  0E42  1507               	bsf	7,2	;volatile
  5163                           
  5164                           ;Main Card V10.0.c: 486: timerFunction(0,intLightOnTime);
  5165  0E43  3000               	movlw	0
  5166  0E44  00A0               	movwf	timerFunction@intTimerNumber
  5167  0E45  00A1               	movwf	timerFunction@intTimerNumber+1
  5168  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  5169  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  5170  0E48  0859               	movf	(_intLightOnTime+1)^(0+128),w
  5171  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  5172  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  5173  0E4B  00A3               	movwf	timerFunction@intSetSeconds+1
  5174  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  5175  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  5176  0E4E  0858               	movf	_intLightOnTime^(0+128),w
  5177  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  5178  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  5179  0E51  00A2               	movwf	timerFunction@intSetSeconds
  5180  0E52  120A  158A  2385  120A  158A  	fcall	_timerFunction
  5181  0E57                     l2228:	
  5182                           
  5183                           ;Main Card V10.0.c: 487: }
  5184                           ;Main Card V10.0.c: 490: if(bTimerComplete[0])
  5185  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  5186  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  5187  0E59  082A               	movf	_bTimerComplete^(0+128),w
  5188  0E5A  1903               	btfsc	3,2
  5189  0E5B  0008               	return
  5190                           
  5191                           ;Main Card V10.0.c: 491: {
  5192                           ;Main Card V10.0.c: 492: DarknessCheck();
  5193  0E5C  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  5194                           
  5195                           ;Main Card V10.0.c: 493: if((bDark)&&(PORTAbits.RA1))
  5196  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5197  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5198  0E63  086C               	movf	_bDark,w
  5199  0E64  1D03               	btfss	3,2
  5200  0E65  1C85               	btfss	5,1	;volatile
  5201  0E66  2E7A               	goto	l284
  5202                           
  5203                           ;Main Card V10.0.c: 494: {
  5204                           ;Main Card V10.0.c: 495: timerFunction(0,intLightOnTime);
  5205  0E67  3000               	movlw	0
  5206  0E68  00A0               	movwf	timerFunction@intTimerNumber
  5207  0E69  00A1               	movwf	timerFunction@intTimerNumber+1
  5208  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  5209  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  5210  0E6C  0859               	movf	(_intLightOnTime+1)^(0+128),w
  5211  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  5212  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  5213  0E6F  00A3               	movwf	timerFunction@intSetSeconds+1
  5214  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  5215  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  5216  0E72  0858               	movf	_intLightOnTime^(0+128),w
  5217  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  5218  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  5219  0E75  00A2               	movwf	timerFunction@intSetSeconds
  5220  0E76  120A  158A  2385   	fcall	_timerFunction
  5221                           
  5222                           ;Main Card V10.0.c: 496: }
  5223  0E79  0008               	return
  5224  0E7A                     l284:	
  5225                           
  5226                           ;Main Card V10.0.c: 497: else
  5227                           ;Main Card V10.0.c: 498: PORTCbits.RC2 = 0;
  5228  0E7A  1107               	bcf	7,2	;volatile
  5229  0E7B  0008               	return
  5230  0E7C                     __end_of_LightWithSensController:	
  5231                           
  5232                           	psect	text32
  5233  0B85                     __ptext32:	
  5234 ;; *************** function _timerFunction *****************
  5235 ;; Defined at:
  5236 ;;		line 523 in file "../Main Card V10.0.c"
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  intTimerNumb    2    0[BANK0 ] int 
  5239 ;;  intSetSecond    2    2[BANK0 ] int 
  5240 ;; Auto vars:     Size  Location     Type
  5241 ;;		None
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  1    wreg      unsigned char 
  5244 ;; Registers used:
  5245 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       4       0       0       0
  5252 ;;      Locals:         0       0       0       0       0
  5253 ;;      Temps:          0       1       0       0       0
  5254 ;;      Totals:         0       5       0       0       0
  5255 ;;Total ram usage:        5 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    2
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_TransiverToReceive
  5262 ;;		_TransiverReadFIFO
  5263 ;;		_TransmittString
  5264 ;;		_LightWithSensController
  5265 ;; This function uses a non-reentrant model
  5266 ;;
  5267                           
  5268                           
  5269                           ;psect for function _timerFunction
  5270  0B85                     _timerFunction:	
  5271                           
  5272                           ;Main Card V10.0.c: 525: intClockTimer[intTimerNumber] = intSetSeconds;
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5276  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  5277  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  5278  0B87  0820               	movf	timerFunction@intTimerNumber,w
  5279  0B88  00A4               	movwf	??_timerFunction
  5280  0B89  0724               	addwf	??_timerFunction,w
  5281  0B8A  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5282  0B8B  0084               	movwf	4
  5283  0B8C  0822               	movf	timerFunction@intSetSeconds,w
  5284  0B8D  1383               	bcf	3,7	;select IRP bank1
  5285  0B8E  0080               	movwf	0
  5286  0B8F  0A84               	incf	4,f
  5287  0B90  0823               	movf	timerFunction@intSetSeconds+1,w
  5288  0B91  0080               	movwf	0
  5289                           
  5290                           ;Main Card V10.0.c: 526: bTimerComplete[intTimerNumber] = 0;
  5291  0B92  0820               	movf	timerFunction@intTimerNumber,w
  5292  0B93  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5293  0B94  0084               	movwf	4
  5294  0B95  0180               	clrf	0
  5295  0B96  0008               	return
  5296  0B97                     __end_of_timerFunction:	
  5297                           ;Main Card V10.0.c: 527: return 1;
  5298                           ;	Return value of _timerFunction is never used
  5299                           
  5300                           
  5301                           	psect	text33
  5302  0CDC                     __ptext33:	
  5303 ;; *************** function _DarknessCheck *****************
  5304 ;; Defined at:
  5305 ;;		line 1051 in file "../Main Card V10.0.c"
  5306 ;; Parameters:    Size  Location     Type
  5307 ;;		None
  5308 ;; Auto vars:     Size  Location     Type
  5309 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5310 ;; Return value:  Size  Location     Type
  5311 ;;                  1    wreg      void 
  5312 ;; Registers used:
  5313 ;;		wreg, status,2, status,0, pclath, cstack
  5314 ;; Tracked objects:
  5315 ;;		On entry : 0/0
  5316 ;;		On exit  : 0/0
  5317 ;;		Unchanged: 0/0
  5318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5319 ;;      Params:         0       0       0       0       0
  5320 ;;      Locals:         0       1       0       0       0
  5321 ;;      Temps:          0       1       0       0       0
  5322 ;;      Totals:         0       2       0       0       0
  5323 ;;Total ram usage:        2 bytes
  5324 ;; Hardware stack levels used:    1
  5325 ;; Hardware stack levels required when called:    4
  5326 ;; This function calls:
  5327 ;;		_AnalogValue
  5328 ;;		_eeprom_read
  5329 ;; This function is called by:
  5330 ;;		_TransmittedDataHandler
  5331 ;;		_Mode_1
  5332 ;;		_LightWithSensController
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           
  5337                           ;psect for function _DarknessCheck
  5338  0CDC                     _DarknessCheck:	
  5339                           
  5340                           ;Main Card V10.0.c: 1053: unsigned char darknessValue;
  5341                           ;Main Card V10.0.c: 1054: PORTCbits.RC0 = 0;
  5342                           
  5343                           ;incstack = 0
  5344                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5345  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0CDE  1007               	bcf	7,0	;volatile
  5348                           
  5349                           ;Main Card V10.0.c: 1056: if(bValueFromPot == TRUE)
  5350  0CDF  036F               	decf	_bValueFromPot,w
  5351  0CE0  1D03               	btfss	3,2
  5352  0CE1  2CE9               	goto	l2016
  5353                           
  5354                           ;Main Card V10.0.c: 1057: darknessValue= AnalogValue(3);
  5355  0CE2  3003               	movlw	3
  5356  0CE3  120A  158A  24B3  120A  158A  	fcall	_AnalogValue
  5357  0CE8  2CEF               	goto	L2
  5358  0CE9                     l2016:	
  5359                           
  5360                           ;Main Card V10.0.c: 1058: else
  5361                           ;Main Card V10.0.c: 1059: darknessValue=eeprom_read(addressDarknessValue);
  5362  0CE9  087C               	movf	_addressDarknessValue,w
  5363  0CEA  120A  158A  248F  120A  158A  	fcall	_eeprom_read
  5364  0CEF                     L2:	
  5365  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0CF1  00A8               	movwf	??_DarknessCheck
  5368  0CF2  0828               	movf	??_DarknessCheck,w
  5369  0CF3  00A9               	movwf	DarknessCheck@darknessValue
  5370                           
  5371                           ;Main Card V10.0.c: 1061: if(AnalogValue(0)>darknessValue)
  5372  0CF4  3000               	movlw	0
  5373  0CF5  120A  158A  24B3  120A  158A  	fcall	_AnalogValue
  5374  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5375  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5376  0CFC  0229               	subwf	DarknessCheck@darknessValue,w
  5377  0CFD  1803               	skipnc
  5378  0CFE  2D02               	goto	l2020
  5379                           
  5380                           ;Main Card V10.0.c: 1062: bDark = 1;
  5381  0CFF  01EC               	clrf	_bDark
  5382  0D00  0AEC               	incf	_bDark,f
  5383  0D01  2D03               	goto	l2022
  5384  0D02                     l2020:	
  5385                           
  5386                           ;Main Card V10.0.c: 1063: else
  5387                           ;Main Card V10.0.c: 1064: bDark = 0;
  5388  0D02  01EC               	clrf	_bDark
  5389  0D03                     l2022:	
  5390                           
  5391                           ;Main Card V10.0.c: 1065: PORTCbits.RC0 = 0;
  5392  0D03  1007               	bcf	7,0	;volatile
  5393  0D04  0008               	return
  5394  0D05                     __end_of_DarknessCheck:	
  5395                           
  5396                           	psect	text34
  5397  0C8F                     __ptext34:	
  5398 ;; *************** function _eeprom_read *****************
  5399 ;; Defined at:
  5400 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5401 ;; Parameters:    Size  Location     Type
  5402 ;;  addr            1    wreg     unsigned char 
  5403 ;; Auto vars:     Size  Location     Type
  5404 ;;  addr            1    1[BANK0 ] unsigned char 
  5405 ;; Return value:  Size  Location     Type
  5406 ;;                  1    wreg      unsigned char 
  5407 ;; Registers used:
  5408 ;;		wreg, status,2, status,0
  5409 ;; Tracked objects:
  5410 ;;		On entry : 0/0
  5411 ;;		On exit  : 0/0
  5412 ;;		Unchanged: 0/0
  5413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5414 ;;      Params:         0       0       0       0       0
  5415 ;;      Locals:         0       1       0       0       0
  5416 ;;      Temps:          0       1       0       0       0
  5417 ;;      Totals:         0       2       0       0       0
  5418 ;;Total ram usage:        2 bytes
  5419 ;; Hardware stack levels used:    1
  5420 ;; Hardware stack levels required when called:    2
  5421 ;; This function calls:
  5422 ;;		Nothing
  5423 ;; This function is called by:
  5424 ;;		_TransmittedDataHandler
  5425 ;;		_DarknessCheck
  5426 ;; This function uses a non-reentrant model
  5427 ;;
  5428                           
  5429                           
  5430                           ;psect for function _eeprom_read
  5431  0C8F                     _eeprom_read:	
  5432                           
  5433                           ;incstack = 0
  5434                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5435                           ;eeprom_read@addr stored from wreg
  5436  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5437  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5438  0C91  00A1               	movwf	eeprom_read@addr
  5439  0C92  2C95               	goto	l406
  5440  0C93                     u1251:	
  5441  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5442  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5443  0C95                     l406:	
  5444  0C95  0064               	clrwdt	;# 
  5445  0C96  1683               	bsf	3,5	;RP0=1, select bank3
  5446  0C97  1703               	bsf	3,6	;RP1=1, select bank3
  5447  0C98  188C               	btfsc	12,1	;volsfr
  5448  0C99  2C93               	goto	u1251
  5449  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5450  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5451  0C9C  0821               	movf	eeprom_read@addr,w
  5452  0C9D  1283               	bcf	3,5	;RP0=0, select bank2
  5453  0C9E  1703               	bsf	3,6	;RP1=1, select bank2
  5454  0C9F  008D               	movwf	13	;volatile
  5455  0CA0  303F               	movlw	63
  5456  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  5457  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  5458  0CA3  00A0               	movwf	??_eeprom_read
  5459  0CA4  0820               	movf	??_eeprom_read,w
  5460  0CA5  1683               	bsf	3,5	;RP0=1, select bank3
  5461  0CA6  1703               	bsf	3,6	;RP1=1, select bank3
  5462  0CA7  058C               	andwf	12,f	;volsfr
  5463  0CA8  140C               	bsf	12,0	;volsfr
  5464  0CA9  1003               	clrc
  5465  0CAA  180C               	btfsc	12,0	;volsfr
  5466  0CAB  1403               	setc
  5467  0CAC  3000               	movlw	0
  5468  0CAD  1803               	skipnc
  5469  0CAE  3001               	movlw	1
  5470  0CAF  1283               	bcf	3,5	;RP0=0, select bank2
  5471  0CB0  1703               	bsf	3,6	;RP1=1, select bank2
  5472  0CB1  080C               	movf	12,w	;volatile
  5473  0CB2  0008               	return
  5474  0CB3                     __end_of_eeprom_read:	
  5475                           
  5476                           	psect	text35
  5477  0CB3                     __ptext35:	
  5478 ;; *************** function _AnalogValue *****************
  5479 ;; Defined at:
  5480 ;;		line 1024 in file "../Main Card V10.0.c"
  5481 ;; Parameters:    Size  Location     Type
  5482 ;;  channel         1    wreg     unsigned char 
  5483 ;; Auto vars:     Size  Location     Type
  5484 ;;  channel         1    7[BANK0 ] unsigned char 
  5485 ;; Return value:  Size  Location     Type
  5486 ;;                  1    wreg      unsigned char 
  5487 ;; Registers used:
  5488 ;;		wreg, status,2, status,0, pclath, cstack
  5489 ;; Tracked objects:
  5490 ;;		On entry : 0/0
  5491 ;;		On exit  : 0/0
  5492 ;;		Unchanged: 0/0
  5493 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5494 ;;      Params:         0       0       0       0       0
  5495 ;;      Locals:         0       1       0       0       0
  5496 ;;      Temps:          0       1       0       0       0
  5497 ;;      Totals:         0       2       0       0       0
  5498 ;;Total ram usage:        2 bytes
  5499 ;; Hardware stack levels used:    1
  5500 ;; Hardware stack levels required when called:    3
  5501 ;; This function calls:
  5502 ;;		_DelayDs
  5503 ;; This function is called by:
  5504 ;;		_TransmittedDataHandler
  5505 ;;		_DarknessCheck
  5506 ;; This function uses a non-reentrant model
  5507 ;;
  5508                           
  5509                           
  5510                           ;psect for function _AnalogValue
  5511  0CB3                     _AnalogValue:	
  5512                           
  5513                           ;incstack = 0
  5514                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5515                           ;AnalogValue@channel stored from wreg
  5516  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  5517  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  5518  0CB5  00A7               	movwf	AnalogValue@channel
  5519                           
  5520                           ;Main Card V10.0.c: 1026: ADCON0bits.CHS = channel;
  5521  0CB6  0827               	movf	AnalogValue@channel,w
  5522  0CB7  00A6               	movwf	??_AnalogValue
  5523  0CB8  0DA6               	rlf	??_AnalogValue,f
  5524  0CB9  0DA6               	rlf	??_AnalogValue,f
  5525  0CBA  081F               	movf	31,w	;volatile
  5526  0CBB  0626               	xorwf	??_AnalogValue,w
  5527  0CBC  39C3               	andlw	-61
  5528  0CBD  0626               	xorwf	??_AnalogValue,w
  5529  0CBE  009F               	movwf	31	;volatile
  5530                           
  5531                           ;Main Card V10.0.c: 1027: ADCON0bits.ADON = 1;
  5532  0CBF  141F               	bsf	31,0	;volatile
  5533                           
  5534                           ;Main Card V10.0.c: 1028: DelayDs(1);
  5535  0CC0  3001               	movlw	1
  5536  0CC1  00A0               	movwf	DelayDs@cnt
  5537  0CC2  3000               	movlw	0
  5538  0CC3  00A1               	movwf	DelayDs@cnt+1
  5539  0CC4  120A  158A  2449  120A  158A  	fcall	_DelayDs
  5540                           
  5541                           ;Main Card V10.0.c: 1029: ADCON0bits.GO = 1;
  5542  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0CCB  149F               	bsf	31,1	;volatile
  5545                           
  5546                           ;Main Card V10.0.c: 1030: DelayDs(1);
  5547  0CCC  3001               	movlw	1
  5548  0CCD  00A0               	movwf	DelayDs@cnt
  5549  0CCE  3000               	movlw	0
  5550  0CCF  00A1               	movwf	DelayDs@cnt+1
  5551  0CD0  120A  158A  2449  120A  158A  	fcall	_DelayDs
  5552  0CD5                     l380:	
  5553                           ;Main Card V10.0.c: 1031: while(ADCON0bits.GO);
  5554                           
  5555  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  5556  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  5557  0CD7  189F               	btfsc	31,1	;volatile
  5558  0CD8  2CD5               	goto	l380
  5559                           
  5560                           ;Main Card V10.0.c: 1032: ADCON0bits.ADON = 0;
  5561  0CD9  101F               	bcf	31,0	;volatile
  5562                           
  5563                           ;Main Card V10.0.c: 1033: return ADRESH;
  5564  0CDA  081E               	movf	30,w	;volatile
  5565  0CDB  0008               	return
  5566  0CDC                     __end_of_AnalogValue:	
  5567                           
  5568                           	psect	text36
  5569  0C49                     __ptext36:	
  5570 ;; *************** function _DelayDs *****************
  5571 ;; Defined at:
  5572 ;;		line 621 in file "../Main Card V10.0.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  cnt             2    0[BANK0 ] int 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  i               2    4[BANK0 ] int 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;                  1    wreg      void 
  5579 ;; Registers used:
  5580 ;;		wreg, status,2
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5586 ;;      Params:         0       2       0       0       0
  5587 ;;      Locals:         0       2       0       0       0
  5588 ;;      Temps:          0       2       0       0       0
  5589 ;;      Totals:         0       6       0       0       0
  5590 ;;Total ram usage:        6 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    2
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_TransmittedDataHandler
  5597 ;;		_TransiverInit
  5598 ;;		_Blink
  5599 ;;		_AnalogValue
  5600 ;; This function uses a non-reentrant model
  5601 ;;
  5602                           
  5603                           
  5604                           ;psect for function _DelayDs
  5605  0C49                     _DelayDs:	
  5606                           
  5607                           ;Main Card V10.0.c: 622: int i;
  5608                           ;Main Card V10.0.c: 623: for(i=0;i<cnt;i++){
  5609                           
  5610                           ;incstack = 0
  5611                           ; Regs used in _DelayDs: [wreg+status,2]
  5612  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  5613  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  5614  0C4B  01A4               	clrf	DelayDs@i
  5615  0C4C  01A5               	clrf	DelayDs@i+1
  5616  0C4D                     l305:	
  5617  0C4D  0825               	movf	DelayDs@i+1,w
  5618  0C4E  3A80               	xorlw	128
  5619  0C4F  00A2               	movwf	??_DelayDs
  5620  0C50  0821               	movf	DelayDs@cnt+1,w
  5621  0C51  3A80               	xorlw	128
  5622  0C52  0222               	subwf	??_DelayDs,w
  5623  0C53  1D03               	skipz
  5624  0C54  2C57               	goto	u1195
  5625  0C55  0820               	movf	DelayDs@cnt,w
  5626  0C56  0224               	subwf	DelayDs@i,w
  5627  0C57                     u1195:	
  5628  0C57  1803               	btfsc	3,0
  5629  0C58  0008               	return
  5630                           
  5631                           ;Main Card V10.0.c: 624: _delay((unsigned long)((100)*(4000000/4000.0)));
  5632  0C59  3082               	movlw	130
  5633  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  5634  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  5635  0C5C  00A3               	movwf	??_DelayDs+1
  5636  0C5D  30DD               	movlw	221
  5637  0C5E  00A2               	movwf	??_DelayDs
  5638  0C5F                     u2457:	
  5639  0C5F  0BA2               	decfsz	??_DelayDs,f
  5640  0C60  2C5F               	goto	u2457
  5641  0C61  0BA3               	decfsz	??_DelayDs+1,f
  5642  0C62  2C5F               	goto	u2457
  5643  0C63  3001               	movlw	1
  5644  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  5645  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  5646  0C66  07A4               	addwf	DelayDs@i,f
  5647  0C67  1803               	skipnc
  5648  0C68  0AA5               	incf	DelayDs@i+1,f
  5649  0C69  3000               	movlw	0
  5650  0C6A  07A5               	addwf	DelayDs@i+1,f
  5651  0C6B  2C4D               	goto	l305
  5652  0C6C                     __end_of_DelayDs:	
  5653                           
  5654                           	psect	text37
  5655  0466                     __ptext37:	
  5656 ;; *************** function _tc_int *****************
  5657 ;; Defined at:
  5658 ;;		line 945 in file "../Main Card V10.0.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;		None
  5661 ;; Auto vars:     Size  Location     Type
  5662 ;;		None
  5663 ;; Return value:  Size  Location     Type
  5664 ;;                  1    wreg      void 
  5665 ;; Registers used:
  5666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5667 ;; Tracked objects:
  5668 ;;		On entry : 0/0
  5669 ;;		On exit  : 0/0
  5670 ;;		Unchanged: 0/0
  5671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5672 ;;      Params:         0       0       0       0       0
  5673 ;;      Locals:         0       0       0       0       0
  5674 ;;      Temps:          7       0       0       0       0
  5675 ;;      Totals:         7       0       0       0       0
  5676 ;;Total ram usage:        7 bytes
  5677 ;; Hardware stack levels used:    1
  5678 ;; Hardware stack levels required when called:    1
  5679 ;; This function calls:
  5680 ;;		_TimerCounter
  5681 ;;		i1_OperationMode
  5682 ;; This function is called by:
  5683 ;;		Interrupt level 1
  5684 ;; This function uses a non-reentrant model
  5685 ;;
  5686                           
  5687                           
  5688                           ;psect for function _tc_int
  5689  0466                     _tc_int:	
  5690                           
  5691                           ;Main Card V10.0.c: 949: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5692  0466  1A86               	btfsc	6,5	;volatile
  5693  0467  2C81               	goto	i1l364
  5694  0468  0868               	movf	_intBlinkCycle,w
  5695  0469  0469               	iorwf	_intBlinkCycle+1,w
  5696  046A  1D03               	btfss	3,2
  5697  046B  2C81               	goto	i1l364
  5698  046C  120A  158A  232E  120A  118A  	fcall	i1_OperationMode
  5699  0471  00F5               	movwf	??_tc_int
  5700  0472  3002               	movlw	2
  5701  0473  0275               	subwf	??_tc_int,w
  5702  0474  1803               	skipnc
  5703  0475  2C81               	goto	i1l364
  5704                           
  5705                           ;Main Card V10.0.c: 950: intBlinkCycle = 1;
  5706  0476  3001               	movlw	1
  5707  0477  1283               	bcf	3,5	;RP0=0, select bank0
  5708  0478  1303               	bcf	3,6	;RP1=0, select bank0
  5709  0479  00E8               	movwf	_intBlinkCycle
  5710  047A  3000               	movlw	0
  5711  047B  00E9               	movwf	_intBlinkCycle+1
  5712                           
  5713                           ;Main Card V10.0.c: 951: intBlinkCounter = 0;
  5714  047C  1683               	bsf	3,5	;RP0=1, select bank1
  5715  047D  1303               	bcf	3,6	;RP1=0, select bank1
  5716  047E  01B1               	clrf	_intBlinkCounter^(0+128)
  5717  047F  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5718                           
  5719                           ;Main Card V10.0.c: 953: }else if(PORTBbits.RB5==0)
  5720  0480  2C87               	goto	i1l365
  5721  0481                     i1l364:	
  5722  0481  1283               	bcf	3,5	;RP0=0, select bank0
  5723  0482  1303               	bcf	3,6	;RP1=0, select bank0
  5724  0483  1A86               	btfsc	6,5	;volatile
  5725  0484  2C87               	goto	i1l365
  5726                           
  5727                           ;Main Card V10.0.c: 954: btnPush=TRUE;
  5728  0485  01EE               	clrf	_btnPush
  5729  0486  0AEE               	incf	_btnPush,f
  5730  0487                     i1l365:	
  5731                           
  5732                           ;Main Card V10.0.c: 956: if(TMR1IF ==1){
  5733  0487  1283               	bcf	3,5	;RP0=0, select bank0
  5734  0488  1C0C               	btfss	12,0	;volatile
  5735  0489  2D2D               	goto	L4
  5736                           
  5737                           ;Main Card V10.0.c: 957: TMR1ON = 0;
  5738  048A  1010               	bcf	16,0	;volatile
  5739                           
  5740                           ;Main Card V10.0.c: 958: TMR1H = 0x0B;
  5741  048B  300B               	movlw	11
  5742  048C  008F               	movwf	15	;volatile
  5743                           
  5744                           ;Main Card V10.0.c: 959: TMR1L = 0xDB;
  5745  048D  30DB               	movlw	219
  5746  048E  008E               	movwf	14	;volatile
  5747                           
  5748                           ;Main Card V10.0.c: 961: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5749  048F  0368               	decf	_intBlinkCycle,w
  5750  0490  0469               	iorwf	_intBlinkCycle+1,w
  5751  0491  1D03               	btfss	3,2
  5752  0492  2CBA               	goto	i1l2514
  5753  0493  1683               	bsf	3,5	;RP0=1, select bank1
  5754  0494  1303               	bcf	3,6	;RP1=0, select bank1
  5755  0495  085B               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5756  0496  00F6               	movwf	??_tc_int+1
  5757  0497  085A               	movf	_intNumberOfBlinks^(0+128),w
  5758  0498  00F5               	movwf	??_tc_int
  5759  0499  1003               	clrc
  5760  049A  0DF5               	rlf	??_tc_int,f
  5761  049B  0DF6               	rlf	??_tc_int+1,f
  5762  049C  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5763  049D  3A80               	xorlw	128
  5764  049E  00F7               	movwf	??_tc_int+2
  5765  049F  0876               	movf	??_tc_int+1,w
  5766  04A0  3A80               	xorlw	128
  5767  04A1  0277               	subwf	??_tc_int+2,w
  5768  04A2  1D03               	skipz
  5769  04A3  2CA6               	goto	u227_25
  5770  04A4  0875               	movf	??_tc_int,w
  5771  04A5  0231               	subwf	_intBlinkCounter^(0+128),w
  5772  04A6                     u227_25:	
  5773  04A6  1803               	skipnc
  5774  04A7  2CBA               	goto	i1l2514
  5775                           
  5776                           ;Main Card V10.0.c: 962: intBlinkCounter++;
  5777  04A8  3001               	movlw	1
  5778  04A9  1683               	bsf	3,5	;RP0=1, select bank1
  5779  04AA  1303               	bcf	3,6	;RP1=0, select bank1
  5780  04AB  07B1               	addwf	_intBlinkCounter^(0+128),f
  5781  04AC  1803               	skipnc
  5782  04AD  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5783  04AE  3000               	movlw	0
  5784  04AF  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5785                           
  5786                           ;Main Card V10.0.c: 964: if(PORTCbits.RC1 == 0){
  5787  04B0  1283               	bcf	3,5	;RP0=0, select bank0
  5788  04B1  1303               	bcf	3,6	;RP1=0, select bank0
  5789  04B2  1887               	btfsc	7,1	;volatile
  5790  04B3  2CB7               	goto	i1l369
  5791                           
  5792                           ;Main Card V10.0.c: 965: PORTCbits.RC1 = 1;
  5793  04B4  1487               	bsf	7,1	;volatile
  5794                           
  5795                           ;Main Card V10.0.c: 966: PORTCbits.RC2 = 1;
  5796  04B5  1507               	bsf	7,2	;volatile
  5797                           
  5798                           ;Main Card V10.0.c: 968: }
  5799  04B6  2CDB               	goto	i1l2524
  5800  04B7                     i1l369:	
  5801                           
  5802                           ;Main Card V10.0.c: 969: else if(PORTCbits.RC1 == 1){
  5803  04B7  1C87               	btfss	7,1	;volatile
  5804  04B8  2CDB               	goto	i1l2524
  5805  04B9  2CD9               	goto	L3
  5806  04BA                     i1l2514:	
  5807                           ;Main Card V10.0.c: 972: }
  5808                           ;Main Card V10.0.c: 973: }
  5809                           
  5810                           ;Main Card V10.0.c: 971: PORTCbits.RC2 = 0;
  5811                           
  5812                           ;Main Card V10.0.c: 970: PORTCbits.RC1 = 0;
  5813                           
  5814                           
  5815                           ;Main Card V10.0.c: 975: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5816  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5817  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5818  04BC  0368               	decf	_intBlinkCycle,w
  5819  04BD  0469               	iorwf	_intBlinkCycle+1,w
  5820  04BE  1D03               	btfss	3,2
  5821  04BF  2CDB               	goto	i1l2524
  5822  04C0  1683               	bsf	3,5	;RP0=1, select bank1
  5823  04C1  1303               	bcf	3,6	;RP1=0, select bank1
  5824  04C2  085B               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5825  04C3  00F6               	movwf	??_tc_int+1
  5826  04C4  085A               	movf	_intNumberOfBlinks^(0+128),w
  5827  04C5  00F5               	movwf	??_tc_int
  5828  04C6  1003               	clrc
  5829  04C7  0DF5               	rlf	??_tc_int,f
  5830  04C8  0DF6               	rlf	??_tc_int+1,f
  5831  04C9  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5832  04CA  3A80               	xorlw	128
  5833  04CB  00F7               	movwf	??_tc_int+2
  5834  04CC  0876               	movf	??_tc_int+1,w
  5835  04CD  3A80               	xorlw	128
  5836  04CE  0277               	subwf	??_tc_int+2,w
  5837  04CF  1D03               	skipz
  5838  04D0  2CD3               	goto	u231_25
  5839  04D1  0875               	movf	??_tc_int,w
  5840  04D2  0231               	subwf	_intBlinkCounter^(0+128),w
  5841  04D3                     u231_25:	
  5842  04D3  1C03               	skipc
  5843  04D4  2CDB               	goto	i1l2524
  5844                           
  5845                           ;Main Card V10.0.c: 976: intBlinkCycle = 0;
  5846  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  5847  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  5848  04D7  01E8               	clrf	_intBlinkCycle
  5849  04D8  01E9               	clrf	_intBlinkCycle+1
  5850  04D9                     L3:	
  5851                           
  5852                           ;Main Card V10.0.c: 977: PORTCbits.RC1 = 0;
  5853  04D9  1087               	bcf	7,1	;volatile
  5854                           
  5855                           ;Main Card V10.0.c: 978: PORTCbits.RC2 = 0;
  5856  04DA  1107               	bcf	7,2	;volatile
  5857  04DB                     i1l2524:	
  5858                           
  5859                           ;Main Card V10.0.c: 979: }
  5860                           ;Main Card V10.0.c: 982: intHalfSecondCounter++;
  5861  04DB  3001               	movlw	1
  5862  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  5863  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  5864  04DE  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5865  04DF  1803               	skipnc
  5866  04E0  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5867  04E1  3000               	movlw	0
  5868  04E2  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5869                           
  5870                           ;Main Card V10.0.c: 983: if(intHalfSecondCounter>=2)
  5871  04E3  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5872  04E4  3A80               	xorlw	128
  5873  04E5  00FF               	movwf	127
  5874  04E6  3080               	movlw	128
  5875  04E7  027F               	subwf	127,w
  5876  04E8  1D03               	skipz
  5877  04E9  2CEC               	goto	u232_25
  5878  04EA  3002               	movlw	2
  5879  04EB  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5880  04EC                     u232_25:	
  5881  04EC  1C03               	skipc
  5882  04ED  2CFF               	goto	i1l2534
  5883                           
  5884                           ;Main Card V10.0.c: 984: {
  5885                           ;Main Card V10.0.c: 985: intHalfSecondCounter = 0;
  5886  04EE  1683               	bsf	3,5	;RP0=1, select bank1
  5887  04EF  1303               	bcf	3,6	;RP1=0, select bank1
  5888  04F0  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5889  04F1  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5890                           
  5891                           ;Main Card V10.0.c: 986: intSecondCounter++;
  5892  04F2  3001               	movlw	1
  5893  04F3  1283               	bcf	3,5	;RP0=0, select bank0
  5894  04F4  1303               	bcf	3,6	;RP1=0, select bank0
  5895  04F5  07EA               	addwf	_intSecondCounter,f
  5896  04F6  1803               	skipnc
  5897  04F7  0AEB               	incf	_intSecondCounter+1,f
  5898  04F8  3000               	movlw	0
  5899  04F9  07EB               	addwf	_intSecondCounter+1,f
  5900                           
  5901                           ;Main Card V10.0.c: 987: TimerCounter();
  5902  04FA  120A  158A  2561  120A  118A  	fcall	_TimerCounter
  5903  04FF                     i1l2534:	
  5904                           
  5905                           ;Main Card V10.0.c: 988: }
  5906                           ;Main Card V10.0.c: 989: if(intSecondCounter >=60)
  5907  04FF  1283               	bcf	3,5	;RP0=0, select bank0
  5908  0500  1303               	bcf	3,6	;RP1=0, select bank0
  5909  0501  086B               	movf	_intSecondCounter+1,w
  5910  0502  3A80               	xorlw	128
  5911  0503  00FF               	movwf	127
  5912  0504  3080               	movlw	128
  5913  0505  027F               	subwf	127,w
  5914  0506  1D03               	skipz
  5915  0507  2D0A               	goto	u233_25
  5916  0508  303C               	movlw	60
  5917  0509  026A               	subwf	_intSecondCounter,w
  5918  050A                     u233_25:	
  5919  050A  1C03               	skipc
  5920  050B  2D18               	goto	i1l2540
  5921                           
  5922                           ;Main Card V10.0.c: 990: {
  5923                           ;Main Card V10.0.c: 991: intSecondCounter = 0;
  5924  050C  1283               	bcf	3,5	;RP0=0, select bank0
  5925  050D  1303               	bcf	3,6	;RP1=0, select bank0
  5926  050E  01EA               	clrf	_intSecondCounter
  5927  050F  01EB               	clrf	_intSecondCounter+1
  5928                           
  5929                           ;Main Card V10.0.c: 992: intMinuteCounter++;
  5930  0510  3001               	movlw	1
  5931  0511  1683               	bsf	3,5	;RP0=1, select bank1
  5932  0512  1303               	bcf	3,6	;RP1=0, select bank1
  5933  0513  07B7               	addwf	_intMinuteCounter^(0+128),f
  5934  0514  1803               	skipnc
  5935  0515  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5936  0516  3000               	movlw	0
  5937  0517  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5938  0518                     i1l2540:	
  5939                           
  5940                           ;Main Card V10.0.c: 993: }
  5941                           ;Main Card V10.0.c: 994: if(intMinuteCounter >= 60)
  5942  0518  1683               	bsf	3,5	;RP0=1, select bank1
  5943  0519  1303               	bcf	3,6	;RP1=0, select bank1
  5944  051A  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5945  051B  3A80               	xorlw	128
  5946  051C  00FF               	movwf	127
  5947  051D  3080               	movlw	128
  5948  051E  027F               	subwf	127,w
  5949  051F  1D03               	skipz
  5950  0520  2D23               	goto	u234_25
  5951  0521  303C               	movlw	60
  5952  0522  0237               	subwf	_intMinuteCounter^(0+128),w
  5953  0523                     u234_25:	
  5954  0523  1C03               	skipc
  5955  0524  2D29               	goto	i1l2544
  5956                           
  5957                           ;Main Card V10.0.c: 995: {
  5958                           ;Main Card V10.0.c: 996: intMinuteCounter = 0;
  5959  0525  1683               	bsf	3,5	;RP0=1, select bank1
  5960  0526  1303               	bcf	3,6	;RP1=0, select bank1
  5961  0527  01B7               	clrf	_intMinuteCounter^(0+128)
  5962  0528  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5963  0529                     i1l2544:	
  5964                           
  5965                           ;Main Card V10.0.c: 997: }
  5966                           ;Main Card V10.0.c: 1000: TMR1ON = 1;
  5967  0529  1283               	bcf	3,5	;RP0=0, select bank0
  5968  052A  1303               	bcf	3,6	;RP1=0, select bank0
  5969  052B  1410               	bsf	16,0	;volatile
  5970                           
  5971                           ;Main Card V10.0.c: 1001: }
  5972                           ;Main Card V10.0.c: 1002: TMR1IF = 0;
  5973  052C  100C               	bcf	12,0	;volatile
  5974  052D                     L4:	
  5975                           
  5976                           ;Main Card V10.0.c: 1003: RBIF = 0;
  5977  052D  100B               	bcf	11,0	;volatile
  5978                           
  5979                           ;Main Card V10.0.c: 1004: GIE = 1;
  5980  052E  178B               	bsf	11,7	;volatile
  5981                           
  5982                           ;Main Card V10.0.c: 1005: return;
  5983  052F  087B               	movf	??_tc_int+6,w
  5984  0530  00FF               	movwf	127
  5985  0531  087A               	movf	??_tc_int+5,w
  5986  0532  008A               	movwf	10
  5987  0533  0879               	movf	??_tc_int+4,w
  5988  0534  0084               	movwf	4
  5989  0535  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5990  0536  0083               	movwf	3
  5991  0537  0EFE               	swapf	126,f
  5992  0538  0E7E               	swapf	126,w
  5993  0539  0009               	retfie
  5994  053A                     __end_of_tc_int:	
  5995                           
  5996                           	psect	intentry
  5997  0004                     __pintentry:	
  5998                           ;incstack = 0
  5999 ;; hardware stack exceeded
  6000                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  6001                           
  6002  0004                     interrupt_function:	
  6003  007E                     saved_w	set	btemp
  6004  0004  00FE               	movwf	btemp
  6005  0005  0E03               	swapf	3,w
  6006  0006  00F8               	movwf	??_tc_int+3
  6007  0007  0804               	movf	4,w
  6008  0008  00F9               	movwf	??_tc_int+4
  6009  0009  080A               	movf	10,w
  6010  000A  00FA               	movwf	??_tc_int+5
  6011  000B  1283               	bcf	3,5	;RP0=0, select bank0
  6012  000C  1303               	bcf	3,6	;RP1=0, select bank0
  6013  000D  087F               	movf	btemp+1,w
  6014  000E  00FB               	movwf	??_tc_int+6
  6015  000F  120A  118A  2C66   	ljmp	_tc_int
  6016                           
  6017                           	psect	text38
  6018  0B2E                     __ptext38:	
  6019 ;; *************** function i1_OperationMode *****************
  6020 ;; Defined at:
  6021 ;;		line 1085 in file "../Main Card V10.0.c"
  6022 ;; Parameters:    Size  Location     Type
  6023 ;;		None
  6024 ;; Auto vars:     Size  Location     Type
  6025 ;;  OperationMod    1    1[COMMON] unsigned char 
  6026 ;; Return value:  Size  Location     Type
  6027 ;;                  1    wreg      unsigned char 
  6028 ;; Registers used:
  6029 ;;		wreg, status,2
  6030 ;; Tracked objects:
  6031 ;;		On entry : 0/0
  6032 ;;		On exit  : 0/0
  6033 ;;		Unchanged: 0/0
  6034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6035 ;;      Params:         0       0       0       0       0
  6036 ;;      Locals:         1       0       0       0       0
  6037 ;;      Temps:          1       0       0       0       0
  6038 ;;      Totals:         2       0       0       0       0
  6039 ;;Total ram usage:        2 bytes
  6040 ;; Hardware stack levels used:    1
  6041 ;; This function calls:
  6042 ;;		Nothing
  6043 ;; This function is called by:
  6044 ;;		_tc_int
  6045 ;; This function uses a non-reentrant model
  6046 ;;
  6047                           
  6048                           
  6049                           ;psect for function i1_OperationMode
  6050  0B2E                     i1_OperationMode:	
  6051                           
  6052                           ;Main Card V10.0.c: 1087: unsigned char bracketStatus;
  6053                           ;Main Card V10.0.c: 1088: bracketStatus = ((~PORTB) & 0b00000111) ;
  6054                           
  6055                           ;incstack = 0
  6056 ;; hardware stack exceeded
  6057                           ; Regs used in i1_OperationMode: [wreg+status,2]
  6058  0B2E  1283               	bcf	3,5	;RP0=0, select bank0
  6059  0B2F  1303               	bcf	3,6	;RP1=0, select bank0
  6060  0B30  0906               	comf	6,w	;volatile
  6061  0B31  3907               	andlw	7
  6062  0B32  00F0               	movwf	??i1_OperationMode
  6063  0B33  0870               	movf	??i1_OperationMode,w
  6064  0B34  00F1               	movwf	i1OperationMode@bracketStatus
  6065                           
  6066                           ;Main Card V10.0.c: 1090: return bracketStatus;
  6067  0B35  0871               	movf	i1OperationMode@bracketStatus,w
  6068  0B36  0008               	return
  6069  0B37                     __end_ofi1_OperationMode:	
  6070                           
  6071                           	psect	text39
  6072  0D61                     __ptext39:	
  6073 ;; *************** function _TimerCounter *****************
  6074 ;; Defined at:
  6075 ;;		line 545 in file "../Main Card V10.0.c"
  6076 ;; Parameters:    Size  Location     Type
  6077 ;;		None
  6078 ;; Auto vars:     Size  Location     Type
  6079 ;;  i               2    3[COMMON] int 
  6080 ;; Return value:  Size  Location     Type
  6081 ;;                  1    wreg      void 
  6082 ;; Registers used:
  6083 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6084 ;; Tracked objects:
  6085 ;;		On entry : 0/0
  6086 ;;		On exit  : 0/0
  6087 ;;		Unchanged: 0/0
  6088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6089 ;;      Params:         0       0       0       0       0
  6090 ;;      Locals:         2       0       0       0       0
  6091 ;;      Temps:          3       0       0       0       0
  6092 ;;      Totals:         5       0       0       0       0
  6093 ;;Total ram usage:        5 bytes
  6094 ;; Hardware stack levels used:    1
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_tc_int
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           
  6103                           ;psect for function _TimerCounter
  6104  0D61                     _TimerCounter:	
  6105                           
  6106                           ;Main Card V10.0.c: 547: for (int i = 0; i < 5; i++)
  6107                           
  6108                           ;incstack = 0
  6109 ;; hardware stack exceeded
  6110                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  6111  0D61  01F3               	clrf	TimerCounter@i
  6112  0D62  01F4               	clrf	TimerCounter@i+1
  6113  0D63                     L5:	
  6114  0D63  0874               	movf	TimerCounter@i+1,w
  6115  0D64  3A80               	xorlw	128
  6116  0D65  00FF               	movwf	127
  6117  0D66  3080               	movlw	128
  6118  0D67  027F               	subwf	127,w
  6119  0D68  1D03               	skipz
  6120  0D69  2D6C               	goto	u208_25
  6121  0D6A  3005               	movlw	5
  6122  0D6B  0273               	subwf	TimerCounter@i,w
  6123  0D6C                     u208_25:	
  6124  0D6C  1803               	btfsc	3,0
  6125  0D6D  0008               	return
  6126                           
  6127                           ;Main Card V10.0.c: 548: {
  6128                           ;Main Card V10.0.c: 549: if(intClockTimer[i]>0)
  6129  0D6E  0873               	movf	TimerCounter@i,w
  6130  0D6F  00F0               	movwf	??_TimerCounter
  6131  0D70  0770               	addwf	??_TimerCounter,w
  6132  0D71  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6133  0D72  0084               	movwf	4
  6134  0D73  1383               	bcf	3,7	;select IRP bank1
  6135  0D74  0800               	movf	0,w
  6136  0D75  00F1               	movwf	??_TimerCounter+1
  6137  0D76  0A84               	incf	4,f
  6138  0D77  0800               	movf	0,w
  6139  0D78  00F2               	movwf	??_TimerCounter+2
  6140  0D79  0872               	movf	??_TimerCounter+2,w
  6141  0D7A  3A80               	xorlw	128
  6142  0D7B  00FF               	movwf	127
  6143  0D7C  3080               	movlw	128
  6144  0D7D  027F               	subwf	127,w
  6145  0D7E  1D03               	skipz
  6146  0D7F  2D82               	goto	u209_25
  6147  0D80  3001               	movlw	1
  6148  0D81  0271               	subwf	??_TimerCounter+1,w
  6149  0D82                     u209_25:	
  6150  0D82  1C03               	skipc
  6151  0D83  2D96               	goto	i1l2432
  6152                           
  6153                           ;Main Card V10.0.c: 550: intClockTimer[i]--;
  6154  0D84  0873               	movf	TimerCounter@i,w
  6155  0D85  00F0               	movwf	??_TimerCounter
  6156  0D86  0770               	addwf	??_TimerCounter,w
  6157  0D87  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6158  0D88  0084               	movwf	4
  6159  0D89  30FF               	movlw	255
  6160  0D8A  1383               	bcf	3,7	;select IRP bank1
  6161  0D8B  0780               	addwf	0,f
  6162  0D8C  0F84               	incfsz	4,f
  6163  0D8D  0800               	movf	0,w
  6164  0D8E  1803               	skipnc
  6165  0D8F  0A00               	incf	0,w
  6166  0D90  00FF               	movwf	127
  6167  0D91  30FF               	movlw	255
  6168  0D92  077F               	addwf	127,w
  6169  0D93  0080               	movwf	0
  6170  0D94  0384               	decf	4,f
  6171  0D95  2D9C               	goto	i1l2434
  6172  0D96                     i1l2432:	
  6173                           
  6174                           ;Main Card V10.0.c: 551: else
  6175                           ;Main Card V10.0.c: 552: bTimerComplete[i] = 1;
  6176  0D96  0873               	movf	TimerCounter@i,w
  6177  0D97  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  6178  0D98  0084               	movwf	4
  6179  0D99  1383               	bcf	3,7	;select IRP bank1
  6180  0D9A  0180               	clrf	0
  6181  0D9B  0A80               	incf	0,f
  6182  0D9C                     i1l2434:	
  6183  0D9C  3001               	movlw	1
  6184  0D9D  07F3               	addwf	TimerCounter@i,f
  6185  0D9E  1803               	skipnc
  6186  0D9F  0AF4               	incf	TimerCounter@i+1,f
  6187  0DA0  3000               	movlw	0
  6188  0DA1  07F4               	addwf	TimerCounter@i+1,f
  6189  0DA2  2D63               	goto	L5
  6190  0DA3                     __end_of_TimerCounter:	
  6191  007E                     btemp	set	126	;btemp
  6192  007E                     wtemp0	set	126


Data Sizes:
    Strings     136
    Constant    39
    Data        5
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      60
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_21(CODE[8]), STR_20(CODE[8]), TransmittedDataHandler@slask_718(BANK0[8]), TransmittedDataHandler@slask_715(BANK0[8]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_13(CODE[14]), STR_12(CODE[14]), 
		 -> TransmittedDataHandler@slask_706(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), STR_4(CODE[10]), STR_2(CODE[10]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _TransiverToReceive->_FindChannel
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   89401
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_3
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   19002
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15837
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1993
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        3     3      0   10771
                                             21 BANK0      3     3      0
                              _Blink
                            _DelayDs
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     796
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   22261
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   22261
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10852
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_3                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     754
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1460
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     754
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     708
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     686
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_3
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C2      12        0.0%
ABS                  0      0      C2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Tue May 09 21:55:40 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006D                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l311 0B63                               l232 01E5  
                             l305 0C4D                               l322 0334                               l406 0C95  
                             l175 06E2                               l264 0B57                               l248 05F3  
                             l338 0FFC                               l259 0BDD                               l380 0CD5  
                             l284 0E7A                               l428 0D34                               l518 0C78  
                             l299 0E99                               l910 0B9A                               l922 0DA6  
                             _GIE 005F             __end_of_DarknessCheck 0D05                               fsr0 0004  
                             indf 0000               __end_of_FindChannel 0466    __end_of_TransmittedDataHandler 023D  
                 ??_timerFunction 0024                      __CFG_LVP$OFF 0000                              l2000 05EE  
                            l2020 0D02                              l2004 05F6                              l2022 0D03  
                            l2030 076A                              l2016 0CE9                              l2026 0765  
                            l2202 020A                              l2044 0784                              l2028 075E  
                            l2054 07C7                              l2046 0788                              l2038 077E  
                            l2118 007F                              l2048 07B6                              l2160 013A  
                            l2152 0114                              l2144 00EE                              l2136 00CC  
                            l2128 00AA                              l2218 0E3A                              l2090 0F06  
                            l2228 0E57                              l2092 0F19                              l2340 035F  
                            l2180 019F                              l2172 017E                              l2412 0F74  
                            l2350 0BD2                              l2246 07D2                              l2326 0323  
                            l2190 01CF                              l2182 01A9                              l2166 015C  
                            l1800 0FDB                              l2416 0F7D                              l2408 0F60  
                            l1804 0FE9                              l2380 0C0F                              l2196 01E8  
                            l2188 01C5                              l2460 0710                              l2452 06F6  
                            l1840 0440                              l1824 038A                              l2480 074E  
                            l2472 0737                              l2464 071D                              l2456 0703  
                            l1842 0418                              l1906 0D0C                              l1922 0DDB  
                            l1844 0451                              l2388 0C29                              l1908 0D1B  
                            l1924 0DE4                              l2476 0744                              l2468 072A  
                            l1934 0BA3                              l1918 0DC5                              l1792 0FA1  
                            l1848 0464                              l1960 0E2B                              l1794 0FAE  
                            l1954 0E09                              l1796 0FBD                              l1980 0575  
                            l1948 0DEB                              l1956 0E22                              l1798 0FCC  
                            l1982 0588                              l1878 0C70                              l1898 0B83  
                            l1998 05AD       __size_of_TransiverToReceive 005C                              STR_1 0684  
                            STR_2 065F                              STR_3 068C                              STR_4 0669  
                            STR_5 065F                              STR_6 0669                              STR_7 06B1  
                            STR_8 06A3                              STR_9 0694                              u1205 0388  
                            u1225 0423                              u1251 0C93                              u1235 0462  
                            u2045 0F50                              u1195 0C57                              u1275 0C79  
                            u1285 0C80                              u2407 0607                              u2417 0EEA  
                            u2427 0F23                              u2437 0375                              u2357 06EA  
                            u2447 044C                              u2367 0F83                              u2457 0C5F  
                            u2377 0559                              u2387 0592                              u2397 05FA  
                            u1925 0332                              u1935 035D                              u1895 07DC  
                            _RBIF 0058                              _WREN 0C62                    ??_eeprom_write 0021  
                            _atoi 075B                              _main 06CB                              _init 0E7C  
                            btemp 007E                              start 0012                     __CFG_IESO$OFF 0000  
                 __end_of_DelayDs 0C6C                  TransmittString@i 003A  __size_of_LightWithSensController 004F  
                 __end_of_ReadSPI 0B26                             ?_atoi 0026                             ?_main 0070  
                           ?_init 0070                             _EEADR 010D                             STR_10 06AA  
                           STR_11 0673                             STR_20 0684                             STR_12 0651  
                           STR_21 068C                             STR_13 0643                             STR_14 069C  
                           STR_15 06C7                             STR_16 06C3                             STR_17 067C  
                   __CFG_WDTE$OFF 0000                             STR_18 06BE                             STR_19 06B8  
                           _CARRY 0018                             _ANSEL 0188             __end_of_OperationMode 0B40  
                           _T1CON 0010                             i1l364 0481                             i1l365 0487  
                           i1l369 04B7                             _TMR1H 000F                             _TMR1L 000E  
                           _PORTA 0005                             _PORTB 0006                             _PORTC 0007  
                           _TRISA 0085                             _TRISB 0086                             _TRISC 0087  
                           _SSPIE 0463                             _Blink 07CC                             _bDark 006C  
                  __CFG_FCMEN$OFF 0000                   __end_of_isdigit 0B85                       _AnalogValue 0CB3  
                           atoi@a 002B                             atoi@s 002D                    __CFG_BOREN$OFF 0000  
                           pclath 000A                   ??_TransiverInit 0035                             status 0003  
                   _intBlinkCycle 0068                             wtemp0 007E                    WriteSPI@buffer 0021  
                __end_of_ChannelP 0629                  __end_of_ChannelR 0636                  __end_of_ChannelS 0643  
                 __end_of_strncmp 0DE7                    __CFG_MCLRE$OFF 0000                     _intClockTimer 00A0  
               _intNumberOfBlinks 00DA                   __initialization 0015                      __end_of_atoi 07CC  
                    __end_of_main 075B                      __end_of_init 0ECF                  __end_of_ReadFIFO 0B75  
                   ReadFIFO@value 0024                       _FindChannel 0364                     ??_RegisterSet 0028  
                          ??_atoi 0028                            ??_main 0065                            ??_init 0020  
                          ?_Blink 0026                            _ADRESH 001E                            _EEDATA 010C  
                          _EECON1 018C                            _EECON2 018D                            _ANSELH 0189  
                __end_of_WriteSPI 0B67                            i1l2432 0D96                            i1l2434 0D9C  
                          i1l2514 04BA                            i1l2540 0518                            i1l2524 04DB  
                          i1l2534 04FF                            i1l2544 0529                            u231_25 04D3  
                          u208_25 0D6C                            u232_25 04EC                            u209_25 0D82  
                          u233_25 050A                            u234_25 0523                            u227_25 04A6  
                       ??_DelayDs 0022                            Blink@i 0029                            Blink@n 0026  
                          _TMR1IF 0060                            _TMR1ON 0080      i1OperationMode@bracketStatus 0071  
                          _SSPBUF 0013                         ??_ReadSPI 0023                            _Mode_0 0B16  
                          _Mode_1 0BC5                            _Mode_2 0B4C                            _Mode_3 0BAC  
                          _Mode_4 0BF9                            _Mode_5 0C13                __size_of_SetRFMode 006F  
            __size_of_eeprom_read 0024                            ___wmul 0C6C                            _tc_int 0466  
            __end_of_eeprom_write 0D61                            _strchr 0B97                            _strlen 0D05  
                          _strstr 0DE7                         ??_isdigit 0020                            saved_w 007E  
             __end_of_RegisterSet 0BF9                     ?_RegisterRead 0070                RegisterRead@adress 0026  
     TransmittedDataHandler@slask 003D       TransmittedDataHandler@value 005D                         ??_strncmp 002B  
                  TransiverInit@i 0036                __size_of_WriteFIFO 000C           __end_of__initialization 0050  
                 eeprom_read@addr 0021           _LightWithSensController 0E2D                     _bChannelFound 00B9  
                   __end_of_Blink 07FF                    __pcstackCOMMON 0070                      __pidataBANK0 07FF  
                    __pidataBANK1 0B1A                      _channelFound 00AF                    _OPTION_REGbits 0081  
                         ??_Blink 0028                 __end_of_SetRFMode 1000                 eeprom_write@value 0020  
                  ??_RegisterRead 0023                        __pbssBANK0 0068                        __pbssBANK1 00A0  
                      __pbssBANK3 0190          __size_ofi1_OperationMode 0009                         ?_ReadFIFO 0070  
      timerFunction@intSetSeconds 0022                AnalogValue@channel 0027                           ?_Mode_0 0070  
                         ?_Mode_1 0070                           ?_Mode_2 0070                           ?_Mode_3 0070  
                         ?_Mode_4 0070                           ?_Mode_5 0070          __size_of_TransmittString 00D2  
                      __pmaintext 06CB                           ?___wmul 0020                        __pintentry 0004  
                         ?_tc_int 0070                         ?_WriteSPI 0070                 __end_of_WriteFIFO 0B4C  
                         ?_strchr 0020                           ?_strlen 0020                       _RegisterSet 0BDF  
                         ?_strstr 002E                     ?_TimerCounter 0070        __end_of_TransiverToReceive 0F2B  
           __end_of_timerFunction 0B97                      ?_AnalogValue 0070                    _intLightOnTime 00D8  
                      __stringtab 060C                        ??_ReadFIFO 0023                           _DelayDs 0C49  
       ??_LightWithSensController 002A                           _ReadSPI 0B1E            __size_of_DarknessCheck 0029  
                 __size_of_Mode_0 0004                   __size_of_Mode_1 001A                   __size_of_Mode_2 000D  
                 __size_of_Mode_3 0019                   __size_of_Mode_4 001A                   __size_of_Mode_5 001A  
      OperationMode@bracketStatus 0021             __size_of_eeprom_write 0030                   __size_of___wmul 0023  
                    ?_FindChannel 0070                         _ANSELbits 0188                        ??_WriteSPI 0020  
                 __size_of_tc_int 00D4                           __ptext1 0E7C                           __ptext2 0F2B  
                         __ptext3 0054                           __ptext4 0DE7                           __ptext5 0DA3  
                         __ptext6 0D05                           __ptext7 0B97                           __ptext8 0D31  
                         __ptext9 075B                           _btnPush 006E                   __size_of_strchr 0015  
                 __size_of_strlen 002C                         _T1CONbits 0010                   __size_of_strstr 0046  
                         _isdigit 0B75                    ??_TimerCounter 0070                           clrloop0 0B27  
                         _strncmp 0DA3              end_of_initialization 0050                      _eeprom_write 0D31  
           __end_of_TransiverInit 0364            __size_of_OperationMode 0009                 ??i1_OperationMode 0070  
                WriteSPI@databyte 0022              __end_of_RegisterRead 0C49                     WriteFIFO@Data 0023  
        ??_TransmittedDataHandler 003C                           strlen@s 0026                   _intBlinkCounter 00B1  
               ??_TransmittString 0037                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                     _DarknessCheck 0CDC                     ??_eeprom_read 0020  
                  __end_of_Mode_0 0B1A                    __end_of_Mode_1 0BDF                    __end_of_Mode_2 0B59  
                  __end_of_Mode_3 0BC5                    __end_of_Mode_4 0C13                    __end_of_Mode_5 0C2D  
                  __end_of___wmul 0C8F                    __end_of_tc_int 053A                    ?_DarknessCheck 0070  
                   _OperationMode 0B37                    __end_of_strchr 0BAC                    __end_of_strlen 0D31  
                  __end_of_strstr 0E2D               start_initialization 0015             _intDarkCheckIntervall 00B3  
      DarknessCheck@darknessValue 0029                         _SetRFMode 0F91              __size_of_AnalogValue 0029  
               __size_of_ReadFIFO 000E          __CFG_FOSC$INTRC_NOCLKOUT 0000                          ??_Mode_0 002A  
                        ??_Mode_1 002A                          ??_Mode_2 002A                          ??_Mode_3 002A  
                        ??_Mode_4 003C                          ??_Mode_5 003C              __end_of_TimerCounter 0DA3  
                        ??___wmul 0024               __end_of_eeprom_read 0CB3                     TimerCounter@i 0073  
                     __pdataBANK0 006F                       __pdataBANK1 00D8                          ??_tc_int 0075  
 __size_of_TransmittedDataHandler 01E9                      ?_RegisterSet 0027                          ??_strchr 0022  
                        ??_strlen 0022                          ??_strstr 002F                    ?_OperationMode 0070  
            __size_of_FindChannel 0102         TransmittString@dataString 0035                 RegisterRead@value 0025  
               __size_of_WriteSPI 000E                       __pbssCOMMON 007C                         ___latbits 0002  
                       _WriteFIFO 0B40                     __pcstackBANK0 0020                      _ReceivedData 0190  
          SetRFMode@mcparam0_read 002D                      _isdigit$1091 0020                        ?_SetRFMode 0070  
                eeprom_write@addr 0022                          ?_DelayDs 0020                 RegisterSet@adress 002A  
                        ?_ReadSPI 0070             __size_of_RegisterRead 001C                _TransiverToReceive 0ECF  
             ?_TransiverToReceive 0070                   ??_DarknessCheck 0028                         __pstrings 060C  
                        ?_isdigit 0070       timerFunction@intTimerNumber 0020                    __size_of_Blink 0033  
                      ?_WriteFIFO 0070                   i1_OperationMode 0B2E              ??_TransiverToReceive 0035  
                    _RegisterRead 0C2D                          ?_strncmp 0028            _TransmittedDataHandler 0054  
               interrupt_function 0004                    ___wmul@product 0024                          _IOCBbits 0096  
                        DelayDs@i 0024                      FindChannel@i 0033                         clear_ram0 0B26  
                     _eeprom_read 0C8F                          _PIE1bits 008C                   _TransmittString 053A  
                        _PIR1bits 000C            __size_of_timerFunction 0012                   ??_OperationMode 0020  
                   SetRFMode@mode 002C                        _ADCON0bits 001F                       __stringbase 061B  
                      _ADCON1bits 009F                 ___wmul@multiplier 0020                          _WPUBbits 0095  
                        _ChannelP 061C                          _ChannelR 0629                          _ChannelS 0636  
        ?_LightWithSensController 0070                       ??_SetRFMode 002B                          _ReadFIFO 0B67  
           __size_of_TimerCounter 0042                  __size_of_DelayDs 0023                  __size_of_ReadSPI 0008  
                  _bTimerComplete 00AA                  _intMinuteCounter 00B7                 _TransiverReadFIFO 0F2B  
                        _WriteSPI 0B59                __end_of__stringtab 061C                  _intSecondCounter 006A  
              ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0B37            __size_of_TransiverInit 0127  
            __size_of_RegisterSet 001A                  RegisterSet@value 0027                       ??_WriteFIFO 0023  
                __size_of_isdigit 0010                      _TimerCounter 0D61                          __ptext10 0B75  
                        __ptext11 0C6C                          __ptext20 0ECF                          __ptext12 0B37  
                        __ptext21 0364                          __ptext13 0B67                          __ptext30 0B16  
                        __ptext22 0F91                          __ptext14 023D                          __ptext31 0E2D  
                        __ptext23 0BDF                          __ptext15 07CC                          __ptext32 0B85  
                        __ptext24 0C2D                          __ptext16 0C13                          __ptext33 0CDC  
                        __ptext25 0B1E                          __ptext17 0BF9                          __ptext34 0C8F  
                        __ptext26 0B59                          __ptext18 053A                          __ptext35 0CB3  
                        __ptext27 0BAC                          __ptext19 0B40                          __ptext36 0C49  
                        __ptext28 0B4C                          __ptext37 0466                          __ptext29 0BC5  
                        __ptext38 0B2E                          __ptext39 0D61               ??_TransiverReadFIFO 005F  
                   _timerFunction 0B85           __end_of_TransmittString 060C   TransmittedDataHandler@slask_706 0045  
 TransmittedDataHandler@slask_715 004D   TransmittedDataHandler@slask_718 0055                  __size_of_strncmp 0044  
                   __size_of_atoi 0071                     __size_of_main 0090                     __size_of_init 0053  
                      strncmp@len 0029                     _bValueFromPot 006F         __end_of_TransiverReadFIFO 0F91  
                        atoi@sign 002A                        DelayDs@cnt 0020                    FindChannel@cnt 0031  
 __end_of_LightWithSensController 0E7C              _intHalfSecondCounter 00B5                        _INTCONbits 000B  
              TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063                          isdigit@c 0021  
                  ?_timerFunction 0020                     ??_AnalogValue 0026                 _TransmittedString 00BA  
                        intlevel1 0000                         strchr@chr 0020                         strchr@ptr 0022  
                   _TransiverInit 023D                         strncmp@s1 002D                         strncmp@s2 0028  
                       stringcode 0616                        _OSCCONbits 008F                     ??_FindChannel 002E  
                ?i1_OperationMode 0070                          strlen@cp 0027                          stringdir 0616  
                        stringtab 060C           ?_TransmittedDataHandler 0070                          strstr@s1 0032  
                        strstr@s2 002E                  ?_TransmittString 0035                     ?_eeprom_write 0020  
                  ?_TransiverInit 0070                      ?_eeprom_read 0070               __end_of_AnalogValue 0CDC  
                      _SSPCONbits 0014              _addressDarknessValue 007C  
