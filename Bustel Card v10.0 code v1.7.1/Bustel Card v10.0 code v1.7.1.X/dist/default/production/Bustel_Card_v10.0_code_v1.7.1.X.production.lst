

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu Mar 30 19:24:50 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.40
    61                           ; Generated 01/12/2016 GMT
    62                           ; 
    63                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F886 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  05FD                     __pidataBANK0:	
   173                           
   174                           ;initializer for _bValueFromPot
   175  05FD  3401               	retlw	1
   176                           
   177                           	psect	idataBANK1
   178  07FE                     __pidataBANK1:	
   179                           
   180                           ;initializer for _intNumberOfBlinks
   181  07FE  3458               	retlw	88
   182  07FF  3402               	retlw	2
   183                           
   184                           	psect	strings
   185  0600                     __pstrings:	
   186  0600                     stringtab:	
   187  0600                     __stringtab:	
   188                           
   189                           ;	String table - string pointers are 1 byte each
   190  0600  1BFF               	btfsc	btemp+1,7
   191  0601  2E0A               	ljmp	stringcode
   192  0602  1383               	bcf	3,7
   193  0603  187F               	btfsc	btemp+1,0
   194  0604  1783               	bsf	3,7
   195  0605  0800               	movf	0,w
   196  0606  0A84               	incf	4,f
   197  0607  1903               	skipnz
   198  0608  0AFF               	incf	btemp+1,f
   199  0609  0008               	return
   200  060A                     stringcode:	
   201  060A                     stringdir:	
   202  060A  3006               	movlw	high stringdir
   203  060B  008A               	movwf	10
   204  060C  0804               	movf	4,w
   205  060D  0A84               	incf	4,f
   206  060E  0782               	addwf	2,f
   207  060F                     __stringbase:	
   208  060F  3400               	retlw	0
   209  0610                     __end_of__stringtab:	
   210  0610                     _ChannelP:	
   211  0610  343F               	retlw	63
   212  0611  3447               	retlw	71
   213  0612  344F               	retlw	79
   214  0613  3457               	retlw	87
   215  0614  345F               	retlw	95
   216  0615  3477               	retlw	119
   217  0616  347E               	retlw	126
   218  0617  347F               	retlw	127
   219  0618  3486               	retlw	134
   220  0619  3487               	retlw	135
   221  061A  3437               	retlw	55
   222  061B  3467               	retlw	103
   223  061C  346F               	retlw	111
   224  061D                     __end_of_ChannelP:	
   225  061D                     _ChannelR:	
   226  061D  344F               	retlw	79
   227  061E  3459               	retlw	89
   228  061F  3463               	retlw	99
   229  0620  346D               	retlw	109
   230  0621  3477               	retlw	119
   231  0622  3495               	retlw	149
   232  0623  349F               	retlw	159
   233  0624  349F               	retlw	159
   234  0625  34A9               	retlw	169
   235  0626  34A9               	retlw	169
   236  0627  3445               	retlw	69
   237  0628  3481               	retlw	129
   238  0629  348B               	retlw	139
   239  062A                     __end_of_ChannelR:	
   240  062A                     _ChannelS:	
   241  062A  3418               	retlw	24
   242  062B  341B               	retlw	27
   243  062C  341E               	retlw	30
   244  062D  3421               	retlw	33
   245  062E  3424               	retlw	36
   246  062F  342D               	retlw	45
   247  0630  347B               	retlw	123
   248  0631  3430               	retlw	48
   249  0632  347E               	retlw	126
   250  0633  3433               	retlw	51
   251  0634  3415               	retlw	21
   252  0635  3427               	retlw	39
   253  0636  342A               	retlw	42
   254  0637                     __end_of_ChannelS:	
   255  001F                     _ADCON0bits	set	31
   256  001E                     _ADRESH	set	30
   257  000B                     _INTCONbits	set	11
   258  000C                     _PIR1bits	set	12
   259  0005                     _PORTA	set	5
   260  0005                     _PORTAbits	set	5
   261  0006                     _PORTB	set	6
   262  0006                     _PORTBbits	set	6
   263  0007                     _PORTC	set	7
   264  0007                     _PORTCbits	set	7
   265  0013                     _SSPBUF	set	19
   266  0014                     _SSPCONbits	set	20
   267  0010                     _T1CON	set	16
   268  0010                     _T1CONbits	set	16
   269  000F                     _TMR1H	set	15
   270  000E                     _TMR1L	set	14
   271  0018                     _CARRY	set	24
   272  005F                     _GIE	set	95
   273  0058                     _RBIF	set	88
   274  0060                     _TMR1IF	set	96
   275  0080                     _TMR1ON	set	128
   276  009F                     _ADCON1bits	set	159
   277  0096                     _IOCBbits	set	150
   278  0081                     _OPTION_REGbits	set	129
   279  008F                     _OSCCONbits	set	143
   280  008C                     _PIE1bits	set	140
   281  0094                     _SSPSTATbits	set	148
   282  0085                     _TRISA	set	133
   283  0086                     _TRISB	set	134
   284  0087                     _TRISC	set	135
   285  0095                     _WPUBbits	set	149
   286  0463                     _SSPIE	set	1123
   287  010D                     _EEADR	set	269
   288  010C                     _EEDATA	set	268
   289  0188                     _ANSEL	set	392
   290  0189                     _ANSELH	set	393
   291  0188                     _ANSELbits	set	392
   292  018C                     _EECON1	set	396
   293  018D                     _EECON2	set	397
   294  0C60                     _RD	set	3168
   295  0C61                     _WR	set	3169
   296  0C62                     _WREN	set	3170
   297  0637                     STR_2:	
   298  0637  344E               	retlw	78	;'N'
   299  0638  3431               	retlw	49	;'1'
   300  0639  3442               	retlw	66	;'B'
   301  063A  344C               	retlw	76	;'L'
   302  063B  3449               	retlw	73	;'I'
   303  063C  344E               	retlw	78	;'N'
   304  063D  344B               	retlw	75	;'K'
   305  063E  3453               	retlw	83	;'S'
   306  063F  3454               	retlw	84	;'T'
   307  0640  3441               	retlw	65	;'A'
   308  0641  3452               	retlw	82	;'R'
   309  0642  3454               	retlw	84	;'T'
   310  0643  3445               	retlw	69	;'E'
   311  0644  3444               	retlw	68	;'D'
   312  0645  3400               	retlw	0
   313  0646                     STR_4:	
   314  0646  344E               	retlw	78	;'N'
   315  0647  3432               	retlw	50	;'2'
   316  0648  3442               	retlw	66	;'B'
   317  0649  344C               	retlw	76	;'L'
   318  064A  3449               	retlw	73	;'I'
   319  064B  344E               	retlw	78	;'N'
   320  064C  344B               	retlw	75	;'K'
   321  064D  3453               	retlw	83	;'S'
   322  064E  3454               	retlw	84	;'T'
   323  064F  3441               	retlw	65	;'A'
   324  0650  3452               	retlw	82	;'R'
   325  0651  3454               	retlw	84	;'T'
   326  0652  3445               	retlw	69	;'E'
   327  0653  3444               	retlw	68	;'D'
   328  0654  3400               	retlw	0
   329  0655                     STR_13:	
   330  0655  344E               	retlw	78	;'N'
   331  0656  346F               	retlw	111	;'o'
   332  0657  3474               	retlw	116	;'t'
   333  0658  3420               	retlw	32	;' '
   334  0659  3444               	retlw	68	;'D'
   335  065A  3461               	retlw	97	;'a'
   336  065B  3472               	retlw	114	;'r'
   337  065C  346B               	retlw	107	;'k'
   338  065D  3420               	retlw	32	;' '
   339  065E  3420               	retlw	32	;' '
   340  065F  3420               	retlw	32	;' '
   341  0660  3420               	retlw	32	;' '
   342  0661  3420               	retlw	32	;' '
   343  0662  3400               	retlw	0
   344  0663                     STR_12:	
   345  0663  3449               	retlw	73	;'I'
   346  0664  3474               	retlw	116	;'t'
   347  0665  3427               	retlw	39	;'''
   348  0666  3473               	retlw	115	;'s'
   349  0667  3420               	retlw	32	;' '
   350  0668  3444               	retlw	68	;'D'
   351  0669  3461               	retlw	97	;'a'
   352  066A  3472               	retlw	114	;'r'
   353  066B  346B               	retlw	107	;'k'
   354  066C  3420               	retlw	32	;' '
   355  066D  3420               	retlw	32	;' '
   356  066E  3420               	retlw	32	;' '
   357  066F  3420               	retlw	32	;' '
   358  0670  3400               	retlw	0
   359  0671                     STR_11:	
   360  0671  3444               	retlw	68	;'D'
   361  0672  3441               	retlw	65	;'A'
   362  0673  3452               	retlw	82	;'R'
   363  0674  344B               	retlw	75	;'K'
   364  0675  3443               	retlw	67	;'C'
   365  0676  3441               	retlw	65	;'A'
   366  0677  344C               	retlw	76	;'L'
   367  0678  3443               	retlw	67	;'C'
   368  0679  3400               	retlw	0
   369  067A                     STR_17:	
   370  067A  3443               	retlw	67	;'C'
   371  067B  3448               	retlw	72	;'H'
   372  067C  3453               	retlw	83	;'S'
   373  067D  3454               	retlw	84	;'T'
   374  067E  3441               	retlw	65	;'A'
   375  067F  3454               	retlw	84	;'T'
   376  0680  3445               	retlw	69	;'E'
   377  0681  3400               	retlw	0
   378  0682                     STR_1:	
   379  0682  344E               	retlw	78	;'N'
   380  0683  3431               	retlw	49	;'1'
   381  0684  3442               	retlw	66	;'B'
   382  0685  344C               	retlw	76	;'L'
   383  0686  3449               	retlw	73	;'I'
   384  0687  344E               	retlw	78	;'N'
   385  0688  344B               	retlw	75	;'K'
   386  0689  3400               	retlw	0
   387  068A                     STR_3:	
   388  068A  344E               	retlw	78	;'N'
   389  068B  3432               	retlw	50	;'2'
   390  068C  3442               	retlw	66	;'B'
   391  068D  344C               	retlw	76	;'L'
   392  068E  3449               	retlw	73	;'I'
   393  068F  344E               	retlw	78	;'N'
   394  0690  344B               	retlw	75	;'K'
   395  0691  3400               	retlw	0
   396  0692                     STR_9:	
   397  0692  3453               	retlw	83	;'S'
   398  0693  3445               	retlw	69	;'E'
   399  0694  344E               	retlw	78	;'N'
   400  0695  3453               	retlw	83	;'S'
   401  0696  3456               	retlw	86	;'V'
   402  0697  3441               	retlw	65	;'A'
   403  0698  344C               	retlw	76	;'L'
   404  0699  3400               	retlw	0
   405  069A                     STR_14:	
   406  069A  3453               	retlw	83	;'S'
   407  069B  3454               	retlw	84	;'T'
   408  069C  3441               	retlw	65	;'A'
   409  069D  3454               	retlw	84	;'T'
   410  069E  3445               	retlw	69	;'E'
   411  069F  343F               	retlw	63	;'?'
   412  06A0  3400               	retlw	0
   413  06A1                     STR_8:	
   414  06A1  3446               	retlw	70	;'F'
   415  06A2  344C               	retlw	76	;'L'
   416  06A3  3441               	retlw	65	;'A'
   417  06A4  3453               	retlw	83	;'S'
   418  06A5  3448               	retlw	72	;'H'
   419  06A6  3442               	retlw	66	;'B'
   420  06A7  3400               	retlw	0
   421  06A8                     STR_10:	
   422  06A8  3450               	retlw	80	;'P'
   423  06A9  344F               	retlw	79	;'O'
   424  06AA  3454               	retlw	84	;'T'
   425  06AB  3456               	retlw	86	;'V'
   426  06AC  3441               	retlw	65	;'A'
   427  06AD  344C               	retlw	76	;'L'
   428  06AE  3400               	retlw	0
   429  06AF                     STR_7:	
   430  06AF  3446               	retlw	70	;'F'
   431  06B0  344C               	retlw	76	;'L'
   432  06B1  3441               	retlw	65	;'A'
   433  06B2  3453               	retlw	83	;'S'
   434  06B3  3448               	retlw	72	;'H'
   435  06B4  344C               	retlw	76	;'L'
   436  06B5  3400               	retlw	0
   437  06B6                     STR_19:	
   438  06B6  3453               	retlw	83	;'S'
   439  06B7  3445               	retlw	69	;'E'
   440  06B8  3454               	retlw	84	;'T'
   441  06B9  3444               	retlw	68	;'D'
   442  06BA  3456               	retlw	86	;'V'
   443  06BB  3400               	retlw	0
   444  06BC                     STR_18:	
   445  06BC  3452               	retlw	82	;'R'
   446  06BD  344D               	retlw	77	;'M'
   447  06BE  3444               	retlw	68	;'D'
   448  06BF  3456               	retlw	86	;'V'
   449  06C0  3400               	retlw	0
   450  06C1                     STR_16:	
   451  06C1  3450               	retlw	80	;'P'
   452  06C2  3449               	retlw	73	;'I'
   453  06C3  3443               	retlw	67	;'C'
   454  06C4  3400               	retlw	0
   455  06C5                     STR_15:	
   456  06C5  3450               	retlw	80	;'P'
   457  06C6  346F               	retlw	111	;'o'
   458  06C7  3474               	retlw	116	;'t'
   459  06C8  3400               	retlw	0
   460  0637                     
   461                           ; #config settings
   462  0000                     
   463                           	psect	cinit
   464  0015                     start_initialization:	
   465  0015                     __initialization:	
   466                           
   467                           ; Initialize objects allocated to BANK1
   468  0015  1683               	bsf	3,5	;RP0=1, select bank1
   469  0016  1303               	bcf	3,6	;RP1=0, select bank1
   470  0017  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   471  001C  00D7               	movwf	__pdataBANK1& (0+127)
   472  001D  120A  118A  27FF  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   473  0022  00D8               	movwf	(__pdataBANK1+1)& (0+127)
   474                           
   475                           ; Initialize objects allocated to BANK0
   476  0023  1283               	bcf	3,5	;RP0=0, select bank0
   477  0024  1303               	bcf	3,6	;RP1=0, select bank0
   478  0025  120A  118A  25FD  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   479  002A  00EF               	movwf	__pdataBANK0& (0+127)
   480                           
   481                           ; Clear objects allocated to BANK3
   482  002B  1783               	bsf	3,7	;select IRP bank2
   483  002C  3090               	movlw	low __pbssBANK3
   484  002D  0084               	movwf	4
   485  002E  30B8               	movlw	low (__pbssBANK3+40)
   486  002F  120A  158A  2377  120A  118A  	fcall	clear_ram0
   487                           
   488                           ; Clear objects allocated to BANK1
   489  0034  1383               	bcf	3,7	;select IRP bank0
   490  0035  30A0               	movlw	low __pbssBANK1
   491  0036  0084               	movwf	4
   492  0037  30D7               	movlw	low (__pbssBANK1+55)
   493  0038  120A  158A  2377   	fcall	clear_ram0
   494                           
   495                           ; Clear objects allocated to BANK0
   496  003B  01E8               	clrf	__pbssBANK0& (0+127)
   497  003C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   498  003D  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   499  003E  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   500  003F  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   501  0040  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   502  0041  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   503                           
   504                           ; Clear objects allocated to COMMON
   505  0042  01FC               	clrf	__pbssCOMMON& (0+127)
   506  0043  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   507  0044                     end_of_initialization:	
   508                           ;End of C runtime variable initialization code
   509                           
   510  0044                     __end_of__initialization:	
   511  0044  0183               	clrf	3
   512  0045  120A  118A  2EC9   	ljmp	_main	;jump to C main() function
   513                           
   514                           	psect	bssCOMMON
   515  007C                     __pbssCOMMON:	
   516  007C                     _addressDarknessValue:	
   517  007C                     	ds	2
   518                           
   519                           	psect	bssBANK0
   520  0068                     __pbssBANK0:	
   521  0068                     _intBlinkCycle:	
   522  0068                     	ds	2
   523  006A                     _intSecondCounter:	
   524  006A                     	ds	2
   525  006C                     _bChannelFound:	
   526  006C                     	ds	1
   527  006D                     _bDark:	
   528  006D                     	ds	1
   529  006E                     _bTransiverModeReceive:	
   530  006E                     	ds	1
   531                           
   532                           	psect	dataBANK0
   533  006F                     __pdataBANK0:	
   534  006F                     _bValueFromPot:	
   535  006F                     	ds	1
   536                           
   537                           	psect	bssBANK1
   538  00A0                     __pbssBANK1:	
   539  00A0                     _intClockTimer:	
   540  00A0                     	ds	10
   541  00AA                     _bTimerComplete:	
   542  00AA                     	ds	5
   543  00AF                     _channelFound:	
   544  00AF                     	ds	2
   545  00B1                     _intBlinkCounter:	
   546  00B1                     	ds	2
   547  00B3                     _intDarkCheckIntervall:	
   548  00B3                     	ds	2
   549  00B5                     _intHalfSecondCounter:	
   550  00B5                     	ds	2
   551  00B7                     _intMinuteCounter:	
   552  00B7                     	ds	2
   553  00B9                     _TransmittedString:	
   554  00B9                     	ds	30
   555                           
   556                           	psect	dataBANK1
   557  00D7                     __pdataBANK1:	
   558  00D7                     _intNumberOfBlinks:	
   559  00D7                     	ds	2
   560                           
   561                           	psect	bssBANK3
   562  0190                     __pbssBANK3:	
   563  0190                     _ReceivedData:	
   564  0190                     	ds	40
   565                           
   566                           	psect	clrtext
   567  0B77                     clear_ram0:	
   568                           ;	Called with FSR containing the base address, and
   569                           ;	W with the last address+1
   570                           
   571  0B77  0064               	clrwdt	;clear the watchdog before getting into this loop
   572  0B78                     clrloop0:	
   573  0B78  0180               	clrf	0	;clear RAM location pointed to by FSR
   574  0B79  0A84               	incf	4,f	;increment pointer
   575  0B7A  0604               	xorwf	4,w	;XOR with final address
   576  0B7B  1903               	btfsc	3,2	;have we reached the end yet?
   577  0B7C  3400               	retlw	0	;all done for this memory range, return
   578  0B7D  0604               	xorwf	4,w	;XOR again to restore value
   579  0B7E  2B78               	goto	clrloop0	;do the next byte
   580                           
   581                           	psect	cstackCOMMON
   582  0070                     __pcstackCOMMON:	
   583  0070                     ?_isdigit:	
   584  0070                     ?_init:	
   585                           ; 1 bit 
   586                           
   587  0070                     ?_TransiverInit:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_OperationMode:	
   591                           ; 1 bytes @ 0x0
   592                           
   593  0070                     ?_Mode_0:	
   594                           ; 1 bytes @ 0x0
   595                           
   596  0070                     ?_Mode_1:	
   597                           ; 1 bytes @ 0x0
   598                           
   599  0070                     ?_Mode_2:	
   600                           ; 1 bytes @ 0x0
   601                           
   602  0070                     ?_Mode_3:	
   603                           ; 1 bytes @ 0x0
   604                           
   605  0070                     ?_Mode_4:	
   606                           ; 1 bytes @ 0x0
   607                           
   608  0070                     ?_Mode_5:	
   609                           ; 1 bytes @ 0x0
   610                           
   611  0070                     ?_TransiverToReceive:	
   612                           ; 1 bytes @ 0x0
   613                           
   614  0070                     ?_TransiverReadFIFO:	
   615                           ; 1 bytes @ 0x0
   616                           
   617  0070                     ?_SetRFMode:	
   618                           ; 1 bytes @ 0x0
   619                           
   620  0070                     ?_RegisterRead:	
   621                           ; 1 bytes @ 0x0
   622                           
   623  0070                     ?_FindChannel:	
   624                           ; 1 bytes @ 0x0
   625                           
   626  0070                     ?_ReadFIFO:	
   627                           ; 1 bytes @ 0x0
   628                           
   629  0070                     ?_TransmittedDataHandler:	
   630                           ; 1 bytes @ 0x0
   631                           
   632  0070                     ?_AnalogValue:	
   633                           ; 1 bytes @ 0x0
   634                           
   635  0070                     ?_DarknessCheck:	
   636                           ; 1 bytes @ 0x0
   637                           
   638  0070                     ?_eeprom_read:	
   639                           ; 1 bytes @ 0x0
   640                           
   641  0070                     ?_WriteFIFO:	
   642                           ; 1 bytes @ 0x0
   643                           
   644  0070                     ?_LightWithSensController:	
   645                           ; 1 bytes @ 0x0
   646                           
   647  0070                     ?_main:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0070                     ?_TimerCounter:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0070                     ??_TimerCounter:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0070                     ?_WriteSPI:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0070                     ?_ReadSPI:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0070                     ?_tc_int:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0070                     ?i1_OperationMode:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0070                     ??i1_OperationMode:	
   669                           ; 1 bytes @ 0x0
   670                           
   671                           
   672                           ; 1 bytes @ 0x0
   673  0070                     	ds	1
   674  0071                     i1OperationMode@bracketStatus:	
   675                           
   676                           ; 1 bytes @ 0x1
   677  0071                     	ds	2
   678  0073                     TimerCounter@i:	
   679                           
   680                           ; 2 bytes @ 0x3
   681  0073                     	ds	2
   682  0075                     ??_tc_int:	
   683                           
   684                           ; 1 bytes @ 0x5
   685  0075                     	ds	7
   686                           
   687                           	psect	cstackBANK0
   688  0020                     __pcstackBANK0:	
   689  0020                     ??_init:	
   690  0020                     ??_OperationMode:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0020                     ?_timerFunction:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0020                     ?_DelayDs:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0020                     ??_eeprom_read:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0020                     ?_eeprom_write:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0020                     ??_isdigit:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0020                     ?_strchr:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0020                     ??_WriteSPI:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0020                     ?_strlen:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0020                     ?___wmul:	
   718                           ; 2 bytes @ 0x0
   719                           
   720  0020                     eeprom_write@value:	
   721                           ; 2 bytes @ 0x0
   722                           
   723  0020                     _isdigit$1088:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0020                     timerFunction@intTimerNumber:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0020                     DelayDs@cnt:	
   730                           ; 2 bytes @ 0x0
   731                           
   732  0020                     ___wmul@multiplier:	
   733                           ; 2 bytes @ 0x0
   734                           
   735  0020                     strchr@chr:	
   736                           ; 2 bytes @ 0x0
   737                           
   738                           
   739                           ; 2 bytes @ 0x0
   740  0020                     	ds	1
   741  0021                     ??_eeprom_write:	
   742  0021                     WriteSPI@buffer:	
   743                           ; 1 bytes @ 0x1
   744                           
   745  0021                     OperationMode@bracketStatus:	
   746                           ; 1 bytes @ 0x1
   747                           
   748  0021                     eeprom_read@addr:	
   749                           ; 1 bytes @ 0x1
   750                           
   751  0021                     isdigit@c:	
   752                           ; 1 bytes @ 0x1
   753                           
   754                           
   755                           ; 1 bytes @ 0x1
   756  0021                     	ds	1
   757  0022                     ??_DelayDs:	
   758  0022                     ??_strlen:	
   759                           ; 1 bytes @ 0x2
   760                           
   761  0022                     ??_strchr:	
   762                           ; 1 bytes @ 0x2
   763                           
   764  0022                     WriteSPI@databyte:	
   765                           ; 1 bytes @ 0x2
   766                           
   767  0022                     eeprom_write@addr:	
   768                           ; 1 bytes @ 0x2
   769                           
   770  0022                     strchr@ptr:	
   771                           ; 1 bytes @ 0x2
   772                           
   773  0022                     timerFunction@intSetSeconds:	
   774                           ; 1 bytes @ 0x2
   775                           
   776  0022                     ___wmul@multiplicand:	
   777                           ; 2 bytes @ 0x2
   778                           
   779                           
   780                           ; 2 bytes @ 0x2
   781  0022                     	ds	1
   782  0023                     ??_RegisterRead:	
   783  0023                     ??_ReadFIFO:	
   784                           ; 1 bytes @ 0x3
   785                           
   786  0023                     ??_WriteFIFO:	
   787                           ; 1 bytes @ 0x3
   788                           
   789  0023                     ??_ReadSPI:	
   790                           ; 1 bytes @ 0x3
   791                           
   792  0023                     WriteFIFO@Data:	
   793                           ; 1 bytes @ 0x3
   794                           
   795                           
   796                           ; 1 bytes @ 0x3
   797  0023                     	ds	1
   798  0024                     ??_timerFunction:	
   799  0024                     ??___wmul:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0024                     ReadFIFO@value:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0024                     DelayDs@i:	
   806                           ; 1 bytes @ 0x4
   807                           
   808  0024                     ___wmul@product:	
   809                           ; 2 bytes @ 0x4
   810                           
   811                           
   812                           ; 2 bytes @ 0x4
   813  0024                     	ds	1
   814  0025                     RegisterRead@value:	
   815                           
   816                           ; 1 bytes @ 0x5
   817  0025                     	ds	1
   818  0026                     ??_AnalogValue:	
   819  0026                     ?_Blink:	
   820                           ; 1 bytes @ 0x6
   821                           
   822  0026                     ?_atoi:	
   823                           ; 1 bytes @ 0x6
   824                           
   825  0026                     RegisterRead@adress:	
   826                           ; 2 bytes @ 0x6
   827                           
   828  0026                     strlen@s:	
   829                           ; 1 bytes @ 0x6
   830                           
   831  0026                     Blink@n:	
   832                           ; 1 bytes @ 0x6
   833                           
   834                           
   835                           ; 2 bytes @ 0x6
   836  0026                     	ds	1
   837  0027                     ?_RegisterSet:	
   838  0027                     RegisterSet@value:	
   839                           ; 1 bytes @ 0x7
   840                           
   841  0027                     AnalogValue@channel:	
   842                           ; 1 bytes @ 0x7
   843                           
   844  0027                     strlen@cp:	
   845                           ; 1 bytes @ 0x7
   846                           
   847                           
   848                           ; 1 bytes @ 0x7
   849  0027                     	ds	1
   850  0028                     ??_RegisterSet:	
   851  0028                     ??_DarknessCheck:	
   852                           ; 1 bytes @ 0x8
   853                           
   854  0028                     ??_atoi:	
   855                           ; 1 bytes @ 0x8
   856                           
   857  0028                     ??_Blink:	
   858                           ; 1 bytes @ 0x8
   859                           
   860  0028                     ?_strncmp:	
   861                           ; 1 bytes @ 0x8
   862                           
   863  0028                     strncmp@s2:	
   864                           ; 2 bytes @ 0x8
   865                           
   866                           
   867                           ; 1 bytes @ 0x8
   868  0028                     	ds	1
   869  0029                     DarknessCheck@darknessValue:	
   870  0029                     Blink@i:	
   871                           ; 1 bytes @ 0x9
   872                           
   873  0029                     strncmp@len:	
   874                           ; 2 bytes @ 0x9
   875                           
   876                           
   877                           ; 2 bytes @ 0x9
   878  0029                     	ds	1
   879  002A                     ??_Mode_0:	
   880  002A                     ??_Mode_1:	
   881                           ; 1 bytes @ 0xA
   882                           
   883  002A                     ??_Mode_2:	
   884                           ; 1 bytes @ 0xA
   885                           
   886  002A                     ??_Mode_3:	
   887                           ; 1 bytes @ 0xA
   888                           
   889  002A                     ??_LightWithSensController:	
   890                           ; 1 bytes @ 0xA
   891                           
   892  002A                     RegisterSet@adress:	
   893                           ; 1 bytes @ 0xA
   894                           
   895  002A                     atoi@sign:	
   896                           ; 1 bytes @ 0xA
   897                           
   898                           
   899                           ; 1 bytes @ 0xA
   900  002A                     	ds	1
   901  002B                     ??_SetRFMode:	
   902  002B                     ??_strncmp:	
   903                           ; 1 bytes @ 0xB
   904                           
   905  002B                     atoi@a:	
   906                           ; 1 bytes @ 0xB
   907                           
   908                           
   909                           ; 2 bytes @ 0xB
   910  002B                     	ds	1
   911  002C                     SetRFMode@mode:	
   912                           
   913                           ; 1 bytes @ 0xC
   914  002C                     	ds	1
   915  002D                     SetRFMode@mcparam0_read:	
   916  002D                     atoi@s:	
   917                           ; 1 bytes @ 0xD
   918                           
   919  002D                     strncmp@s1:	
   920                           ; 1 bytes @ 0xD
   921                           
   922                           
   923                           ; 1 bytes @ 0xD
   924  002D                     	ds	1
   925  002E                     ??_FindChannel:	
   926  002E                     ?_strstr:	
   927                           ; 1 bytes @ 0xE
   928                           
   929  002E                     strstr@s2:	
   930                           ; 1 bytes @ 0xE
   931                           
   932                           
   933                           ; 1 bytes @ 0xE
   934  002E                     	ds	1
   935  002F                     ??_strstr:	
   936                           
   937                           ; 1 bytes @ 0xF
   938  002F                     	ds	2
   939  0031                     FindChannel@cnt:	
   940                           
   941                           ; 2 bytes @ 0x11
   942  0031                     	ds	1
   943  0032                     strstr@s1:	
   944                           
   945                           ; 1 bytes @ 0x12
   946  0032                     	ds	1
   947  0033                     FindChannel@i:	
   948                           
   949                           ; 2 bytes @ 0x13
   950  0033                     	ds	2
   951  0035                     ??_TransiverInit:	
   952  0035                     ??_TransiverToReceive:	
   953                           ; 1 bytes @ 0x15
   954                           
   955  0035                     ?_TransmittString:	
   956                           ; 1 bytes @ 0x15
   957                           
   958  0035                     TransmittString@dataString:	
   959                           ; 1 bytes @ 0x15
   960                           
   961                           
   962                           ; 2 bytes @ 0x15
   963  0035                     	ds	2
   964  0037                     ??_TransmittString:	
   965                           
   966                           ; 1 bytes @ 0x17
   967  0037                     	ds	3
   968  003A                     TransmittString@i:	
   969                           
   970                           ; 2 bytes @ 0x1A
   971  003A                     	ds	2
   972  003C                     ??_Mode_4:	
   973  003C                     ??_Mode_5:	
   974                           ; 1 bytes @ 0x1C
   975                           
   976  003C                     ??_TransmittedDataHandler:	
   977                           ; 1 bytes @ 0x1C
   978                           
   979                           
   980                           ; 1 bytes @ 0x1C
   981  003C                     	ds	1
   982  003D                     TransmittedDataHandler@slask:	
   983                           
   984                           ; 8 bytes @ 0x1D
   985  003D                     	ds	8
   986  0045                     TransmittedDataHandler@slask_704:	
   987                           
   988                           ; 8 bytes @ 0x25
   989  0045                     	ds	8
   990  004D                     TransmittedDataHandler@slask_713:	
   991                           
   992                           ; 8 bytes @ 0x2D
   993  004D                     	ds	8
   994  0055                     TransmittedDataHandler@slask_716:	
   995                           
   996                           ; 8 bytes @ 0x35
   997  0055                     	ds	8
   998  005D                     TransmittedDataHandler@value:	
   999                           
  1000                           ; 2 bytes @ 0x3D
  1001  005D                     	ds	2
  1002  005F                     ??_TransiverReadFIFO:	
  1003                           
  1004                           ; 1 bytes @ 0x3F
  1005  005F                     	ds	2
  1006  0061                     TransiverReadFIFO@i:	
  1007                           
  1008                           ; 2 bytes @ 0x41
  1009  0061                     	ds	2
  1010  0063                     TransiverReadFIFO@j:	
  1011                           
  1012                           ; 2 bytes @ 0x43
  1013  0063                     	ds	2
  1014  0065                     ??_main:	
  1015                           
  1016                           ; 1 bytes @ 0x45
  1017  0065                     	ds	3
  1018                           
  1019                           	psect	maintext
  1020  06C9                     __pmaintext:	
  1021 ;;
  1022 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1023 ;;
  1024 ;; *************** function _main *****************
  1025 ;; Defined at:
  1026 ;;		line 119 in file "../Main Card V10.0.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;		None
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;		None
  1031 ;; Return value:  Size  Location     Type
  1032 ;;                  1    wreg      void 
  1033 ;; Registers used:
  1034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1035 ;; Tracked objects:
  1036 ;;		On entry : B00/0
  1037 ;;		On exit  : 0/0
  1038 ;;		Unchanged: 0/0
  1039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1040 ;;      Params:         0       0       0       0       0
  1041 ;;      Locals:         0       0       0       0       0
  1042 ;;      Temps:          0       3       0       0       0
  1043 ;;      Totals:         0       3       0       0       0
  1044 ;;Total ram usage:        3 bytes
  1045 ;; Hardware stack levels required when called:   10
  1046 ;; This function calls:
  1047 ;;		_Mode_0
  1048 ;;		_Mode_1
  1049 ;;		_Mode_2
  1050 ;;		_Mode_3
  1051 ;;		_Mode_4
  1052 ;;		_Mode_5
  1053 ;;		_OperationMode
  1054 ;;		_TransiverInit
  1055 ;;		_TransiverReadFIFO
  1056 ;;		_TransiverToReceive
  1057 ;;		_init
  1058 ;; This function is called by:
  1059 ;;		Startup code after reset
  1060 ;; This function uses a non-reentrant model
  1061 ;;
  1062                           
  1063                           
  1064                           ;psect for function _main
  1065  06C9                     _main:	
  1066                           
  1067                           ;Main Card V10.0.c: 122: init();
  1068                           
  1069                           ;incstack = 0
  1070 ;; hardware stack exceeded
  1071                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1072  06C9  120A  158A  267C  120A  118A  	fcall	_init
  1073                           
  1074                           ;Main Card V10.0.c: 124: _delay((unsigned long)((800)*(4000000/4000.0)));
  1075  06CE  3005               	movlw	5
  1076  06CF  1283               	bcf	3,5	;RP0=0, select bank0
  1077  06D0  1303               	bcf	3,6	;RP1=0, select bank0
  1078  06D1  00E7               	movwf	??_main+2
  1079  06D2  300F               	movlw	15
  1080  06D3  00E6               	movwf	??_main+1
  1081  06D4  30F0               	movlw	240
  1082  06D5  00E5               	movwf	??_main
  1083  06D6                     u2277:	
  1084  06D6  0BE5               	decfsz	??_main,f
  1085  06D7  2ED6               	goto	u2277
  1086  06D8  0BE6               	decfsz	??_main+1,f
  1087  06D9  2ED6               	goto	u2277
  1088  06DA  0BE7               	decfsz	??_main+2,f
  1089  06DB  2ED6               	goto	u2277
  1090  06DC  0000               	nop
  1091                           
  1092                           ;Main Card V10.0.c: 125: TransiverInit();
  1093  06DD  120A  118A  2359  120A  118A  	fcall	_TransiverInit
  1094  06E2                     l2416:	
  1095                           ;Main Card V10.0.c: 127: while(1)
  1096                           
  1097                           
  1098                           ;Main Card V10.0.c: 128: {
  1099                           ;Main Card V10.0.c: 129: if(OperationMode() == 0)
  1100  06E2  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1101  06E7  3A00               	xorlw	0
  1102  06E8  1D03               	skipz
  1103  06E9  2EEF               	goto	l2420
  1104                           
  1105                           ;Main Card V10.0.c: 130: {
  1106                           ;Main Card V10.0.c: 131: Mode_0();
  1107  06EA  120A  158A  236B  120A  118A  	fcall	_Mode_0
  1108  06EF                     l2420:	
  1109                           
  1110                           ;Main Card V10.0.c: 132: }
  1111                           ;Main Card V10.0.c: 133: if(OperationMode() == 1)
  1112  06EF  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1113  06F4  3A01               	xorlw	1
  1114  06F5  1D03               	skipz
  1115  06F6  2EFC               	goto	l2424
  1116                           
  1117                           ;Main Card V10.0.c: 134: {
  1118                           ;Main Card V10.0.c: 135: Mode_1();
  1119  06F7  120A  158A  2438  120A  118A  	fcall	_Mode_1
  1120  06FC                     l2424:	
  1121                           
  1122                           ;Main Card V10.0.c: 136: }
  1123                           ;Main Card V10.0.c: 138: if(OperationMode() == 2)
  1124  06FC  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1125  0701  3A02               	xorlw	2
  1126  0702  1D03               	skipz
  1127  0703  2F09               	goto	l2428
  1128                           
  1129                           ;Main Card V10.0.c: 139: {
  1130                           ;Main Card V10.0.c: 140: Mode_2();
  1131  0704  120A  158A  239D  120A  118A  	fcall	_Mode_2
  1132  0709                     l2428:	
  1133                           
  1134                           ;Main Card V10.0.c: 141: }
  1135                           ;Main Card V10.0.c: 142: if(OperationMode() == 3)
  1136  0709  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1137  070E  3A03               	xorlw	3
  1138  070F  1D03               	skipz
  1139  0710  2F16               	goto	l2432
  1140                           
  1141                           ;Main Card V10.0.c: 143: {
  1142                           ;Main Card V10.0.c: 144: Mode_3();
  1143  0711  120A  158A  241F  120A  118A  	fcall	_Mode_3
  1144  0716                     l2432:	
  1145                           
  1146                           ;Main Card V10.0.c: 145: }
  1147                           ;Main Card V10.0.c: 147: if(OperationMode() == 4)
  1148  0716  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1149  071B  3A04               	xorlw	4
  1150  071C  1D03               	skipz
  1151  071D  2F23               	goto	l2436
  1152                           
  1153                           ;Main Card V10.0.c: 148: {
  1154                           ;Main Card V10.0.c: 149: Mode_4();
  1155  071E  120A  158A  23D6  120A  118A  	fcall	_Mode_4
  1156  0723                     l2436:	
  1157                           
  1158                           ;Main Card V10.0.c: 150: }
  1159                           ;Main Card V10.0.c: 152: if(OperationMode() == 5)
  1160  0723  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1161  0728  3A05               	xorlw	5
  1162  0729  1D03               	skipz
  1163  072A  2F30               	goto	l2440
  1164                           
  1165                           ;Main Card V10.0.c: 153: {
  1166                           ;Main Card V10.0.c: 154: Mode_5();
  1167  072B  120A  158A  23E7  120A  118A  	fcall	_Mode_5
  1168  0730                     l2440:	
  1169                           
  1170                           ;Main Card V10.0.c: 155: }
  1171                           ;Main Card V10.0.c: 159: if(!bTransiverModeReceive)
  1172  0730  1283               	bcf	3,5	;RP0=0, select bank0
  1173  0731  1303               	bcf	3,6	;RP1=0, select bank0
  1174  0732  086E               	movf	_bTransiverModeReceive,w
  1175  0733  1D03               	btfss	3,2
  1176  0734  2F3A               	goto	l2444
  1177                           
  1178                           ;Main Card V10.0.c: 160: TransiverToReceive();
  1179  0735  120A  158A  26CF  120A  118A  	fcall	_TransiverToReceive
  1180  073A                     l2444:	
  1181                           
  1182                           ;Main Card V10.0.c: 161: if(PORTBbits.RB4 && bTransiverModeReceive)
  1183  073A  1283               	bcf	3,5	;RP0=0, select bank0
  1184  073B  1303               	bcf	3,6	;RP1=0, select bank0
  1185  073C  1E06               	btfss	6,4	;volatile
  1186  073D  2EE2               	goto	l2416
  1187  073E  086E               	movf	_bTransiverModeReceive,w
  1188  073F  1903               	btfsc	3,2
  1189  0740  2EE2               	goto	l2416
  1190                           
  1191                           ;Main Card V10.0.c: 162: TransiverReadFIFO();
  1192  0741  120A  158A  272B  120A  118A  	fcall	_TransiverReadFIFO
  1193  0746  2EE2               	goto	l2416
  1194  0747                     __end_of_main:	
  1195                           
  1196                           	psect	text1
  1197  0E7C                     __ptext1:	
  1198 ;; *************** function _init *****************
  1199 ;; Defined at:
  1200 ;;		line 546 in file "../Main Card V10.0.c"
  1201 ;; Parameters:    Size  Location     Type
  1202 ;;		None
  1203 ;; Auto vars:     Size  Location     Type
  1204 ;;		None
  1205 ;; Return value:  Size  Location     Type
  1206 ;;                  1    wreg      void 
  1207 ;; Registers used:
  1208 ;;		wreg, status,2, status,0
  1209 ;; Tracked objects:
  1210 ;;		On entry : 0/0
  1211 ;;		On exit  : 0/0
  1212 ;;		Unchanged: 0/0
  1213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1214 ;;      Params:         0       0       0       0       0
  1215 ;;      Locals:         0       0       0       0       0
  1216 ;;      Temps:          0       0       0       0       0
  1217 ;;      Totals:         0       0       0       0       0
  1218 ;;Total ram usage:        0 bytes
  1219 ;; Hardware stack levels used:    1
  1220 ;; Hardware stack levels required when called:    2
  1221 ;; This function calls:
  1222 ;;		Nothing
  1223 ;; This function is called by:
  1224 ;;		_main
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           
  1229                           ;psect for function _init
  1230  0E7C                     _init:	
  1231                           
  1232                           ;Main Card V10.0.c: 549: OSCCONbits.IRCF2 = 1;
  1233                           
  1234                           ;incstack = 0
  1235                           ; Regs used in _init: [wreg+status,2+status,0]
  1236  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  1237  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  1238  0E7E  170F               	bsf	15,6	;volatile
  1239                           
  1240                           ;Main Card V10.0.c: 550: OSCCONbits.IRCF1 = 1;
  1241  0E7F  168F               	bsf	15,5	;volatile
  1242                           
  1243                           ;Main Card V10.0.c: 551: OSCCONbits.IRCF0 = 0;
  1244  0E80  120F               	bcf	15,4	;volatile
  1245                           
  1246                           ;Main Card V10.0.c: 552: OSCCONbits.SCS = 1;
  1247  0E81  140F               	bsf	15,0	;volatile
  1248                           
  1249                           ;Main Card V10.0.c: 555: PORTA = 0x00;
  1250  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1251  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1252  0E84  0185               	clrf	5	;volatile
  1253                           
  1254                           ;Main Card V10.0.c: 556: PORTB = 0x00;
  1255  0E85  0186               	clrf	6	;volatile
  1256                           
  1257                           ;Main Card V10.0.c: 557: PORTC = 0x00;
  1258  0E86  0187               	clrf	7	;volatile
  1259                           
  1260                           ;Main Card V10.0.c: 558: TRISA = 0b00001011;
  1261  0E87  300B               	movlw	11
  1262  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  1263  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  1264  0E8A  0085               	movwf	5	;volatile
  1265                           
  1266                           ;Main Card V10.0.c: 559: TRISB = 0b00111111;
  1267  0E8B  303F               	movlw	63
  1268  0E8C  0086               	movwf	6	;volatile
  1269                           
  1270                           ;Main Card V10.0.c: 560: TRISC = 0b00010000;
  1271  0E8D  3010               	movlw	16
  1272  0E8E  0087               	movwf	7	;volatile
  1273                           
  1274                           ;Main Card V10.0.c: 561: ANSEL = 0b00000000;
  1275  0E8F  1683               	bsf	3,5	;RP0=1, select bank3
  1276  0E90  1703               	bsf	3,6	;RP1=1, select bank3
  1277  0E91  0188               	clrf	8	;volatile
  1278                           
  1279                           ;Main Card V10.0.c: 562: ANSELH = 0b00000000;
  1280  0E92  0189               	clrf	9	;volatile
  1281                           
  1282                           ;Main Card V10.0.c: 563: ANSELbits.ANS0 = 1;
  1283  0E93  1408               	bsf	8,0	;volatile
  1284                           
  1285                           ;Main Card V10.0.c: 564: ANSELbits.ANS3 = 1;
  1286  0E94  1588               	bsf	8,3	;volatile
  1287                           
  1288                           ;Main Card V10.0.c: 565: OPTION_REGbits.nRBPU = 0;
  1289  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  1290  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  1291  0E97  1381               	bcf	1,7	;volatile
  1292                           
  1293                           ;Main Card V10.0.c: 566: WPUBbits.WPUB5 = 0;
  1294  0E98  1295               	bcf	21,5	;volatile
  1295  0E99                     l294:	
  1296                           ;Main Card V10.0.c: 567: while(!PORTBbits.RB5);
  1297                           
  1298  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1299  0E9A  1E86               	btfss	6,5	;volatile
  1300  0E9B  2E99               	goto	l294
  1301                           
  1302                           ;Main Card V10.0.c: 570: SSPCONbits.SSPM=0x00;
  1303  0E9C  30F0               	movlw	-16
  1304  0E9D  0594               	andwf	20,f	;volatile
  1305                           
  1306                           ;Main Card V10.0.c: 571: SSPCONbits.CKP=0;
  1307  0E9E  1214               	bcf	20,4	;volatile
  1308                           
  1309                           ;Main Card V10.0.c: 572: SSPSTATbits.CKE=1;
  1310  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0EA1  1714               	bsf	20,6	;volatile
  1313                           
  1314                           ;Main Card V10.0.c: 573: SSPSTATbits.SMP=0;
  1315  0EA2  1394               	bcf	20,7	;volatile
  1316                           
  1317                           ;Main Card V10.0.c: 574: SSPCONbits.SSPEN=0x01;
  1318  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  1319  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  1320  0EA5  1694               	bsf	20,5	;volatile
  1321                           
  1322                           ;Main Card V10.0.c: 575: SSPIE = 0;
  1323  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0EA8  118C               	bcf	12,3	;volatile
  1326                           
  1327                           ;Main Card V10.0.c: 578: PORTAbits.RA5 = 1;
  1328  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0EAB  1685               	bsf	5,5	;volatile
  1331                           
  1332                           ;Main Card V10.0.c: 579: PORTAbits.RA4 = 1;
  1333  0EAC  1605               	bsf	5,4	;volatile
  1334                           
  1335                           ;Main Card V10.0.c: 582: INTCONbits.RBIE = 1;
  1336  0EAD  158B               	bsf	11,3	;volatile
  1337                           
  1338                           ;Main Card V10.0.c: 583: INTCONbits.PEIE = 1;
  1339  0EAE  170B               	bsf	11,6	;volatile
  1340                           
  1341                           ;Main Card V10.0.c: 584: PIE1bits.TMR1IE = 1;
  1342  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  1343  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  1344  0EB1  140C               	bsf	12,0	;volatile
  1345                           
  1346                           ;Main Card V10.0.c: 585: INTCONbits.GIE = 1;
  1347  0EB2  178B               	bsf	11,7	;volatile
  1348                           
  1349                           ;Main Card V10.0.c: 586: IOCBbits.IOCB5 = 1;
  1350  0EB3  1696               	bsf	22,5	;volatile
  1351                           
  1352                           ;Main Card V10.0.c: 589: T1CON = 0b00110000;
  1353  0EB4  3030               	movlw	48
  1354  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  1355  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  1356  0EB7  0090               	movwf	16	;volatile
  1357                           
  1358                           ;Main Card V10.0.c: 590: TMR1H = 0x0B;
  1359  0EB8  300B               	movlw	11
  1360  0EB9  008F               	movwf	15	;volatile
  1361                           
  1362                           ;Main Card V10.0.c: 591: TMR1L = 0xDB;
  1363  0EBA  30DB               	movlw	219
  1364  0EBB  008E               	movwf	14	;volatile
  1365                           
  1366                           ;Main Card V10.0.c: 592: T1CONbits.TMR1ON = 1;
  1367  0EBC  1410               	bsf	16,0	;volatile
  1368                           
  1369                           ;Main Card V10.0.c: 595: ADCON0bits.ADCS0 = 0;
  1370  0EBD  131F               	bcf	31,6	;volatile
  1371                           
  1372                           ;Main Card V10.0.c: 596: ADCON0bits.ADCS1 = 0;
  1373  0EBE  139F               	bcf	31,7	;volatile
  1374                           
  1375                           ;Main Card V10.0.c: 597: ADCON1bits.ADFM = 0;
  1376  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  1377  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  1378  0EC1  139F               	bcf	31,7	;volatile
  1379                           
  1380                           ;Main Card V10.0.c: 598: ADCON1bits.VCFG1 = 0;
  1381  0EC2  129F               	bcf	31,5	;volatile
  1382                           
  1383                           ;Main Card V10.0.c: 599: ADCON1bits.VCFG0 = 0;
  1384  0EC3  121F               	bcf	31,4	;volatile
  1385                           
  1386                           ;Main Card V10.0.c: 602: intSecondCounter = 0;
  1387  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1388  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1389  0EC6  01EA               	clrf	_intSecondCounter
  1390  0EC7  01EB               	clrf	_intSecondCounter+1
  1391                           
  1392                           ;Main Card V10.0.c: 603: intHalfSecondCounter = 0;
  1393  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1394  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  1395  0ECA  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1396  0ECB  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1397                           
  1398                           ;Main Card V10.0.c: 604: intMinuteCounter = 0;
  1399  0ECC  01B7               	clrf	_intMinuteCounter^(0+128)
  1400  0ECD  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1401  0ECE  0008               	return
  1402  0ECF                     __end_of_init:	
  1403                           
  1404                           	psect	text2
  1405  0ECF                     __ptext2:	
  1406 ;; *************** function _TransiverToReceive *****************
  1407 ;; Defined at:
  1408 ;;		line 171 in file "../Main Card V10.0.c"
  1409 ;; Parameters:    Size  Location     Type
  1410 ;;		None
  1411 ;; Auto vars:     Size  Location     Type
  1412 ;;		None
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1422 ;;      Params:         0       0       0       0       0
  1423 ;;      Locals:         0       0       0       0       0
  1424 ;;      Temps:          0       2       0       0       0
  1425 ;;      Totals:         0       2       0       0       0
  1426 ;;Total ram usage:        2 bytes
  1427 ;; Hardware stack levels used:    1
  1428 ;; Hardware stack levels required when called:    7
  1429 ;; This function calls:
  1430 ;;		_FindChannel
  1431 ;;		_RegisterRead
  1432 ;;		_RegisterSet
  1433 ;;		_SetRFMode
  1434 ;;		_timerFunction
  1435 ;; This function is called by:
  1436 ;;		_main
  1437 ;; This function uses a non-reentrant model
  1438 ;;
  1439                           
  1440                           
  1441                           ;psect for function _TransiverToReceive
  1442  0ECF                     _TransiverToReceive:	
  1443                           
  1444                           ;Main Card V10.0.c: 173: timerFunction(2, 5);
  1445                           
  1446                           ;incstack = 0
  1447                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1448  0ECF  3002               	movlw	2
  1449  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0ED2  00A0               	movwf	timerFunction@intTimerNumber
  1452  0ED3  3000               	movlw	0
  1453  0ED4  00A1               	movwf	timerFunction@intTimerNumber+1
  1454  0ED5  3005               	movlw	5
  1455  0ED6  00A2               	movwf	timerFunction@intSetSeconds
  1456  0ED7  3000               	movlw	0
  1457  0ED8  00A3               	movwf	timerFunction@intSetSeconds+1
  1458  0ED9  120A  158A  23F8  120A  158A  	fcall	_timerFunction
  1459                           
  1460                           ;Main Card V10.0.c: 177: SetRFMode(0x20);
  1461  0EDE  3020               	movlw	32
  1462  0EDF  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1463                           
  1464                           ;Main Card V10.0.c: 178: _delay((unsigned long)((10)*(4000000/4000.0)));
  1465  0EE4  300D               	movlw	13
  1466  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  1467  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  1468  0EE7  00B6               	movwf	??_TransiverToReceive+1
  1469  0EE8  30FB               	movlw	251
  1470  0EE9  00B5               	movwf	??_TransiverToReceive
  1471  0EEA                     u2287:	
  1472  0EEA  0BB5               	decfsz	??_TransiverToReceive,f
  1473  0EEB  2EEA               	goto	u2287
  1474  0EEC  0BB6               	decfsz	??_TransiverToReceive+1,f
  1475  0EED  2EEA               	goto	u2287
  1476                           
  1477                           ;Main Card V10.0.c: 179: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1478  0EEE  300E               	movlw	14
  1479  0EEF  120A  118A  25E1  120A  158A  	fcall	_RegisterRead
  1480  0EF4  3802               	iorlw	2
  1481  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  1482  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  1483  0EF7  00B5               	movwf	??_TransiverToReceive
  1484  0EF8  0835               	movf	??_TransiverToReceive,w
  1485  0EF9  00A7               	movwf	RegisterSet@value
  1486  0EFA  300E               	movlw	14
  1487  0EFB  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  1488                           
  1489                           ;Main Card V10.0.c: 180: SetRFMode(0x40);
  1490  0F00  3040               	movlw	64
  1491  0F01  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1492  0F06                     l2348:	
  1493                           ;Main Card V10.0.c: 181: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1494                           
  1495  0F06  300E               	movlw	14
  1496  0F07  120A  118A  25E1  120A  158A  	fcall	_RegisterRead
  1497  0F0C  3902               	andlw	2
  1498  0F0D  1D03               	btfss	3,2
  1499  0F0E  2F19               	goto	l2350
  1500                           
  1501                           ;Main Card V10.0.c: 182: {
  1502                           ;Main Card V10.0.c: 183: if(bTimerComplete[2])
  1503  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0F11  082C               	movf	(_bTimerComplete^(0+128)+2),w
  1506  0F12  1903               	btfsc	3,2
  1507  0F13  2F06               	goto	l2348
  1508                           
  1509                           ;Main Card V10.0.c: 184: {
  1510                           ;Main Card V10.0.c: 185: FindChannel();
  1511  0F14  120A  118A  2259  120A  158A  	fcall	_FindChannel
  1512  0F19                     l2350:	
  1513                           ;Main Card V10.0.c: 186: break;
  1514                           
  1515                           
  1516                           ;Main Card V10.0.c: 187: }
  1517                           ;Main Card V10.0.c: 188: }
  1518                           ;Main Card V10.0.c: 190: SetRFMode(0x60);
  1519  0F19  3060               	movlw	96
  1520  0F1A  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1521                           
  1522                           ;Main Card V10.0.c: 191: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1523  0F1F  30A5               	movlw	165
  1524  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0F22  00B5               	movwf	??_TransiverToReceive
  1527  0F23                     u2297:	
  1528  0F23  0BB5               	decfsz	??_TransiverToReceive,f
  1529  0F24  2F23               	goto	u2297
  1530  0F25  2F26               	nop2
  1531                           
  1532                           ;Main Card V10.0.c: 192: bTransiverModeReceive = 1;
  1533  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  1534  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  1535  0F28  01EE               	clrf	_bTransiverModeReceive
  1536  0F29  0AEE               	incf	_bTransiverModeReceive,f
  1537  0F2A  0008               	return
  1538  0F2B                     __end_of_TransiverToReceive:	
  1539                           
  1540                           	psect	text3
  1541  0F2B                     __ptext3:	
  1542 ;; *************** function _TransiverReadFIFO *****************
  1543 ;; Defined at:
  1544 ;;		line 197 in file "../Main Card V10.0.c"
  1545 ;; Parameters:    Size  Location     Type
  1546 ;;		None
  1547 ;; Auto vars:     Size  Location     Type
  1548 ;;  j               2   67[BANK0 ] int 
  1549 ;;  i               2   65[BANK0 ] int 
  1550 ;; Return value:  Size  Location     Type
  1551 ;;                  1    wreg      void 
  1552 ;; Registers used:
  1553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1554 ;; Tracked objects:
  1555 ;;		On entry : 0/0
  1556 ;;		On exit  : 0/0
  1557 ;;		Unchanged: 0/0
  1558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1559 ;;      Params:         0       0       0       0       0
  1560 ;;      Locals:         0       4       0       0       0
  1561 ;;      Temps:          0       2       0       0       0
  1562 ;;      Totals:         0       6       0       0       0
  1563 ;;Total ram usage:        6 bytes
  1564 ;; Hardware stack levels used:    1
  1565 ;; Hardware stack levels required when called:    9
  1566 ;; This function calls:
  1567 ;;		_ReadFIFO
  1568 ;;		_SetRFMode
  1569 ;;		_TransmittedDataHandler
  1570 ;;		_timerFunction
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _TransiverReadFIFO
  1578  0F2B                     _TransiverReadFIFO:	
  1579                           
  1580                           ;Main Card V10.0.c: 199: timerFunction(3, 5);
  1581                           
  1582                           ;incstack = 0
  1583 ;; hardware stack exceeded
  1584                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1585  0F2B  3003               	movlw	3
  1586  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1587  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1588  0F2E  00A0               	movwf	timerFunction@intTimerNumber
  1589  0F2F  3000               	movlw	0
  1590  0F30  00A1               	movwf	timerFunction@intTimerNumber+1
  1591  0F31  3005               	movlw	5
  1592  0F32  00A2               	movwf	timerFunction@intSetSeconds
  1593  0F33  3000               	movlw	0
  1594  0F34  00A3               	movwf	timerFunction@intSetSeconds+1
  1595  0F35  120A  158A  23F8  120A  158A  	fcall	_timerFunction
  1596                           
  1597                           ;Main Card V10.0.c: 201: SetRFMode(0x20);
  1598  0F3A  3020               	movlw	32
  1599  0F3B  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1600                           
  1601                           ;Main Card V10.0.c: 202: bTransiverModeReceive = 0;
  1602  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1603  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1604  0F42  01EE               	clrf	_bTransiverModeReceive
  1605                           
  1606                           ;Main Card V10.0.c: 203: int i = 0;
  1607  0F43  01E1               	clrf	TransiverReadFIFO@i
  1608  0F44  01E2               	clrf	TransiverReadFIFO@i+1
  1609                           
  1610                           ;Main Card V10.0.c: 204: for (int j = 0; j < 30; ++j)
  1611  0F45  01E3               	clrf	TransiverReadFIFO@j
  1612  0F46  01E4               	clrf	TransiverReadFIFO@j+1
  1613  0F47                     L1:	
  1614  0F47  0864               	movf	TransiverReadFIFO@j+1,w
  1615  0F48  3A80               	xorlw	128
  1616  0F49  00FF               	movwf	127
  1617  0F4A  3080               	movlw	128
  1618  0F4B  027F               	subwf	127,w
  1619  0F4C  1D03               	skipz
  1620  0F4D  2F50               	goto	u1985
  1621  0F4E  301E               	movlw	30
  1622  0F4F  0263               	subwf	TransiverReadFIFO@j,w
  1623  0F50                     u1985:	
  1624  0F50  1803               	btfsc	3,0
  1625  0F51  2F74               	goto	l2378
  1626                           
  1627                           ;Main Card V10.0.c: 205: {
  1628                           ;Main Card V10.0.c: 206: TransmittedString[j] = 0;
  1629  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1630  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1631  0F54  0863               	movf	TransiverReadFIFO@j,w
  1632  0F55  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1633  0F56  0084               	movwf	4
  1634  0F57  1383               	bcf	3,7	;select IRP bank1
  1635  0F58  0180               	clrf	0
  1636  0F59  3001               	movlw	1
  1637  0F5A  07E3               	addwf	TransiverReadFIFO@j,f
  1638  0F5B  1803               	skipnc
  1639  0F5C  0AE4               	incf	TransiverReadFIFO@j+1,f
  1640  0F5D  3000               	movlw	0
  1641  0F5E  07E4               	addwf	TransiverReadFIFO@j+1,f
  1642  0F5F  2F47               	goto	L1
  1643  0F60                     l2374:	
  1644                           ;Main Card V10.0.c: 207: }
  1645                           ;Main Card V10.0.c: 208: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1646                           
  1647                           
  1648                           ;Main Card V10.0.c: 209: {
  1649                           ;Main Card V10.0.c: 210: TransmittedString[i] = ReadFIFO();
  1650  0F60  120A  158A  23B8  120A  158A  	fcall	_ReadFIFO
  1651  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1652  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1653  0F67  00DF               	movwf	??_TransiverReadFIFO
  1654  0F68  0861               	movf	TransiverReadFIFO@i,w
  1655  0F69  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1656  0F6A  0084               	movwf	4
  1657  0F6B  085F               	movf	??_TransiverReadFIFO,w
  1658  0F6C  1383               	bcf	3,7	;select IRP bank1
  1659  0F6D  0080               	movwf	0
  1660                           
  1661                           ;Main Card V10.0.c: 211: i++;
  1662  0F6E  3001               	movlw	1
  1663  0F6F  07E1               	addwf	TransiverReadFIFO@i,f
  1664  0F70  1803               	skipnc
  1665  0F71  0AE2               	incf	TransiverReadFIFO@i+1,f
  1666  0F72  3000               	movlw	0
  1667  0F73  07E2               	addwf	TransiverReadFIFO@i+1,f
  1668  0F74                     l2378:	
  1669  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1670  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1671  0F76  1D86               	btfss	6,3	;volatile
  1672  0F77  2F7D               	goto	l2382
  1673  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1674  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1675  0F7A  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1676  0F7B  1903               	btfsc	3,2
  1677  0F7C  2F60               	goto	l2374
  1678  0F7D                     l2382:	
  1679                           
  1680                           ;Main Card V10.0.c: 212: }
  1681                           ;Main Card V10.0.c: 214: _delay((unsigned long)((10)*(4000000/4000.0)));
  1682  0F7D  300D               	movlw	13
  1683  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1684  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1685  0F80  00E0               	movwf	??_TransiverReadFIFO+1
  1686  0F81  30FB               	movlw	251
  1687  0F82  00DF               	movwf	??_TransiverReadFIFO
  1688  0F83                     u2307:	
  1689  0F83  0BDF               	decfsz	??_TransiverReadFIFO,f
  1690  0F84  2F83               	goto	u2307
  1691  0F85  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1692  0F86  2F83               	goto	u2307
  1693                           
  1694                           ;Main Card V10.0.c: 215: SetRFMode(0x00);
  1695  0F87  3000               	movlw	0
  1696  0F88  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1697                           
  1698                           ;Main Card V10.0.c: 216: TransmittedDataHandler();
  1699  0F8D  120A  118A  2048   	fcall	_TransmittedDataHandler
  1700  0F90  0008               	return
  1701  0F91                     __end_of_TransiverReadFIFO:	
  1702                           
  1703                           	psect	text4
  1704  0048                     __ptext4:	
  1705 ;; *************** function _TransmittedDataHandler *****************
  1706 ;; Defined at:
  1707 ;;		line 218 in file "../Main Card V10.0.c"
  1708 ;; Parameters:    Size  Location     Type
  1709 ;;		None
  1710 ;; Auto vars:     Size  Location     Type
  1711 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1712 ;;  value           2   61[BANK0 ] int 
  1713 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1714 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1715 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  1    wreg      void 
  1718 ;; Registers used:
  1719 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1725 ;;      Params:         0       0       0       0       0
  1726 ;;      Locals:         0      34       0       0       0
  1727 ;;      Temps:          0       1       0       0       0
  1728 ;;      Totals:         0      35       0       0       0
  1729 ;;Total ram usage:       35 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    8
  1732 ;; This function calls:
  1733 ;;		_AnalogValue
  1734 ;;		_DarknessCheck
  1735 ;;		_DelayDs
  1736 ;;		_OperationMode
  1737 ;;		_TransmittString
  1738 ;;		_atoi
  1739 ;;		_eeprom_read
  1740 ;;		_eeprom_write
  1741 ;;		_strstr
  1742 ;; This function is called by:
  1743 ;;		_TransiverReadFIFO
  1744 ;; This function uses a non-reentrant model
  1745 ;;
  1746                           
  1747                           
  1748                           ;psect for function _TransmittedDataHandler
  1749  0048                     _TransmittedDataHandler:	
  1750                           
  1751                           ;Main Card V10.0.c: 221: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1752                           
  1753                           ;incstack = 0
  1754 ;; hardware stack exceeded
  1755                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1756  0048  3073               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1757  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1758  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1759  004B  00BC               	movwf	??_TransmittedDataHandler
  1760  004C  083C               	movf	??_TransmittedDataHandler,w
  1761  004D  00AE               	movwf	strstr@s2
  1762  004E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1763  004F  120A  118A  27B8  120A  118A  	fcall	_strstr
  1764  0054  3A00               	xorlw	0
  1765  0055  1903               	skipnz
  1766  0056  287E               	goto	l2076
  1767  0057  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1768  005C  3A06               	xorlw	6
  1769  005D  1D03               	skipz
  1770  005E  287E               	goto	l2076
  1771                           
  1772                           ;Main Card V10.0.c: 222: {
  1773                           ;Main Card V10.0.c: 223: intBlinkCycle = 1;
  1774  005F  3001               	movlw	1
  1775  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1776  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1777  0062  00E8               	movwf	_intBlinkCycle
  1778  0063  3000               	movlw	0
  1779  0064  00E9               	movwf	_intBlinkCycle+1
  1780                           
  1781                           ;Main Card V10.0.c: 224: intBlinkCounter = 0;
  1782  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1783  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1784  0067  01B1               	clrf	_intBlinkCounter^(0+128)
  1785  0068  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1786                           
  1787                           ;Main Card V10.0.c: 225: DelayDs(1);
  1788  0069  3001               	movlw	1
  1789  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1790  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1791  006C  00A0               	movwf	DelayDs@cnt
  1792  006D  3000               	movlw	0
  1793  006E  00A1               	movwf	DelayDs@cnt+1
  1794  006F  120A  158A  246C  120A  118A  	fcall	_DelayDs
  1795                           
  1796                           ;Main Card V10.0.c: 226: TransmittString("N1BLINKSTARTED");
  1797  0074  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1798  0075  1283               	bcf	3,5	;RP0=0, select bank0
  1799  0076  1303               	bcf	3,6	;RP1=0, select bank0
  1800  0077  00B5               	movwf	TransmittString@dataString
  1801  0078  3080               	movlw	128
  1802  0079  00B6               	movwf	TransmittString@dataString+1
  1803  007A  120A  118A  2443   	fcall	_TransmittString
  1804                           
  1805                           ;Main Card V10.0.c: 227: }
  1806  007D  0008               	return
  1807  007E                     l2076:	
  1808                           
  1809                           ;Main Card V10.0.c: 228: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1810  007E  307B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1811  007F  1283               	bcf	3,5	;RP0=0, select bank0
  1812  0080  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0081  00BC               	movwf	??_TransmittedDataHandler
  1814  0082  083C               	movf	??_TransmittedDataHandler,w
  1815  0083  00AE               	movwf	strstr@s2
  1816  0084  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1817  0085  120A  118A  27B8  120A  118A  	fcall	_strstr
  1818  008A  3A00               	xorlw	0
  1819  008B  1903               	skipnz
  1820  008C  28B4               	goto	l2088
  1821  008D  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1822  0092  3A07               	xorlw	7
  1823  0093  1D03               	skipz
  1824  0094  28B4               	goto	l2088
  1825                           
  1826                           ;Main Card V10.0.c: 229: {
  1827                           ;Main Card V10.0.c: 230: intBlinkCycle = 1;
  1828  0095  3001               	movlw	1
  1829  0096  1283               	bcf	3,5	;RP0=0, select bank0
  1830  0097  1303               	bcf	3,6	;RP1=0, select bank0
  1831  0098  00E8               	movwf	_intBlinkCycle
  1832  0099  3000               	movlw	0
  1833  009A  00E9               	movwf	_intBlinkCycle+1
  1834                           
  1835                           ;Main Card V10.0.c: 231: intBlinkCounter = 0;
  1836  009B  1683               	bsf	3,5	;RP0=1, select bank1
  1837  009C  1303               	bcf	3,6	;RP1=0, select bank1
  1838  009D  01B1               	clrf	_intBlinkCounter^(0+128)
  1839  009E  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1840                           
  1841                           ;Main Card V10.0.c: 232: DelayDs(1);
  1842  009F  3001               	movlw	1
  1843  00A0  1283               	bcf	3,5	;RP0=0, select bank0
  1844  00A1  1303               	bcf	3,6	;RP1=0, select bank0
  1845  00A2  00A0               	movwf	DelayDs@cnt
  1846  00A3  3000               	movlw	0
  1847  00A4  00A1               	movwf	DelayDs@cnt+1
  1848  00A5  120A  158A  246C  120A  118A  	fcall	_DelayDs
  1849                           
  1850                           ;Main Card V10.0.c: 233: TransmittString("N2BLINKSTARTED");
  1851  00AA  3037               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1852  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1853  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1854  00AD  00B5               	movwf	TransmittString@dataString
  1855  00AE  3080               	movlw	128
  1856  00AF  00B6               	movwf	TransmittString@dataString+1
  1857  00B0  120A  118A  2443   	fcall	_TransmittString
  1858                           
  1859                           ;Main Card V10.0.c: 234: }
  1860  00B3  0008               	return
  1861  00B4                     l2088:	
  1862                           
  1863                           ;Main Card V10.0.c: 235: else if((strstr(TransmittedString, "N1BLINKSTARTED")) && (Opera
      +                          tionMode() == 4))
  1864  00B4  3028               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1865  00B5  1283               	bcf	3,5	;RP0=0, select bank0
  1866  00B6  1303               	bcf	3,6	;RP1=0, select bank0
  1867  00B7  00BC               	movwf	??_TransmittedDataHandler
  1868  00B8  083C               	movf	??_TransmittedDataHandler,w
  1869  00B9  00AE               	movwf	strstr@s2
  1870  00BA  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1871  00BB  120A  118A  27B8  120A  118A  	fcall	_strstr
  1872  00C0  3A00               	xorlw	0
  1873  00C1  1903               	skipnz
  1874  00C2  28DF               	goto	l2098
  1875  00C3  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1876  00C8  3A04               	xorlw	4
  1877  00C9  1D03               	skipz
  1878  00CA  28DF               	goto	l2098
  1879                           
  1880                           ;Main Card V10.0.c: 236: {
  1881                           ;Main Card V10.0.c: 237: intBlinkCycle = 1;
  1882  00CB  3001               	movlw	1
  1883  00CC  1283               	bcf	3,5	;RP0=0, select bank0
  1884  00CD  1303               	bcf	3,6	;RP1=0, select bank0
  1885  00CE  00E8               	movwf	_intBlinkCycle
  1886  00CF  3000               	movlw	0
  1887  00D0  00E9               	movwf	_intBlinkCycle+1
  1888                           
  1889                           ;Main Card V10.0.c: 238: intBlinkCounter = 0;
  1890  00D1  1683               	bsf	3,5	;RP0=1, select bank1
  1891  00D2  1303               	bcf	3,6	;RP1=0, select bank1
  1892  00D3  01B1               	clrf	_intBlinkCounter^(0+128)
  1893  00D4  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1894                           
  1895                           ;Main Card V10.0.c: 239: DelayDs(100);
  1896  00D5  3064               	movlw	100
  1897  00D6  1283               	bcf	3,5	;RP0=0, select bank0
  1898  00D7  1303               	bcf	3,6	;RP1=0, select bank0
  1899  00D8  00A0               	movwf	DelayDs@cnt
  1900  00D9  3000               	movlw	0
  1901  00DA  00A1               	movwf	DelayDs@cnt+1
  1902  00DB  120A  158A  246C   	fcall	_DelayDs
  1903                           
  1904                           ;Main Card V10.0.c: 240: }
  1905  00DE  0008               	return
  1906  00DF                     l2098:	
  1907                           
  1908                           ;Main Card V10.0.c: 241: else if((strstr(TransmittedString, "N2BLINKSTARTED")) && (Opera
      +                          tionMode() == 5))
  1909  00DF  3037               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1910  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1911  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1912  00E2  00BC               	movwf	??_TransmittedDataHandler
  1913  00E3  083C               	movf	??_TransmittedDataHandler,w
  1914  00E4  00AE               	movwf	strstr@s2
  1915  00E5  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1916  00E6  120A  118A  27B8  120A  118A  	fcall	_strstr
  1917  00EB  3A00               	xorlw	0
  1918  00EC  1903               	skipnz
  1919  00ED  290A               	goto	l2108
  1920  00EE  120A  158A  2388  120A  118A  	fcall	_OperationMode
  1921  00F3  3A05               	xorlw	5
  1922  00F4  1D03               	skipz
  1923  00F5  290A               	goto	l2108
  1924                           
  1925                           ;Main Card V10.0.c: 242: {
  1926                           ;Main Card V10.0.c: 243: intBlinkCycle = 1;
  1927  00F6  3001               	movlw	1
  1928  00F7  1283               	bcf	3,5	;RP0=0, select bank0
  1929  00F8  1303               	bcf	3,6	;RP1=0, select bank0
  1930  00F9  00E8               	movwf	_intBlinkCycle
  1931  00FA  3000               	movlw	0
  1932  00FB  00E9               	movwf	_intBlinkCycle+1
  1933                           
  1934                           ;Main Card V10.0.c: 244: intBlinkCounter = 0;
  1935  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1936  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1937  00FE  01B1               	clrf	_intBlinkCounter^(0+128)
  1938  00FF  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1939                           
  1940                           ;Main Card V10.0.c: 245: DelayDs(100);
  1941  0100  3064               	movlw	100
  1942  0101  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0102  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0103  00A0               	movwf	DelayDs@cnt
  1945  0104  3000               	movlw	0
  1946  0105  00A1               	movwf	DelayDs@cnt+1
  1947  0106  120A  158A  246C   	fcall	_DelayDs
  1948                           
  1949                           ;Main Card V10.0.c: 246: }
  1950  0109  0008               	return
  1951  010A                     l2108:	
  1952                           
  1953                           ;Main Card V10.0.c: 247: else if((strstr(TransmittedString,"FLASHL")))
  1954  010A  30A0               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1955  010B  1283               	bcf	3,5	;RP0=0, select bank0
  1956  010C  1303               	bcf	3,6	;RP1=0, select bank0
  1957  010D  00BC               	movwf	??_TransmittedDataHandler
  1958  010E  083C               	movf	??_TransmittedDataHandler,w
  1959  010F  00AE               	movwf	strstr@s2
  1960  0110  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1961  0111  120A  118A  27B8  120A  118A  	fcall	_strstr
  1962  0116  3A00               	xorlw	0
  1963  0117  1903               	skipnz
  1964  0118  2930               	goto	l2116
  1965                           
  1966                           ;Main Card V10.0.c: 248: {
  1967                           ;Main Card V10.0.c: 249: PORTCbits.RC2 = 1;
  1968  0119  1283               	bcf	3,5	;RP0=0, select bank0
  1969  011A  1303               	bcf	3,6	;RP1=0, select bank0
  1970  011B  1507               	bsf	7,2	;volatile
  1971                           
  1972                           ;Main Card V10.0.c: 250: DelayDs(10);
  1973  011C  300A               	movlw	10
  1974  011D  00A0               	movwf	DelayDs@cnt
  1975  011E  3000               	movlw	0
  1976  011F  00A1               	movwf	DelayDs@cnt+1
  1977  0120  120A  158A  246C  120A  118A  	fcall	_DelayDs
  1978                           
  1979                           ;Main Card V10.0.c: 251: PORTCbits.RC2 = 0;
  1980  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0127  1107               	bcf	7,2	;volatile
  1983                           
  1984                           ;Main Card V10.0.c: 252: DelayDs(5);
  1985  0128  3005               	movlw	5
  1986  0129  00A0               	movwf	DelayDs@cnt
  1987  012A  3000               	movlw	0
  1988  012B  00A1               	movwf	DelayDs@cnt+1
  1989  012C  120A  158A  246C   	fcall	_DelayDs
  1990                           
  1991                           ;Main Card V10.0.c: 253: }
  1992  012F  0008               	return
  1993  0130                     l2116:	
  1994                           
  1995                           ;Main Card V10.0.c: 254: else if((strstr(TransmittedString,"FLASHB")))
  1996  0130  3092               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1997  0131  1283               	bcf	3,5	;RP0=0, select bank0
  1998  0132  1303               	bcf	3,6	;RP1=0, select bank0
  1999  0133  00BC               	movwf	??_TransmittedDataHandler
  2000  0134  083C               	movf	??_TransmittedDataHandler,w
  2001  0135  00AE               	movwf	strstr@s2
  2002  0136  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2003  0137  120A  118A  27B8  120A  118A  	fcall	_strstr
  2004  013C  3A00               	xorlw	0
  2005  013D  1903               	skipnz
  2006  013E  2956               	goto	l2124
  2007                           
  2008                           ;Main Card V10.0.c: 255: {
  2009                           ;Main Card V10.0.c: 256: PORTCbits.RC1 = 1;
  2010  013F  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0140  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0141  1487               	bsf	7,1	;volatile
  2013                           
  2014                           ;Main Card V10.0.c: 257: DelayDs(10);
  2015  0142  300A               	movlw	10
  2016  0143  00A0               	movwf	DelayDs@cnt
  2017  0144  3000               	movlw	0
  2018  0145  00A1               	movwf	DelayDs@cnt+1
  2019  0146  120A  158A  246C  120A  118A  	fcall	_DelayDs
  2020                           
  2021                           ;Main Card V10.0.c: 258: PORTCbits.RC1 = 0;
  2022  014B  1283               	bcf	3,5	;RP0=0, select bank0
  2023  014C  1303               	bcf	3,6	;RP1=0, select bank0
  2024  014D  1087               	bcf	7,1	;volatile
  2025                           
  2026                           ;Main Card V10.0.c: 259: DelayDs(5);
  2027  014E  3005               	movlw	5
  2028  014F  00A0               	movwf	DelayDs@cnt
  2029  0150  3000               	movlw	0
  2030  0151  00A1               	movwf	DelayDs@cnt+1
  2031  0152  120A  158A  246C   	fcall	_DelayDs
  2032                           
  2033                           ;Main Card V10.0.c: 260: }
  2034  0155  0008               	return
  2035  0156                     l2124:	
  2036                           
  2037                           ;Main Card V10.0.c: 261: else if((strstr(TransmittedString,"SENSVAL")))
  2038  0156  3083               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2039  0157  1283               	bcf	3,5	;RP0=0, select bank0
  2040  0158  1303               	bcf	3,6	;RP1=0, select bank0
  2041  0159  00BC               	movwf	??_TransmittedDataHandler
  2042  015A  083C               	movf	??_TransmittedDataHandler,w
  2043  015B  00AE               	movwf	strstr@s2
  2044  015C  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2045  015D  120A  118A  27B8  120A  118A  	fcall	_strstr
  2046  0162  3A00               	xorlw	0
  2047  0163  1903               	skipnz
  2048  0164  2978               	goto	l2130
  2049                           
  2050                           ;Main Card V10.0.c: 262: {
  2051                           ;Main Card V10.0.c: 263: unsigned char slask[8];
  2052                           ;Main Card V10.0.c: 264: slask[0] = AnalogValue(0);
  2053  0165  3000               	movlw	0
  2054  0166  120A  158A  24D6  120A  118A  	fcall	_AnalogValue
  2055  016B  1283               	bcf	3,5	;RP0=0, select bank0
  2056  016C  1303               	bcf	3,6	;RP1=0, select bank0
  2057  016D  00BC               	movwf	??_TransmittedDataHandler
  2058  016E  083C               	movf	??_TransmittedDataHandler,w
  2059  016F  00BD               	movwf	TransmittedDataHandler@slask
  2060                           
  2061                           ;Main Card V10.0.c: 265: TransmittString(slask);
  2062  0170  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  2063  0171  00B5               	movwf	TransmittString@dataString
  2064  0172  3000               	movlw	0
  2065  0173  00B6               	movwf	TransmittString@dataString+1
  2066  0174  120A  118A  2443   	fcall	_TransmittString
  2067                           
  2068                           ;Main Card V10.0.c: 266: }
  2069  0177  0008               	return
  2070  0178                     l2130:	
  2071                           
  2072                           ;Main Card V10.0.c: 267: else if((strstr(TransmittedString,"POTVAL")))
  2073  0178  3099               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2074  0179  1283               	bcf	3,5	;RP0=0, select bank0
  2075  017A  1303               	bcf	3,6	;RP1=0, select bank0
  2076  017B  00BC               	movwf	??_TransmittedDataHandler
  2077  017C  083C               	movf	??_TransmittedDataHandler,w
  2078  017D  00AE               	movwf	strstr@s2
  2079  017E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2080  017F  120A  118A  27B8  120A  118A  	fcall	_strstr
  2081  0184  3A00               	xorlw	0
  2082  0185  1903               	skipnz
  2083  0186  299A               	goto	l2136
  2084                           
  2085                           ;Main Card V10.0.c: 268: {
  2086                           ;Main Card V10.0.c: 269: unsigned char slask[8];
  2087                           ;Main Card V10.0.c: 270: slask[0] = AnalogValue(3);
  2088  0187  3003               	movlw	3
  2089  0188  120A  158A  24D6  120A  118A  	fcall	_AnalogValue
  2090  018D  1283               	bcf	3,5	;RP0=0, select bank0
  2091  018E  1303               	bcf	3,6	;RP1=0, select bank0
  2092  018F  00BC               	movwf	??_TransmittedDataHandler
  2093  0190  083C               	movf	??_TransmittedDataHandler,w
  2094  0191  00C5               	movwf	TransmittedDataHandler@slask_704
  2095                           
  2096                           ;Main Card V10.0.c: 271: TransmittString(slask);
  2097  0192  3045               	movlw	(low (TransmittedDataHandler@slask_704| 0))& (0+255)
  2098  0193  00B5               	movwf	TransmittString@dataString
  2099  0194  3000               	movlw	0
  2100  0195  00B6               	movwf	TransmittString@dataString+1
  2101  0196  120A  118A  2443   	fcall	_TransmittString
  2102                           
  2103                           ;Main Card V10.0.c: 272: }
  2104  0199  0008               	return
  2105  019A                     l2136:	
  2106                           
  2107                           ;Main Card V10.0.c: 273: else if((strstr(TransmittedString,"DARKCALC")))
  2108  019A  3062               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2109  019B  1283               	bcf	3,5	;RP0=0, select bank0
  2110  019C  1303               	bcf	3,6	;RP1=0, select bank0
  2111  019D  00BC               	movwf	??_TransmittedDataHandler
  2112  019E  083C               	movf	??_TransmittedDataHandler,w
  2113  019F  00AE               	movwf	strstr@s2
  2114  01A0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2115  01A1  120A  118A  27B8  120A  118A  	fcall	_strstr
  2116  01A6  3A00               	xorlw	0
  2117  01A7  1903               	skipnz
  2118  01A8  29C5               	goto	l2146
  2119                           
  2120                           ;Main Card V10.0.c: 274: {
  2121                           ;Main Card V10.0.c: 275: DarknessCheck();
  2122  01A9  120A  158A  24FF  120A  118A  	fcall	_DarknessCheck
  2123                           
  2124                           ;Main Card V10.0.c: 276: if(bDark)
  2125  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  2126  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  2127  01B0  086D               	movf	_bDark,w
  2128  01B1  1903               	btfsc	3,2
  2129  01B2  29BB               	goto	l2144
  2130                           
  2131                           ;Main Card V10.0.c: 277: TransmittString("It's Dark    ");
  2132  01B3  3054               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2133  01B4  00B5               	movwf	TransmittString@dataString
  2134  01B5  3080               	movlw	128
  2135  01B6  00B6               	movwf	TransmittString@dataString+1
  2136  01B7  120A  118A  2443   	fcall	_TransmittString
  2137  01BA  0008               	return
  2138  01BB                     l2144:	
  2139                           
  2140                           ;Main Card V10.0.c: 278: else
  2141                           ;Main Card V10.0.c: 279: TransmittString("Not Dark     ");
  2142  01BB  3046               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2143  01BC  1283               	bcf	3,5	;RP0=0, select bank0
  2144  01BD  1303               	bcf	3,6	;RP1=0, select bank0
  2145  01BE  00B5               	movwf	TransmittString@dataString
  2146  01BF  3080               	movlw	128
  2147  01C0  00B6               	movwf	TransmittString@dataString+1
  2148  01C1  120A  118A  2443   	fcall	_TransmittString
  2149                           
  2150                           ;Main Card V10.0.c: 280: }
  2151  01C4  0008               	return
  2152  01C5                     l2146:	
  2153                           
  2154                           ;Main Card V10.0.c: 281: else if((strstr(TransmittedString,"STATE?")))
  2155  01C5  308B               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2156  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2157  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2158  01C8  00BC               	movwf	??_TransmittedDataHandler
  2159  01C9  083C               	movf	??_TransmittedDataHandler,w
  2160  01CA  00AE               	movwf	strstr@s2
  2161  01CB  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2162  01CC  120A  118A  27B8  120A  118A  	fcall	_strstr
  2163  01D1  3A00               	xorlw	0
  2164  01D2  1903               	skipnz
  2165  01D3  29EB               	goto	l2154
  2166                           
  2167                           ;Main Card V10.0.c: 282: {
  2168                           ;Main Card V10.0.c: 283: if(bValueFromPot == TRUE)
  2169  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  2170  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  2171  01D6  036F               	decf	_bValueFromPot,w
  2172  01D7  1D03               	btfss	3,2
  2173  01D8  29E1               	goto	l2152
  2174                           
  2175                           ;Main Card V10.0.c: 284: TransmittString("Pot");
  2176  01D9  30B6               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2177  01DA  00B5               	movwf	TransmittString@dataString
  2178  01DB  3080               	movlw	128
  2179  01DC  00B6               	movwf	TransmittString@dataString+1
  2180  01DD  120A  118A  2443   	fcall	_TransmittString
  2181  01E0  0008               	return
  2182  01E1                     l2152:	
  2183                           
  2184                           ;Main Card V10.0.c: 285: else
  2185                           ;Main Card V10.0.c: 286: TransmittString("PIC");
  2186  01E1  30B2               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2187  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2188  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2189  01E4  00B5               	movwf	TransmittString@dataString
  2190  01E5  3080               	movlw	128
  2191  01E6  00B6               	movwf	TransmittString@dataString+1
  2192  01E7  120A  118A  2443   	fcall	_TransmittString
  2193                           
  2194                           ;Main Card V10.0.c: 288: }
  2195  01EA  0008               	return
  2196  01EB                     l2154:	
  2197                           
  2198                           ;Main Card V10.0.c: 289: else if((strstr(TransmittedString,"CHSTATE")))
  2199  01EB  306B               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2200  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  2201  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  2202  01EE  00BC               	movwf	??_TransmittedDataHandler
  2203  01EF  083C               	movf	??_TransmittedDataHandler,w
  2204  01F0  00AE               	movwf	strstr@s2
  2205  01F1  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2206  01F2  120A  118A  27B8  120A  118A  	fcall	_strstr
  2207  01F7  3A00               	xorlw	0
  2208  01F8  1903               	skipnz
  2209  01F9  2A04               	goto	l2160
  2210                           
  2211                           ;Main Card V10.0.c: 290: {
  2212                           ;Main Card V10.0.c: 291: if(bValueFromPot== TRUE)
  2213  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  2214  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  2215  01FC  036F               	decf	_bValueFromPot,w
  2216  01FD  1D03               	btfss	3,2
  2217  01FE  2A01               	goto	l227
  2218                           
  2219                           ;Main Card V10.0.c: 292: bValueFromPot= FALSE;
  2220  01FF  01EF               	clrf	_bValueFromPot
  2221  0200  0008               	return
  2222  0201                     l227:	
  2223                           
  2224                           ;Main Card V10.0.c: 293: else
  2225                           ;Main Card V10.0.c: 294: bValueFromPot=TRUE;
  2226  0201  01EF               	clrf	_bValueFromPot
  2227  0202  0AEF               	incf	_bValueFromPot,f
  2228                           
  2229                           ;Main Card V10.0.c: 295: }
  2230  0203  0008               	return
  2231  0204                     l2160:	
  2232                           
  2233                           ;Main Card V10.0.c: 297: else if((strstr(TransmittedString,"RMDV")))
  2234  0204  30AD               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2235  0205  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0206  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0207  00BC               	movwf	??_TransmittedDataHandler
  2238  0208  083C               	movf	??_TransmittedDataHandler,w
  2239  0209  00AE               	movwf	strstr@s2
  2240  020A  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2241  020B  120A  118A  27B8  120A  118A  	fcall	_strstr
  2242  0210  3A00               	xorlw	0
  2243  0211  1903               	skipnz
  2244  0212  2A26               	goto	l2166
  2245                           
  2246                           ;Main Card V10.0.c: 298: {
  2247                           ;Main Card V10.0.c: 299: unsigned char slask[8];
  2248                           ;Main Card V10.0.c: 300: slask[0] = eeprom_read(addressDarknessValue);
  2249  0213  087C               	movf	_addressDarknessValue,w
  2250  0214  120A  158A  24B2  120A  118A  	fcall	_eeprom_read
  2251  0219  1283               	bcf	3,5	;RP0=0, select bank0
  2252  021A  1303               	bcf	3,6	;RP1=0, select bank0
  2253  021B  00BC               	movwf	??_TransmittedDataHandler
  2254  021C  083C               	movf	??_TransmittedDataHandler,w
  2255  021D  00CD               	movwf	TransmittedDataHandler@slask_713
  2256                           
  2257                           ;Main Card V10.0.c: 301: TransmittString(slask);
  2258  021E  304D               	movlw	(low (TransmittedDataHandler@slask_713| 0))& (0+255)
  2259  021F  00B5               	movwf	TransmittString@dataString
  2260  0220  3000               	movlw	0
  2261  0221  00B6               	movwf	TransmittString@dataString+1
  2262  0222  120A  118A  2443   	fcall	_TransmittString
  2263                           
  2264                           ;Main Card V10.0.c: 303: }
  2265  0225  0008               	return
  2266  0226                     l2166:	
  2267                           
  2268                           ;Main Card V10.0.c: 305: else if((strstr(TransmittedString,"SETDV")))
  2269  0226  30A7               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2270  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0229  00BC               	movwf	??_TransmittedDataHandler
  2273  022A  083C               	movf	??_TransmittedDataHandler,w
  2274  022B  00AE               	movwf	strstr@s2
  2275  022C  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2276  022D  120A  118A  27B8  120A  118A  	fcall	_strstr
  2277  0232  3A00               	xorlw	0
  2278  0233  1903               	skipnz
  2279  0234  0008               	return
  2280                           
  2281                           ;Main Card V10.0.c: 306: {
  2282                           ;Main Card V10.0.c: 308: int value;
  2283                           ;Main Card V10.0.c: 309: unsigned char slask[8];
  2284                           ;Main Card V10.0.c: 310: value = atoi(&TransmittedString[6]);
  2285  0235  30BF               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2286  0236  120A  118A  2747  120A  118A  	fcall	_atoi
  2287  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2288  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2289  023D  0827               	movf	?_atoi+1,w
  2290  023E  00DE               	movwf	TransmittedDataHandler@value+1
  2291  023F  0826               	movf	?_atoi,w
  2292  0240  00DD               	movwf	TransmittedDataHandler@value
  2293                           
  2294                           ;Main Card V10.0.c: 311: slask[0] = (unsigned char)value;
  2295  0241  085D               	movf	TransmittedDataHandler@value,w
  2296  0242  00BC               	movwf	??_TransmittedDataHandler
  2297  0243  083C               	movf	??_TransmittedDataHandler,w
  2298  0244  00D5               	movwf	TransmittedDataHandler@slask_716
  2299                           
  2300                           ;Main Card V10.0.c: 312: TransmittString(slask);
  2301  0245  3055               	movlw	(low (TransmittedDataHandler@slask_716| 0))& (0+255)
  2302  0246  00B5               	movwf	TransmittString@dataString
  2303  0247  3000               	movlw	0
  2304  0248  00B6               	movwf	TransmittString@dataString+1
  2305  0249  120A  118A  2443  120A  118A  	fcall	_TransmittString
  2306                           
  2307                           ;Main Card V10.0.c: 313: eeprom_write(addressDarknessValue,(unsigned char)value);
  2308  024E  1283               	bcf	3,5	;RP0=0, select bank0
  2309  024F  1303               	bcf	3,6	;RP1=0, select bank0
  2310  0250  085D               	movf	TransmittedDataHandler@value,w
  2311  0251  00BC               	movwf	??_TransmittedDataHandler
  2312  0252  083C               	movf	??_TransmittedDataHandler,w
  2313  0253  00A0               	movwf	eeprom_write@value
  2314  0254  087C               	movf	_addressDarknessValue,w
  2315  0255  120A  158A  2554   	fcall	_eeprom_write
  2316  0258  0008               	return
  2317  0259                     __end_of_TransmittedDataHandler:	
  2318                           
  2319                           	psect	text5
  2320  07B8                     __ptext5:	
  2321 ;; *************** function _strstr *****************
  2322 ;; Defined at:
  2323 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strstr.c"
  2324 ;; Parameters:    Size  Location     Type
  2325 ;;  s1              1    wreg     PTR const unsigned char 
  2326 ;;		 -> NULL(0), TransmittedString(30), 
  2327 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2328 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2329 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2330 ;;		 -> STR_7(7), STR_6(15), STR_5(15), STR_3(8), 
  2331 ;;		 -> STR_1(8), 
  2332 ;; Auto vars:     Size  Location     Type
  2333 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2334 ;;		 -> NULL(0), TransmittedString(30), 
  2335 ;; Return value:  Size  Location     Type
  2336 ;;                  1    wreg      PTR unsigned char 
  2337 ;; Registers used:
  2338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2339 ;; Tracked objects:
  2340 ;;		On entry : 0/0
  2341 ;;		On exit  : 0/0
  2342 ;;		Unchanged: 0/0
  2343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2344 ;;      Params:         0       1       0       0       0
  2345 ;;      Locals:         0       1       0       0       0
  2346 ;;      Temps:          0       3       0       0       0
  2347 ;;      Totals:         0       5       0       0       0
  2348 ;;Total ram usage:        5 bytes
  2349 ;; Hardware stack levels used:    1
  2350 ;; Hardware stack levels required when called:    3
  2351 ;; This function calls:
  2352 ;;		_strchr
  2353 ;;		_strlen
  2354 ;;		_strncmp
  2355 ;; This function is called by:
  2356 ;;		_TransmittedDataHandler
  2357 ;; This function uses a non-reentrant model
  2358 ;;
  2359                           
  2360                           
  2361                           ;psect for function _strstr
  2362  07B8                     _strstr:	
  2363                           
  2364                           ;incstack = 0
  2365                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2366                           ;strstr@s1 stored from wreg
  2367  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  2368  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  2369  07BA  00B2               	movwf	strstr@s1
  2370  07BB  2FF3               	goto	l1932
  2371  07BC                     l1924:	
  2372  07BC  082E               	movf	strstr@s2,w
  2373  07BD  00AF               	movwf	??_strstr
  2374  07BE  082F               	movf	??_strstr,w
  2375  07BF  00A8               	movwf	strncmp@s2
  2376  07C0  082E               	movf	strstr@s2,w
  2377  07C1  120A  158A  2528  120A  118A  	fcall	_strlen
  2378  07C6  1283               	bcf	3,5	;RP0=0, select bank0
  2379  07C7  1303               	bcf	3,6	;RP1=0, select bank0
  2380  07C8  0821               	movf	?_strlen+1,w
  2381  07C9  00AA               	movwf	strncmp@len+1
  2382  07CA  0820               	movf	?_strlen,w
  2383  07CB  00A9               	movwf	strncmp@len
  2384  07CC  0832               	movf	strstr@s1,w
  2385  07CD  120A  158A  2638  120A  118A  	fcall	_strncmp
  2386  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2387  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2388  07D4  0828               	movf	?_strncmp,w
  2389  07D5  0429               	iorwf	?_strncmp+1,w
  2390  07D6  1D03               	btfss	3,2
  2391  07D7  2FDA               	goto	l1930
  2392  07D8  0832               	movf	strstr@s1,w
  2393  07D9  0008               	return
  2394  07DA                     l1930:	
  2395  07DA  082E               	movf	strstr@s2,w
  2396  07DB  0084               	movwf	4
  2397  07DC  120A  118A  260A  120A  118A  	fcall	stringdir
  2398  07E1  00AF               	movwf	??_strstr
  2399  07E2  01B0               	clrf	??_strstr+1
  2400  07E3  082F               	movf	??_strstr,w
  2401  07E4  00A0               	movwf	strchr@chr
  2402  07E5  0830               	movf	??_strstr+1,w
  2403  07E6  00A1               	movwf	strchr@chr+1
  2404  07E7  0832               	movf	strstr@s1,w
  2405  07E8  3E01               	addlw	1
  2406  07E9  120A  158A  240A  120A  118A  	fcall	_strchr
  2407  07EE  1283               	bcf	3,5	;RP0=0, select bank0
  2408  07EF  1303               	bcf	3,6	;RP1=0, select bank0
  2409  07F0  00B1               	movwf	??_strstr+2
  2410  07F1  0831               	movf	??_strstr+2,w
  2411  07F2  00B2               	movwf	strstr@s1
  2412  07F3                     l1932:	
  2413  07F3  0832               	movf	strstr@s1,w
  2414  07F4  1903               	btfsc	3,2
  2415  07F5  2FFC               	goto	l1936
  2416  07F6  0832               	movf	strstr@s1,w
  2417  07F7  0084               	movwf	4
  2418  07F8  1383               	bcf	3,7	;select IRP bank0
  2419  07F9  0800               	movf	0,w
  2420  07FA  1D03               	btfss	3,2
  2421  07FB  2FBC               	goto	l1924
  2422  07FC                     l1936:	
  2423  07FC  3000               	movlw	0
  2424  07FD  0008               	return
  2425  07FE                     __end_of_strstr:	
  2426                           
  2427                           	psect	text6
  2428  0E38                     __ptext6:	
  2429 ;; *************** function _strncmp *****************
  2430 ;; Defined at:
  2431 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strncmp.c"
  2432 ;; Parameters:    Size  Location     Type
  2433 ;;  s1              1    wreg     PTR const unsigned char 
  2434 ;;		 -> NULL(0), TransmittedString(30), 
  2435 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2436 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2437 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2438 ;;		 -> STR_7(7), STR_6(15), STR_5(15), STR_3(8), 
  2439 ;;		 -> STR_1(8), 
  2440 ;;  len             2    9[BANK0 ] unsigned int 
  2441 ;; Auto vars:     Size  Location     Type
  2442 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2443 ;;		 -> NULL(0), TransmittedString(30), 
  2444 ;; Return value:  Size  Location     Type
  2445 ;;                  2    8[BANK0 ] int 
  2446 ;; Registers used:
  2447 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2448 ;; Tracked objects:
  2449 ;;		On entry : 0/0
  2450 ;;		On exit  : 0/0
  2451 ;;		Unchanged: 0/0
  2452 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2453 ;;      Params:         0       3       0       0       0
  2454 ;;      Locals:         0       1       0       0       0
  2455 ;;      Temps:          0       2       0       0       0
  2456 ;;      Totals:         0       6       0       0       0
  2457 ;;Total ram usage:        6 bytes
  2458 ;; Hardware stack levels used:    1
  2459 ;; Hardware stack levels required when called:    2
  2460 ;; This function calls:
  2461 ;;		Nothing
  2462 ;; This function is called by:
  2463 ;;		_strstr
  2464 ;; This function uses a non-reentrant model
  2465 ;;
  2466                           
  2467                           
  2468                           ;psect for function _strncmp
  2469  0E38                     _strncmp:	
  2470                           
  2471                           ;incstack = 0
  2472                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2473                           ;strncmp@s1 stored from wreg
  2474  0E38  1283               	bcf	3,5	;RP0=0, select bank0
  2475  0E39  1303               	bcf	3,6	;RP1=0, select bank0
  2476  0E3A  00AD               	movwf	strncmp@s1
  2477  0E3B                     l912:	
  2478  0E3B  3001               	movlw	1
  2479  0E3C  02A9               	subwf	strncmp@len,f
  2480  0E3D  3000               	movlw	0
  2481  0E3E  1C03               	skipc
  2482  0E3F  03AA               	decf	strncmp@len+1,f
  2483  0E40  02AA               	subwf	strncmp@len+1,f
  2484  0E41  0A29               	incf	strncmp@len,w
  2485  0E42  1903               	btfsc	3,2
  2486  0E43  0A2A               	incf	strncmp@len+1,w
  2487  0E44  1903               	btfsc	3,2
  2488  0E45  2E79               	goto	l1900
  2489  0E46  082D               	movf	strncmp@s1,w
  2490  0E47  0084               	movwf	4
  2491  0E48  1383               	bcf	3,7	;select IRP bank0
  2492  0E49  0800               	movf	0,w
  2493  0E4A  1903               	btfsc	3,2
  2494  0E4B  2E5A               	goto	l1894
  2495  0E4C  0828               	movf	strncmp@s2,w
  2496  0E4D  0084               	movwf	4
  2497  0E4E  120A  118A  260A  120A  158A  	fcall	stringdir
  2498  0E53  00AB               	movwf	??_strncmp
  2499  0E54  082D               	movf	strncmp@s1,w
  2500  0E55  0084               	movwf	4
  2501  0E56  0800               	movf	0,w
  2502  0E57  062B               	xorwf	??_strncmp,w
  2503  0E58  1903               	skipnz
  2504  0E59  2E70               	goto	l1898
  2505  0E5A                     l1894:	
  2506  0E5A  0828               	movf	strncmp@s2,w
  2507  0E5B  0084               	movwf	4
  2508  0E5C  120A  118A  260A   	fcall	stringdir
  2509  0E5F  00AB               	movwf	??_strncmp
  2510  0E60  01AC               	clrf	??_strncmp+1
  2511  0E61  09AB               	comf	??_strncmp,f
  2512  0E62  09AC               	comf	??_strncmp+1,f
  2513  0E63  0AAB               	incf	??_strncmp,f
  2514  0E64  1903               	skipnz
  2515  0E65  0AAC               	incf	??_strncmp+1,f
  2516  0E66  082D               	movf	strncmp@s1,w
  2517  0E67  0084               	movwf	4
  2518  0E68  0800               	movf	0,w
  2519  0E69  072B               	addwf	??_strncmp,w
  2520  0E6A  00A8               	movwf	?_strncmp
  2521  0E6B  082C               	movf	??_strncmp+1,w
  2522  0E6C  1803               	skipnc
  2523  0E6D  0A2C               	incf	??_strncmp+1,w
  2524  0E6E  00A9               	movwf	?_strncmp+1
  2525  0E6F  0008               	return
  2526  0E70                     l1898:	
  2527  0E70  3001               	movlw	1
  2528  0E71  00AB               	movwf	??_strncmp
  2529  0E72  082B               	movf	??_strncmp,w
  2530  0E73  07AD               	addwf	strncmp@s1,f
  2531  0E74  3001               	movlw	1
  2532  0E75  00AB               	movwf	??_strncmp
  2533  0E76  082B               	movf	??_strncmp,w
  2534  0E77  07A8               	addwf	strncmp@s2,f
  2535  0E78  2E3B               	goto	l912
  2536  0E79                     l1900:	
  2537  0E79  01A8               	clrf	?_strncmp
  2538  0E7A  01A9               	clrf	?_strncmp+1
  2539  0E7B  0008               	return
  2540  0E7C                     __end_of_strncmp:	
  2541                           
  2542                           	psect	text7
  2543  0D28                     __ptext7:	
  2544 ;; *************** function _strlen *****************
  2545 ;; Defined at:
  2546 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  2547 ;; Parameters:    Size  Location     Type
  2548 ;;  s               1    wreg     PTR const unsigned char 
  2549 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2550 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2551 ;;		 -> STR_7(7), STR_6(15), STR_5(15), STR_3(8), 
  2552 ;;		 -> STR_1(8), 
  2553 ;; Auto vars:     Size  Location     Type
  2554 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2555 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2556 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2557 ;;		 -> STR_7(7), STR_6(15), STR_5(15), STR_3(8), 
  2558 ;;		 -> STR_1(8), 
  2559 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2560 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2561 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2562 ;;		 -> STR_7(7), STR_6(15), STR_5(15), STR_3(8), 
  2563 ;;		 -> STR_1(8), 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  2    0[BANK0 ] unsigned int 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       2       0       0       0
  2574 ;;      Locals:         0       2       0       0       0
  2575 ;;      Temps:          0       4       0       0       0
  2576 ;;      Totals:         0       8       0       0       0
  2577 ;;Total ram usage:        8 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:    2
  2580 ;; This function calls:
  2581 ;;		Nothing
  2582 ;; This function is called by:
  2583 ;;		_strstr
  2584 ;; This function uses a non-reentrant model
  2585 ;;
  2586                           
  2587                           
  2588                           ;psect for function _strlen
  2589  0D28                     _strlen:	
  2590                           
  2591                           ;incstack = 0
  2592                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2593                           ;strlen@s stored from wreg
  2594  0D28  1283               	bcf	3,5	;RP0=0, select bank0
  2595  0D29  1303               	bcf	3,6	;RP1=0, select bank0
  2596  0D2A  00A6               	movwf	strlen@s
  2597  0D2B  0826               	movf	strlen@s,w
  2598  0D2C  00A2               	movwf	??_strlen
  2599  0D2D  0822               	movf	??_strlen,w
  2600  0D2E  00A7               	movwf	strlen@cp
  2601  0D2F                     l1882:	
  2602  0D2F  0827               	movf	strlen@cp,w
  2603  0D30  0084               	movwf	4
  2604  0D31  120A  118A  260A  120A  158A  	fcall	stringdir
  2605  0D36  3A00               	xorlw	0
  2606  0D37  1903               	btfsc	3,2
  2607  0D38  2D3E               	goto	l1884
  2608  0D39  3001               	movlw	1
  2609  0D3A  00A2               	movwf	??_strlen
  2610  0D3B  0822               	movf	??_strlen,w
  2611  0D3C  07A7               	addwf	strlen@cp,f
  2612  0D3D  2D2F               	goto	l1882
  2613  0D3E                     l1884:	
  2614  0D3E  0826               	movf	strlen@s,w
  2615  0D3F  00A2               	movwf	??_strlen
  2616  0D40  3080               	movlw	128
  2617  0D41  00A3               	movwf	??_strlen+1
  2618  0D42  09A2               	comf	??_strlen,f
  2619  0D43  09A3               	comf	??_strlen+1,f
  2620  0D44  0AA2               	incf	??_strlen,f
  2621  0D45  1903               	skipnz
  2622  0D46  0AA3               	incf	??_strlen+1,f
  2623  0D47  0827               	movf	strlen@cp,w
  2624  0D48  00A4               	movwf	??_strlen+2
  2625  0D49  3080               	movlw	128
  2626  0D4A  00A5               	movwf	??_strlen+3
  2627  0D4B  0822               	movf	??_strlen,w
  2628  0D4C  0724               	addwf	??_strlen+2,w
  2629  0D4D  00A0               	movwf	?_strlen
  2630  0D4E  0823               	movf	??_strlen+1,w
  2631  0D4F  1803               	skipnc
  2632  0D50  0A23               	incf	??_strlen+1,w
  2633  0D51  0725               	addwf	??_strlen+3,w
  2634  0D52  00A1               	movwf	?_strlen+1
  2635  0D53  0008               	return
  2636  0D54                     __end_of_strlen:	
  2637                           
  2638                           	psect	text8
  2639  0C0A                     __ptext8:	
  2640 ;; *************** function _strchr *****************
  2641 ;; Defined at:
  2642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strchr.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  ptr             1    wreg     PTR const unsigned char 
  2645 ;;		 -> NULL(0), TransmittedString(30), 
  2646 ;;  chr             2    0[BANK0 ] int 
  2647 ;; Auto vars:     Size  Location     Type
  2648 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2649 ;;		 -> NULL(0), TransmittedString(30), 
  2650 ;; Return value:  Size  Location     Type
  2651 ;;                  1    wreg      PTR unsigned char 
  2652 ;; Registers used:
  2653 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2654 ;; Tracked objects:
  2655 ;;		On entry : 0/0
  2656 ;;		On exit  : 0/0
  2657 ;;		Unchanged: 0/0
  2658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2659 ;;      Params:         0       2       0       0       0
  2660 ;;      Locals:         0       1       0       0       0
  2661 ;;      Temps:          0       0       0       0       0
  2662 ;;      Totals:         0       3       0       0       0
  2663 ;;Total ram usage:        3 bytes
  2664 ;; Hardware stack levels used:    1
  2665 ;; Hardware stack levels required when called:    2
  2666 ;; This function calls:
  2667 ;;		Nothing
  2668 ;; This function is called by:
  2669 ;;		_strstr
  2670 ;; This function uses a non-reentrant model
  2671 ;;
  2672                           
  2673                           
  2674                           ;psect for function _strchr
  2675  0C0A                     _strchr:	
  2676                           
  2677                           ;incstack = 0
  2678                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2679                           ;strchr@ptr stored from wreg
  2680  0C0A  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0C0B  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0C0C  00A2               	movwf	strchr@ptr
  2683  0C0D                     l900:	
  2684  0C0D  0822               	movf	strchr@ptr,w
  2685  0C0E  0084               	movwf	4
  2686  0C0F  1383               	bcf	3,7	;select IRP bank0
  2687  0C10  0800               	movf	0,w
  2688  0C11  0620               	xorwf	strchr@chr,w
  2689  0C12  1D03               	skipz
  2690  0C13  2C16               	goto	l1910
  2691  0C14  0822               	movf	strchr@ptr,w
  2692  0C15  0008               	return
  2693  0C16                     l1910:	
  2694  0C16  0822               	movf	strchr@ptr,w
  2695  0C17  0084               	movwf	4
  2696  0C18  3001               	movlw	1
  2697  0C19  07A2               	addwf	strchr@ptr,f
  2698  0C1A  0800               	movf	0,w
  2699  0C1B  1D03               	btfss	3,2
  2700  0C1C  2C0D               	goto	l900
  2701  0C1D  3000               	movlw	0
  2702  0C1E  0008               	return
  2703  0C1F                     __end_of_strchr:	
  2704                           
  2705                           	psect	text9
  2706  0D54                     __ptext9:	
  2707 ;; *************** function _eeprom_write *****************
  2708 ;; Defined at:
  2709 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  addr            1    wreg     unsigned char 
  2712 ;;  value           1    0[BANK0 ] unsigned char 
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;  addr            1    2[BANK0 ] unsigned char 
  2715 ;; Return value:  Size  Location     Type
  2716 ;;                  1    wreg      void 
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2724 ;;      Params:         0       1       0       0       0
  2725 ;;      Locals:         0       1       0       0       0
  2726 ;;      Temps:          0       1       0       0       0
  2727 ;;      Totals:         0       3       0       0       0
  2728 ;;Total ram usage:        3 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:    2
  2731 ;; This function calls:
  2732 ;;		Nothing
  2733 ;; This function is called by:
  2734 ;;		_TransmittedDataHandler
  2735 ;; This function uses a non-reentrant model
  2736 ;;
  2737                           
  2738                           
  2739                           ;psect for function _eeprom_write
  2740  0D54                     _eeprom_write:	
  2741                           
  2742                           ;incstack = 0
  2743                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2744                           ;eeprom_write@addr stored from wreg
  2745  0D54  1283               	bcf	3,5	;RP0=0, select bank0
  2746  0D55  1303               	bcf	3,6	;RP1=0, select bank0
  2747  0D56  00A2               	movwf	eeprom_write@addr
  2748  0D57                     l418:	
  2749  0D57  1683               	bsf	3,5	;RP0=1, select bank3
  2750  0D58  1703               	bsf	3,6	;RP1=1, select bank3
  2751  0D59  188C               	btfsc	12,1	;volsfr
  2752  0D5A  2D57               	goto	l418
  2753  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  2754  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  2755  0D5D  0822               	movf	eeprom_write@addr,w
  2756  0D5E  1283               	bcf	3,5	;RP0=0, select bank2
  2757  0D5F  1703               	bsf	3,6	;RP1=1, select bank2
  2758  0D60  008D               	movwf	13	;volatile
  2759  0D61  1283               	bcf	3,5	;RP0=0, select bank0
  2760  0D62  1303               	bcf	3,6	;RP1=0, select bank0
  2761  0D63  0820               	movf	eeprom_write@value,w
  2762  0D64  1283               	bcf	3,5	;RP0=0, select bank2
  2763  0D65  1703               	bsf	3,6	;RP1=1, select bank2
  2764  0D66  008C               	movwf	12	;volatile
  2765  0D67  303F               	movlw	63
  2766  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  2767  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  2768  0D6A  00A1               	movwf	??_eeprom_write
  2769  0D6B  0821               	movf	??_eeprom_write,w
  2770  0D6C  1683               	bsf	3,5	;RP0=1, select bank3
  2771  0D6D  1703               	bsf	3,6	;RP1=1, select bank3
  2772  0D6E  058C               	andwf	12,f	;volsfr
  2773  0D6F  1283               	bcf	3,5	;RP0=0, select bank0
  2774  0D70  1303               	bcf	3,6	;RP1=0, select bank0
  2775  0D71  1003               	bcf	3,0	;volatile
  2776  0D72  1B8B               	btfsc	11,7	;volatile
  2777  0D73  1403               	bsf	3,0	;volatile
  2778  0D74  138B               	bcf	11,7	;volatile
  2779  0D75  1683               	bsf	3,5	;RP0=1, select bank3
  2780  0D76  1703               	bsf	3,6	;RP1=1, select bank3
  2781  0D77  150C               	bsf	12,2	;volsfr
  2782  0D78  3055               	movlw	85
  2783  0D79  008D               	movwf	13	;volsfr
  2784  0D7A  30AA               	movlw	170
  2785  0D7B  008D               	movwf	13	;volsfr
  2786  0D7C  148C               	bsf	12,1	;volsfr
  2787  0D7D  110C               	bcf	12,2	;volsfr
  2788  0D7E  1283               	bcf	3,5	;RP0=0, select bank0
  2789  0D7F  1303               	bcf	3,6	;RP1=0, select bank0
  2790  0D80  1C03               	btfss	3,0	;volatile
  2791  0D81  0008               	return
  2792  0D82  178B               	bsf	11,7	;volatile
  2793  0D83  0008               	return
  2794  0D84                     __end_of_eeprom_write:	
  2795                           
  2796                           	psect	text10
  2797  0747                     __ptext10:	
  2798 ;; *************** function _atoi *****************
  2799 ;; Defined at:
  2800 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  2801 ;; Parameters:    Size  Location     Type
  2802 ;;  s               1    wreg     PTR const unsigned char 
  2803 ;;		 -> TransmittedString(30), 
  2804 ;; Auto vars:     Size  Location     Type
  2805 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2806 ;;		 -> TransmittedString(30), 
  2807 ;;  a               2   11[BANK0 ] int 
  2808 ;;  sign            1   10[BANK0 ] unsigned char 
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  2    6[BANK0 ] int 
  2811 ;; Registers used:
  2812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2818 ;;      Params:         0       2       0       0       0
  2819 ;;      Locals:         0       4       0       0       0
  2820 ;;      Temps:          0       2       0       0       0
  2821 ;;      Totals:         0       8       0       0       0
  2822 ;;Total ram usage:        8 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    3
  2825 ;; This function calls:
  2826 ;;		___wmul
  2827 ;;		_isdigit
  2828 ;; This function is called by:
  2829 ;;		_TransmittedDataHandler
  2830 ;; This function uses a non-reentrant model
  2831 ;;
  2832                           
  2833                           
  2834                           ;psect for function _atoi
  2835  0747                     _atoi:	
  2836                           
  2837                           ;incstack = 0
  2838                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2839                           ;atoi@s stored from wreg
  2840  0747  1283               	bcf	3,5	;RP0=0, select bank0
  2841  0748  1303               	bcf	3,6	;RP1=0, select bank0
  2842  0749  00AD               	movwf	atoi@s
  2843  074A                     l2004:	
  2844  074A  082D               	movf	atoi@s,w
  2845  074B  0084               	movwf	4
  2846  074C  3020               	movlw	32
  2847  074D  1383               	bcf	3,7	;select IRP bank0
  2848  074E  0600               	xorwf	0,w
  2849  074F  1D03               	btfss	3,2
  2850  0750  2F56               	goto	l2006
  2851  0751                     l2002:	
  2852  0751  3001               	movlw	1
  2853  0752  00A8               	movwf	??_atoi
  2854  0753  0828               	movf	??_atoi,w
  2855  0754  07AD               	addwf	atoi@s,f
  2856  0755  2F4A               	goto	l2004
  2857  0756                     l2006:	
  2858  0756  082D               	movf	atoi@s,w
  2859  0757  0084               	movwf	4
  2860  0758  3009               	movlw	9
  2861  0759  0600               	xorwf	0,w
  2862  075A  1903               	btfsc	3,2
  2863  075B  2F51               	goto	l2002
  2864  075C  01AB               	clrf	atoi@a
  2865  075D  01AC               	clrf	atoi@a+1
  2866  075E  01AA               	clrf	atoi@sign
  2867  075F  082D               	movf	atoi@s,w
  2868  0760  0084               	movwf	4
  2869  0761  302D               	movlw	45
  2870  0762  0600               	xorwf	0,w
  2871  0763  1D03               	btfss	3,2
  2872  0764  2F6A               	goto	l2014
  2873  0765  3001               	movlw	1
  2874  0766  00A8               	movwf	??_atoi
  2875  0767  0828               	movf	??_atoi,w
  2876  0768  07AA               	addwf	atoi@sign,f
  2877  0769  2F70               	goto	l2020
  2878  076A                     l2014:	
  2879  076A  082D               	movf	atoi@s,w
  2880  076B  0084               	movwf	4
  2881  076C  302B               	movlw	43
  2882  076D  0600               	xorwf	0,w
  2883  076E  1D03               	btfss	3,2
  2884  076F  2F74               	goto	l2022
  2885  0770                     l2020:	
  2886  0770  3001               	movlw	1
  2887  0771  00A8               	movwf	??_atoi
  2888  0772  0828               	movf	??_atoi,w
  2889  0773  07AD               	addwf	atoi@s,f
  2890  0774                     l2022:	
  2891  0774  082D               	movf	atoi@s,w
  2892  0775  0084               	movwf	4
  2893  0776  0800               	movf	0,w
  2894  0777  120A  158A  23C6  120A  118A  	fcall	_isdigit
  2895  077C  1C03               	btfss	3,0
  2896  077D  2FA2               	goto	l2024
  2897  077E  1283               	bcf	3,5	;RP0=0, select bank0
  2898  077F  1303               	bcf	3,6	;RP1=0, select bank0
  2899  0780  082C               	movf	atoi@a+1,w
  2900  0781  00A1               	movwf	___wmul@multiplier+1
  2901  0782  082B               	movf	atoi@a,w
  2902  0783  00A0               	movwf	___wmul@multiplier
  2903  0784  300A               	movlw	10
  2904  0785  00A2               	movwf	___wmul@multiplicand
  2905  0786  3000               	movlw	0
  2906  0787  00A3               	movwf	___wmul@multiplicand+1
  2907  0788  120A  158A  248F  120A  118A  	fcall	___wmul
  2908  078D  1283               	bcf	3,5	;RP0=0, select bank0
  2909  078E  1303               	bcf	3,6	;RP1=0, select bank0
  2910  078F  082D               	movf	atoi@s,w
  2911  0790  0084               	movwf	4
  2912  0791  1383               	bcf	3,7	;select IRP bank0
  2913  0792  0800               	movf	0,w
  2914  0793  0720               	addwf	?___wmul,w
  2915  0794  00A8               	movwf	??_atoi
  2916  0795  0821               	movf	?___wmul+1,w
  2917  0796  1803               	skipnc
  2918  0797  0A21               	incf	?___wmul+1,w
  2919  0798  00A9               	movwf	??_atoi+1
  2920  0799  0828               	movf	??_atoi,w
  2921  079A  3ED0               	addlw	208
  2922  079B  00AB               	movwf	atoi@a
  2923  079C  0829               	movf	??_atoi+1,w
  2924  079D  1803               	skipnc
  2925  079E  3E01               	addlw	1
  2926  079F  3EFF               	addlw	255
  2927  07A0  00AC               	movwf	atoi@a+1
  2928  07A1  2F70               	goto	l2020
  2929  07A2                     l2024:	
  2930  07A2  1283               	bcf	3,5	;RP0=0, select bank0
  2931  07A3  1303               	bcf	3,6	;RP1=0, select bank0
  2932  07A4  082A               	movf	atoi@sign,w
  2933  07A5  1903               	btfsc	3,2
  2934  07A6  2FB3               	goto	l2030
  2935  07A7  092B               	comf	atoi@a,w
  2936  07A8  00A8               	movwf	??_atoi
  2937  07A9  092C               	comf	atoi@a+1,w
  2938  07AA  00A9               	movwf	??_atoi+1
  2939  07AB  0AA8               	incf	??_atoi,f
  2940  07AC  1903               	skipnz
  2941  07AD  0AA9               	incf	??_atoi+1,f
  2942  07AE  0828               	movf	??_atoi,w
  2943  07AF  00A6               	movwf	?_atoi
  2944  07B0  0829               	movf	??_atoi+1,w
  2945  07B1  00A7               	movwf	?_atoi+1
  2946  07B2  0008               	return
  2947  07B3                     l2030:	
  2948  07B3  082C               	movf	atoi@a+1,w
  2949  07B4  00A7               	movwf	?_atoi+1
  2950  07B5  082B               	movf	atoi@a,w
  2951  07B6  00A6               	movwf	?_atoi
  2952  07B7  0008               	return
  2953  07B8                     __end_of_atoi:	
  2954                           
  2955                           	psect	text11
  2956  0BC6                     __ptext11:	
  2957 ;; *************** function _isdigit *****************
  2958 ;; Defined at:
  2959 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2960 ;; Parameters:    Size  Location     Type
  2961 ;;  c               1    wreg     unsigned char 
  2962 ;; Auto vars:     Size  Location     Type
  2963 ;;  c               1    1[BANK0 ] unsigned char 
  2964 ;; Return value:  Size  Location     Type
  2965 ;;		None               void
  2966 ;; Registers used:
  2967 ;;		wreg, status,2, status,0
  2968 ;; Tracked objects:
  2969 ;;		On entry : 0/0
  2970 ;;		On exit  : 0/0
  2971 ;;		Unchanged: 0/0
  2972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2973 ;;      Params:         0       0       0       0       0
  2974 ;;      Locals:         0       2       0       0       0
  2975 ;;      Temps:          0       0       0       0       0
  2976 ;;      Totals:         0       2       0       0       0
  2977 ;;Total ram usage:        2 bytes
  2978 ;; Hardware stack levels used:    1
  2979 ;; Hardware stack levels required when called:    2
  2980 ;; This function calls:
  2981 ;;		Nothing
  2982 ;; This function is called by:
  2983 ;;		_atoi
  2984 ;; This function uses a non-reentrant model
  2985 ;;
  2986                           
  2987                           
  2988                           ;psect for function _isdigit
  2989  0BC6                     _isdigit:	
  2990                           
  2991                           ;incstack = 0
  2992                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2993                           ;isdigit@c stored from wreg
  2994  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  2995  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  2996  0BC8  00A1               	movwf	isdigit@c
  2997  0BC9  01A0               	clrf	_isdigit$1088
  2998  0BCA  303A               	movlw	58
  2999  0BCB  0221               	subwf	isdigit@c,w
  3000  0BCC  1803               	skipnc
  3001  0BCD  2BD4               	goto	l1874
  3002  0BCE  3030               	movlw	48
  3003  0BCF  0221               	subwf	isdigit@c,w
  3004  0BD0  1C03               	skipc
  3005  0BD1  2BD4               	goto	l1874
  3006  0BD2  01A0               	clrf	_isdigit$1088
  3007  0BD3  0AA0               	incf	_isdigit$1088,f
  3008  0BD4                     l1874:	
  3009  0BD4  0C20               	rrf	_isdigit$1088,w
  3010  0BD5  0008               	return
  3011  0BD6                     __end_of_isdigit:	
  3012                           
  3013                           	psect	text12
  3014  0C8F                     __ptext12:	
  3015 ;; *************** function ___wmul *****************
  3016 ;; Defined at:
  3017 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  3018 ;; Parameters:    Size  Location     Type
  3019 ;;  multiplier      2    0[BANK0 ] unsigned int 
  3020 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;  product         2    4[BANK0 ] unsigned int 
  3023 ;; Return value:  Size  Location     Type
  3024 ;;                  2    0[BANK0 ] unsigned int 
  3025 ;; Registers used:
  3026 ;;		wreg, status,2, status,0
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3032 ;;      Params:         0       4       0       0       0
  3033 ;;      Locals:         0       2       0       0       0
  3034 ;;      Temps:          0       0       0       0       0
  3035 ;;      Totals:         0       6       0       0       0
  3036 ;;Total ram usage:        6 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    2
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_atoi
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function ___wmul
  3048  0C8F                     ___wmul:	
  3049                           
  3050                           ;incstack = 0
  3051                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  3052  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  3053  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  3054  0C91  01A4               	clrf	___wmul@product
  3055  0C92  01A5               	clrf	___wmul@product+1
  3056  0C93                     l1854:	
  3057  0C93  1C20               	btfss	___wmul@multiplier,0
  3058  0C94  2C9B               	goto	l508
  3059  0C95  0822               	movf	___wmul@multiplicand,w
  3060  0C96  07A4               	addwf	___wmul@product,f
  3061  0C97  1803               	skipnc
  3062  0C98  0AA5               	incf	___wmul@product+1,f
  3063  0C99  0823               	movf	___wmul@multiplicand+1,w
  3064  0C9A  07A5               	addwf	___wmul@product+1,f
  3065  0C9B                     l508:	
  3066  0C9B  3001               	movlw	1
  3067  0C9C                     u1235:	
  3068  0C9C  1003               	clrc
  3069  0C9D  0DA2               	rlf	___wmul@multiplicand,f
  3070  0C9E  0DA3               	rlf	___wmul@multiplicand+1,f
  3071  0C9F  3EFF               	addlw	-1
  3072  0CA0  1D03               	skipz
  3073  0CA1  2C9C               	goto	u1235
  3074  0CA2  3001               	movlw	1
  3075  0CA3                     u1245:	
  3076  0CA3  1003               	clrc
  3077  0CA4  0CA1               	rrf	___wmul@multiplier+1,f
  3078  0CA5  0CA0               	rrf	___wmul@multiplier,f
  3079  0CA6  3EFF               	addlw	-1
  3080  0CA7  1D03               	skipz
  3081  0CA8  2CA3               	goto	u1245
  3082  0CA9  0820               	movf	___wmul@multiplier,w
  3083  0CAA  0421               	iorwf	___wmul@multiplier+1,w
  3084  0CAB  1D03               	btfss	3,2
  3085  0CAC  2C93               	goto	l1854
  3086  0CAD  0825               	movf	___wmul@product+1,w
  3087  0CAE  00A1               	movwf	?___wmul+1
  3088  0CAF  0824               	movf	___wmul@product,w
  3089  0CB0  00A0               	movwf	?___wmul
  3090  0CB1  0008               	return
  3091  0CB2                     __end_of___wmul:	
  3092                           
  3093                           	psect	text13
  3094  0B88                     __ptext13:	
  3095 ;; *************** function _OperationMode *****************
  3096 ;; Defined at:
  3097 ;;		line 1056 in file "../Main Card V10.0.c"
  3098 ;; Parameters:    Size  Location     Type
  3099 ;;		None
  3100 ;; Auto vars:     Size  Location     Type
  3101 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  3102 ;; Return value:  Size  Location     Type
  3103 ;;                  1    wreg      unsigned char 
  3104 ;; Registers used:
  3105 ;;		wreg, status,2
  3106 ;; Tracked objects:
  3107 ;;		On entry : 0/0
  3108 ;;		On exit  : 0/0
  3109 ;;		Unchanged: 0/0
  3110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3111 ;;      Params:         0       0       0       0       0
  3112 ;;      Locals:         0       1       0       0       0
  3113 ;;      Temps:          0       1       0       0       0
  3114 ;;      Totals:         0       2       0       0       0
  3115 ;;Total ram usage:        2 bytes
  3116 ;; Hardware stack levels used:    1
  3117 ;; Hardware stack levels required when called:    2
  3118 ;; This function calls:
  3119 ;;		Nothing
  3120 ;; This function is called by:
  3121 ;;		_main
  3122 ;;		_TransmittedDataHandler
  3123 ;; This function uses a non-reentrant model
  3124 ;;
  3125                           
  3126                           
  3127                           ;psect for function _OperationMode
  3128  0B88                     _OperationMode:	
  3129                           
  3130                           ;Main Card V10.0.c: 1058: unsigned char bracketStatus;
  3131                           ;Main Card V10.0.c: 1059: bracketStatus = ((~PORTB) & 0b00000111) ;
  3132                           
  3133                           ;incstack = 0
  3134                           ; Regs used in _OperationMode: [wreg+status,2]
  3135  0B88  1283               	bcf	3,5	;RP0=0, select bank0
  3136  0B89  1303               	bcf	3,6	;RP1=0, select bank0
  3137  0B8A  0906               	comf	6,w	;volatile
  3138  0B8B  3907               	andlw	7
  3139  0B8C  00A0               	movwf	??_OperationMode
  3140  0B8D  0820               	movf	??_OperationMode,w
  3141  0B8E  00A1               	movwf	OperationMode@bracketStatus
  3142                           
  3143                           ;Main Card V10.0.c: 1061: return bracketStatus;
  3144  0B8F  0821               	movf	OperationMode@bracketStatus,w
  3145  0B90  0008               	return
  3146  0B91                     __end_of_OperationMode:	
  3147                           
  3148                           	psect	text14
  3149  0BB8                     __ptext14:	
  3150 ;; *************** function _ReadFIFO *****************
  3151 ;; Defined at:
  3152 ;;		line 873 in file "../Main Card V10.0.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  value           1    4[BANK0 ] unsigned char 
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      unsigned char 
  3159 ;; Registers used:
  3160 ;;		wreg, status,2, status,0, pclath, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3166 ;;      Params:         0       0       0       0       0
  3167 ;;      Locals:         0       1       0       0       0
  3168 ;;      Temps:          0       1       0       0       0
  3169 ;;      Totals:         0       2       0       0       0
  3170 ;;Total ram usage:        2 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    4
  3173 ;; This function calls:
  3174 ;;		_ReadSPI
  3175 ;; This function is called by:
  3176 ;;		_TransiverReadFIFO
  3177 ;; This function uses a non-reentrant model
  3178 ;;
  3179                           
  3180                           
  3181                           ;psect for function _ReadFIFO
  3182  0BB8                     _ReadFIFO:	
  3183                           
  3184                           ;Main Card V10.0.c: 875: BYTE value;
  3185                           ;Main Card V10.0.c: 876: PORTAbits.RA5 = 0;
  3186                           
  3187                           ;incstack = 0
  3188                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  3189  0BB8  1283               	bcf	3,5	;RP0=0, select bank0
  3190  0BB9  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0BBA  1285               	bcf	5,5	;volatile
  3192                           
  3193                           ;Main Card V10.0.c: 877: value = ReadSPI();
  3194  0BBB  120A  158A  236F   	fcall	_ReadSPI
  3195  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0BC0  00A3               	movwf	??_ReadFIFO
  3198  0BC1  0823               	movf	??_ReadFIFO,w
  3199  0BC2  00A4               	movwf	ReadFIFO@value
  3200                           
  3201                           ;Main Card V10.0.c: 878: PORTAbits.RA5 = 1;
  3202  0BC3  1685               	bsf	5,5	;volatile
  3203                           
  3204                           ;Main Card V10.0.c: 879: return value;
  3205  0BC4  0824               	movf	ReadFIFO@value,w
  3206  0BC5  0008               	return
  3207  0BC6                     __end_of_ReadFIFO:	
  3208                           
  3209                           	psect	text15
  3210  0359                     __ptext15:	
  3211 ;; *************** function _TransiverInit *****************
  3212 ;; Defined at:
  3213 ;;		line 638 in file "../Main Card V10.0.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;		None
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;		None
  3218 ;; Return value:  Size  Location     Type
  3219 ;;                  1    wreg      void 
  3220 ;; Registers used:
  3221 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3222 ;; Tracked objects:
  3223 ;;		On entry : 0/0
  3224 ;;		On exit  : 0/0
  3225 ;;		Unchanged: 0/0
  3226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3227 ;;      Params:         0       0       0       0       0
  3228 ;;      Locals:         0       0       0       0       0
  3229 ;;      Temps:          0       1       0       0       0
  3230 ;;      Totals:         0       1       0       0       0
  3231 ;;Total ram usage:        1 bytes
  3232 ;; Hardware stack levels used:    1
  3233 ;; Hardware stack levels required when called:    7
  3234 ;; This function calls:
  3235 ;;		_Blink
  3236 ;;		_FindChannel
  3237 ;;		_RegisterRead
  3238 ;;		_RegisterSet
  3239 ;;		_SetRFMode
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           
  3246                           ;psect for function _TransiverInit
  3247  0359                     _TransiverInit:	
  3248                           
  3249                           ;Main Card V10.0.c: 641: RegisterSet(0x00, 0x30);
  3250                           
  3251                           ;incstack = 0
  3252                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3253  0359  3030               	movlw	48
  3254  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3255  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3256  035C  00B5               	movwf	??_TransiverInit
  3257  035D  0835               	movf	??_TransiverInit,w
  3258  035E  00A7               	movwf	RegisterSet@value
  3259  035F  3000               	movlw	0
  3260  0360  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3261                           
  3262                           ;Main Card V10.0.c: 642: RegisterSet(0x01,(0xA8));
  3263  0365  30A8               	movlw	168
  3264  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0368  00B5               	movwf	??_TransiverInit
  3267  0369  0835               	movf	??_TransiverInit,w
  3268  036A  00A7               	movwf	RegisterSet@value
  3269  036B  3001               	movlw	1
  3270  036C  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3271                           
  3272                           ;Main Card V10.0.c: 643: RegisterSet(0x02, 0x09);
  3273  0371  3009               	movlw	9
  3274  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3276  0374  00B5               	movwf	??_TransiverInit
  3277  0375  0835               	movf	??_TransiverInit,w
  3278  0376  00A7               	movwf	RegisterSet@value
  3279  0377  3002               	movlw	2
  3280  0378  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3281                           
  3282                           ;Main Card V10.0.c: 644: RegisterSet(0x03, 0x07);
  3283  037D  3007               	movlw	7
  3284  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3285  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3286  0380  00B5               	movwf	??_TransiverInit
  3287  0381  0835               	movf	??_TransiverInit,w
  3288  0382  00A7               	movwf	RegisterSet@value
  3289  0383  3003               	movlw	3
  3290  0384  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3291                           
  3292                           ;Main Card V10.0.c: 645: RegisterSet(0x05,(0x0A));
  3293  0389  300A               	movlw	10
  3294  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3295  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3296  038C  00B5               	movwf	??_TransiverInit
  3297  038D  0835               	movf	??_TransiverInit,w
  3298  038E  00A7               	movwf	RegisterSet@value
  3299  038F  3005               	movlw	5
  3300  0390  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3301                           
  3302                           ;Main Card V10.0.c: 646: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3303  0395  30B9               	movlw	185
  3304  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3305  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3306  0398  00B5               	movwf	??_TransiverInit
  3307  0399  0835               	movf	??_TransiverInit,w
  3308  039A  00A7               	movwf	RegisterSet@value
  3309  039B  300D               	movlw	13
  3310  039C  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3311                           
  3312                           ;Main Card V10.0.c: 647: RegisterSet(0x0E,(0x01|0x10|0x01));
  3313  03A1  3011               	movlw	17
  3314  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3315  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3316  03A4  00B5               	movwf	??_TransiverInit
  3317  03A5  0835               	movf	??_TransiverInit,w
  3318  03A6  00A7               	movwf	RegisterSet@value
  3319  03A7  300E               	movlw	14
  3320  03A8  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3321                           
  3322                           ;Main Card V10.0.c: 648: RegisterSet(0x10, 0xA3);
  3323  03AD  30A3               	movlw	163
  3324  03AE  1283               	bcf	3,5	;RP0=0, select bank0
  3325  03AF  1303               	bcf	3,6	;RP1=0, select bank0
  3326  03B0  00B5               	movwf	??_TransiverInit
  3327  03B1  0835               	movf	??_TransiverInit,w
  3328  03B2  00A7               	movwf	RegisterSet@value
  3329  03B3  3010               	movlw	16
  3330  03B4  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3331                           
  3332                           ;Main Card V10.0.c: 649: RegisterSet(0x12,(0x18|0x20|0x06));
  3333  03B9  303E               	movlw	62
  3334  03BA  1283               	bcf	3,5	;RP0=0, select bank0
  3335  03BB  1303               	bcf	3,6	;RP1=0, select bank0
  3336  03BC  00B5               	movwf	??_TransiverInit
  3337  03BD  0835               	movf	??_TransiverInit,w
  3338  03BE  00A7               	movwf	RegisterSet@value
  3339  03BF  3012               	movlw	18
  3340  03C0  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3341                           
  3342                           ;Main Card V10.0.c: 650: RegisterSet(0x16,('S'));
  3343  03C5  3053               	movlw	83
  3344  03C6  1283               	bcf	3,5	;RP0=0, select bank0
  3345  03C7  1303               	bcf	3,6	;RP1=0, select bank0
  3346  03C8  00B5               	movwf	??_TransiverInit
  3347  03C9  0835               	movf	??_TransiverInit,w
  3348  03CA  00A7               	movwf	RegisterSet@value
  3349  03CB  3016               	movlw	22
  3350  03CC  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3351                           
  3352                           ;Main Card V10.0.c: 651: RegisterSet(0x17,('Y'));
  3353  03D1  3059               	movlw	89
  3354  03D2  1283               	bcf	3,5	;RP0=0, select bank0
  3355  03D3  1303               	bcf	3,6	;RP1=0, select bank0
  3356  03D4  00B5               	movwf	??_TransiverInit
  3357  03D5  0835               	movf	??_TransiverInit,w
  3358  03D6  00A7               	movwf	RegisterSet@value
  3359  03D7  3017               	movlw	23
  3360  03D8  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3361                           
  3362                           ;Main Card V10.0.c: 652: RegisterSet(0x18,('N'));
  3363  03DD  304E               	movlw	78
  3364  03DE  1283               	bcf	3,5	;RP0=0, select bank0
  3365  03DF  1303               	bcf	3,6	;RP1=0, select bank0
  3366  03E0  00B5               	movwf	??_TransiverInit
  3367  03E1  0835               	movf	??_TransiverInit,w
  3368  03E2  00A7               	movwf	RegisterSet@value
  3369  03E3  3018               	movlw	24
  3370  03E4  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3371                           
  3372                           ;Main Card V10.0.c: 653: RegisterSet(0x19,('C'));
  3373  03E9  3043               	movlw	67
  3374  03EA  1283               	bcf	3,5	;RP0=0, select bank0
  3375  03EB  1303               	bcf	3,6	;RP1=0, select bank0
  3376  03EC  00B5               	movwf	??_TransiverInit
  3377  03ED  0835               	movf	??_TransiverInit,w
  3378  03EE  00A7               	movwf	RegisterSet@value
  3379  03EF  3019               	movlw	25
  3380  03F0  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3381                           
  3382                           ;Main Card V10.0.c: 654: RegisterSet(0x1A, 0x72);
  3383  03F5  3072               	movlw	114
  3384  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  3385  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  3386  03F8  00B5               	movwf	??_TransiverInit
  3387  03F9  0835               	movf	??_TransiverInit,w
  3388  03FA  00A7               	movwf	RegisterSet@value
  3389  03FB  301A               	movlw	26
  3390  03FC  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3391                           
  3392                           ;Main Card V10.0.c: 655: RegisterSet(0x1B, 0x3C);
  3393  0401  303C               	movlw	60
  3394  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3395  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3396  0404  00B5               	movwf	??_TransiverInit
  3397  0405  0835               	movf	??_TransiverInit,w
  3398  0406  00A7               	movwf	RegisterSet@value
  3399  0407  301B               	movlw	27
  3400  0408  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3401                           
  3402                           ;Main Card V10.0.c: 656: RegisterSet(0x1F, 0x80);
  3403  040D  3080               	movlw	128
  3404  040E  1283               	bcf	3,5	;RP0=0, select bank0
  3405  040F  1303               	bcf	3,6	;RP1=0, select bank0
  3406  0410  00B5               	movwf	??_TransiverInit
  3407  0411  0835               	movf	??_TransiverInit,w
  3408  0412  00A7               	movwf	RegisterSet@value
  3409  0413  301F               	movlw	31
  3410  0414  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3411                           
  3412                           ;Main Card V10.0.c: 657: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3413  0419  3000               	movlw	0
  3414  041A  120A  118A  25E1  120A  118A  	fcall	_RegisterRead
  3415  041F  3801               	iorlw	1
  3416  0420  1283               	bcf	3,5	;RP0=0, select bank0
  3417  0421  1303               	bcf	3,6	;RP1=0, select bank0
  3418  0422  00B5               	movwf	??_TransiverInit
  3419  0423  0835               	movf	??_TransiverInit,w
  3420  0424  00A7               	movwf	RegisterSet@value
  3421  0425  3000               	movlw	0
  3422  0426  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3423                           
  3424                           ;Main Card V10.0.c: 659: if(FindChannel() == 1)
  3425  042B  120A  118A  2259  120A  118A  	fcall	_FindChannel
  3426  0430  3A01               	xorlw	1
  3427  0431  1D03               	skipz
  3428  0432  2C3E               	goto	l2290
  3429                           
  3430                           ;Main Card V10.0.c: 660: Blink(1);
  3431  0433  3001               	movlw	1
  3432  0434  1283               	bcf	3,5	;RP0=0, select bank0
  3433  0435  1303               	bcf	3,6	;RP1=0, select bank0
  3434  0436  00A6               	movwf	Blink@n
  3435  0437  3000               	movlw	0
  3436  0438  00A7               	movwf	Blink@n+1
  3437  0439  120A  158A  2584  120A  118A  	fcall	_Blink
  3438  043E                     l2290:	
  3439                           
  3440                           ;Main Card V10.0.c: 661: SetRFMode(0x00);
  3441  043E  3000               	movlw	0
  3442  043F  120A  158A  2791   	fcall	_SetRFMode
  3443  0442  0008               	return
  3444  0443                     __end_of_TransiverInit:	
  3445                           
  3446                           	psect	text16
  3447  0D84                     __ptext16:	
  3448 ;; *************** function _Blink *****************
  3449 ;; Defined at:
  3450 ;;		line 786 in file "../Main Card V10.0.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  n               2    6[BANK0 ] int 
  3453 ;; Auto vars:     Size  Location     Type
  3454 ;;  i               2    9[BANK0 ] int 
  3455 ;; Return value:  Size  Location     Type
  3456 ;;                  1    wreg      void 
  3457 ;; Registers used:
  3458 ;;		wreg, status,2, status,0, pclath, cstack
  3459 ;; Tracked objects:
  3460 ;;		On entry : 0/0
  3461 ;;		On exit  : 0/0
  3462 ;;		Unchanged: 0/0
  3463 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3464 ;;      Params:         0       2       0       0       0
  3465 ;;      Locals:         0       2       0       0       0
  3466 ;;      Temps:          0       1       0       0       0
  3467 ;;      Totals:         0       5       0       0       0
  3468 ;;Total ram usage:        5 bytes
  3469 ;; Hardware stack levels used:    1
  3470 ;; Hardware stack levels required when called:    3
  3471 ;; This function calls:
  3472 ;;		_DelayDs
  3473 ;; This function is called by:
  3474 ;;		_TransiverInit
  3475 ;; This function uses a non-reentrant model
  3476 ;;
  3477                           
  3478                           
  3479                           ;psect for function _Blink
  3480  0D84                     _Blink:	
  3481                           
  3482                           ;Main Card V10.0.c: 788: for(int i = 1;i<=n;i++)
  3483                           
  3484                           ;incstack = 0
  3485                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3486  0D84  3001               	movlw	1
  3487  0D85  1283               	bcf	3,5	;RP0=0, select bank0
  3488  0D86  1303               	bcf	3,6	;RP1=0, select bank0
  3489  0D87  00A9               	movwf	Blink@i
  3490  0D88  3000               	movlw	0
  3491  0D89  00AA               	movwf	Blink@i+1
  3492  0D8A                     l2210:	
  3493  0D8A  0827               	movf	Blink@n+1,w
  3494  0D8B  3A80               	xorlw	128
  3495  0D8C  00A8               	movwf	??_Blink
  3496  0D8D  082A               	movf	Blink@i+1,w
  3497  0D8E  3A80               	xorlw	128
  3498  0D8F  0228               	subwf	??_Blink,w
  3499  0D90  1D03               	skipz
  3500  0D91  2D94               	goto	u1835
  3501  0D92  0829               	movf	Blink@i,w
  3502  0D93  0226               	subwf	Blink@n,w
  3503  0D94                     u1835:	
  3504  0D94  1C03               	btfss	3,0
  3505  0D95  0008               	return
  3506                           
  3507                           ;Main Card V10.0.c: 789: {
  3508                           ;Main Card V10.0.c: 790: PORTCbits.RC1 = 1;
  3509  0D96  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0D97  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0D98  1487               	bsf	7,1	;volatile
  3512                           
  3513                           ;Main Card V10.0.c: 791: DelayDs(2);
  3514  0D99  3002               	movlw	2
  3515  0D9A  00A0               	movwf	DelayDs@cnt
  3516  0D9B  3000               	movlw	0
  3517  0D9C  00A1               	movwf	DelayDs@cnt+1
  3518  0D9D  120A  158A  246C  120A  158A  	fcall	_DelayDs
  3519                           
  3520                           ;Main Card V10.0.c: 792: PORTCbits.RC1 = 0;
  3521  0DA2  1283               	bcf	3,5	;RP0=0, select bank0
  3522  0DA3  1303               	bcf	3,6	;RP1=0, select bank0
  3523  0DA4  1087               	bcf	7,1	;volatile
  3524                           
  3525                           ;Main Card V10.0.c: 793: DelayDs(6);
  3526  0DA5  3006               	movlw	6
  3527  0DA6  00A0               	movwf	DelayDs@cnt
  3528  0DA7  3000               	movlw	0
  3529  0DA8  00A1               	movwf	DelayDs@cnt+1
  3530  0DA9  120A  158A  246C  120A  158A  	fcall	_DelayDs
  3531  0DAE  3001               	movlw	1
  3532  0DAF  1283               	bcf	3,5	;RP0=0, select bank0
  3533  0DB0  1303               	bcf	3,6	;RP1=0, select bank0
  3534  0DB1  07A9               	addwf	Blink@i,f
  3535  0DB2  1803               	skipnc
  3536  0DB3  0AAA               	incf	Blink@i+1,f
  3537  0DB4  3000               	movlw	0
  3538  0DB5  07AA               	addwf	Blink@i+1,f
  3539  0DB6  2D8A               	goto	l2210
  3540  0DB7                     __end_of_Blink:	
  3541                           
  3542                           	psect	text17
  3543  0BE7                     __ptext17:	
  3544 ;; *************** function _Mode_5 *****************
  3545 ;; Defined at:
  3546 ;;		line 447 in file "../Main Card V10.0.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3560 ;;      Params:         0       0       0       0       0
  3561 ;;      Locals:         0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0
  3563 ;;      Totals:         0       0       0       0       0
  3564 ;;Total ram usage:        0 bytes
  3565 ;; Hardware stack levels used:    1
  3566 ;; Hardware stack levels required when called:    8
  3567 ;; This function calls:
  3568 ;;		_LightWithSensController
  3569 ;;		_TransmittString
  3570 ;; This function is called by:
  3571 ;;		_main
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           
  3576                           ;psect for function _Mode_5
  3577  0BE7                     _Mode_5:	
  3578                           
  3579                           ;Main Card V10.0.c: 449: if(!PORTBbits.RB5)
  3580                           
  3581                           ;incstack = 0
  3582 ;; hardware stack exceeded
  3583                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3584  0BE7  1283               	bcf	3,5	;RP0=0, select bank0
  3585  0BE8  1303               	bcf	3,6	;RP1=0, select bank0
  3586  0BE9  1A86               	btfsc	6,5	;volatile
  3587  0BEA  2BF4               	goto	l2334
  3588                           
  3589                           ;Main Card V10.0.c: 450: {
  3590                           ;Main Card V10.0.c: 451: TransmittString("N2BLINK");
  3591  0BEB  307B               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3592  0BEC  00B5               	movwf	TransmittString@dataString
  3593  0BED  3080               	movlw	128
  3594  0BEE  00B6               	movwf	TransmittString@dataString+1
  3595  0BEF  120A  118A  2443  120A  158A  	fcall	_TransmittString
  3596  0BF4                     l2334:	
  3597                           
  3598                           ;Main Card V10.0.c: 452: }
  3599                           ;Main Card V10.0.c: 453: LightWithSensController();
  3600  0BF4  120A  158A  25B7   	fcall	_LightWithSensController
  3601  0BF7  0008               	return
  3602  0BF8                     __end_of_Mode_5:	
  3603                           
  3604                           	psect	text18
  3605  0BD6                     __ptext18:	
  3606 ;; *************** function _Mode_4 *****************
  3607 ;; Defined at:
  3608 ;;		line 435 in file "../Main Card V10.0.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;		None
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3622 ;;      Params:         0       0       0       0       0
  3623 ;;      Locals:         0       0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0
  3625 ;;      Totals:         0       0       0       0       0
  3626 ;;Total ram usage:        0 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; Hardware stack levels required when called:    8
  3629 ;; This function calls:
  3630 ;;		_LightWithSensController
  3631 ;;		_TransmittString
  3632 ;; This function is called by:
  3633 ;;		_main
  3634 ;; This function uses a non-reentrant model
  3635 ;;
  3636                           
  3637                           
  3638                           ;psect for function _Mode_4
  3639  0BD6                     _Mode_4:	
  3640                           
  3641                           ;Main Card V10.0.c: 437: if(!PORTBbits.RB5)
  3642                           
  3643                           ;incstack = 0
  3644 ;; hardware stack exceeded
  3645                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3646  0BD6  1283               	bcf	3,5	;RP0=0, select bank0
  3647  0BD7  1303               	bcf	3,6	;RP1=0, select bank0
  3648  0BD8  1A86               	btfsc	6,5	;volatile
  3649  0BD9  2BE3               	goto	l2328
  3650                           
  3651                           ;Main Card V10.0.c: 438: {
  3652                           ;Main Card V10.0.c: 439: TransmittString("N1BLINK");
  3653  0BDA  3073               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3654  0BDB  00B5               	movwf	TransmittString@dataString
  3655  0BDC  3080               	movlw	128
  3656  0BDD  00B6               	movwf	TransmittString@dataString+1
  3657  0BDE  120A  118A  2443  120A  158A  	fcall	_TransmittString
  3658  0BE3                     l2328:	
  3659                           
  3660                           ;Main Card V10.0.c: 440: }
  3661                           ;Main Card V10.0.c: 441: LightWithSensController();
  3662  0BE3  120A  158A  25B7   	fcall	_LightWithSensController
  3663  0BE6  0008               	return
  3664  0BE7                     __end_of_Mode_4:	
  3665                           
  3666                           	psect	text19
  3667  0443                     __ptext19:	
  3668 ;; *************** function _TransmittString *****************
  3669 ;; Defined at:
  3670 ;;		line 336 in file "../Main Card V10.0.c"
  3671 ;; Parameters:    Size  Location     Type
  3672 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3673 ;;		 -> STR_21(8), STR_20(8), TransmittedDataHandler@slask_716(8), TransmittedDataHandler@slask_713(8), 
  3674 ;;		 -> STR_16(4), STR_15(4), STR_13(14), STR_12(14), 
  3675 ;;		 -> TransmittedDataHandler@slask_704(8), TransmittedDataHandler@slask(8), STR_4(15), STR_2(15), 
  3676 ;; Auto vars:     Size  Location     Type
  3677 ;;  i               2   26[BANK0 ] int 
  3678 ;; Return value:  Size  Location     Type
  3679 ;;                  1    wreg      void 
  3680 ;; Registers used:
  3681 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3682 ;; Tracked objects:
  3683 ;;		On entry : 0/0
  3684 ;;		On exit  : 0/0
  3685 ;;		Unchanged: 0/0
  3686 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3687 ;;      Params:         0       2       0       0       0
  3688 ;;      Locals:         0       2       0       0       0
  3689 ;;      Temps:          0       3       0       0       0
  3690 ;;      Totals:         0       7       0       0       0
  3691 ;;Total ram usage:        7 bytes
  3692 ;; Hardware stack levels used:    1
  3693 ;; Hardware stack levels required when called:    7
  3694 ;; This function calls:
  3695 ;;		_FindChannel
  3696 ;;		_RegisterRead
  3697 ;;		_RegisterSet
  3698 ;;		_SetRFMode
  3699 ;;		_WriteFIFO
  3700 ;;		_timerFunction
  3701 ;; This function is called by:
  3702 ;;		_TransmittedDataHandler
  3703 ;;		_Mode_4
  3704 ;;		_Mode_5
  3705 ;; This function uses a non-reentrant model
  3706 ;;
  3707                           
  3708                           
  3709                           ;psect for function _TransmittString
  3710  0443                     _TransmittString:	
  3711                           
  3712                           ;Main Card V10.0.c: 338: timerFunction(4, 5);
  3713                           
  3714                           ;incstack = 0
  3715 ;; hardware stack exceeded
  3716                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3717  0443  3004               	movlw	4
  3718  0444  1283               	bcf	3,5	;RP0=0, select bank0
  3719  0445  1303               	bcf	3,6	;RP1=0, select bank0
  3720  0446  00A0               	movwf	timerFunction@intTimerNumber
  3721  0447  3000               	movlw	0
  3722  0448  00A1               	movwf	timerFunction@intTimerNumber+1
  3723  0449  3005               	movlw	5
  3724  044A  00A2               	movwf	timerFunction@intSetSeconds
  3725  044B  3000               	movlw	0
  3726  044C  00A3               	movwf	timerFunction@intSetSeconds+1
  3727  044D  120A  158A  23F8  120A  118A  	fcall	_timerFunction
  3728                           
  3729                           ;Main Card V10.0.c: 340: int i = 0;
  3730  0452  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0453  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0454  01BA               	clrf	TransmittString@i
  3733  0455  01BB               	clrf	TransmittString@i+1
  3734                           
  3735                           ;Main Card V10.0.c: 343: SetRFMode(0x20);
  3736  0456  3020               	movlw	32
  3737  0457  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3738                           
  3739                           ;Main Card V10.0.c: 344: _delay((unsigned long)((10)*(4000000/4000.0)));
  3740  045C  300D               	movlw	13
  3741  045D  1283               	bcf	3,5	;RP0=0, select bank0
  3742  045E  1303               	bcf	3,6	;RP1=0, select bank0
  3743  045F  00B8               	movwf	??_TransmittString+1
  3744  0460  30FB               	movlw	251
  3745  0461  00B7               	movwf	??_TransmittString
  3746  0462                     u2317:	
  3747  0462  0BB7               	decfsz	??_TransmittString,f
  3748  0463  2C62               	goto	u2317
  3749  0464  0BB8               	decfsz	??_TransmittString+1,f
  3750  0465  2C62               	goto	u2317
  3751                           
  3752                           ;Main Card V10.0.c: 345: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3753  0466  300E               	movlw	14
  3754  0467  120A  118A  25E1  120A  118A  	fcall	_RegisterRead
  3755  046C  3802               	iorlw	2
  3756  046D  1283               	bcf	3,5	;RP0=0, select bank0
  3757  046E  1303               	bcf	3,6	;RP1=0, select bank0
  3758  046F  00B7               	movwf	??_TransmittString
  3759  0470  0837               	movf	??_TransmittString,w
  3760  0471  00A7               	movwf	RegisterSet@value
  3761  0472  300E               	movlw	14
  3762  0473  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  3763                           
  3764                           ;Main Card V10.0.c: 346: SetRFMode(0x40);
  3765  0478  3040               	movlw	64
  3766  0479  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3767  047E                     l1956:	
  3768                           ;Main Card V10.0.c: 347: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3769                           
  3770  047E  300E               	movlw	14
  3771  047F  120A  118A  25E1  120A  118A  	fcall	_RegisterRead
  3772  0484  3902               	andlw	2
  3773  0485  1D03               	btfss	3,2
  3774  0486  2C91               	goto	l1958
  3775                           
  3776                           ;Main Card V10.0.c: 348: {
  3777                           ;Main Card V10.0.c: 349: if(bTimerComplete[4])
  3778  0487  1683               	bsf	3,5	;RP0=1, select bank1
  3779  0488  1303               	bcf	3,6	;RP1=0, select bank1
  3780  0489  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3781  048A  1903               	btfsc	3,2
  3782  048B  2C7E               	goto	l1956
  3783                           
  3784                           ;Main Card V10.0.c: 350: {
  3785                           ;Main Card V10.0.c: 351: FindChannel();
  3786  048C  120A  118A  2259  120A  118A  	fcall	_FindChannel
  3787  0491                     l1958:	
  3788                           ;Main Card V10.0.c: 352: break;
  3789                           
  3790                           
  3791                           ;Main Card V10.0.c: 353: }
  3792                           ;Main Card V10.0.c: 355: }
  3793                           ;Main Card V10.0.c: 356: SetRFMode(0x80);
  3794  0491  3080               	movlw	128
  3795  0492  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3796                           
  3797                           ;Main Card V10.0.c: 357: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3798  0497  30A5               	movlw	165
  3799  0498  1283               	bcf	3,5	;RP0=0, select bank0
  3800  0499  1303               	bcf	3,6	;RP1=0, select bank0
  3801  049A  00B7               	movwf	??_TransmittString
  3802  049B                     u2327:	
  3803  049B  0BB7               	decfsz	??_TransmittString,f
  3804  049C  2C9B               	goto	u2327
  3805  049D  2C9E               	nop2
  3806                           
  3807                           ;Main Card V10.0.c: 360: WriteFIFO('S');
  3808  049E  3053               	movlw	83
  3809  049F  120A  158A  2391  120A  118A  	fcall	_WriteFIFO
  3810                           
  3811                           ;Main Card V10.0.c: 361: WriteFIFO('Y');
  3812  04A4  3059               	movlw	89
  3813  04A5  120A  158A  2391  120A  118A  	fcall	_WriteFIFO
  3814                           
  3815                           ;Main Card V10.0.c: 362: WriteFIFO('N');
  3816  04AA  304E               	movlw	78
  3817  04AB  120A  158A  2391  120A  118A  	fcall	_WriteFIFO
  3818                           
  3819                           ;Main Card V10.0.c: 363: WriteFIFO('C');
  3820  04B0  3043               	movlw	67
  3821  04B1  120A  158A  2391  120A  118A  	fcall	_WriteFIFO
  3822  04B6                     l1974:	
  3823                           ;Main Card V10.0.c: 366: while(dataString[i] != 0)
  3824                           
  3825  04B6  1283               	bcf	3,5	;RP0=0, select bank0
  3826  04B7  1303               	bcf	3,6	;RP1=0, select bank0
  3827  04B8  083A               	movf	TransmittString@i,w
  3828  04B9  0735               	addwf	TransmittString@dataString,w
  3829  04BA  00B8               	movwf	??_TransmittString+1
  3830  04BB  0836               	movf	TransmittString@dataString+1,w
  3831  04BC  00B7               	movwf	??_TransmittString
  3832  04BD  1803               	skipnc
  3833  04BE  0AB7               	incf	??_TransmittString,f
  3834  04BF  1BBA               	btfsc	TransmittString@i,7
  3835  04C0  03B7               	decf	??_TransmittString,f
  3836  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  3837  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  3838  04C3  0837               	movf	??_TransmittString,w
  3839  04C4  00B9               	movwf	??_TransmittString+2
  3840  04C5  0839               	movf	??_TransmittString+2,w
  3841  04C6  00FF               	movwf	127
  3842  04C7  0838               	movf	??_TransmittString+1,w
  3843  04C8  0084               	movwf	4
  3844  04C9  120A  118A  2600  120A  118A  	fcall	stringtab
  3845  04CE  3A00               	xorlw	0
  3846  04CF  1903               	btfsc	3,2
  3847  04D0  2CFC               	goto	l243
  3848                           
  3849                           ;Main Card V10.0.c: 367: {
  3850                           ;Main Card V10.0.c: 368: WriteFIFO(dataString[i]);
  3851  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  3852  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  3853  04D3  083A               	movf	TransmittString@i,w
  3854  04D4  0735               	addwf	TransmittString@dataString,w
  3855  04D5  00B8               	movwf	??_TransmittString+1
  3856  04D6  0836               	movf	TransmittString@dataString+1,w
  3857  04D7  00B7               	movwf	??_TransmittString
  3858  04D8  1803               	skipnc
  3859  04D9  0AB7               	incf	??_TransmittString,f
  3860  04DA  1BBA               	btfsc	TransmittString@i,7
  3861  04DB  03B7               	decf	??_TransmittString,f
  3862  04DC  1283               	bcf	3,5	;RP0=0, select bank0
  3863  04DD  1303               	bcf	3,6	;RP1=0, select bank0
  3864  04DE  0837               	movf	??_TransmittString,w
  3865  04DF  00B9               	movwf	??_TransmittString+2
  3866  04E0  0839               	movf	??_TransmittString+2,w
  3867  04E1  00FF               	movwf	127
  3868  04E2  0838               	movf	??_TransmittString+1,w
  3869  04E3  0084               	movwf	4
  3870  04E4  120A  118A  2600  120A  118A  	fcall	stringtab
  3871  04E9  120A  158A  2391  120A  118A  	fcall	_WriteFIFO
  3872                           
  3873                           ;Main Card V10.0.c: 369: i++;
  3874  04EE  3001               	movlw	1
  3875  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  3876  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  3877  04F1  07BA               	addwf	TransmittString@i,f
  3878  04F2  1803               	skipnc
  3879  04F3  0ABB               	incf	TransmittString@i+1,f
  3880  04F4  3000               	movlw	0
  3881  04F5  07BB               	addwf	TransmittString@i+1,f
  3882  04F6  2CB6               	goto	l1974
  3883  04F7                     l1976:	
  3884                           ;Main Card V10.0.c: 370: }
  3885                           ;Main Card V10.0.c: 373: while(!PORTBbits.RB4)
  3886                           
  3887                           
  3888                           ;Main Card V10.0.c: 374: {
  3889                           ;Main Card V10.0.c: 375: if(bTimerComplete[4])
  3890  04F7  1683               	bsf	3,5	;RP0=1, select bank1
  3891  04F8  1303               	bcf	3,6	;RP1=0, select bank1
  3892  04F9  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3893  04FA  1D03               	btfss	3,2
  3894  04FB  2CFF               	goto	l1980
  3895  04FC                     l243:	
  3896                           ;Main Card V10.0.c: 376: break;
  3897                           
  3898  04FC  1283               	bcf	3,5	;RP0=0, select bank0
  3899  04FD  1E06               	btfss	6,4	;volatile
  3900  04FE  2CF7               	goto	l1976
  3901  04FF                     l1980:	
  3902                           
  3903                           ;Main Card V10.0.c: 377: }
  3904                           ;Main Card V10.0.c: 378: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3905  04FF  3002               	movlw	2
  3906  0500  1283               	bcf	3,5	;RP0=0, select bank0
  3907  0501  1303               	bcf	3,6	;RP1=0, select bank0
  3908  0502  00B7               	movwf	??_TransmittString
  3909  0503                     u2337:	
  3910  0503  0BB7               	decfsz	??_TransmittString,f
  3911  0504  2D03               	goto	u2337
  3912  0505  0000               	nop
  3913                           
  3914                           ;Main Card V10.0.c: 379: SetRFMode(0x00);
  3915  0506  3000               	movlw	0
  3916  0507  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3917                           
  3918                           ;Main Card V10.0.c: 380: _delay((unsigned long)((1)*(4000000/4000.0)));
  3919  050C  30C7               	movlw	199
  3920  050D  1283               	bcf	3,5	;RP0=0, select bank0
  3921  050E  1303               	bcf	3,6	;RP1=0, select bank0
  3922  050F  00B7               	movwf	??_TransmittString
  3923  0510                     u2347:	
  3924  0510  2D11               	nop2
  3925  0511  0BB7               	decfsz	??_TransmittString,f
  3926  0512  2D10               	goto	u2347
  3927  0513  2D14               	nop2
  3928  0514  0008               	return
  3929  0515                     __end_of_TransmittString:	
  3930                           
  3931                           	psect	text20
  3932  0B91                     __ptext20:	
  3933 ;; *************** function _WriteFIFO *****************
  3934 ;; Defined at:
  3935 ;;		line 900 in file "../Main Card V10.0.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;  Data            1    wreg     unsigned char 
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  Data            1    3[BANK0 ] unsigned char 
  3940 ;; Return value:  Size  Location     Type
  3941 ;;                  1    wreg      void 
  3942 ;; Registers used:
  3943 ;;		wreg, status,2, status,0, pclath, cstack
  3944 ;; Tracked objects:
  3945 ;;		On entry : 0/0
  3946 ;;		On exit  : 0/0
  3947 ;;		Unchanged: 0/0
  3948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3949 ;;      Params:         0       0       0       0       0
  3950 ;;      Locals:         0       1       0       0       0
  3951 ;;      Temps:          0       0       0       0       0
  3952 ;;      Totals:         0       1       0       0       0
  3953 ;;Total ram usage:        1 bytes
  3954 ;; Hardware stack levels used:    1
  3955 ;; Hardware stack levels required when called:    3
  3956 ;; This function calls:
  3957 ;;		_WriteSPI
  3958 ;; This function is called by:
  3959 ;;		_TransmittString
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           
  3964                           ;psect for function _WriteFIFO
  3965  0B91                     _WriteFIFO:	
  3966                           
  3967                           ;incstack = 0
  3968                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3969                           ;WriteFIFO@Data stored from wreg
  3970  0B91  1283               	bcf	3,5	;RP0=0, select bank0
  3971  0B92  1303               	bcf	3,6	;RP1=0, select bank0
  3972  0B93  00A3               	movwf	WriteFIFO@Data
  3973                           
  3974                           ;Main Card V10.0.c: 902: PORTAbits.RA5 = 0;
  3975  0B94  1285               	bcf	5,5	;volatile
  3976                           
  3977                           ;Main Card V10.0.c: 903: WriteSPI(Data);
  3978  0B95  0823               	movf	WriteFIFO@Data,w
  3979  0B96  120A  158A  23AA   	fcall	_WriteSPI
  3980                           
  3981                           ;Main Card V10.0.c: 904: PORTAbits.RA5 = 1;
  3982  0B99  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0B9A  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0B9B  1685               	bsf	5,5	;volatile
  3985  0B9C  0008               	return
  3986  0B9D                     __end_of_WriteFIFO:	
  3987                           
  3988                           	psect	text21
  3989  0259                     __ptext21:	
  3990 ;; *************** function _FindChannel *****************
  3991 ;; Defined at:
  3992 ;;		line 683 in file "../Main Card V10.0.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;  i               2   19[BANK0 ] int 
  3997 ;;  cnt             2   17[BANK0 ] int 
  3998 ;; Return value:  Size  Location     Type
  3999 ;;                  1    wreg      unsigned char 
  4000 ;; Registers used:
  4001 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4002 ;; Tracked objects:
  4003 ;;		On entry : 0/0
  4004 ;;		On exit  : 0/0
  4005 ;;		Unchanged: 0/0
  4006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4007 ;;      Params:         0       0       0       0       0
  4008 ;;      Locals:         0       4       0       0       0
  4009 ;;      Temps:          0       3       0       0       0
  4010 ;;      Totals:         0       7       0       0       0
  4011 ;;Total ram usage:        7 bytes
  4012 ;; Hardware stack levels used:    1
  4013 ;; Hardware stack levels required when called:    6
  4014 ;; This function calls:
  4015 ;;		_RegisterRead
  4016 ;;		_RegisterSet
  4017 ;;		_SetRFMode
  4018 ;; This function is called by:
  4019 ;;		_TransiverToReceive
  4020 ;;		_TransmittString
  4021 ;;		_TransiverInit
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           
  4026                           ;psect for function _FindChannel
  4027  0259                     _FindChannel:	
  4028                           
  4029                           ;Main Card V10.0.c: 685: int cnt = 0;
  4030                           
  4031                           ;incstack = 0
  4032 ;; using string table level
  4033                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4034  0259  1283               	bcf	3,5	;RP0=0, select bank0
  4035  025A  1303               	bcf	3,6	;RP1=0, select bank0
  4036  025B  01B1               	clrf	FindChannel@cnt
  4037  025C  01B2               	clrf	FindChannel@cnt+1
  4038                           
  4039                           ;Main Card V10.0.c: 686: bChannelFound = 0;
  4040  025D  01EC               	clrf	_bChannelFound
  4041                           
  4042                           ;Main Card V10.0.c: 687: channelFound = 0;
  4043  025E  1683               	bsf	3,5	;RP0=1, select bank1
  4044  025F  1303               	bcf	3,6	;RP1=0, select bank1
  4045  0260  01AF               	clrf	_channelFound^(0+128)
  4046  0261  01B0               	clrf	(_channelFound+1)^(0+128)
  4047                           
  4048                           ;Main Card V10.0.c: 689: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4049  0262  3006               	movlw	6
  4050  0263  1283               	bcf	3,5	;RP0=0, select bank0
  4051  0264  1303               	bcf	3,6	;RP1=0, select bank0
  4052  0265  00B0               	movwf	??_FindChannel+2
  4053  0266  3013               	movlw	19
  4054  0267  00AF               	movwf	??_FindChannel+1
  4055  0268  30AD               	movlw	173
  4056  0269  00AE               	movwf	??_FindChannel
  4057  026A                     u2357:	
  4058  026A  0BAE               	decfsz	??_FindChannel,f
  4059  026B  2A6A               	goto	u2357
  4060  026C  0BAF               	decfsz	??_FindChannel+1,f
  4061  026D  2A6A               	goto	u2357
  4062  026E  0BB0               	decfsz	??_FindChannel+2,f
  4063  026F  2A6A               	goto	u2357
  4064                           
  4065                           ;Main Card V10.0.c: 690: for (int i = 0; i < 13; i++)
  4066  0270  1283               	bcf	3,5	;RP0=0, select bank0
  4067  0271  1303               	bcf	3,6	;RP1=0, select bank0
  4068  0272  01B3               	clrf	FindChannel@i
  4069  0273  01B4               	clrf	FindChannel@i+1
  4070  0274  0834               	movf	FindChannel@i+1,w
  4071  0275  3A80               	xorlw	128
  4072  0276  00FF               	movwf	127
  4073  0277  3080               	movlw	128
  4074  0278  027F               	subwf	127,w
  4075  0279  1D03               	skipz
  4076  027A  2A7D               	goto	u1165
  4077  027B  300D               	movlw	13
  4078  027C  0233               	subwf	FindChannel@i,w
  4079  027D                     u1165:	
  4080  027D  1803               	btfsc	3,0
  4081  027E  2B57               	goto	l1824
  4082  027F                     l1800:	
  4083                           
  4084                           ;Main Card V10.0.c: 691: {
  4085                           ;Main Card V10.0.c: 692: RegisterSet(0x06,ChannelR[i]);
  4086  027F  1283               	bcf	3,5	;RP0=0, select bank0
  4087  0280  1303               	bcf	3,6	;RP1=0, select bank0
  4088  0281  0833               	movf	FindChannel@i,w
  4089  0282  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4090  0283  0084               	movwf	4
  4091  0284  120A  118A  260A  120A  118A  	fcall	stringdir
  4092  0289  00AE               	movwf	??_FindChannel
  4093  028A  082E               	movf	??_FindChannel,w
  4094  028B  00A7               	movwf	RegisterSet@value
  4095  028C  3006               	movlw	6
  4096  028D  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4097                           
  4098                           ;Main Card V10.0.c: 693: RegisterSet(0x07,ChannelP[i]);
  4099  0292  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0293  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0294  0833               	movf	FindChannel@i,w
  4102  0295  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4103  0296  0084               	movwf	4
  4104  0297  120A  118A  260A  120A  118A  	fcall	stringdir
  4105  029C  00AE               	movwf	??_FindChannel
  4106  029D  082E               	movf	??_FindChannel,w
  4107  029E  00A7               	movwf	RegisterSet@value
  4108  029F  3007               	movlw	7
  4109  02A0  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4110                           
  4111                           ;Main Card V10.0.c: 694: RegisterSet(0x08,ChannelS[i]);
  4112  02A5  1283               	bcf	3,5	;RP0=0, select bank0
  4113  02A6  1303               	bcf	3,6	;RP1=0, select bank0
  4114  02A7  0833               	movf	FindChannel@i,w
  4115  02A8  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4116  02A9  0084               	movwf	4
  4117  02AA  120A  118A  260A  120A  118A  	fcall	stringdir
  4118  02AF  00AE               	movwf	??_FindChannel
  4119  02B0  082E               	movf	??_FindChannel,w
  4120  02B1  00A7               	movwf	RegisterSet@value
  4121  02B2  3008               	movlw	8
  4122  02B3  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4123                           
  4124                           ;Main Card V10.0.c: 695: RegisterSet(0x09,ChannelR[i]);
  4125  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  4126  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  4127  02BA  0833               	movf	FindChannel@i,w
  4128  02BB  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4129  02BC  0084               	movwf	4
  4130  02BD  120A  118A  260A  120A  118A  	fcall	stringdir
  4131  02C2  00AE               	movwf	??_FindChannel
  4132  02C3  082E               	movf	??_FindChannel,w
  4133  02C4  00A7               	movwf	RegisterSet@value
  4134  02C5  3009               	movlw	9
  4135  02C6  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4136                           
  4137                           ;Main Card V10.0.c: 696: RegisterSet(0x0A,ChannelP[i]);
  4138  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  4139  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  4140  02CD  0833               	movf	FindChannel@i,w
  4141  02CE  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4142  02CF  0084               	movwf	4
  4143  02D0  120A  118A  260A  120A  118A  	fcall	stringdir
  4144  02D5  00AE               	movwf	??_FindChannel
  4145  02D6  082E               	movf	??_FindChannel,w
  4146  02D7  00A7               	movwf	RegisterSet@value
  4147  02D8  300A               	movlw	10
  4148  02D9  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4149                           
  4150                           ;Main Card V10.0.c: 697: RegisterSet(0x0B,ChannelS[i]);
  4151  02DE  1283               	bcf	3,5	;RP0=0, select bank0
  4152  02DF  1303               	bcf	3,6	;RP1=0, select bank0
  4153  02E0  0833               	movf	FindChannel@i,w
  4154  02E1  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4155  02E2  0084               	movwf	4
  4156  02E3  120A  118A  260A  120A  118A  	fcall	stringdir
  4157  02E8  00AE               	movwf	??_FindChannel
  4158  02E9  082E               	movf	??_FindChannel,w
  4159  02EA  00A7               	movwf	RegisterSet@value
  4160  02EB  300B               	movlw	11
  4161  02EC  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4162                           
  4163                           ;Main Card V10.0.c: 698: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4164  02F1  300E               	movlw	14
  4165  02F2  120A  118A  25E1  120A  118A  	fcall	_RegisterRead
  4166  02F7  3802               	iorlw	2
  4167  02F8  1283               	bcf	3,5	;RP0=0, select bank0
  4168  02F9  1303               	bcf	3,6	;RP1=0, select bank0
  4169  02FA  00AE               	movwf	??_FindChannel
  4170  02FB  082E               	movf	??_FindChannel,w
  4171  02FC  00A7               	movwf	RegisterSet@value
  4172  02FD  300E               	movlw	14
  4173  02FE  120A  158A  2452  120A  118A  	fcall	_RegisterSet
  4174                           
  4175                           ;Main Card V10.0.c: 699: SetRFMode(0x40);
  4176  0303  3040               	movlw	64
  4177  0304  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  4178                           
  4179                           ;Main Card V10.0.c: 700: cnt = 0;
  4180  0309  1283               	bcf	3,5	;RP0=0, select bank0
  4181  030A  1303               	bcf	3,6	;RP1=0, select bank0
  4182  030B  01B1               	clrf	FindChannel@cnt
  4183  030C  01B2               	clrf	FindChannel@cnt+1
  4184  030D                     l1818:	
  4185                           ;Main Card V10.0.c: 701: while(cnt < 5)
  4186                           
  4187  030D  1283               	bcf	3,5	;RP0=0, select bank0
  4188  030E  1303               	bcf	3,6	;RP1=0, select bank0
  4189  030F  0832               	movf	FindChannel@cnt+1,w
  4190  0310  3A80               	xorlw	128
  4191  0311  00FF               	movwf	127
  4192  0312  3080               	movlw	128
  4193  0313  027F               	subwf	127,w
  4194  0314  1D03               	skipz
  4195  0315  2B18               	goto	u1185
  4196  0316  3005               	movlw	5
  4197  0317  0231               	subwf	FindChannel@cnt,w
  4198  0318                     u1185:	
  4199  0318  1803               	btfsc	3,0
  4200  0319  2B44               	goto	l1820
  4201                           
  4202                           ;Main Card V10.0.c: 702: {
  4203                           ;Main Card V10.0.c: 704: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4204  031A  300E               	movlw	14
  4205  031B  120A  118A  25E1  120A  118A  	fcall	_RegisterRead
  4206  0320  3902               	andlw	2
  4207  0321  1903               	btfsc	3,2
  4208  0322  2B33               	goto	l1816
  4209                           
  4210                           ;Main Card V10.0.c: 705: {
  4211                           ;Main Card V10.0.c: 706: bChannelFound = 1;
  4212  0323  1283               	bcf	3,5	;RP0=0, select bank0
  4213  0324  1303               	bcf	3,6	;RP1=0, select bank0
  4214  0325  01EC               	clrf	_bChannelFound
  4215  0326  0AEC               	incf	_bChannelFound,f
  4216                           
  4217                           ;Main Card V10.0.c: 707: channelFound = i;
  4218  0327  0834               	movf	FindChannel@i+1,w
  4219  0328  1683               	bsf	3,5	;RP0=1, select bank1
  4220  0329  1303               	bcf	3,6	;RP1=0, select bank1
  4221  032A  00B0               	movwf	(_channelFound+1)^(0+128)
  4222  032B  1283               	bcf	3,5	;RP0=0, select bank0
  4223  032C  1303               	bcf	3,6	;RP1=0, select bank0
  4224  032D  0833               	movf	FindChannel@i,w
  4225  032E  1683               	bsf	3,5	;RP0=1, select bank1
  4226  032F  1303               	bcf	3,6	;RP1=0, select bank1
  4227  0330  00AF               	movwf	_channelFound^(0+128)
  4228                           
  4229                           ;Main Card V10.0.c: 708: return 1;
  4230  0331  3001               	movlw	1
  4231  0332  0008               	return
  4232  0333                     l1816:	
  4233                           
  4234                           ;Main Card V10.0.c: 709: }
  4235                           ;Main Card V10.0.c: 710: cnt++;
  4236  0333  3001               	movlw	1
  4237  0334  1283               	bcf	3,5	;RP0=0, select bank0
  4238  0335  1303               	bcf	3,6	;RP1=0, select bank0
  4239  0336  07B1               	addwf	FindChannel@cnt,f
  4240  0337  1803               	skipnc
  4241  0338  0AB2               	incf	FindChannel@cnt+1,f
  4242  0339  3000               	movlw	0
  4243  033A  07B2               	addwf	FindChannel@cnt+1,f
  4244                           
  4245                           ;Main Card V10.0.c: 711: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4246  033B  30C7               	movlw	199
  4247  033C  1283               	bcf	3,5	;RP0=0, select bank0
  4248  033D  1303               	bcf	3,6	;RP1=0, select bank0
  4249  033E  00AE               	movwf	??_FindChannel
  4250  033F                     u2367:	
  4251  033F  2B40               	nop2
  4252  0340  0BAE               	decfsz	??_FindChannel,f
  4253  0341  2B3F               	goto	u2367
  4254  0342  2B43               	nop2
  4255  0343  2B0D               	goto	l1818
  4256  0344                     l1820:	
  4257  0344  3001               	movlw	1
  4258  0345  1283               	bcf	3,5	;RP0=0, select bank0
  4259  0346  1303               	bcf	3,6	;RP1=0, select bank0
  4260  0347  07B3               	addwf	FindChannel@i,f
  4261  0348  1803               	skipnc
  4262  0349  0AB4               	incf	FindChannel@i+1,f
  4263  034A  3000               	movlw	0
  4264  034B  07B4               	addwf	FindChannel@i+1,f
  4265  034C  0834               	movf	FindChannel@i+1,w
  4266  034D  3A80               	xorlw	128
  4267  034E  00FF               	movwf	127
  4268  034F  3080               	movlw	128
  4269  0350  027F               	subwf	127,w
  4270  0351  1D03               	skipz
  4271  0352  2B55               	goto	u1195
  4272  0353  300D               	movlw	13
  4273  0354  0233               	subwf	FindChannel@i,w
  4274  0355                     u1195:	
  4275  0355  1C03               	skipc
  4276  0356  2A7F               	goto	l1800
  4277  0357                     l1824:	
  4278                           
  4279                           ;Main Card V10.0.c: 712: }
  4280                           ;Main Card V10.0.c: 715: }
  4281                           ;Main Card V10.0.c: 716: return 0;
  4282  0357  3000               	movlw	0
  4283  0358  0008               	return
  4284  0359                     __end_of_FindChannel:	
  4285                           
  4286                           	psect	text22
  4287  0F91                     __ptext22:	
  4288 ;; *************** function _SetRFMode *****************
  4289 ;; Defined at:
  4290 ;;		line 738 in file "../Main Card V10.0.c"
  4291 ;; Parameters:    Size  Location     Type
  4292 ;;  mode            1    wreg     unsigned char 
  4293 ;; Auto vars:     Size  Location     Type
  4294 ;;  mode            1   12[BANK0 ] unsigned char 
  4295 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  1    wreg      void 
  4298 ;; Registers used:
  4299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         0       0       0       0       0
  4306 ;;      Locals:         0       2       0       0       0
  4307 ;;      Temps:          0       1       0       0       0
  4308 ;;      Totals:         0       3       0       0       0
  4309 ;;Total ram usage:        3 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; Hardware stack levels required when called:    5
  4312 ;; This function calls:
  4313 ;;		_RegisterRead
  4314 ;;		_RegisterSet
  4315 ;; This function is called by:
  4316 ;;		_TransiverToReceive
  4317 ;;		_TransiverReadFIFO
  4318 ;;		_TransmittString
  4319 ;;		_TransiverInit
  4320 ;;		_FindChannel
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function _SetRFMode
  4326  0F91                     _SetRFMode:	
  4327                           
  4328                           ;incstack = 0
  4329                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4330                           ;SetRFMode@mode stored from wreg
  4331  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4332  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4333  0F93  00AC               	movwf	SetRFMode@mode
  4334                           
  4335                           ;Main Card V10.0.c: 740: PORTAbits.RA4 = 0;
  4336  0F94  1205               	bcf	5,4	;volatile
  4337                           
  4338                           ;Main Card V10.0.c: 741: BYTE mcparam0_read;
  4339                           ;Main Card V10.0.c: 742: mcparam0_read = RegisterRead(0);
  4340  0F95  3000               	movlw	0
  4341  0F96  120A  118A  25E1  120A  158A  	fcall	_RegisterRead
  4342  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4343  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4344  0F9D  00AB               	movwf	??_SetRFMode
  4345  0F9E  082B               	movf	??_SetRFMode,w
  4346  0F9F  00AD               	movwf	SetRFMode@mcparam0_read
  4347                           
  4348                           ;Main Card V10.0.c: 743: switch (mode) {
  4349  0FA0  2FE9               	goto	l1780
  4350  0FA1                     l1768:	
  4351                           ;Main Card V10.0.c: 744: case 0x80:
  4352                           
  4353                           
  4354                           ;Main Card V10.0.c: 745: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4355  0FA1  082D               	movf	SetRFMode@mcparam0_read,w
  4356  0FA2  391F               	andlw	31
  4357  0FA3  3880               	iorlw	128
  4358  0FA4  00AB               	movwf	??_SetRFMode
  4359  0FA5  082B               	movf	??_SetRFMode,w
  4360  0FA6  00A7               	movwf	RegisterSet@value
  4361  0FA7  3000               	movlw	0
  4362  0FA8  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  4363                           
  4364                           ;Main Card V10.0.c: 747: break;
  4365  0FAD  2FFC               	goto	l330
  4366  0FAE                     l1770:	
  4367                           ;Main Card V10.0.c: 748: case 0x60:
  4368                           
  4369                           
  4370                           ;Main Card V10.0.c: 749: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4371  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4372  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4373  0FB0  082D               	movf	SetRFMode@mcparam0_read,w
  4374  0FB1  391F               	andlw	31
  4375  0FB2  3860               	iorlw	96
  4376  0FB3  00AB               	movwf	??_SetRFMode
  4377  0FB4  082B               	movf	??_SetRFMode,w
  4378  0FB5  00A7               	movwf	RegisterSet@value
  4379  0FB6  3000               	movlw	0
  4380  0FB7  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  4381                           
  4382                           ;Main Card V10.0.c: 751: break;
  4383  0FBC  2FFC               	goto	l330
  4384  0FBD                     l1772:	
  4385                           ;Main Card V10.0.c: 752: case 0x40:
  4386                           
  4387                           
  4388                           ;Main Card V10.0.c: 753: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4389  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4390  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4391  0FBF  082D               	movf	SetRFMode@mcparam0_read,w
  4392  0FC0  391F               	andlw	31
  4393  0FC1  3840               	iorlw	64
  4394  0FC2  00AB               	movwf	??_SetRFMode
  4395  0FC3  082B               	movf	??_SetRFMode,w
  4396  0FC4  00A7               	movwf	RegisterSet@value
  4397  0FC5  3000               	movlw	0
  4398  0FC6  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  4399                           
  4400                           ;Main Card V10.0.c: 755: break;
  4401  0FCB  2FFC               	goto	l330
  4402  0FCC                     l1774:	
  4403                           ;Main Card V10.0.c: 756: case 0x20:
  4404                           
  4405                           
  4406                           ;Main Card V10.0.c: 757: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4407  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  4408  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  4409  0FCE  082D               	movf	SetRFMode@mcparam0_read,w
  4410  0FCF  391F               	andlw	31
  4411  0FD0  3820               	iorlw	32
  4412  0FD1  00AB               	movwf	??_SetRFMode
  4413  0FD2  082B               	movf	??_SetRFMode,w
  4414  0FD3  00A7               	movwf	RegisterSet@value
  4415  0FD4  3000               	movlw	0
  4416  0FD5  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  4417                           
  4418                           ;Main Card V10.0.c: 759: break;
  4419  0FDA  2FFC               	goto	l330
  4420  0FDB                     l1776:	
  4421                           ;Main Card V10.0.c: 760: case 0x00:
  4422                           
  4423                           
  4424                           ;Main Card V10.0.c: 761: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4425  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4426  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4427  0FDD  082D               	movf	SetRFMode@mcparam0_read,w
  4428  0FDE  391F               	andlw	31
  4429  0FDF  00AB               	movwf	??_SetRFMode
  4430  0FE0  082B               	movf	??_SetRFMode,w
  4431  0FE1  00A7               	movwf	RegisterSet@value
  4432  0FE2  3000               	movlw	0
  4433  0FE3  120A  158A  2452  120A  158A  	fcall	_RegisterSet
  4434                           
  4435                           ;Main Card V10.0.c: 764: }
  4436                           
  4437                           ;Main Card V10.0.c: 763: break;
  4438  0FE8  2FFC               	goto	l330
  4439  0FE9                     l1780:	
  4440  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4441  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4442  0FEB  082C               	movf	SetRFMode@mode,w
  4443                           
  4444                           ; Switch size 1, requested type "space"
  4445                           ; Number of cases is 5, Range of values is 0 to 128
  4446                           ; switch strategies available:
  4447                           ; Name         Instructions Cycles
  4448                           ; simple_byte           16     9 (average)
  4449                           ; jumptable            260     6 (fixed)
  4450                           ;	Chosen strategy is simple_byte
  4451  0FEC  3A00               	xorlw	0	; case 0
  4452  0FED  1903               	skipnz
  4453  0FEE  2FDB               	goto	l1776
  4454  0FEF  3A20               	xorlw	32	; case 32
  4455  0FF0  1903               	skipnz
  4456  0FF1  2FCC               	goto	l1774
  4457  0FF2  3A60               	xorlw	96	; case 64
  4458  0FF3  1903               	skipnz
  4459  0FF4  2FBD               	goto	l1772
  4460  0FF5  3A20               	xorlw	32	; case 96
  4461  0FF6  1903               	skipnz
  4462  0FF7  2FAE               	goto	l1770
  4463  0FF8  3AE0               	xorlw	224	; case 128
  4464  0FF9  1903               	skipnz
  4465  0FFA  2FA1               	goto	l1768
  4466  0FFB  2FFC               	goto	l330
  4467  0FFC                     l330:	
  4468                           
  4469                           ;Main Card V10.0.c: 765: PORTAbits.RA4 = 1;
  4470  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4471  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4472  0FFE  1605               	bsf	5,4	;volatile
  4473  0FFF  0008               	return
  4474  1000                     __end_of_SetRFMode:	
  4475                           
  4476                           	psect	text23
  4477  0C52                     __ptext23:	
  4478 ;; *************** function _RegisterSet *****************
  4479 ;; Defined at:
  4480 ;;		line 847 in file "../Main Card V10.0.c"
  4481 ;; Parameters:    Size  Location     Type
  4482 ;;  adress          1    wreg     unsigned char 
  4483 ;;  value           1    7[BANK0 ] unsigned char 
  4484 ;; Auto vars:     Size  Location     Type
  4485 ;;  adress          1   10[BANK0 ] unsigned char 
  4486 ;; Return value:  Size  Location     Type
  4487 ;;                  1    wreg      void 
  4488 ;; Registers used:
  4489 ;;		wreg, status,2, status,0, pclath, cstack
  4490 ;; Tracked objects:
  4491 ;;		On entry : 0/0
  4492 ;;		On exit  : 0/0
  4493 ;;		Unchanged: 0/0
  4494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4495 ;;      Params:         0       1       0       0       0
  4496 ;;      Locals:         0       1       0       0       0
  4497 ;;      Temps:          0       2       0       0       0
  4498 ;;      Totals:         0       4       0       0       0
  4499 ;;Total ram usage:        4 bytes
  4500 ;; Hardware stack levels used:    1
  4501 ;; Hardware stack levels required when called:    3
  4502 ;; This function calls:
  4503 ;;		_WriteSPI
  4504 ;; This function is called by:
  4505 ;;		_TransiverToReceive
  4506 ;;		_TransmittString
  4507 ;;		_TransiverInit
  4508 ;;		_FindChannel
  4509 ;;		_SetRFMode
  4510 ;; This function uses a non-reentrant model
  4511 ;;
  4512                           
  4513                           
  4514                           ;psect for function _RegisterSet
  4515  0C52                     _RegisterSet:	
  4516                           
  4517                           ;incstack = 0
  4518                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4519                           ;RegisterSet@adress stored from wreg
  4520  0C52  1283               	bcf	3,5	;RP0=0, select bank0
  4521  0C53  1303               	bcf	3,6	;RP1=0, select bank0
  4522  0C54  00AA               	movwf	RegisterSet@adress
  4523                           
  4524                           ;Main Card V10.0.c: 849: PORTAbits.RA4 = 0;
  4525  0C55  1205               	bcf	5,4	;volatile
  4526                           
  4527                           ;Main Card V10.0.c: 850: adress = (adress<<1);
  4528  0C56  082A               	movf	RegisterSet@adress,w
  4529  0C57  00A8               	movwf	??_RegisterSet
  4530  0C58  0728               	addwf	??_RegisterSet,w
  4531  0C59  00A9               	movwf	??_RegisterSet+1
  4532  0C5A  0829               	movf	??_RegisterSet+1,w
  4533  0C5B  00AA               	movwf	RegisterSet@adress
  4534                           
  4535                           ;Main Card V10.0.c: 851: WriteSPI(adress);
  4536  0C5C  082A               	movf	RegisterSet@adress,w
  4537  0C5D  120A  158A  23AA  120A  158A  	fcall	_WriteSPI
  4538                           
  4539                           ;Main Card V10.0.c: 852: WriteSPI(value);
  4540  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4541  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4542  0C64  0827               	movf	RegisterSet@value,w
  4543  0C65  120A  158A  23AA   	fcall	_WriteSPI
  4544                           
  4545                           ;Main Card V10.0.c: 853: PORTAbits.RA4 = 1;
  4546  0C68  1283               	bcf	3,5	;RP0=0, select bank0
  4547  0C69  1303               	bcf	3,6	;RP1=0, select bank0
  4548  0C6A  1605               	bsf	5,4	;volatile
  4549  0C6B  0008               	return
  4550  0C6C                     __end_of_RegisterSet:	
  4551                           
  4552                           	psect	text24
  4553  05E1                     __ptext24:	
  4554 ;; *************** function _RegisterRead *****************
  4555 ;; Defined at:
  4556 ;;		line 817 in file "../Main Card V10.0.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  adress          1    wreg     unsigned char 
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;  adress          1    6[BANK0 ] unsigned char 
  4561 ;;  value           1    5[BANK0 ] unsigned char 
  4562 ;; Return value:  Size  Location     Type
  4563 ;;                  1    wreg      unsigned char 
  4564 ;; Registers used:
  4565 ;;		wreg, status,2, status,0, pclath, cstack
  4566 ;; Tracked objects:
  4567 ;;		On entry : 0/0
  4568 ;;		On exit  : 0/0
  4569 ;;		Unchanged: 0/0
  4570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4571 ;;      Params:         0       0       0       0       0
  4572 ;;      Locals:         0       2       0       0       0
  4573 ;;      Temps:          0       2       0       0       0
  4574 ;;      Totals:         0       4       0       0       0
  4575 ;;Total ram usage:        4 bytes
  4576 ;; Hardware stack levels used:    1
  4577 ;; Hardware stack levels required when called:    4
  4578 ;; This function calls:
  4579 ;;		_ReadSPI
  4580 ;;		_WriteSPI
  4581 ;; This function is called by:
  4582 ;;		_TransiverToReceive
  4583 ;;		_TransmittString
  4584 ;;		_TransiverInit
  4585 ;;		_FindChannel
  4586 ;;		_SetRFMode
  4587 ;; This function uses a non-reentrant model
  4588 ;;
  4589                           
  4590                           
  4591                           ;psect for function _RegisterRead
  4592  05E1                     _RegisterRead:	
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4596                           ;RegisterRead@adress stored from wreg
  4597  05E1  1283               	bcf	3,5	;RP0=0, select bank0
  4598  05E2  1303               	bcf	3,6	;RP1=0, select bank0
  4599  05E3  00A6               	movwf	RegisterRead@adress
  4600                           
  4601                           ;Main Card V10.0.c: 819: BYTE value;
  4602                           ;Main Card V10.0.c: 820: PORTAbits.RA4 = 0;
  4603  05E4  1205               	bcf	5,4	;volatile
  4604                           
  4605                           ;Main Card V10.0.c: 821: adress = ((adress<<1)|0x40);
  4606  05E5  0826               	movf	RegisterRead@adress,w
  4607  05E6  00A3               	movwf	??_RegisterRead
  4608  05E7  0723               	addwf	??_RegisterRead,w
  4609  05E8  3840               	iorlw	64
  4610  05E9  00A4               	movwf	??_RegisterRead+1
  4611  05EA  0824               	movf	??_RegisterRead+1,w
  4612  05EB  00A6               	movwf	RegisterRead@adress
  4613                           
  4614                           ;Main Card V10.0.c: 822: WriteSPI(adress);
  4615  05EC  0826               	movf	RegisterRead@adress,w
  4616  05ED  120A  158A  23AA  120A  118A  	fcall	_WriteSPI
  4617                           
  4618                           ;Main Card V10.0.c: 823: value = ReadSPI();
  4619  05F2  120A  158A  236F   	fcall	_ReadSPI
  4620  05F5  1283               	bcf	3,5	;RP0=0, select bank0
  4621  05F6  1303               	bcf	3,6	;RP1=0, select bank0
  4622  05F7  00A3               	movwf	??_RegisterRead
  4623  05F8  0823               	movf	??_RegisterRead,w
  4624  05F9  00A5               	movwf	RegisterRead@value
  4625                           
  4626                           ;Main Card V10.0.c: 824: PORTAbits.RA4 = 1;
  4627  05FA  1605               	bsf	5,4	;volatile
  4628                           
  4629                           ;Main Card V10.0.c: 825: return value;
  4630  05FB  0825               	movf	RegisterRead@value,w
  4631  05FC  0008               	return
  4632  05FD                     __end_of_RegisterRead:	
  4633                           
  4634                           	psect	text25
  4635  0B6F                     __ptext25:	
  4636 ;; *************** function _ReadSPI *****************
  4637 ;; Defined at:
  4638 ;;		line 630 in file "../Main Card V10.0.c"
  4639 ;; Parameters:    Size  Location     Type
  4640 ;;		None
  4641 ;; Auto vars:     Size  Location     Type
  4642 ;;		None
  4643 ;; Return value:  Size  Location     Type
  4644 ;;                  1    wreg      unsigned char 
  4645 ;; Registers used:
  4646 ;;		wreg, status,2, status,0, pclath, cstack
  4647 ;; Tracked objects:
  4648 ;;		On entry : 0/0
  4649 ;;		On exit  : 0/0
  4650 ;;		Unchanged: 0/0
  4651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4652 ;;      Params:         0       0       0       0       0
  4653 ;;      Locals:         0       0       0       0       0
  4654 ;;      Temps:          0       0       0       0       0
  4655 ;;      Totals:         0       0       0       0       0
  4656 ;;Total ram usage:        0 bytes
  4657 ;; Hardware stack levels used:    1
  4658 ;; Hardware stack levels required when called:    3
  4659 ;; This function calls:
  4660 ;;		_WriteSPI
  4661 ;; This function is called by:
  4662 ;;		_RegisterRead
  4663 ;;		_ReadFIFO
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function _ReadSPI
  4669  0B6F                     _ReadSPI:	
  4670                           
  4671                           ;Main Card V10.0.c: 632: WriteSPI(0x00);
  4672                           
  4673                           ;incstack = 0
  4674                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4675  0B6F  3000               	movlw	0
  4676  0B70  120A  158A  23AA   	fcall	_WriteSPI
  4677                           
  4678                           ;Main Card V10.0.c: 633: return SSPBUF;
  4679  0B73  1283               	bcf	3,5	;RP0=0, select bank0
  4680  0B74  1303               	bcf	3,6	;RP1=0, select bank0
  4681  0B75  0813               	movf	19,w	;volatile
  4682  0B76  0008               	return
  4683  0B77                     __end_of_ReadSPI:	
  4684                           
  4685                           	psect	text26
  4686  0BAA                     __ptext26:	
  4687 ;; *************** function _WriteSPI *****************
  4688 ;; Defined at:
  4689 ;;		line 618 in file "../Main Card V10.0.c"
  4690 ;; Parameters:    Size  Location     Type
  4691 ;;  databyte        1    wreg     unsigned char 
  4692 ;; Auto vars:     Size  Location     Type
  4693 ;;  databyte        1    2[BANK0 ] unsigned char 
  4694 ;;  buffer          1    1[BANK0 ] unsigned char 
  4695 ;; Return value:  Size  Location     Type
  4696 ;;                  1    wreg      void 
  4697 ;; Registers used:
  4698 ;;		wreg
  4699 ;; Tracked objects:
  4700 ;;		On entry : 0/0
  4701 ;;		On exit  : 0/0
  4702 ;;		Unchanged: 0/0
  4703 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4704 ;;      Params:         0       0       0       0       0
  4705 ;;      Locals:         0       2       0       0       0
  4706 ;;      Temps:          0       1       0       0       0
  4707 ;;      Totals:         0       3       0       0       0
  4708 ;;Total ram usage:        3 bytes
  4709 ;; Hardware stack levels used:    1
  4710 ;; Hardware stack levels required when called:    2
  4711 ;; This function calls:
  4712 ;;		Nothing
  4713 ;; This function is called by:
  4714 ;;		_ReadSPI
  4715 ;;		_RegisterRead
  4716 ;;		_RegisterSet
  4717 ;;		_WriteFIFO
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           
  4722                           ;psect for function _WriteSPI
  4723  0BAA                     _WriteSPI:	
  4724                           
  4725                           ;incstack = 0
  4726                           ; Regs used in _WriteSPI: [wreg]
  4727                           ;WriteSPI@databyte stored from wreg
  4728  0BAA  1283               	bcf	3,5	;RP0=0, select bank0
  4729  0BAB  1303               	bcf	3,6	;RP1=0, select bank0
  4730  0BAC  00A2               	movwf	WriteSPI@databyte
  4731                           
  4732                           ;Main Card V10.0.c: 620: unsigned char buffer;
  4733                           ;Main Card V10.0.c: 621: buffer = SSPBUF;
  4734  0BAD  0813               	movf	19,w	;volatile
  4735  0BAE  00A0               	movwf	??_WriteSPI
  4736  0BAF  0820               	movf	??_WriteSPI,w
  4737  0BB0  00A1               	movwf	WriteSPI@buffer
  4738                           
  4739                           ;Main Card V10.0.c: 622: PIR1bits.SSPIF=0;
  4740  0BB1  118C               	bcf	12,3	;volatile
  4741                           
  4742                           ;Main Card V10.0.c: 623: SSPBUF = databyte;
  4743  0BB2  0822               	movf	WriteSPI@databyte,w
  4744  0BB3  0093               	movwf	19	;volatile
  4745  0BB4                     l306:	
  4746                           ;Main Card V10.0.c: 624: while(PIR1bits.SSPIF == 0);
  4747                           
  4748  0BB4  1D8C               	btfss	12,3	;volatile
  4749  0BB5  2BB4               	goto	l306
  4750                           
  4751                           ;Main Card V10.0.c: 625: PIR1bits.SSPIF = 0;
  4752  0BB6  118C               	bcf	12,3	;volatile
  4753  0BB7  0008               	return
  4754  0BB8                     __end_of_WriteSPI:	
  4755                           
  4756                           	psect	text27
  4757  0C1F                     __ptext27:	
  4758 ;; *************** function _Mode_3 *****************
  4759 ;; Defined at:
  4760 ;;		line 422 in file "../Main Card V10.0.c"
  4761 ;; Parameters:    Size  Location     Type
  4762 ;;		None
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;		None
  4765 ;; Return value:  Size  Location     Type
  4766 ;;                  1    wreg      void 
  4767 ;; Registers used:
  4768 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4769 ;; Tracked objects:
  4770 ;;		On entry : 0/0
  4771 ;;		On exit  : 0/0
  4772 ;;		Unchanged: 0/0
  4773 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4774 ;;      Params:         0       0       0       0       0
  4775 ;;      Locals:         0       0       0       0       0
  4776 ;;      Temps:          0       0       0       0       0
  4777 ;;      Totals:         0       0       0       0       0
  4778 ;;Total ram usage:        0 bytes
  4779 ;; Hardware stack levels used:    1
  4780 ;; Hardware stack levels required when called:    6
  4781 ;; This function calls:
  4782 ;;		_LightWithSensController
  4783 ;; This function is called by:
  4784 ;;		_main
  4785 ;; This function uses a non-reentrant model
  4786 ;;
  4787                           
  4788                           
  4789                           ;psect for function _Mode_3
  4790  0C1F                     _Mode_3:	
  4791                           
  4792                           ;Main Card V10.0.c: 424: LightWithSensController();
  4793                           
  4794                           ;incstack = 0
  4795                           ; Regs used in _Mode_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4796  0C1F  120A  158A  25B7  120A  158A  	fcall	_LightWithSensController
  4797                           
  4798                           ;Main Card V10.0.c: 425: if(bDark && PORTAbits.RA1 && intBlinkCycle == 0)
  4799  0C24  1283               	bcf	3,5	;RP0=0, select bank0
  4800  0C25  1303               	bcf	3,6	;RP1=0, select bank0
  4801  0C26  086D               	movf	_bDark,w
  4802  0C27  1903               	btfsc	3,2
  4803  0C28  0008               	return
  4804  0C29  1C85               	btfss	5,1	;volatile
  4805  0C2A  0008               	return
  4806  0C2B  0868               	movf	_intBlinkCycle,w
  4807  0C2C  0469               	iorwf	_intBlinkCycle+1,w
  4808  0C2D  1D03               	btfss	3,2
  4809  0C2E  0008               	return
  4810                           
  4811                           ;Main Card V10.0.c: 426: {
  4812                           ;Main Card V10.0.c: 427: intBlinkCycle = 1;
  4813  0C2F  3001               	movlw	1
  4814  0C30  00E8               	movwf	_intBlinkCycle
  4815  0C31  3000               	movlw	0
  4816  0C32  00E9               	movwf	_intBlinkCycle+1
  4817                           
  4818                           ;Main Card V10.0.c: 428: intBlinkCounter = 0;
  4819  0C33  1683               	bsf	3,5	;RP0=1, select bank1
  4820  0C34  1303               	bcf	3,6	;RP1=0, select bank1
  4821  0C35  01B1               	clrf	_intBlinkCounter^(0+128)
  4822  0C36  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  4823  0C37  0008               	return
  4824  0C38                     __end_of_Mode_3:	
  4825                           
  4826                           	psect	text28
  4827  0B9D                     __ptext28:	
  4828 ;; *************** function _Mode_2 *****************
  4829 ;; Defined at:
  4830 ;;		line 411 in file "../Main Card V10.0.c"
  4831 ;; Parameters:    Size  Location     Type
  4832 ;;		None
  4833 ;; Auto vars:     Size  Location     Type
  4834 ;;		None
  4835 ;; Return value:  Size  Location     Type
  4836 ;;                  1    wreg      void 
  4837 ;; Registers used:
  4838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4839 ;; Tracked objects:
  4840 ;;		On entry : 0/0
  4841 ;;		On exit  : 0/0
  4842 ;;		Unchanged: 0/0
  4843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4844 ;;      Params:         0       0       0       0       0
  4845 ;;      Locals:         0       0       0       0       0
  4846 ;;      Temps:          0       0       0       0       0
  4847 ;;      Totals:         0       0       0       0       0
  4848 ;;Total ram usage:        0 bytes
  4849 ;; Hardware stack levels used:    1
  4850 ;; Hardware stack levels required when called:    6
  4851 ;; This function calls:
  4852 ;;		_LightWithSensController
  4853 ;; This function is called by:
  4854 ;;		_main
  4855 ;; This function uses a non-reentrant model
  4856 ;;
  4857                           
  4858                           
  4859                           ;psect for function _Mode_2
  4860  0B9D                     _Mode_2:	
  4861                           
  4862                           ;Main Card V10.0.c: 413: LightWithSensController();
  4863                           
  4864                           ;incstack = 0
  4865                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4866  0B9D  120A  158A  25B7  120A  158A  	fcall	_LightWithSensController
  4867                           
  4868                           ;Main Card V10.0.c: 414: if(PORTCbits.RC2)
  4869  0BA2  1283               	bcf	3,5	;RP0=0, select bank0
  4870  0BA3  1303               	bcf	3,6	;RP1=0, select bank0
  4871  0BA4  1D07               	btfss	7,2	;volatile
  4872  0BA5  2BA8               	goto	l259
  4873                           
  4874                           ;Main Card V10.0.c: 415: PORTCbits.RC1 = 1;
  4875  0BA6  1487               	bsf	7,1	;volatile
  4876  0BA7  0008               	return
  4877  0BA8                     l259:	
  4878                           
  4879                           ;Main Card V10.0.c: 416: else
  4880                           ;Main Card V10.0.c: 417: PORTCbits.RC1 = 0;
  4881  0BA8  1087               	bcf	7,1	;volatile
  4882  0BA9  0008               	return
  4883  0BAA                     __end_of_Mode_2:	
  4884                           
  4885                           	psect	text29
  4886  0C38                     __ptext29:	
  4887 ;; *************** function _Mode_1 *****************
  4888 ;; Defined at:
  4889 ;;		line 397 in file "../Main Card V10.0.c"
  4890 ;; Parameters:    Size  Location     Type
  4891 ;;		None
  4892 ;; Auto vars:     Size  Location     Type
  4893 ;;		None
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, status,2, status,0, pclath, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4903 ;;      Params:         0       0       0       0       0
  4904 ;;      Locals:         0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0
  4906 ;;      Totals:         0       0       0       0       0
  4907 ;;Total ram usage:        0 bytes
  4908 ;; Hardware stack levels used:    1
  4909 ;; Hardware stack levels required when called:    5
  4910 ;; This function calls:
  4911 ;;		_DarknessCheck
  4912 ;; This function is called by:
  4913 ;;		_main
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           
  4918                           ;psect for function _Mode_1
  4919  0C38                     _Mode_1:	
  4920                           
  4921                           ;Main Card V10.0.c: 400: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4922                           
  4923                           ;incstack = 0
  4924                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4925  0C38  301E               	movlw	30
  4926  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  4927  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  4928  0C3B  066A               	xorwf	_intSecondCounter,w
  4929  0C3C  046B               	iorwf	_intSecondCounter+1,w
  4930  0C3D  1903               	btfsc	3,2
  4931  0C3E  1907               	btfsc	7,2	;volatile
  4932  0C3F  2C45               	goto	l2300
  4933                           
  4934                           ;Main Card V10.0.c: 401: DarknessCheck();
  4935  0C40  120A  158A  24FF  120A  158A  	fcall	_DarknessCheck
  4936  0C45                     l2300:	
  4937                           
  4938                           ;Main Card V10.0.c: 402: if((intBlinkCycle == 1)&&(bDark == 1))
  4939  0C45  1283               	bcf	3,5	;RP0=0, select bank0
  4940  0C46  1303               	bcf	3,6	;RP1=0, select bank0
  4941  0C47  0368               	decf	_intBlinkCycle,w
  4942  0C48  0469               	iorwf	_intBlinkCycle+1,w
  4943  0C49  1D03               	btfss	3,2
  4944  0C4A  2C50               	goto	l254
  4945  0C4B  036D               	decf	_bDark,w
  4946  0C4C  1D03               	btfss	3,2
  4947  0C4D  2C50               	goto	l254
  4948                           
  4949                           ;Main Card V10.0.c: 403: PORTCbits.RC2 = 1;
  4950  0C4E  1507               	bsf	7,2	;volatile
  4951  0C4F  0008               	return
  4952  0C50                     l254:	
  4953                           
  4954                           ;Main Card V10.0.c: 404: else
  4955                           ;Main Card V10.0.c: 405: PORTCbits.RC2 = 0;
  4956  0C50  1107               	bcf	7,2	;volatile
  4957  0C51  0008               	return
  4958  0C52                     __end_of_Mode_1:	
  4959                           
  4960                           	psect	text30
  4961  0B6B                     __ptext30:	
  4962 ;; *************** function _Mode_0 *****************
  4963 ;; Defined at:
  4964 ;;		line 389 in file "../Main Card V10.0.c"
  4965 ;; Parameters:    Size  Location     Type
  4966 ;;		None
  4967 ;; Auto vars:     Size  Location     Type
  4968 ;;		None
  4969 ;; Return value:  Size  Location     Type
  4970 ;;                  1    wreg      void 
  4971 ;; Registers used:
  4972 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4973 ;; Tracked objects:
  4974 ;;		On entry : 0/0
  4975 ;;		On exit  : 0/0
  4976 ;;		Unchanged: 0/0
  4977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4978 ;;      Params:         0       0       0       0       0
  4979 ;;      Locals:         0       0       0       0       0
  4980 ;;      Temps:          0       0       0       0       0
  4981 ;;      Totals:         0       0       0       0       0
  4982 ;;Total ram usage:        0 bytes
  4983 ;; Hardware stack levels used:    1
  4984 ;; Hardware stack levels required when called:    6
  4985 ;; This function calls:
  4986 ;;		_LightWithSensController
  4987 ;; This function is called by:
  4988 ;;		_main
  4989 ;; This function uses a non-reentrant model
  4990 ;;
  4991                           
  4992                           
  4993                           ;psect for function _Mode_0
  4994  0B6B                     _Mode_0:	
  4995                           
  4996                           ;Main Card V10.0.c: 391: LightWithSensController();
  4997                           
  4998                           ;incstack = 0
  4999                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5000  0B6B  120A  158A  25B7   	fcall	_LightWithSensController
  5001  0B6E  0008               	return
  5002  0B6F                     __end_of_Mode_0:	
  5003                           
  5004                           	psect	text31
  5005  0DB7                     __ptext31:	
  5006 ;; *************** function _LightWithSensController *****************
  5007 ;; Defined at:
  5008 ;;		line 460 in file "../Main Card V10.0.c"
  5009 ;; Parameters:    Size  Location     Type
  5010 ;;		None
  5011 ;; Auto vars:     Size  Location     Type
  5012 ;;		None
  5013 ;; Return value:  Size  Location     Type
  5014 ;;                  1    wreg      void 
  5015 ;; Registers used:
  5016 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5017 ;; Tracked objects:
  5018 ;;		On entry : 0/0
  5019 ;;		On exit  : 0/0
  5020 ;;		Unchanged: 0/0
  5021 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5022 ;;      Params:         0       0       0       0       0
  5023 ;;      Locals:         0       0       0       0       0
  5024 ;;      Temps:          0       0       0       0       0
  5025 ;;      Totals:         0       0       0       0       0
  5026 ;;Total ram usage:        0 bytes
  5027 ;; Hardware stack levels used:    1
  5028 ;; Hardware stack levels required when called:    5
  5029 ;; This function calls:
  5030 ;;		_DarknessCheck
  5031 ;;		_timerFunction
  5032 ;; This function is called by:
  5033 ;;		_Mode_0
  5034 ;;		_Mode_2
  5035 ;;		_Mode_3
  5036 ;;		_Mode_4
  5037 ;;		_Mode_5
  5038 ;; This function uses a non-reentrant model
  5039 ;;
  5040                           
  5041                           
  5042                           ;psect for function _LightWithSensController
  5043  0DB7                     _LightWithSensController:	
  5044                           
  5045                           ;Main Card V10.0.c: 464: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  5046                           
  5047                           ;incstack = 0
  5048                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5049  0DB7  301E               	movlw	30
  5050  0DB8  1283               	bcf	3,5	;RP0=0, select bank0
  5051  0DB9  1303               	bcf	3,6	;RP1=0, select bank0
  5052  0DBA  066A               	xorwf	_intSecondCounter,w
  5053  0DBB  046B               	iorwf	_intSecondCounter+1,w
  5054  0DBC  1903               	btfsc	3,2
  5055  0DBD  1907               	btfsc	7,2	;volatile
  5056  0DBE  2DC4               	goto	l2182
  5057                           
  5058                           ;Main Card V10.0.c: 465: DarknessCheck();
  5059  0DBF  120A  158A  24FF  120A  158A  	fcall	_DarknessCheck
  5060  0DC4                     l2182:	
  5061                           
  5062                           ;Main Card V10.0.c: 469: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  5063  0DC4  1283               	bcf	3,5	;RP0=0, select bank0
  5064  0DC5  1303               	bcf	3,6	;RP1=0, select bank0
  5065  0DC6  036D               	decf	_bDark,w
  5066  0DC7  1903               	btfsc	3,2
  5067  0DC8  1C85               	btfss	5,1	;volatile
  5068  0DC9  2DD9               	goto	l2192
  5069  0DCA  1907               	btfsc	7,2	;volatile
  5070  0DCB  2DD9               	goto	l2192
  5071                           
  5072                           ;Main Card V10.0.c: 470: {
  5073                           ;Main Card V10.0.c: 472: PORTCbits.RC2 = 1;
  5074  0DCC  1507               	bsf	7,2	;volatile
  5075                           
  5076                           ;Main Card V10.0.c: 474: timerFunction(0,120);
  5077  0DCD  3000               	movlw	0
  5078  0DCE  00A0               	movwf	timerFunction@intTimerNumber
  5079  0DCF  00A1               	movwf	timerFunction@intTimerNumber+1
  5080  0DD0  3078               	movlw	120
  5081  0DD1  00A2               	movwf	timerFunction@intSetSeconds
  5082  0DD2  3000               	movlw	0
  5083  0DD3  00A3               	movwf	timerFunction@intSetSeconds+1
  5084  0DD4  120A  158A  23F8  120A  158A  	fcall	_timerFunction
  5085  0DD9                     l2192:	
  5086                           
  5087                           ;Main Card V10.0.c: 475: }
  5088                           ;Main Card V10.0.c: 478: if(bTimerComplete[0])
  5089  0DD9  1683               	bsf	3,5	;RP0=1, select bank1
  5090  0DDA  1303               	bcf	3,6	;RP1=0, select bank1
  5091  0DDB  082A               	movf	_bTimerComplete^(0+128),w
  5092  0DDC  1903               	btfsc	3,2
  5093  0DDD  0008               	return
  5094                           
  5095                           ;Main Card V10.0.c: 479: {
  5096                           ;Main Card V10.0.c: 480: DarknessCheck();
  5097  0DDE  120A  158A  24FF  120A  158A  	fcall	_DarknessCheck
  5098                           
  5099                           ;Main Card V10.0.c: 481: if((bDark)&&(PORTAbits.RA1))
  5100  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  5101  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  5102  0DE5  086D               	movf	_bDark,w
  5103  0DE6  1D03               	btfss	3,2
  5104  0DE7  1C85               	btfss	5,1	;volatile
  5105  0DE8  2DF4               	goto	l279
  5106                           
  5107                           ;Main Card V10.0.c: 482: {
  5108                           ;Main Card V10.0.c: 483: timerFunction(0,120);
  5109  0DE9  3000               	movlw	0
  5110  0DEA  00A0               	movwf	timerFunction@intTimerNumber
  5111  0DEB  00A1               	movwf	timerFunction@intTimerNumber+1
  5112  0DEC  3078               	movlw	120
  5113  0DED  00A2               	movwf	timerFunction@intSetSeconds
  5114  0DEE  3000               	movlw	0
  5115  0DEF  00A3               	movwf	timerFunction@intSetSeconds+1
  5116  0DF0  120A  158A  23F8   	fcall	_timerFunction
  5117                           
  5118                           ;Main Card V10.0.c: 484: }
  5119  0DF3  0008               	return
  5120  0DF4                     l279:	
  5121                           
  5122                           ;Main Card V10.0.c: 485: else
  5123                           ;Main Card V10.0.c: 486: PORTCbits.RC2 = 0;
  5124  0DF4  1107               	bcf	7,2	;volatile
  5125  0DF5  0008               	return
  5126  0DF6                     __end_of_LightWithSensController:	
  5127                           
  5128                           	psect	text32
  5129  0BF8                     __ptext32:	
  5130 ;; *************** function _timerFunction *****************
  5131 ;; Defined at:
  5132 ;;		line 511 in file "../Main Card V10.0.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  intTimerNumb    2    0[BANK0 ] int 
  5135 ;;  intSetSecond    2    2[BANK0 ] int 
  5136 ;; Auto vars:     Size  Location     Type
  5137 ;;		None
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  1    wreg      unsigned char 
  5140 ;; Registers used:
  5141 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5147 ;;      Params:         0       4       0       0       0
  5148 ;;      Locals:         0       0       0       0       0
  5149 ;;      Temps:          0       1       0       0       0
  5150 ;;      Totals:         0       5       0       0       0
  5151 ;;Total ram usage:        5 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    2
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_TransiverToReceive
  5158 ;;		_TransiverReadFIFO
  5159 ;;		_TransmittString
  5160 ;;		_LightWithSensController
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           
  5165                           ;psect for function _timerFunction
  5166  0BF8                     _timerFunction:	
  5167                           
  5168                           ;Main Card V10.0.c: 513: intClockTimer[intTimerNumber] = intSetSeconds;
  5169                           
  5170                           ;incstack = 0
  5171                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5172  0BF8  1283               	bcf	3,5	;RP0=0, select bank0
  5173  0BF9  1303               	bcf	3,6	;RP1=0, select bank0
  5174  0BFA  0820               	movf	timerFunction@intTimerNumber,w
  5175  0BFB  00A4               	movwf	??_timerFunction
  5176  0BFC  0724               	addwf	??_timerFunction,w
  5177  0BFD  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5178  0BFE  0084               	movwf	4
  5179  0BFF  0822               	movf	timerFunction@intSetSeconds,w
  5180  0C00  1383               	bcf	3,7	;select IRP bank1
  5181  0C01  0080               	movwf	0
  5182  0C02  0A84               	incf	4,f
  5183  0C03  0823               	movf	timerFunction@intSetSeconds+1,w
  5184  0C04  0080               	movwf	0
  5185                           
  5186                           ;Main Card V10.0.c: 514: bTimerComplete[intTimerNumber] = 0;
  5187  0C05  0820               	movf	timerFunction@intTimerNumber,w
  5188  0C06  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5189  0C07  0084               	movwf	4
  5190  0C08  0180               	clrf	0
  5191  0C09  0008               	return
  5192  0C0A                     __end_of_timerFunction:	
  5193                           ;Main Card V10.0.c: 515: return 1;
  5194                           ;	Return value of _timerFunction is never used
  5195                           
  5196                           
  5197                           	psect	text33
  5198  0CFF                     __ptext33:	
  5199 ;; *************** function _DarknessCheck *****************
  5200 ;; Defined at:
  5201 ;;		line 1022 in file "../Main Card V10.0.c"
  5202 ;; Parameters:    Size  Location     Type
  5203 ;;		None
  5204 ;; Auto vars:     Size  Location     Type
  5205 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5206 ;; Return value:  Size  Location     Type
  5207 ;;                  1    wreg      void 
  5208 ;; Registers used:
  5209 ;;		wreg, status,2, status,0, pclath, cstack
  5210 ;; Tracked objects:
  5211 ;;		On entry : 0/0
  5212 ;;		On exit  : 0/0
  5213 ;;		Unchanged: 0/0
  5214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5215 ;;      Params:         0       0       0       0       0
  5216 ;;      Locals:         0       1       0       0       0
  5217 ;;      Temps:          0       1       0       0       0
  5218 ;;      Totals:         0       2       0       0       0
  5219 ;;Total ram usage:        2 bytes
  5220 ;; Hardware stack levels used:    1
  5221 ;; Hardware stack levels required when called:    4
  5222 ;; This function calls:
  5223 ;;		_AnalogValue
  5224 ;;		_eeprom_read
  5225 ;; This function is called by:
  5226 ;;		_TransmittedDataHandler
  5227 ;;		_Mode_1
  5228 ;;		_LightWithSensController
  5229 ;; This function uses a non-reentrant model
  5230 ;;
  5231                           
  5232                           
  5233                           ;psect for function _DarknessCheck
  5234  0CFF                     _DarknessCheck:	
  5235                           
  5236                           ;Main Card V10.0.c: 1024: unsigned char darknessValue;
  5237                           ;Main Card V10.0.c: 1025: PORTCbits.RC0 = 0;
  5238                           
  5239                           ;incstack = 0
  5240                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5241  0CFF  1283               	bcf	3,5	;RP0=0, select bank0
  5242  0D00  1303               	bcf	3,6	;RP1=0, select bank0
  5243  0D01  1007               	bcf	7,0	;volatile
  5244                           
  5245                           ;Main Card V10.0.c: 1027: if(bValueFromPot == TRUE)
  5246  0D02  036F               	decf	_bValueFromPot,w
  5247  0D03  1D03               	btfss	3,2
  5248  0D04  2D0C               	goto	l1992
  5249                           
  5250                           ;Main Card V10.0.c: 1028: darknessValue= AnalogValue(3);
  5251  0D05  3003               	movlw	3
  5252  0D06  120A  158A  24D6  120A  158A  	fcall	_AnalogValue
  5253  0D0B  2D12               	goto	L2
  5254  0D0C                     l1992:	
  5255                           
  5256                           ;Main Card V10.0.c: 1029: else
  5257                           ;Main Card V10.0.c: 1030: darknessValue=eeprom_read(addressDarknessValue);
  5258  0D0C  087C               	movf	_addressDarknessValue,w
  5259  0D0D  120A  158A  24B2  120A  158A  	fcall	_eeprom_read
  5260  0D12                     L2:	
  5261  0D12  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0D13  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0D14  00A8               	movwf	??_DarknessCheck
  5264  0D15  0828               	movf	??_DarknessCheck,w
  5265  0D16  00A9               	movwf	DarknessCheck@darknessValue
  5266                           
  5267                           ;Main Card V10.0.c: 1032: if(AnalogValue(0)>darknessValue)
  5268  0D17  3000               	movlw	0
  5269  0D18  120A  158A  24D6  120A  158A  	fcall	_AnalogValue
  5270  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  5271  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  5272  0D1F  0229               	subwf	DarknessCheck@darknessValue,w
  5273  0D20  1803               	skipnc
  5274  0D21  2D25               	goto	l1996
  5275                           
  5276                           ;Main Card V10.0.c: 1033: bDark = 1;
  5277  0D22  01ED               	clrf	_bDark
  5278  0D23  0AED               	incf	_bDark,f
  5279  0D24  2D26               	goto	l1998
  5280  0D25                     l1996:	
  5281                           
  5282                           ;Main Card V10.0.c: 1034: else
  5283                           ;Main Card V10.0.c: 1035: bDark = 0;
  5284  0D25  01ED               	clrf	_bDark
  5285  0D26                     l1998:	
  5286                           
  5287                           ;Main Card V10.0.c: 1036: PORTCbits.RC0 = 0;
  5288  0D26  1007               	bcf	7,0	;volatile
  5289  0D27  0008               	return
  5290  0D28                     __end_of_DarknessCheck:	
  5291                           
  5292                           	psect	text34
  5293  0CB2                     __ptext34:	
  5294 ;; *************** function _eeprom_read *****************
  5295 ;; Defined at:
  5296 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5297 ;; Parameters:    Size  Location     Type
  5298 ;;  addr            1    wreg     unsigned char 
  5299 ;; Auto vars:     Size  Location     Type
  5300 ;;  addr            1    1[BANK0 ] unsigned char 
  5301 ;; Return value:  Size  Location     Type
  5302 ;;                  1    wreg      unsigned char 
  5303 ;; Registers used:
  5304 ;;		wreg, status,2, status,0
  5305 ;; Tracked objects:
  5306 ;;		On entry : 0/0
  5307 ;;		On exit  : 0/0
  5308 ;;		Unchanged: 0/0
  5309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5310 ;;      Params:         0       0       0       0       0
  5311 ;;      Locals:         0       1       0       0       0
  5312 ;;      Temps:          0       1       0       0       0
  5313 ;;      Totals:         0       2       0       0       0
  5314 ;;Total ram usage:        2 bytes
  5315 ;; Hardware stack levels used:    1
  5316 ;; Hardware stack levels required when called:    2
  5317 ;; This function calls:
  5318 ;;		Nothing
  5319 ;; This function is called by:
  5320 ;;		_TransmittedDataHandler
  5321 ;;		_DarknessCheck
  5322 ;; This function uses a non-reentrant model
  5323 ;;
  5324                           
  5325                           
  5326                           ;psect for function _eeprom_read
  5327  0CB2                     _eeprom_read:	
  5328                           
  5329                           ;incstack = 0
  5330                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5331                           ;eeprom_read@addr stored from wreg
  5332  0CB2  1283               	bcf	3,5	;RP0=0, select bank0
  5333  0CB3  1303               	bcf	3,6	;RP1=0, select bank0
  5334  0CB4  00A1               	movwf	eeprom_read@addr
  5335  0CB5  2CB8               	goto	l396
  5336  0CB6                     u1211:	
  5337  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  5338  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  5339  0CB8                     l396:	
  5340  0CB8  0064               	clrwdt	;# 
  5341  0CB9  1683               	bsf	3,5	;RP0=1, select bank3
  5342  0CBA  1703               	bsf	3,6	;RP1=1, select bank3
  5343  0CBB  188C               	btfsc	12,1	;volsfr
  5344  0CBC  2CB6               	goto	u1211
  5345  0CBD  1283               	bcf	3,5	;RP0=0, select bank0
  5346  0CBE  1303               	bcf	3,6	;RP1=0, select bank0
  5347  0CBF  0821               	movf	eeprom_read@addr,w
  5348  0CC0  1283               	bcf	3,5	;RP0=0, select bank2
  5349  0CC1  1703               	bsf	3,6	;RP1=1, select bank2
  5350  0CC2  008D               	movwf	13	;volatile
  5351  0CC3  303F               	movlw	63
  5352  0CC4  1283               	bcf	3,5	;RP0=0, select bank0
  5353  0CC5  1303               	bcf	3,6	;RP1=0, select bank0
  5354  0CC6  00A0               	movwf	??_eeprom_read
  5355  0CC7  0820               	movf	??_eeprom_read,w
  5356  0CC8  1683               	bsf	3,5	;RP0=1, select bank3
  5357  0CC9  1703               	bsf	3,6	;RP1=1, select bank3
  5358  0CCA  058C               	andwf	12,f	;volsfr
  5359  0CCB  140C               	bsf	12,0	;volsfr
  5360  0CCC  1003               	clrc
  5361  0CCD  180C               	btfsc	12,0	;volsfr
  5362  0CCE  1403               	setc
  5363  0CCF  3000               	movlw	0
  5364  0CD0  1803               	skipnc
  5365  0CD1  3001               	movlw	1
  5366  0CD2  1283               	bcf	3,5	;RP0=0, select bank2
  5367  0CD3  1703               	bsf	3,6	;RP1=1, select bank2
  5368  0CD4  080C               	movf	12,w	;volatile
  5369  0CD5  0008               	return
  5370  0CD6                     __end_of_eeprom_read:	
  5371                           
  5372                           	psect	text35
  5373  0CD6                     __ptext35:	
  5374 ;; *************** function _AnalogValue *****************
  5375 ;; Defined at:
  5376 ;;		line 995 in file "../Main Card V10.0.c"
  5377 ;; Parameters:    Size  Location     Type
  5378 ;;  channel         1    wreg     unsigned char 
  5379 ;; Auto vars:     Size  Location     Type
  5380 ;;  channel         1    7[BANK0 ] unsigned char 
  5381 ;; Return value:  Size  Location     Type
  5382 ;;                  1    wreg      unsigned char 
  5383 ;; Registers used:
  5384 ;;		wreg, status,2, status,0, pclath, cstack
  5385 ;; Tracked objects:
  5386 ;;		On entry : 0/0
  5387 ;;		On exit  : 0/0
  5388 ;;		Unchanged: 0/0
  5389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5390 ;;      Params:         0       0       0       0       0
  5391 ;;      Locals:         0       1       0       0       0
  5392 ;;      Temps:          0       1       0       0       0
  5393 ;;      Totals:         0       2       0       0       0
  5394 ;;Total ram usage:        2 bytes
  5395 ;; Hardware stack levels used:    1
  5396 ;; Hardware stack levels required when called:    3
  5397 ;; This function calls:
  5398 ;;		_DelayDs
  5399 ;; This function is called by:
  5400 ;;		_TransmittedDataHandler
  5401 ;;		_DarknessCheck
  5402 ;; This function uses a non-reentrant model
  5403 ;;
  5404                           
  5405                           
  5406                           ;psect for function _AnalogValue
  5407  0CD6                     _AnalogValue:	
  5408                           
  5409                           ;incstack = 0
  5410                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5411                           ;AnalogValue@channel stored from wreg
  5412  0CD6  1283               	bcf	3,5	;RP0=0, select bank0
  5413  0CD7  1303               	bcf	3,6	;RP1=0, select bank0
  5414  0CD8  00A7               	movwf	AnalogValue@channel
  5415                           
  5416                           ;Main Card V10.0.c: 997: ADCON0bits.CHS = channel;
  5417  0CD9  0827               	movf	AnalogValue@channel,w
  5418  0CDA  00A6               	movwf	??_AnalogValue
  5419  0CDB  0DA6               	rlf	??_AnalogValue,f
  5420  0CDC  0DA6               	rlf	??_AnalogValue,f
  5421  0CDD  081F               	movf	31,w	;volatile
  5422  0CDE  0626               	xorwf	??_AnalogValue,w
  5423  0CDF  39C3               	andlw	-61
  5424  0CE0  0626               	xorwf	??_AnalogValue,w
  5425  0CE1  009F               	movwf	31	;volatile
  5426                           
  5427                           ;Main Card V10.0.c: 998: ADCON0bits.ADON = 1;
  5428  0CE2  141F               	bsf	31,0	;volatile
  5429                           
  5430                           ;Main Card V10.0.c: 999: DelayDs(1);
  5431  0CE3  3001               	movlw	1
  5432  0CE4  00A0               	movwf	DelayDs@cnt
  5433  0CE5  3000               	movlw	0
  5434  0CE6  00A1               	movwf	DelayDs@cnt+1
  5435  0CE7  120A  158A  246C  120A  158A  	fcall	_DelayDs
  5436                           
  5437                           ;Main Card V10.0.c: 1000: ADCON0bits.GO = 1;
  5438  0CEC  1283               	bcf	3,5	;RP0=0, select bank0
  5439  0CED  1303               	bcf	3,6	;RP1=0, select bank0
  5440  0CEE  149F               	bsf	31,1	;volatile
  5441                           
  5442                           ;Main Card V10.0.c: 1001: DelayDs(1);
  5443  0CEF  3001               	movlw	1
  5444  0CF0  00A0               	movwf	DelayDs@cnt
  5445  0CF1  3000               	movlw	0
  5446  0CF2  00A1               	movwf	DelayDs@cnt+1
  5447  0CF3  120A  158A  246C  120A  158A  	fcall	_DelayDs
  5448  0CF8                     l370:	
  5449                           ;Main Card V10.0.c: 1002: while(ADCON0bits.GO);
  5450                           
  5451  0CF8  1283               	bcf	3,5	;RP0=0, select bank0
  5452  0CF9  1303               	bcf	3,6	;RP1=0, select bank0
  5453  0CFA  189F               	btfsc	31,1	;volatile
  5454  0CFB  2CF8               	goto	l370
  5455                           
  5456                           ;Main Card V10.0.c: 1003: ADCON0bits.ADON = 0;
  5457  0CFC  101F               	bcf	31,0	;volatile
  5458                           
  5459                           ;Main Card V10.0.c: 1004: return ADRESH;
  5460  0CFD  081E               	movf	30,w	;volatile
  5461  0CFE  0008               	return
  5462  0CFF                     __end_of_AnalogValue:	
  5463                           
  5464                           	psect	text36
  5465  0C6C                     __ptext36:	
  5466 ;; *************** function _DelayDs *****************
  5467 ;; Defined at:
  5468 ;;		line 609 in file "../Main Card V10.0.c"
  5469 ;; Parameters:    Size  Location     Type
  5470 ;;  cnt             2    0[BANK0 ] int 
  5471 ;; Auto vars:     Size  Location     Type
  5472 ;;  i               2    4[BANK0 ] int 
  5473 ;; Return value:  Size  Location     Type
  5474 ;;                  1    wreg      void 
  5475 ;; Registers used:
  5476 ;;		wreg, status,2
  5477 ;; Tracked objects:
  5478 ;;		On entry : 0/0
  5479 ;;		On exit  : 0/0
  5480 ;;		Unchanged: 0/0
  5481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5482 ;;      Params:         0       2       0       0       0
  5483 ;;      Locals:         0       2       0       0       0
  5484 ;;      Temps:          0       2       0       0       0
  5485 ;;      Totals:         0       6       0       0       0
  5486 ;;Total ram usage:        6 bytes
  5487 ;; Hardware stack levels used:    1
  5488 ;; Hardware stack levels required when called:    2
  5489 ;; This function calls:
  5490 ;;		Nothing
  5491 ;; This function is called by:
  5492 ;;		_TransmittedDataHandler
  5493 ;;		_Blink
  5494 ;;		_AnalogValue
  5495 ;; This function uses a non-reentrant model
  5496 ;;
  5497                           
  5498                           
  5499                           ;psect for function _DelayDs
  5500  0C6C                     _DelayDs:	
  5501                           
  5502                           ;Main Card V10.0.c: 610: int i;
  5503                           ;Main Card V10.0.c: 611: for(i=0;i<cnt;i++){
  5504                           
  5505                           ;incstack = 0
  5506                           ; Regs used in _DelayDs: [wreg+status,2]
  5507  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  5508  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  5509  0C6E  01A4               	clrf	DelayDs@i
  5510  0C6F  01A5               	clrf	DelayDs@i+1
  5511  0C70                     l300:	
  5512  0C70  0825               	movf	DelayDs@i+1,w
  5513  0C71  3A80               	xorlw	128
  5514  0C72  00A2               	movwf	??_DelayDs
  5515  0C73  0821               	movf	DelayDs@cnt+1,w
  5516  0C74  3A80               	xorlw	128
  5517  0C75  0222               	subwf	??_DelayDs,w
  5518  0C76  1D03               	skipz
  5519  0C77  2C7A               	goto	u1155
  5520  0C78  0820               	movf	DelayDs@cnt,w
  5521  0C79  0224               	subwf	DelayDs@i,w
  5522  0C7A                     u1155:	
  5523  0C7A  1803               	btfsc	3,0
  5524  0C7B  0008               	return
  5525                           
  5526                           ;Main Card V10.0.c: 612: _delay((unsigned long)((100)*(4000000/4000.0)));
  5527  0C7C  3082               	movlw	130
  5528  0C7D  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0C7E  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0C7F  00A3               	movwf	??_DelayDs+1
  5531  0C80  30DD               	movlw	221
  5532  0C81  00A2               	movwf	??_DelayDs
  5533  0C82                     u2377:	
  5534  0C82  0BA2               	decfsz	??_DelayDs,f
  5535  0C83  2C82               	goto	u2377
  5536  0C84  0BA3               	decfsz	??_DelayDs+1,f
  5537  0C85  2C82               	goto	u2377
  5538  0C86  3001               	movlw	1
  5539  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5540  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5541  0C89  07A4               	addwf	DelayDs@i,f
  5542  0C8A  1803               	skipnc
  5543  0C8B  0AA5               	incf	DelayDs@i+1,f
  5544  0C8C  3000               	movlw	0
  5545  0C8D  07A5               	addwf	DelayDs@i+1,f
  5546  0C8E  2C70               	goto	l300
  5547  0C8F                     __end_of_DelayDs:	
  5548                           
  5549                           	psect	text37
  5550  0515                     __ptext37:	
  5551 ;; *************** function _tc_int *****************
  5552 ;; Defined at:
  5553 ;;		line 924 in file "../Main Card V10.0.c"
  5554 ;; Parameters:    Size  Location     Type
  5555 ;;		None
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;		None
  5558 ;; Return value:  Size  Location     Type
  5559 ;;                  1    wreg      void 
  5560 ;; Registers used:
  5561 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5562 ;; Tracked objects:
  5563 ;;		On entry : 0/0
  5564 ;;		On exit  : 0/0
  5565 ;;		Unchanged: 0/0
  5566 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5567 ;;      Params:         0       0       0       0       0
  5568 ;;      Locals:         0       0       0       0       0
  5569 ;;      Temps:          7       0       0       0       0
  5570 ;;      Totals:         7       0       0       0       0
  5571 ;;Total ram usage:        7 bytes
  5572 ;; Hardware stack levels used:    1
  5573 ;; Hardware stack levels required when called:    1
  5574 ;; This function calls:
  5575 ;;		_TimerCounter
  5576 ;;		i1_OperationMode
  5577 ;; This function is called by:
  5578 ;;		Interrupt level 1
  5579 ;; This function uses a non-reentrant model
  5580 ;;
  5581                           
  5582                           
  5583                           ;psect for function _tc_int
  5584  0515                     _tc_int:	
  5585                           
  5586                           ;Main Card V10.0.c: 928: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5587  0515  1A86               	btfsc	6,5	;volatile
  5588  0516  2D2F               	goto	i1l2460
  5589  0517  0868               	movf	_intBlinkCycle,w
  5590  0518  0469               	iorwf	_intBlinkCycle+1,w
  5591  0519  1D03               	btfss	3,2
  5592  051A  2D2F               	goto	i1l2460
  5593  051B  120A  158A  237F  120A  118A  	fcall	i1_OperationMode
  5594  0520  00F5               	movwf	??_tc_int
  5595  0521  3002               	movlw	2
  5596  0522  0275               	subwf	??_tc_int,w
  5597  0523  1803               	skipnc
  5598  0524  2D2F               	goto	i1l2460
  5599                           
  5600                           ;Main Card V10.0.c: 929: intBlinkCycle = 1;
  5601  0525  3001               	movlw	1
  5602  0526  1283               	bcf	3,5	;RP0=0, select bank0
  5603  0527  1303               	bcf	3,6	;RP1=0, select bank0
  5604  0528  00E8               	movwf	_intBlinkCycle
  5605  0529  3000               	movlw	0
  5606  052A  00E9               	movwf	_intBlinkCycle+1
  5607                           
  5608                           ;Main Card V10.0.c: 930: intBlinkCounter = 0;
  5609  052B  1683               	bsf	3,5	;RP0=1, select bank1
  5610  052C  1303               	bcf	3,6	;RP1=0, select bank1
  5611  052D  01B1               	clrf	_intBlinkCounter^(0+128)
  5612  052E  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5613  052F                     i1l2460:	
  5614                           
  5615                           ;Main Card V10.0.c: 932: }
  5616                           ;Main Card V10.0.c: 933: if(TMR1IF ==1){
  5617  052F  1283               	bcf	3,5	;RP0=0, select bank0
  5618  0530  1303               	bcf	3,6	;RP1=0, select bank0
  5619  0531  1C0C               	btfss	12,0	;volatile
  5620  0532  2DD4               	goto	L3
  5621                           
  5622                           ;Main Card V10.0.c: 934: TMR1ON = 0;
  5623  0533  1010               	bcf	16,0	;volatile
  5624                           
  5625                           ;Main Card V10.0.c: 935: TMR1H = 0x0B;
  5626  0534  300B               	movlw	11
  5627  0535  008F               	movwf	15	;volatile
  5628                           
  5629                           ;Main Card V10.0.c: 936: TMR1L = 0xDB;
  5630  0536  30DB               	movlw	219
  5631  0537  008E               	movwf	14	;volatile
  5632                           
  5633                           ;Main Card V10.0.c: 938: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5634  0538  0368               	decf	_intBlinkCycle,w
  5635  0539  0469               	iorwf	_intBlinkCycle+1,w
  5636  053A  1D03               	btfss	3,2
  5637  053B  2D62               	goto	i1l2478
  5638  053C  1683               	bsf	3,5	;RP0=1, select bank1
  5639  053D  1303               	bcf	3,6	;RP1=0, select bank1
  5640  053E  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5641  053F  00F6               	movwf	??_tc_int+1
  5642  0540  0857               	movf	_intNumberOfBlinks^(0+128),w
  5643  0541  00F5               	movwf	??_tc_int
  5644  0542  1003               	clrc
  5645  0543  0DF5               	rlf	??_tc_int,f
  5646  0544  0DF6               	rlf	??_tc_int+1,f
  5647  0545  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5648  0546  3A80               	xorlw	128
  5649  0547  00F7               	movwf	??_tc_int+2
  5650  0548  0876               	movf	??_tc_int+1,w
  5651  0549  3A80               	xorlw	128
  5652  054A  0277               	subwf	??_tc_int+2,w
  5653  054B  1D03               	skipz
  5654  054C  2D4F               	goto	u219_25
  5655  054D  0875               	movf	??_tc_int,w
  5656  054E  0231               	subwf	_intBlinkCounter^(0+128),w
  5657  054F                     u219_25:	
  5658  054F  1803               	skipnc
  5659  0550  2D62               	goto	i1l2478
  5660                           
  5661                           ;Main Card V10.0.c: 939: intBlinkCounter++;
  5662  0551  3001               	movlw	1
  5663  0552  1683               	bsf	3,5	;RP0=1, select bank1
  5664  0553  1303               	bcf	3,6	;RP1=0, select bank1
  5665  0554  07B1               	addwf	_intBlinkCounter^(0+128),f
  5666  0555  1803               	skipnc
  5667  0556  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5668  0557  3000               	movlw	0
  5669  0558  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5670                           
  5671                           ;Main Card V10.0.c: 941: if(PORTCbits.RC1 == 0)
  5672  0559  1283               	bcf	3,5	;RP0=0, select bank0
  5673  055A  1303               	bcf	3,6	;RP1=0, select bank0
  5674  055B  1887               	btfsc	7,1	;volatile
  5675  055C  2D5F               	goto	i1l359
  5676                           
  5677                           ;Main Card V10.0.c: 942: PORTCbits.RC1 = 1;
  5678  055D  1487               	bsf	7,1	;volatile
  5679  055E  2D82               	goto	i1l2486
  5680  055F                     i1l359:	
  5681                           
  5682                           ;Main Card V10.0.c: 943: else if(PORTCbits.RC1 == 1)
  5683  055F  1C87               	btfss	7,1	;volatile
  5684  0560  2D82               	goto	i1l2486
  5685  0561  2D81               	goto	i1l2484
  5686  0562                     i1l2478:	
  5687                           ;Main Card V10.0.c: 945: }
  5688                           
  5689                           ;Main Card V10.0.c: 944: PORTCbits.RC1 = 0;
  5690                           
  5691                           
  5692                           ;Main Card V10.0.c: 947: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5693  0562  1283               	bcf	3,5	;RP0=0, select bank0
  5694  0563  1303               	bcf	3,6	;RP1=0, select bank0
  5695  0564  0368               	decf	_intBlinkCycle,w
  5696  0565  0469               	iorwf	_intBlinkCycle+1,w
  5697  0566  1D03               	btfss	3,2
  5698  0567  2D82               	goto	i1l2486
  5699  0568  1683               	bsf	3,5	;RP0=1, select bank1
  5700  0569  1303               	bcf	3,6	;RP1=0, select bank1
  5701  056A  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5702  056B  00F6               	movwf	??_tc_int+1
  5703  056C  0857               	movf	_intNumberOfBlinks^(0+128),w
  5704  056D  00F5               	movwf	??_tc_int
  5705  056E  1003               	clrc
  5706  056F  0DF5               	rlf	??_tc_int,f
  5707  0570  0DF6               	rlf	??_tc_int+1,f
  5708  0571  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5709  0572  3A80               	xorlw	128
  5710  0573  00F7               	movwf	??_tc_int+2
  5711  0574  0876               	movf	??_tc_int+1,w
  5712  0575  3A80               	xorlw	128
  5713  0576  0277               	subwf	??_tc_int+2,w
  5714  0577  1D03               	skipz
  5715  0578  2D7B               	goto	u223_25
  5716  0579  0875               	movf	??_tc_int,w
  5717  057A  0231               	subwf	_intBlinkCounter^(0+128),w
  5718  057B                     u223_25:	
  5719  057B  1C03               	skipc
  5720  057C  2D82               	goto	i1l2486
  5721                           
  5722                           ;Main Card V10.0.c: 948: intBlinkCycle = 0;
  5723  057D  1283               	bcf	3,5	;RP0=0, select bank0
  5724  057E  1303               	bcf	3,6	;RP1=0, select bank0
  5725  057F  01E8               	clrf	_intBlinkCycle
  5726  0580  01E9               	clrf	_intBlinkCycle+1
  5727  0581                     i1l2484:	
  5728                           
  5729                           ;Main Card V10.0.c: 949: PORTCbits.RC1 = 0;
  5730  0581  1087               	bcf	7,1	;volatile
  5731  0582                     i1l2486:	
  5732                           
  5733                           ;Main Card V10.0.c: 950: }
  5734                           ;Main Card V10.0.c: 953: intHalfSecondCounter++;
  5735  0582  3001               	movlw	1
  5736  0583  1683               	bsf	3,5	;RP0=1, select bank1
  5737  0584  1303               	bcf	3,6	;RP1=0, select bank1
  5738  0585  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5739  0586  1803               	skipnc
  5740  0587  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5741  0588  3000               	movlw	0
  5742  0589  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5743                           
  5744                           ;Main Card V10.0.c: 954: if(intHalfSecondCounter>=2)
  5745  058A  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5746  058B  3A80               	xorlw	128
  5747  058C  00FF               	movwf	127
  5748  058D  3080               	movlw	128
  5749  058E  027F               	subwf	127,w
  5750  058F  1D03               	skipz
  5751  0590  2D93               	goto	u224_25
  5752  0591  3002               	movlw	2
  5753  0592  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5754  0593                     u224_25:	
  5755  0593  1C03               	skipc
  5756  0594  2DA6               	goto	i1l2496
  5757                           
  5758                           ;Main Card V10.0.c: 955: {
  5759                           ;Main Card V10.0.c: 956: intHalfSecondCounter = 0;
  5760  0595  1683               	bsf	3,5	;RP0=1, select bank1
  5761  0596  1303               	bcf	3,6	;RP1=0, select bank1
  5762  0597  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5763  0598  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5764                           
  5765                           ;Main Card V10.0.c: 957: intSecondCounter++;
  5766  0599  3001               	movlw	1
  5767  059A  1283               	bcf	3,5	;RP0=0, select bank0
  5768  059B  1303               	bcf	3,6	;RP1=0, select bank0
  5769  059C  07EA               	addwf	_intSecondCounter,f
  5770  059D  1803               	skipnc
  5771  059E  0AEB               	incf	_intSecondCounter+1,f
  5772  059F  3000               	movlw	0
  5773  05A0  07EB               	addwf	_intSecondCounter+1,f
  5774                           
  5775                           ;Main Card V10.0.c: 958: TimerCounter();
  5776  05A1  120A  158A  25F6  120A  118A  	fcall	_TimerCounter
  5777  05A6                     i1l2496:	
  5778                           
  5779                           ;Main Card V10.0.c: 959: }
  5780                           ;Main Card V10.0.c: 960: if(intSecondCounter >=60)
  5781  05A6  1283               	bcf	3,5	;RP0=0, select bank0
  5782  05A7  1303               	bcf	3,6	;RP1=0, select bank0
  5783  05A8  086B               	movf	_intSecondCounter+1,w
  5784  05A9  3A80               	xorlw	128
  5785  05AA  00FF               	movwf	127
  5786  05AB  3080               	movlw	128
  5787  05AC  027F               	subwf	127,w
  5788  05AD  1D03               	skipz
  5789  05AE  2DB1               	goto	u225_25
  5790  05AF  303C               	movlw	60
  5791  05B0  026A               	subwf	_intSecondCounter,w
  5792  05B1                     u225_25:	
  5793  05B1  1C03               	skipc
  5794  05B2  2DBF               	goto	i1l2502
  5795                           
  5796                           ;Main Card V10.0.c: 961: {
  5797                           ;Main Card V10.0.c: 962: intSecondCounter = 0;
  5798  05B3  1283               	bcf	3,5	;RP0=0, select bank0
  5799  05B4  1303               	bcf	3,6	;RP1=0, select bank0
  5800  05B5  01EA               	clrf	_intSecondCounter
  5801  05B6  01EB               	clrf	_intSecondCounter+1
  5802                           
  5803                           ;Main Card V10.0.c: 963: intMinuteCounter++;
  5804  05B7  3001               	movlw	1
  5805  05B8  1683               	bsf	3,5	;RP0=1, select bank1
  5806  05B9  1303               	bcf	3,6	;RP1=0, select bank1
  5807  05BA  07B7               	addwf	_intMinuteCounter^(0+128),f
  5808  05BB  1803               	skipnc
  5809  05BC  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5810  05BD  3000               	movlw	0
  5811  05BE  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5812  05BF                     i1l2502:	
  5813                           
  5814                           ;Main Card V10.0.c: 964: }
  5815                           ;Main Card V10.0.c: 965: if(intMinuteCounter >= 60)
  5816  05BF  1683               	bsf	3,5	;RP0=1, select bank1
  5817  05C0  1303               	bcf	3,6	;RP1=0, select bank1
  5818  05C1  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5819  05C2  3A80               	xorlw	128
  5820  05C3  00FF               	movwf	127
  5821  05C4  3080               	movlw	128
  5822  05C5  027F               	subwf	127,w
  5823  05C6  1D03               	skipz
  5824  05C7  2DCA               	goto	u226_25
  5825  05C8  303C               	movlw	60
  5826  05C9  0237               	subwf	_intMinuteCounter^(0+128),w
  5827  05CA                     u226_25:	
  5828  05CA  1C03               	skipc
  5829  05CB  2DD0               	goto	i1l2506
  5830                           
  5831                           ;Main Card V10.0.c: 966: {
  5832                           ;Main Card V10.0.c: 967: intMinuteCounter = 0;
  5833  05CC  1683               	bsf	3,5	;RP0=1, select bank1
  5834  05CD  1303               	bcf	3,6	;RP1=0, select bank1
  5835  05CE  01B7               	clrf	_intMinuteCounter^(0+128)
  5836  05CF  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5837  05D0                     i1l2506:	
  5838                           
  5839                           ;Main Card V10.0.c: 968: }
  5840                           ;Main Card V10.0.c: 971: TMR1ON = 1;
  5841  05D0  1283               	bcf	3,5	;RP0=0, select bank0
  5842  05D1  1303               	bcf	3,6	;RP1=0, select bank0
  5843  05D2  1410               	bsf	16,0	;volatile
  5844                           
  5845                           ;Main Card V10.0.c: 972: }
  5846                           ;Main Card V10.0.c: 973: TMR1IF = 0;
  5847  05D3  100C               	bcf	12,0	;volatile
  5848  05D4                     L3:	
  5849                           
  5850                           ;Main Card V10.0.c: 974: RBIF = 0;
  5851  05D4  100B               	bcf	11,0	;volatile
  5852                           
  5853                           ;Main Card V10.0.c: 975: GIE = 1;
  5854  05D5  178B               	bsf	11,7	;volatile
  5855                           
  5856                           ;Main Card V10.0.c: 976: return;
  5857  05D6  087B               	movf	??_tc_int+6,w
  5858  05D7  00FF               	movwf	127
  5859  05D8  087A               	movf	??_tc_int+5,w
  5860  05D9  008A               	movwf	10
  5861  05DA  0879               	movf	??_tc_int+4,w
  5862  05DB  0084               	movwf	4
  5863  05DC  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5864  05DD  0083               	movwf	3
  5865  05DE  0EFE               	swapf	126,f
  5866  05DF  0E7E               	swapf	126,w
  5867  05E0  0009               	retfie
  5868  05E1                     __end_of_tc_int:	
  5869                           
  5870                           	psect	intentry
  5871  0004                     __pintentry:	
  5872                           ;incstack = 0
  5873 ;; hardware stack exceeded
  5874                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5875                           
  5876  0004                     interrupt_function:	
  5877  007E                     saved_w	set	btemp
  5878  0004  00FE               	movwf	btemp
  5879  0005  0E03               	swapf	3,w
  5880  0006  00F8               	movwf	??_tc_int+3
  5881  0007  0804               	movf	4,w
  5882  0008  00F9               	movwf	??_tc_int+4
  5883  0009  080A               	movf	10,w
  5884  000A  00FA               	movwf	??_tc_int+5
  5885  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5886  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5887  000D  087F               	movf	btemp+1,w
  5888  000E  00FB               	movwf	??_tc_int+6
  5889  000F  120A  118A  2D15   	ljmp	_tc_int
  5890                           
  5891                           	psect	text38
  5892  0B7F                     __ptext38:	
  5893 ;; *************** function i1_OperationMode *****************
  5894 ;; Defined at:
  5895 ;;		line 1056 in file "../Main Card V10.0.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  OperationMod    1    1[COMMON] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      unsigned char 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       0       0       0       0
  5910 ;;      Locals:         1       0       0       0       0
  5911 ;;      Temps:          1       0       0       0       0
  5912 ;;      Totals:         2       0       0       0       0
  5913 ;;Total ram usage:        2 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; This function calls:
  5916 ;;		Nothing
  5917 ;; This function is called by:
  5918 ;;		_tc_int
  5919 ;; This function uses a non-reentrant model
  5920 ;;
  5921                           
  5922                           
  5923                           ;psect for function i1_OperationMode
  5924  0B7F                     i1_OperationMode:	
  5925                           
  5926                           ;Main Card V10.0.c: 1058: unsigned char bracketStatus;
  5927                           ;Main Card V10.0.c: 1059: bracketStatus = ((~PORTB) & 0b00000111) ;
  5928                           
  5929                           ;incstack = 0
  5930 ;; hardware stack exceeded
  5931                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5932  0B7F  1283               	bcf	3,5	;RP0=0, select bank0
  5933  0B80  1303               	bcf	3,6	;RP1=0, select bank0
  5934  0B81  0906               	comf	6,w	;volatile
  5935  0B82  3907               	andlw	7
  5936  0B83  00F0               	movwf	??i1_OperationMode
  5937  0B84  0870               	movf	??i1_OperationMode,w
  5938  0B85  00F1               	movwf	i1OperationMode@bracketStatus
  5939                           
  5940                           ;Main Card V10.0.c: 1061: return bracketStatus;
  5941  0B86  0871               	movf	i1OperationMode@bracketStatus,w
  5942  0B87  0008               	return
  5943  0B88                     __end_ofi1_OperationMode:	
  5944                           
  5945                           	psect	text39
  5946  0DF6                     __ptext39:	
  5947 ;; *************** function _TimerCounter *****************
  5948 ;; Defined at:
  5949 ;;		line 533 in file "../Main Card V10.0.c"
  5950 ;; Parameters:    Size  Location     Type
  5951 ;;		None
  5952 ;; Auto vars:     Size  Location     Type
  5953 ;;  i               2    3[COMMON] int 
  5954 ;; Return value:  Size  Location     Type
  5955 ;;                  1    wreg      void 
  5956 ;; Registers used:
  5957 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5958 ;; Tracked objects:
  5959 ;;		On entry : 0/0
  5960 ;;		On exit  : 0/0
  5961 ;;		Unchanged: 0/0
  5962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5963 ;;      Params:         0       0       0       0       0
  5964 ;;      Locals:         2       0       0       0       0
  5965 ;;      Temps:          3       0       0       0       0
  5966 ;;      Totals:         5       0       0       0       0
  5967 ;;Total ram usage:        5 bytes
  5968 ;; Hardware stack levels used:    1
  5969 ;; This function calls:
  5970 ;;		Nothing
  5971 ;; This function is called by:
  5972 ;;		_tc_int
  5973 ;; This function uses a non-reentrant model
  5974 ;;
  5975                           
  5976                           
  5977                           ;psect for function _TimerCounter
  5978  0DF6                     _TimerCounter:	
  5979                           
  5980                           ;Main Card V10.0.c: 535: for (int i = 0; i < 5; i++)
  5981                           
  5982                           ;incstack = 0
  5983 ;; hardware stack exceeded
  5984                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5985  0DF6  01F3               	clrf	TimerCounter@i
  5986  0DF7  01F4               	clrf	TimerCounter@i+1
  5987  0DF8                     L4:	
  5988  0DF8  0874               	movf	TimerCounter@i+1,w
  5989  0DF9  3A80               	xorlw	128
  5990  0DFA  00FF               	movwf	127
  5991  0DFB  3080               	movlw	128
  5992  0DFC  027F               	subwf	127,w
  5993  0DFD  1D03               	skipz
  5994  0DFE  2E01               	goto	u202_25
  5995  0DFF  3005               	movlw	5
  5996  0E00  0273               	subwf	TimerCounter@i,w
  5997  0E01                     u202_25:	
  5998  0E01  1803               	btfsc	3,0
  5999  0E02  0008               	return
  6000                           
  6001                           ;Main Card V10.0.c: 536: {
  6002                           ;Main Card V10.0.c: 537: if(intClockTimer[i]>0)
  6003  0E03  0873               	movf	TimerCounter@i,w
  6004  0E04  00F0               	movwf	??_TimerCounter
  6005  0E05  0770               	addwf	??_TimerCounter,w
  6006  0E06  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6007  0E07  0084               	movwf	4
  6008  0E08  1383               	bcf	3,7	;select IRP bank1
  6009  0E09  0800               	movf	0,w
  6010  0E0A  00F1               	movwf	??_TimerCounter+1
  6011  0E0B  0A84               	incf	4,f
  6012  0E0C  0800               	movf	0,w
  6013  0E0D  00F2               	movwf	??_TimerCounter+2
  6014  0E0E  0872               	movf	??_TimerCounter+2,w
  6015  0E0F  3A80               	xorlw	128
  6016  0E10  00FF               	movwf	127
  6017  0E11  3080               	movlw	128
  6018  0E12  027F               	subwf	127,w
  6019  0E13  1D03               	skipz
  6020  0E14  2E17               	goto	u203_25
  6021  0E15  3001               	movlw	1
  6022  0E16  0271               	subwf	??_TimerCounter+1,w
  6023  0E17                     u203_25:	
  6024  0E17  1C03               	skipc
  6025  0E18  2E2B               	goto	i1l2398
  6026                           
  6027                           ;Main Card V10.0.c: 538: intClockTimer[i]--;
  6028  0E19  0873               	movf	TimerCounter@i,w
  6029  0E1A  00F0               	movwf	??_TimerCounter
  6030  0E1B  0770               	addwf	??_TimerCounter,w
  6031  0E1C  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6032  0E1D  0084               	movwf	4
  6033  0E1E  30FF               	movlw	255
  6034  0E1F  1383               	bcf	3,7	;select IRP bank1
  6035  0E20  0780               	addwf	0,f
  6036  0E21  0F84               	incfsz	4,f
  6037  0E22  0800               	movf	0,w
  6038  0E23  1803               	skipnc
  6039  0E24  0A00               	incf	0,w
  6040  0E25  00FF               	movwf	127
  6041  0E26  30FF               	movlw	255
  6042  0E27  077F               	addwf	127,w
  6043  0E28  0080               	movwf	0
  6044  0E29  0384               	decf	4,f
  6045  0E2A  2E31               	goto	i1l2400
  6046  0E2B                     i1l2398:	
  6047                           
  6048                           ;Main Card V10.0.c: 539: else
  6049                           ;Main Card V10.0.c: 540: bTimerComplete[i] = 1;
  6050  0E2B  0873               	movf	TimerCounter@i,w
  6051  0E2C  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  6052  0E2D  0084               	movwf	4
  6053  0E2E  1383               	bcf	3,7	;select IRP bank1
  6054  0E2F  0180               	clrf	0
  6055  0E30  0A80               	incf	0,f
  6056  0E31                     i1l2400:	
  6057  0E31  3001               	movlw	1
  6058  0E32  07F3               	addwf	TimerCounter@i,f
  6059  0E33  1803               	skipnc
  6060  0E34  0AF4               	incf	TimerCounter@i+1,f
  6061  0E35  3000               	movlw	0
  6062  0E36  07F4               	addwf	TimerCounter@i+1,f
  6063  0E37  2DF8               	goto	L4
  6064  0E38                     __end_of_TimerCounter:	
  6065  007E                     btemp	set	126	;btemp
  6066  007E                     wtemp0	set	126


Data Sizes:
    Strings     146
    Constant    39
    Data        3
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      57
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[15]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[15]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[15]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[15]), STR_5(CODE[15]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 15
		 -> STR_21(CODE[8]), STR_20(CODE[8]), TransmittedDataHandler@slask_716(BANK0[8]), TransmittedDataHandler@slask_713(BANK0[8]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_13(CODE[14]), STR_12(CODE[14]), 
		 -> TransmittedDataHandler@slask_704(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), STR_4(CODE[15]), STR_2(CODE[15]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   70051
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_3
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   19386
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   16221
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1993
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   10167
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     924
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   12440
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   12440
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10852
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_3                                               0     0      0    1588
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1588
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     882
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1588
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1588
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     882
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     836
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     814
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_3
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      39       7       71.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu Mar 30 19:24:50 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006E                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l300 0C70                               l306 0BB4  
                             l330 0FFC                               l243 04FC                               l227 0201  
                             l254 0C50                               l370 0CF8                               l418 0D57  
                             l259 0BA8                               l508 0C9B                               l294 0E99  
                             l279 0DF4                               l396 0CB8                               l900 0C0D  
                             l912 0E3B                               _GIE 005F             __end_of_DarknessCheck 0D28  
                             fsr0 0004                               indf 0000               __end_of_FindChannel 0359  
  __end_of_TransmittedDataHandler 0259                   ??_timerFunction 0024                      __CFG_LVP$OFF 0000  
                            l2002 0751                              l2020 0770                              l2004 074A  
                            l2030 07B3                              l2022 0774                              l2014 076A  
                            l2006 0756                              l2024 07A2                              l2210 0D8A  
                            l2130 0178                              l2300 0C45                              l2124 0156  
                            l2116 0130                              l2108 010A                              l2160 0204  
                            l2152 01E1                              l2144 01BB                              l2136 019A  
                            l2154 01EB                              l2146 01C5                              l2076 007E  
                            l2420 06EF                              l2182 0DC4                              l2334 0BF4  
                            l2166 0226                              l2350 0F19                              l2192 0DD9  
                            l1800 027F                              l2328 0BE3                              l2088 00B4  
                            l2440 0730                              l2432 0716                              l2424 06FC  
                            l2416 06E2                              l2290 043E                              l2098 00DF  
                            l1820 0344                              l1900 0E79                              l2348 0F06  
                            l2444 073A                              l2436 0723                              l2428 0709  
                            l1910 0C16                              l2382 0F7D                              l2374 0F60  
                            l1816 0333                              l1824 0357                              l1770 0FAE  
                            l1818 030D                              l1930 07DA                              l2378 0F74  
                            l1772 0FBD                              l1780 0FE9                              l1924 07BC  
                            l1932 07F3                              l1774 0FCC                              l1854 0C93  
                            l1776 0FDB                              l1768 0FA1                              l1936 07FC  
                            l1874 0BD4                              l1882 0D2F                              l1980 04FF  
                            l1956 047E                              l1884 0D3E                              l1974 04B6  
                            l1958 0491                              l1894 0E5A                              l1992 0D0C  
                            l1976 04F7                              l1898 0E70                              l1996 0D25  
                            l1998 0D26       __size_of_TransiverToReceive 005C                              STR_1 0682  
                            STR_2 0637                              STR_3 068A                              STR_4 0646  
                            STR_5 0637                              STR_6 0646                              STR_7 06AF  
                            STR_8 06A1                              STR_9 0692                              u1211 0CB6  
                            u1155 0C7A                              u1235 0C9C                              u1165 027D  
                            u1245 0CA3                              u1185 0318                              u1195 0355  
                            u2307 0F83                              u2317 0462                              u2327 049B  
                            u2337 0503                              u2347 0510                              u2357 026A  
                            u2277 06D6                              u2367 033F                              u2287 0EEA  
                            u2377 0C82                              u2297 0F23                              u1835 0D94  
                            _RBIF 0058                              u1985 0F50                              _WREN 0C62  
                  ??_eeprom_write 0021                              _atoi 0747                              _main 06C9  
                            _init 0E7C                              btemp 007E                              start 0012  
                   __CFG_IESO$OFF 0000                   __end_of_DelayDs 0C8F                  TransmittString@i 003A  
__size_of_LightWithSensController 003F                   __end_of_ReadSPI 0B77                             ?_atoi 0026  
                           ?_main 0070                             ?_init 0070                             _EEADR 010D  
                           STR_10 06A8                             STR_11 0671                             STR_20 0682  
                           STR_12 0663                             STR_21 068A                             STR_13 0655  
                           STR_14 069A                             STR_15 06C5                             STR_16 06C1  
                           STR_17 067A                     __CFG_WDTE$OFF 0000                             STR_18 06BC  
                           STR_19 06B6                             _CARRY 0018                             _ANSEL 0188  
           __end_of_OperationMode 0B91                             _T1CON 0010                             i1l359 055F  
                           _TMR1H 000F                             _TMR1L 000E                             _PORTA 0005  
                           _PORTB 0006                             _PORTC 0007                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _SSPIE 0463  
                           _Blink 0D84                             _bDark 006D                    __CFG_FCMEN$OFF 0000  
                 __end_of_isdigit 0BD6                       _AnalogValue 0CD6                             atoi@a 002B  
                           atoi@s 002D                    __CFG_BOREN$OFF 0000                             pclath 000A  
                 ??_TransiverInit 0035                             status 0003                     _intBlinkCycle 0068  
                           wtemp0 007E                    WriteSPI@buffer 0021                  __end_of_ChannelP 061D  
                __end_of_ChannelR 062A                  __end_of_ChannelS 0637                   __end_of_strncmp 0E7C  
                  __CFG_MCLRE$OFF 0000                     _intClockTimer 00A0                 _intNumberOfBlinks 00D7  
                 __initialization 0015                      __end_of_atoi 07B8                      __end_of_main 0747  
                    __end_of_init 0ECF                  __end_of_ReadFIFO 0BC6                     ReadFIFO@value 0024  
                     _FindChannel 0259                     ??_RegisterSet 0028                            ??_atoi 0028  
                          ??_main 0065                            ??_init 0020                            ?_Blink 0026  
                          _ADRESH 001E                            _EEDATA 010C                            _EECON1 018C  
                          _EECON2 018D                            _ANSELH 0189                  __end_of_WriteSPI 0BB8  
                          i1l2400 0E31                            i1l2502 05BF                            i1l2506 05D0  
                          i1l2460 052F                            i1l2484 0581                            u202_25 0E01  
                          i1l2398 0E2B                            i1l2486 0582                            i1l2478 0562  
                          i1l2496 05A6                            u203_25 0E17                            u223_25 057B  
                          u224_25 0593                            u225_25 05B1                            u226_25 05CA  
                          u219_25 054F                         ??_DelayDs 0022                            Blink@i 0029  
                          Blink@n 0026                            _TMR1IF 0060                            _TMR1ON 0080  
    i1OperationMode@bracketStatus 0071                            _SSPBUF 0013                         ??_ReadSPI 0023  
                          _Mode_0 0B6B                            _Mode_1 0C38                            _Mode_2 0B9D  
                          _Mode_3 0C1F                            _Mode_4 0BD6                            _Mode_5 0BE7  
              __size_of_SetRFMode 006F              __size_of_eeprom_read 0024                            ___wmul 0C8F  
                          _tc_int 0515              __end_of_eeprom_write 0D84                            _strchr 0C0A  
                          _strlen 0D28                            _strstr 07B8                         ??_isdigit 0020  
                          saved_w 007E               __end_of_RegisterSet 0C6C                     ?_RegisterRead 0070  
              RegisterRead@adress 0026       TransmittedDataHandler@slask 003D       TransmittedDataHandler@value 005D  
                       ??_strncmp 002B                __size_of_WriteFIFO 000C           __end_of__initialization 0044  
                 eeprom_read@addr 0021           _LightWithSensController 0DB7                     _bChannelFound 006C  
                   __end_of_Blink 0DB7                    __pcstackCOMMON 0070                      __pidataBANK0 05FD  
                    __pidataBANK1 07FE                      _channelFound 00AF                    _OPTION_REGbits 0081  
                         ??_Blink 0028                 __end_of_SetRFMode 1000                 eeprom_write@value 0020  
                  ??_RegisterRead 0023                        __pbssBANK0 0068                        __pbssBANK1 00A0  
                      __pbssBANK3 0190          __size_ofi1_OperationMode 0009                         ?_ReadFIFO 0070  
      timerFunction@intSetSeconds 0022                AnalogValue@channel 0027                           ?_Mode_0 0070  
                         ?_Mode_1 0070                           ?_Mode_2 0070                           ?_Mode_3 0070  
                         ?_Mode_4 0070                           ?_Mode_5 0070          __size_of_TransmittString 00D2  
                      __pmaintext 06C9                           ?___wmul 0020                        __pintentry 0004  
                         ?_tc_int 0070                         ?_WriteSPI 0070                 __end_of_WriteFIFO 0B9D  
                         ?_strchr 0020                           ?_strlen 0020                       _RegisterSet 0C52  
                         ?_strstr 002E                     ?_TimerCounter 0070        __end_of_TransiverToReceive 0F2B  
           __end_of_timerFunction 0C0A                      ?_AnalogValue 0070                        __stringtab 0600  
                      ??_ReadFIFO 0023                           _DelayDs 0C6C         ??_LightWithSensController 002A  
                         _ReadSPI 0B6F            __size_of_DarknessCheck 0029                   __size_of_Mode_0 0004  
                 __size_of_Mode_1 001A                   __size_of_Mode_2 000D                   __size_of_Mode_3 0019  
                 __size_of_Mode_4 0011                   __size_of_Mode_5 0011        OperationMode@bracketStatus 0021  
           __size_of_eeprom_write 0030                   __size_of___wmul 0023                      ?_FindChannel 0070  
                       _ANSELbits 0188                        ??_WriteSPI 0020                   __size_of_tc_int 00CC  
                         __ptext1 0E7C                           __ptext2 0ECF                           __ptext3 0F2B  
                         __ptext4 0048                           __ptext5 07B8                           __ptext6 0E38  
                         __ptext7 0D28                           __ptext8 0C0A                           __ptext9 0D54  
                 __size_of_strchr 0015                   __size_of_strlen 002C                         _T1CONbits 0010  
                 __size_of_strstr 0046                           _isdigit 0BC6                    ??_TimerCounter 0070  
                         clrloop0 0B78                           _strncmp 0E38              end_of_initialization 0044  
                    _eeprom_write 0D54             __end_of_TransiverInit 0443            __size_of_OperationMode 0009  
               ??i1_OperationMode 0070                  WriteSPI@databyte 0022              __end_of_RegisterRead 05FD  
                   WriteFIFO@Data 0023          ??_TransmittedDataHandler 003C                           strlen@s 0026  
                 _intBlinkCounter 00B1                 ??_TransmittString 0037                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                     _DarknessCheck 0CFF  
                   ??_eeprom_read 0020                    __end_of_Mode_0 0B6F                    __end_of_Mode_1 0C52  
                  __end_of_Mode_2 0BAA                    __end_of_Mode_3 0C38                    __end_of_Mode_4 0BE7  
                  __end_of_Mode_5 0BF8                    __end_of___wmul 0CB2                    __end_of_tc_int 05E1  
                  ?_DarknessCheck 0070                     _OperationMode 0B88                    __end_of_strchr 0C1F  
                  __end_of_strlen 0D54                    __end_of_strstr 07FE               start_initialization 0015  
           _intDarkCheckIntervall 00B3        DarknessCheck@darknessValue 0029                         _SetRFMode 0F91  
            __size_of_AnalogValue 0029                 __size_of_ReadFIFO 000E          __CFG_FOSC$INTRC_NOCLKOUT 0000  
                        ??_Mode_0 002A                          ??_Mode_1 002A                          ??_Mode_2 002A  
                        ??_Mode_3 002A                          ??_Mode_4 003C                          ??_Mode_5 003C  
            __end_of_TimerCounter 0E38                          ??___wmul 0024               __end_of_eeprom_read 0CD6  
                   TimerCounter@i 0073                       __pdataBANK0 006F                       __pdataBANK1 00D7  
                        ??_tc_int 0075   __size_of_TransmittedDataHandler 0211                      ?_RegisterSet 0027  
                        ??_strchr 0022                          ??_strlen 0022                          ??_strstr 002F  
                  ?_OperationMode 0070              __size_of_FindChannel 0100         TransmittString@dataString 0035  
               RegisterRead@value 0025                 __size_of_WriteSPI 000E                       __pbssCOMMON 007C  
                       ___latbits 0002                         _WriteFIFO 0B91                     __pcstackBANK0 0020  
                    _ReceivedData 0190            SetRFMode@mcparam0_read 002D                      _isdigit$1088 0020  
                      ?_SetRFMode 0070                  eeprom_write@addr 0022                          ?_DelayDs 0020  
               RegisterSet@adress 002A                          ?_ReadSPI 0070             __size_of_RegisterRead 001C  
              _TransiverToReceive 0ECF               ?_TransiverToReceive 0070                   ??_DarknessCheck 0028  
                       __pstrings 0600                          ?_isdigit 0070       timerFunction@intTimerNumber 0020  
                  __size_of_Blink 0033                        ?_WriteFIFO 0070                   i1_OperationMode 0B7F  
            ??_TransiverToReceive 0035                      _RegisterRead 05E1                          ?_strncmp 0028  
          _TransmittedDataHandler 0048                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                          DelayDs@i 0024                      FindChannel@i 0033  
                       clear_ram0 0B77                       _eeprom_read 0CB2                          _PIE1bits 008C  
                 _TransmittString 0443                          _PIR1bits 000C            __size_of_timerFunction 0012  
                 ??_OperationMode 0020                     SetRFMode@mode 002C                        _ADCON0bits 001F  
                     __stringbase 060F                        _ADCON1bits 009F                 ___wmul@multiplier 0020  
                        _WPUBbits 0095                          _ChannelP 0610                          _ChannelR 061D  
                        _ChannelS 062A          ?_LightWithSensController 0070                       ??_SetRFMode 002B  
                        _ReadFIFO 0BB8             __size_of_TimerCounter 0042                  __size_of_DelayDs 0023  
                __size_of_ReadSPI 0008                    _bTimerComplete 00AA                  _intMinuteCounter 00B7  
               _TransiverReadFIFO 0F2B                          _WriteSPI 0BAA                __end_of__stringtab 0610  
                _intSecondCounter 006A                ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0B88  
          __size_of_TransiverInit 00EA              __size_of_RegisterSet 001A                  RegisterSet@value 0027  
                     ??_WriteFIFO 0023                  __size_of_isdigit 0010                      _TimerCounter 0DF6  
                        __ptext10 0747                          __ptext11 0BC6                          __ptext20 0B91  
                        __ptext12 0C8F                          __ptext21 0259                          __ptext13 0B88  
                        __ptext30 0B6B                          __ptext22 0F91                          __ptext14 0BB8  
                        __ptext31 0DB7                          __ptext23 0C52                          __ptext15 0359  
                        __ptext32 0BF8                          __ptext24 05E1                          __ptext16 0D84  
                        __ptext33 0CFF                          __ptext25 0B6F                          __ptext17 0BE7  
                        __ptext34 0CB2                          __ptext26 0BAA                          __ptext18 0BD6  
                        __ptext35 0CD6                          __ptext27 0C1F                          __ptext19 0443  
                        __ptext36 0C6C                          __ptext28 0B9D                          __ptext37 0515  
                        __ptext29 0C38                          __ptext38 0B7F                          __ptext39 0DF6  
             ??_TransiverReadFIFO 005F                     _timerFunction 0BF8           __end_of_TransmittString 0515  
 TransmittedDataHandler@slask_704 0045   TransmittedDataHandler@slask_713 004D   TransmittedDataHandler@slask_716 0055  
                __size_of_strncmp 0044                     __size_of_atoi 0071                     __size_of_main 007E  
                   __size_of_init 0053                        strncmp@len 0029                     _bValueFromPot 006F  
       __end_of_TransiverReadFIFO 0F91                          atoi@sign 002A                        DelayDs@cnt 0020  
                  FindChannel@cnt 0031   __end_of_LightWithSensController 0DF6              _intHalfSecondCounter 00B5  
                      _INTCONbits 000B                TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063  
                        isdigit@c 0021                    ?_timerFunction 0020                     ??_AnalogValue 0026  
               _TransmittedString 00B9                          intlevel1 0000                         strchr@chr 0020  
                       strchr@ptr 0022                     _TransiverInit 0359                         strncmp@s1 002D  
                       strncmp@s2 0028                         stringcode 060A                        _OSCCONbits 008F  
                   ??_FindChannel 002E                  ?i1_OperationMode 0070                          strlen@cp 0027  
                        stringdir 060A                          stringtab 0600           ?_TransmittedDataHandler 0070  
                        strstr@s1 0032                          strstr@s2 002E                  ?_TransmittString 0035  
                   ?_eeprom_write 0020                    ?_TransiverInit 0070                      ?_eeprom_read 0070  
             __end_of_AnalogValue 0CFF                        _SSPCONbits 0014              _addressDarknessValue 007C  
