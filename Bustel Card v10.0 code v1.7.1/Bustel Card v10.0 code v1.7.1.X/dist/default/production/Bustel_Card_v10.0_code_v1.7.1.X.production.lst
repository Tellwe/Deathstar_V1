

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Mar 30 21:03:42 2017

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0009                     	;# 
    68  000A                     	;# 
    69  000B                     	;# 
    70  000C                     	;# 
    71  000D                     	;# 
    72  000E                     	;# 
    73  000E                     	;# 
    74  000F                     	;# 
    75  0010                     	;# 
    76  0011                     	;# 
    77  0012                     	;# 
    78  0013                     	;# 
    79  0014                     	;# 
    80  0015                     	;# 
    81  0015                     	;# 
    82  0016                     	;# 
    83  0017                     	;# 
    84  0018                     	;# 
    85  0019                     	;# 
    86  001A                     	;# 
    87  001B                     	;# 
    88  001B                     	;# 
    89  001C                     	;# 
    90  001D                     	;# 
    91  001E                     	;# 
    92  001F                     	;# 
    93  0081                     	;# 
    94  0085                     	;# 
    95  0086                     	;# 
    96  0087                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135                           
   136                           	psect	idataBANK0
   137  0003                     __pidataBANK0:	
   138                           
   139                           ;initializer for _bValueFromPot
   140  0003  3401               	retlw	1
   141                           
   142                           	psect	idataBANK1
   143  0B85                     __pidataBANK1:	
   144                           
   145                           ;initializer for _intNumberOfBlinks
   146  0B85  3458               	retlw	88
   147  0B86  3402               	retlw	2
   148                           
   149                           	psect	strings
   150  0600                     __pstrings:	
   151  0600                     stringtab:	
   152  0600                     __stringtab:	
   153                           
   154                           ;	String table - string pointers are 1 byte each
   155  0600  1BFF               	btfsc	btemp+1,7
   156  0601  2E0A               	ljmp	stringcode
   157  0602  1383               	bcf	3,7
   158  0603  187F               	btfsc	btemp+1,0
   159  0604  1783               	bsf	3,7
   160  0605  0800               	movf	0,w
   161  0606  0A84               	incf	4,f
   162  0607  1903               	skipnz
   163  0608  0AFF               	incf	btemp+1,f
   164  0609  0008               	return
   165  060A                     stringcode:	
   166  060A                     stringdir:	
   167  060A  3006               	movlw	high stringdir
   168  060B  008A               	movwf	10
   169  060C  0804               	movf	4,w
   170  060D  0A84               	incf	4,f
   171  060E  0782               	addwf	2,f
   172  060F                     __stringbase:	
   173  060F  3400               	retlw	0
   174  0610                     __end_of__stringtab:	
   175  0610                     _ChannelP:	
   176  0610  343F               	retlw	63
   177  0611  3447               	retlw	71
   178  0612  344F               	retlw	79
   179  0613  3457               	retlw	87
   180  0614  345F               	retlw	95
   181  0615  3477               	retlw	119
   182  0616  347E               	retlw	126
   183  0617  347F               	retlw	127
   184  0618  3486               	retlw	134
   185  0619  3487               	retlw	135
   186  061A  3437               	retlw	55
   187  061B  3467               	retlw	103
   188  061C  346F               	retlw	111
   189  061D                     __end_of_ChannelP:	
   190  061D                     _ChannelR:	
   191  061D  344F               	retlw	79
   192  061E  3459               	retlw	89
   193  061F  3463               	retlw	99
   194  0620  346D               	retlw	109
   195  0621  3477               	retlw	119
   196  0622  3495               	retlw	149
   197  0623  349F               	retlw	159
   198  0624  349F               	retlw	159
   199  0625  34A9               	retlw	169
   200  0626  34A9               	retlw	169
   201  0627  3445               	retlw	69
   202  0628  3481               	retlw	129
   203  0629  348B               	retlw	139
   204  062A                     __end_of_ChannelR:	
   205  062A                     _ChannelS:	
   206  062A  3418               	retlw	24
   207  062B  341B               	retlw	27
   208  062C  341E               	retlw	30
   209  062D  3421               	retlw	33
   210  062E  3424               	retlw	36
   211  062F  342D               	retlw	45
   212  0630  347B               	retlw	123
   213  0631  3430               	retlw	48
   214  0632  347E               	retlw	126
   215  0633  3433               	retlw	51
   216  0634  3415               	retlw	21
   217  0635  3427               	retlw	39
   218  0636  342A               	retlw	42
   219  0637                     __end_of_ChannelS:	
   220  001F                     _ADCON0bits	set	31
   221  001E                     _ADRESH	set	30
   222  000B                     _INTCONbits	set	11
   223  000C                     _PIR1bits	set	12
   224  0005                     _PORTA	set	5
   225  0005                     _PORTAbits	set	5
   226  0006                     _PORTB	set	6
   227  0006                     _PORTBbits	set	6
   228  0007                     _PORTC	set	7
   229  0007                     _PORTCbits	set	7
   230  0013                     _SSPBUF	set	19
   231  0014                     _SSPCONbits	set	20
   232  0010                     _T1CON	set	16
   233  0010                     _T1CONbits	set	16
   234  000F                     _TMR1H	set	15
   235  000E                     _TMR1L	set	14
   236  0018                     _CARRY	set	24
   237  005F                     _GIE	set	95
   238  0058                     _RBIF	set	88
   239  0060                     _TMR1IF	set	96
   240  0080                     _TMR1ON	set	128
   241  009F                     _ADCON1bits	set	159
   242  0096                     _IOCBbits	set	150
   243  0081                     _OPTION_REGbits	set	129
   244  008F                     _OSCCONbits	set	143
   245  008C                     _PIE1bits	set	140
   246  0094                     _SSPSTATbits	set	148
   247  0085                     _TRISA	set	133
   248  0086                     _TRISB	set	134
   249  0087                     _TRISC	set	135
   250  0095                     _WPUBbits	set	149
   251  0463                     _SSPIE	set	1123
   252  010D                     _EEADR	set	269
   253  010C                     _EEDATA	set	268
   254  0188                     _ANSEL	set	392
   255  0189                     _ANSELH	set	393
   256  0188                     _ANSELbits	set	392
   257  018C                     _EECON1	set	396
   258  018D                     _EECON2	set	397
   259  0C60                     _RD	set	3168
   260  0C61                     _WR	set	3169
   261  0C62                     _WREN	set	3170
   262  0637                     STR_13:	
   263  0637  344E               	retlw	78	;'N'
   264  0638  346F               	retlw	111	;'o'
   265  0639  3474               	retlw	116	;'t'
   266  063A  3420               	retlw	32	;' '
   267  063B  3444               	retlw	68	;'D'
   268  063C  3461               	retlw	97	;'a'
   269  063D  3472               	retlw	114	;'r'
   270  063E  346B               	retlw	107	;'k'
   271  063F  3420               	retlw	32	;' '
   272  0640  3420               	retlw	32	;' '
   273  0641  3420               	retlw	32	;' '
   274  0642  3420               	retlw	32	;' '
   275  0643  3420               	retlw	32	;' '
   276  0644  3400               	retlw	0
   277  0645                     STR_12:	
   278  0645  3449               	retlw	73	;'I'
   279  0646  3474               	retlw	116	;'t'
   280  0647  3427               	retlw	39	;'''
   281  0648  3473               	retlw	115	;'s'
   282  0649  3420               	retlw	32	;' '
   283  064A  3444               	retlw	68	;'D'
   284  064B  3461               	retlw	97	;'a'
   285  064C  3472               	retlw	114	;'r'
   286  064D  346B               	retlw	107	;'k'
   287  064E  3420               	retlw	32	;' '
   288  064F  3420               	retlw	32	;' '
   289  0650  3420               	retlw	32	;' '
   290  0651  3420               	retlw	32	;' '
   291  0652  3400               	retlw	0
   292  0653                     STR_2:	
   293  0653  344E               	retlw	78	;'N'
   294  0654  3431               	retlw	49	;'1'
   295  0655  3453               	retlw	83	;'S'
   296  0656  3454               	retlw	84	;'T'
   297  0657  3441               	retlw	65	;'A'
   298  0658  3452               	retlw	82	;'R'
   299  0659  3454               	retlw	84	;'T'
   300  065A  3445               	retlw	69	;'E'
   301  065B  3444               	retlw	68	;'D'
   302  065C  3400               	retlw	0
   303  065D                     STR_4:	
   304  065D  344E               	retlw	78	;'N'
   305  065E  3432               	retlw	50	;'2'
   306  065F  3453               	retlw	83	;'S'
   307  0660  3454               	retlw	84	;'T'
   308  0661  3441               	retlw	65	;'A'
   309  0662  3452               	retlw	82	;'R'
   310  0663  3454               	retlw	84	;'T'
   311  0664  3445               	retlw	69	;'E'
   312  0665  3444               	retlw	68	;'D'
   313  0666  3400               	retlw	0
   314  0667                     STR_11:	
   315  0667  3444               	retlw	68	;'D'
   316  0668  3441               	retlw	65	;'A'
   317  0669  3452               	retlw	82	;'R'
   318  066A  344B               	retlw	75	;'K'
   319  066B  3443               	retlw	67	;'C'
   320  066C  3441               	retlw	65	;'A'
   321  066D  344C               	retlw	76	;'L'
   322  066E  3443               	retlw	67	;'C'
   323  066F  3400               	retlw	0
   324  0670                     STR_17:	
   325  0670  3443               	retlw	67	;'C'
   326  0671  3448               	retlw	72	;'H'
   327  0672  3453               	retlw	83	;'S'
   328  0673  3454               	retlw	84	;'T'
   329  0674  3441               	retlw	65	;'A'
   330  0675  3454               	retlw	84	;'T'
   331  0676  3445               	retlw	69	;'E'
   332  0677  3400               	retlw	0
   333  0678                     STR_1:	
   334  0678  344E               	retlw	78	;'N'
   335  0679  3431               	retlw	49	;'1'
   336  067A  3442               	retlw	66	;'B'
   337  067B  344C               	retlw	76	;'L'
   338  067C  3449               	retlw	73	;'I'
   339  067D  344E               	retlw	78	;'N'
   340  067E  344B               	retlw	75	;'K'
   341  067F  3400               	retlw	0
   342  0680                     STR_3:	
   343  0680  344E               	retlw	78	;'N'
   344  0681  3432               	retlw	50	;'2'
   345  0682  3442               	retlw	66	;'B'
   346  0683  344C               	retlw	76	;'L'
   347  0684  3449               	retlw	73	;'I'
   348  0685  344E               	retlw	78	;'N'
   349  0686  344B               	retlw	75	;'K'
   350  0687  3400               	retlw	0
   351  0688                     STR_9:	
   352  0688  3453               	retlw	83	;'S'
   353  0689  3445               	retlw	69	;'E'
   354  068A  344E               	retlw	78	;'N'
   355  068B  3453               	retlw	83	;'S'
   356  068C  3456               	retlw	86	;'V'
   357  068D  3441               	retlw	65	;'A'
   358  068E  344C               	retlw	76	;'L'
   359  068F  3400               	retlw	0
   360  0690                     STR_14:	
   361  0690  3453               	retlw	83	;'S'
   362  0691  3454               	retlw	84	;'T'
   363  0692  3441               	retlw	65	;'A'
   364  0693  3454               	retlw	84	;'T'
   365  0694  3445               	retlw	69	;'E'
   366  0695  343F               	retlw	63	;'?'
   367  0696  3400               	retlw	0
   368  0697                     STR_8:	
   369  0697  3446               	retlw	70	;'F'
   370  0698  344C               	retlw	76	;'L'
   371  0699  3441               	retlw	65	;'A'
   372  069A  3453               	retlw	83	;'S'
   373  069B  3448               	retlw	72	;'H'
   374  069C  3442               	retlw	66	;'B'
   375  069D  3400               	retlw	0
   376  069E                     STR_10:	
   377  069E  3450               	retlw	80	;'P'
   378  069F  344F               	retlw	79	;'O'
   379  06A0  3454               	retlw	84	;'T'
   380  06A1  3456               	retlw	86	;'V'
   381  06A2  3441               	retlw	65	;'A'
   382  06A3  344C               	retlw	76	;'L'
   383  06A4  3400               	retlw	0
   384  06A5                     STR_7:	
   385  06A5  3446               	retlw	70	;'F'
   386  06A6  344C               	retlw	76	;'L'
   387  06A7  3441               	retlw	65	;'A'
   388  06A8  3453               	retlw	83	;'S'
   389  06A9  3448               	retlw	72	;'H'
   390  06AA  344C               	retlw	76	;'L'
   391  06AB  3400               	retlw	0
   392  06AC                     STR_19:	
   393  06AC  3453               	retlw	83	;'S'
   394  06AD  3445               	retlw	69	;'E'
   395  06AE  3454               	retlw	84	;'T'
   396  06AF  3444               	retlw	68	;'D'
   397  06B0  3456               	retlw	86	;'V'
   398  06B1  3400               	retlw	0
   399  06B2                     STR_18:	
   400  06B2  3452               	retlw	82	;'R'
   401  06B3  344D               	retlw	77	;'M'
   402  06B4  3444               	retlw	68	;'D'
   403  06B5  3456               	retlw	86	;'V'
   404  06B6  3400               	retlw	0
   405  06B7                     STR_16:	
   406  06B7  3450               	retlw	80	;'P'
   407  06B8  3449               	retlw	73	;'I'
   408  06B9  3443               	retlw	67	;'C'
   409  06BA  3400               	retlw	0
   410  06BB                     STR_15:	
   411  06BB  3450               	retlw	80	;'P'
   412  06BC  346F               	retlw	111	;'o'
   413  06BD  3474               	retlw	116	;'t'
   414  06BE  3400               	retlw	0
   415  0653                     
   416                           ; #config settings
   417  0000                     
   418                           	psect	cinit
   419  0015                     start_initialization:	
   420  0015                     __initialization:	
   421                           
   422                           ; Initialize objects allocated to BANK1
   423  0015  1683               	bsf	3,5	;RP0=1, select bank1
   424  0016  1303               	bcf	3,6	;RP1=0, select bank1
   425  0017  120A  158A  2385  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   426  001C  00D8               	movwf	__pdataBANK1& (0+127)
   427  001D  120A  158A  2386  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   428  0022  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   429                           
   430                           ; Initialize objects allocated to BANK0
   431  0023  1283               	bcf	3,5	;RP0=0, select bank0
   432  0024  1303               	bcf	3,6	;RP1=0, select bank0
   433  0025  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   434  002A  00EF               	movwf	__pdataBANK0& (0+127)
   435                           
   436                           ; Clear objects allocated to BANK3
   437  002B  1783               	bsf	3,7	;select IRP bank2
   438  002C  3090               	movlw	low __pbssBANK3
   439  002D  0084               	movwf	4
   440  002E  30B8               	movlw	low (__pbssBANK3+40)
   441  002F  120A  158A  2393  120A  118A  	fcall	clear_ram0
   442                           
   443                           ; Clear objects allocated to BANK1
   444  0034  1383               	bcf	3,7	;select IRP bank0
   445  0035  30A0               	movlw	low __pbssBANK1
   446  0036  0084               	movwf	4
   447  0037  30D8               	movlw	low (__pbssBANK1+56)
   448  0038  120A  158A  2393   	fcall	clear_ram0
   449                           
   450                           ; Clear objects allocated to BANK0
   451  003B  01E8               	clrf	__pbssBANK0& (0+127)
   452  003C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   453  003D  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   454  003E  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   455  003F  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   456  0040  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   457  0041  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   458                           
   459                           ; Clear objects allocated to COMMON
   460  0042  01FC               	clrf	__pbssCOMMON& (0+127)
   461  0043  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   462  0044                     end_of_initialization:	
   463                           ;End of C runtime variable initialization code
   464                           
   465  0044                     __end_of__initialization:	
   466  0044  0183               	clrf	3
   467  0045  120A  118A  2EBF   	ljmp	_main	;jump to C main() function
   468                           
   469                           	psect	bssCOMMON
   470  007C                     __pbssCOMMON:	
   471  007C                     _addressDarknessValue:	
   472  007C                     	ds	2
   473                           
   474                           	psect	bssBANK0
   475  0068                     __pbssBANK0:	
   476  0068                     _intBlinkCycle:	
   477  0068                     	ds	2
   478  006A                     _intSecondCounter:	
   479  006A                     	ds	2
   480  006C                     _bDark:	
   481  006C                     	ds	1
   482  006D                     _bTransiverModeReceive:	
   483  006D                     	ds	1
   484  006E                     _btnPush:	
   485  006E                     	ds	1
   486                           
   487                           	psect	dataBANK0
   488  006F                     __pdataBANK0:	
   489  006F                     _bValueFromPot:	
   490  006F                     	ds	1
   491                           
   492                           	psect	bssBANK1
   493  00A0                     __pbssBANK1:	
   494  00A0                     _intClockTimer:	
   495  00A0                     	ds	10
   496  00AA                     _bTimerComplete:	
   497  00AA                     	ds	5
   498  00AF                     _channelFound:	
   499  00AF                     	ds	2
   500  00B1                     _intBlinkCounter:	
   501  00B1                     	ds	2
   502  00B3                     _intDarkCheckIntervall:	
   503  00B3                     	ds	2
   504  00B5                     _intHalfSecondCounter:	
   505  00B5                     	ds	2
   506  00B7                     _intMinuteCounter:	
   507  00B7                     	ds	2
   508  00B9                     _bChannelFound:	
   509  00B9                     	ds	1
   510  00BA                     _TransmittedString:	
   511  00BA                     	ds	30
   512                           
   513                           	psect	dataBANK1
   514  00D8                     __pdataBANK1:	
   515  00D8                     _intNumberOfBlinks:	
   516  00D8                     	ds	2
   517                           
   518                           	psect	bssBANK3
   519  0190                     __pbssBANK3:	
   520  0190                     _ReceivedData:	
   521  0190                     	ds	40
   522                           
   523                           	psect	clrtext
   524  0B93                     clear_ram0:	
   525                           ;	Called with FSR containing the base address, and
   526                           ;	W with the last address+1
   527                           
   528  0B93  0064               	clrwdt	;clear the watchdog before getting into this loop
   529  0B94                     clrloop0:	
   530  0B94  0180               	clrf	0	;clear RAM location pointed to by FSR
   531  0B95  0A84               	incf	4,f	;increment pointer
   532  0B96  0604               	xorwf	4,w	;XOR with final address
   533  0B97  1903               	btfsc	3,2	;have we reached the end yet?
   534  0B98  3400               	retlw	0	;all done for this memory range, return
   535  0B99  0604               	xorwf	4,w	;XOR again to restore value
   536  0B9A  2B94               	goto	clrloop0	;do the next byte
   537                           
   538                           	psect	cstackCOMMON
   539  0070                     __pcstackCOMMON:	
   540  0070                     ?_isdigit:	
   541  0070                     ?_init:	
   542                           ; 1 bit 
   543                           
   544  0070                     ?_TransiverInit:	
   545                           ; 1 bytes @ 0x0
   546                           
   547  0070                     ?_OperationMode:	
   548                           ; 1 bytes @ 0x0
   549                           
   550  0070                     ?_Mode_0:	
   551                           ; 1 bytes @ 0x0
   552                           
   553  0070                     ?_Mode_1:	
   554                           ; 1 bytes @ 0x0
   555                           
   556  0070                     ?_Mode_2:	
   557                           ; 1 bytes @ 0x0
   558                           
   559  0070                     ?_Mode_3:	
   560                           ; 1 bytes @ 0x0
   561                           
   562  0070                     ?_Mode_4:	
   563                           ; 1 bytes @ 0x0
   564                           
   565  0070                     ?_Mode_5:	
   566                           ; 1 bytes @ 0x0
   567                           
   568  0070                     ?_TransiverToReceive:	
   569                           ; 1 bytes @ 0x0
   570                           
   571  0070                     ?_TransiverReadFIFO:	
   572                           ; 1 bytes @ 0x0
   573                           
   574  0070                     ?_SetRFMode:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_RegisterRead:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_FindChannel:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_ReadFIFO:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_TransmittedDataHandler:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_AnalogValue:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_DarknessCheck:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_eeprom_read:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_WriteFIFO:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_LightWithSensController:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_main:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_TimerCounter:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_TimerCounter:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_WriteSPI:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_ReadSPI:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_tc_int:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?i1_OperationMode:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ??i1_OperationMode:	
   626                           ; 1 bytes @ 0x0
   627                           
   628                           
   629                           ; 1 bytes @ 0x0
   630  0070                     	ds	1
   631  0071                     i1OperationMode@bracketStatus:	
   632                           
   633                           ; 1 bytes @ 0x1
   634  0071                     	ds	2
   635  0073                     TimerCounter@i:	
   636                           
   637                           ; 2 bytes @ 0x3
   638  0073                     	ds	2
   639  0075                     ??_tc_int:	
   640                           
   641                           ; 1 bytes @ 0x5
   642  0075                     	ds	7
   643                           
   644                           	psect	cstackBANK0
   645  0020                     __pcstackBANK0:	
   646  0020                     ??_init:	
   647  0020                     ??_OperationMode:	
   648                           ; 1 bytes @ 0x0
   649                           
   650  0020                     ?_timerFunction:	
   651                           ; 1 bytes @ 0x0
   652                           
   653  0020                     ?_DelayDs:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0020                     ??_eeprom_read:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0020                     ?_eeprom_write:	
   660                           ; 1 bytes @ 0x0
   661                           
   662  0020                     ??_isdigit:	
   663                           ; 1 bytes @ 0x0
   664                           
   665  0020                     ?_strchr:	
   666                           ; 1 bytes @ 0x0
   667                           
   668  0020                     ??_WriteSPI:	
   669                           ; 1 bytes @ 0x0
   670                           
   671  0020                     ?_strlen:	
   672                           ; 1 bytes @ 0x0
   673                           
   674  0020                     ?___wmul:	
   675                           ; 2 bytes @ 0x0
   676                           
   677  0020                     eeprom_write@value:	
   678                           ; 2 bytes @ 0x0
   679                           
   680  0020                     _isdigit$1089:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0020                     timerFunction@intTimerNumber:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0020                     DelayDs@cnt:	
   687                           ; 2 bytes @ 0x0
   688                           
   689  0020                     ___wmul@multiplier:	
   690                           ; 2 bytes @ 0x0
   691                           
   692  0020                     strchr@chr:	
   693                           ; 2 bytes @ 0x0
   694                           
   695                           
   696                           ; 2 bytes @ 0x0
   697  0020                     	ds	1
   698  0021                     ??_eeprom_write:	
   699  0021                     WriteSPI@buffer:	
   700                           ; 1 bytes @ 0x1
   701                           
   702  0021                     OperationMode@bracketStatus:	
   703                           ; 1 bytes @ 0x1
   704                           
   705  0021                     eeprom_read@addr:	
   706                           ; 1 bytes @ 0x1
   707                           
   708  0021                     isdigit@c:	
   709                           ; 1 bytes @ 0x1
   710                           
   711                           
   712                           ; 1 bytes @ 0x1
   713  0021                     	ds	1
   714  0022                     ??_DelayDs:	
   715  0022                     ??_strlen:	
   716                           ; 1 bytes @ 0x2
   717                           
   718  0022                     ??_strchr:	
   719                           ; 1 bytes @ 0x2
   720                           
   721  0022                     WriteSPI@databyte:	
   722                           ; 1 bytes @ 0x2
   723                           
   724  0022                     eeprom_write@addr:	
   725                           ; 1 bytes @ 0x2
   726                           
   727  0022                     strchr@ptr:	
   728                           ; 1 bytes @ 0x2
   729                           
   730  0022                     timerFunction@intSetSeconds:	
   731                           ; 1 bytes @ 0x2
   732                           
   733  0022                     ___wmul@multiplicand:	
   734                           ; 2 bytes @ 0x2
   735                           
   736                           
   737                           ; 2 bytes @ 0x2
   738  0022                     	ds	1
   739  0023                     ??_RegisterRead:	
   740  0023                     ??_ReadFIFO:	
   741                           ; 1 bytes @ 0x3
   742                           
   743  0023                     ??_WriteFIFO:	
   744                           ; 1 bytes @ 0x3
   745                           
   746  0023                     ??_ReadSPI:	
   747                           ; 1 bytes @ 0x3
   748                           
   749  0023                     WriteFIFO@Data:	
   750                           ; 1 bytes @ 0x3
   751                           
   752                           
   753                           ; 1 bytes @ 0x3
   754  0023                     	ds	1
   755  0024                     ??_timerFunction:	
   756  0024                     ??___wmul:	
   757                           ; 1 bytes @ 0x4
   758                           
   759  0024                     ReadFIFO@value:	
   760                           ; 1 bytes @ 0x4
   761                           
   762  0024                     DelayDs@i:	
   763                           ; 1 bytes @ 0x4
   764                           
   765  0024                     ___wmul@product:	
   766                           ; 2 bytes @ 0x4
   767                           
   768                           
   769                           ; 2 bytes @ 0x4
   770  0024                     	ds	1
   771  0025                     RegisterRead@value:	
   772                           
   773                           ; 1 bytes @ 0x5
   774  0025                     	ds	1
   775  0026                     ??_AnalogValue:	
   776  0026                     ?_Blink:	
   777                           ; 1 bytes @ 0x6
   778                           
   779  0026                     ?_atoi:	
   780                           ; 1 bytes @ 0x6
   781                           
   782  0026                     RegisterRead@adress:	
   783                           ; 2 bytes @ 0x6
   784                           
   785  0026                     strlen@s:	
   786                           ; 1 bytes @ 0x6
   787                           
   788  0026                     Blink@n:	
   789                           ; 1 bytes @ 0x6
   790                           
   791                           
   792                           ; 2 bytes @ 0x6
   793  0026                     	ds	1
   794  0027                     ?_RegisterSet:	
   795  0027                     RegisterSet@value:	
   796                           ; 1 bytes @ 0x7
   797                           
   798  0027                     AnalogValue@channel:	
   799                           ; 1 bytes @ 0x7
   800                           
   801  0027                     strlen@cp:	
   802                           ; 1 bytes @ 0x7
   803                           
   804                           
   805                           ; 1 bytes @ 0x7
   806  0027                     	ds	1
   807  0028                     ??_RegisterSet:	
   808  0028                     ??_DarknessCheck:	
   809                           ; 1 bytes @ 0x8
   810                           
   811  0028                     ??_atoi:	
   812                           ; 1 bytes @ 0x8
   813                           
   814  0028                     ??_Blink:	
   815                           ; 1 bytes @ 0x8
   816                           
   817  0028                     ?_strncmp:	
   818                           ; 1 bytes @ 0x8
   819                           
   820  0028                     strncmp@s2:	
   821                           ; 2 bytes @ 0x8
   822                           
   823                           
   824                           ; 1 bytes @ 0x8
   825  0028                     	ds	1
   826  0029                     DarknessCheck@darknessValue:	
   827  0029                     Blink@i:	
   828                           ; 1 bytes @ 0x9
   829                           
   830  0029                     strncmp@len:	
   831                           ; 2 bytes @ 0x9
   832                           
   833                           
   834                           ; 2 bytes @ 0x9
   835  0029                     	ds	1
   836  002A                     ??_Mode_0:	
   837  002A                     ??_Mode_1:	
   838                           ; 1 bytes @ 0xA
   839                           
   840  002A                     ??_Mode_2:	
   841                           ; 1 bytes @ 0xA
   842                           
   843  002A                     ??_Mode_3:	
   844                           ; 1 bytes @ 0xA
   845                           
   846  002A                     ??_LightWithSensController:	
   847                           ; 1 bytes @ 0xA
   848                           
   849  002A                     RegisterSet@adress:	
   850                           ; 1 bytes @ 0xA
   851                           
   852  002A                     atoi@sign:	
   853                           ; 1 bytes @ 0xA
   854                           
   855                           
   856                           ; 1 bytes @ 0xA
   857  002A                     	ds	1
   858  002B                     ??_SetRFMode:	
   859  002B                     ??_strncmp:	
   860                           ; 1 bytes @ 0xB
   861                           
   862  002B                     atoi@a:	
   863                           ; 1 bytes @ 0xB
   864                           
   865                           
   866                           ; 2 bytes @ 0xB
   867  002B                     	ds	1
   868  002C                     SetRFMode@mode:	
   869                           
   870                           ; 1 bytes @ 0xC
   871  002C                     	ds	1
   872  002D                     SetRFMode@mcparam0_read:	
   873  002D                     atoi@s:	
   874                           ; 1 bytes @ 0xD
   875                           
   876  002D                     strncmp@s1:	
   877                           ; 1 bytes @ 0xD
   878                           
   879                           
   880                           ; 1 bytes @ 0xD
   881  002D                     	ds	1
   882  002E                     ??_FindChannel:	
   883  002E                     ?_strstr:	
   884                           ; 1 bytes @ 0xE
   885                           
   886  002E                     strstr@s2:	
   887                           ; 1 bytes @ 0xE
   888                           
   889                           
   890                           ; 1 bytes @ 0xE
   891  002E                     	ds	1
   892  002F                     ??_strstr:	
   893                           
   894                           ; 1 bytes @ 0xF
   895  002F                     	ds	2
   896  0031                     FindChannel@cnt:	
   897                           
   898                           ; 2 bytes @ 0x11
   899  0031                     	ds	1
   900  0032                     strstr@s1:	
   901                           
   902                           ; 1 bytes @ 0x12
   903  0032                     	ds	1
   904  0033                     FindChannel@i:	
   905                           
   906                           ; 2 bytes @ 0x13
   907  0033                     	ds	2
   908  0035                     ??_TransiverInit:	
   909  0035                     ??_TransiverToReceive:	
   910                           ; 1 bytes @ 0x15
   911                           
   912  0035                     ?_TransmittString:	
   913                           ; 1 bytes @ 0x15
   914                           
   915  0035                     TransmittString@dataString:	
   916                           ; 1 bytes @ 0x15
   917                           
   918                           
   919                           ; 2 bytes @ 0x15
   920  0035                     	ds	2
   921  0037                     ??_TransmittString:	
   922                           
   923                           ; 1 bytes @ 0x17
   924  0037                     	ds	3
   925  003A                     TransmittString@i:	
   926                           
   927                           ; 2 bytes @ 0x1A
   928  003A                     	ds	2
   929  003C                     ??_Mode_4:	
   930  003C                     ??_Mode_5:	
   931                           ; 1 bytes @ 0x1C
   932                           
   933  003C                     ??_TransmittedDataHandler:	
   934                           ; 1 bytes @ 0x1C
   935                           
   936                           
   937                           ; 1 bytes @ 0x1C
   938  003C                     	ds	1
   939  003D                     TransmittedDataHandler@slask:	
   940                           
   941                           ; 8 bytes @ 0x1D
   942  003D                     	ds	8
   943  0045                     TransmittedDataHandler@slask_705:	
   944                           
   945                           ; 8 bytes @ 0x25
   946  0045                     	ds	8
   947  004D                     TransmittedDataHandler@slask_714:	
   948                           
   949                           ; 8 bytes @ 0x2D
   950  004D                     	ds	8
   951  0055                     TransmittedDataHandler@slask_717:	
   952                           
   953                           ; 8 bytes @ 0x35
   954  0055                     	ds	8
   955  005D                     TransmittedDataHandler@value:	
   956                           
   957                           ; 2 bytes @ 0x3D
   958  005D                     	ds	2
   959  005F                     ??_TransiverReadFIFO:	
   960                           
   961                           ; 1 bytes @ 0x3F
   962  005F                     	ds	2
   963  0061                     TransiverReadFIFO@i:	
   964                           
   965                           ; 2 bytes @ 0x41
   966  0061                     	ds	2
   967  0063                     TransiverReadFIFO@j:	
   968                           
   969                           ; 2 bytes @ 0x43
   970  0063                     	ds	2
   971  0065                     ??_main:	
   972                           
   973                           ; 1 bytes @ 0x45
   974  0065                     	ds	3
   975                           
   976                           	psect	maintext
   977  06BF                     __pmaintext:	
   978 ;;
   979 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   980 ;;
   981 ;; *************** function _main *****************
   982 ;; Defined at:
   983 ;;		line 120 in file "../Main Card V10.0.c"
   984 ;; Parameters:    Size  Location     Type
   985 ;;		None
   986 ;; Auto vars:     Size  Location     Type
   987 ;;		None
   988 ;; Return value:  Size  Location     Type
   989 ;;                  1    wreg      void 
   990 ;; Registers used:
   991 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   992 ;; Tracked objects:
   993 ;;		On entry : B00/0
   994 ;;		On exit  : 0/0
   995 ;;		Unchanged: 0/0
   996 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   997 ;;      Params:         0       0       0       0       0
   998 ;;      Locals:         0       0       0       0       0
   999 ;;      Temps:          0       3       0       0       0
  1000 ;;      Totals:         0       3       0       0       0
  1001 ;;Total ram usage:        3 bytes
  1002 ;; Hardware stack levels required when called:   10
  1003 ;; This function calls:
  1004 ;;		_Mode_0
  1005 ;;		_Mode_1
  1006 ;;		_Mode_2
  1007 ;;		_Mode_3
  1008 ;;		_Mode_4
  1009 ;;		_Mode_5
  1010 ;;		_OperationMode
  1011 ;;		_TransiverInit
  1012 ;;		_TransiverReadFIFO
  1013 ;;		_TransiverToReceive
  1014 ;;		_init
  1015 ;; This function is called by:
  1016 ;;		Startup code after reset
  1017 ;; This function uses a non-reentrant model
  1018 ;;
  1019                           
  1020                           
  1021                           ;psect for function _main
  1022  06BF                     _main:	
  1023                           
  1024                           ;Main Card V10.0.c: 123: init();
  1025                           
  1026                           ;incstack = 0
  1027 ;; hardware stack exceeded
  1028                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1029  06BF  120A  118A  27AD  120A  118A  	fcall	_init
  1030                           
  1031                           ;Main Card V10.0.c: 125: _delay((unsigned long)((800)*(4000000/4000.0)));
  1032  06C4  3005               	movlw	5
  1033  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  1034  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  1035  06C7  00E7               	movwf	??_main+2
  1036  06C8  300F               	movlw	15
  1037  06C9  00E6               	movwf	??_main+1
  1038  06CA  30F4               	movlw	244
  1039  06CB  00E5               	movwf	??_main
  1040  06CC                     u2297:	
  1041  06CC  0BE5               	decfsz	??_main,f
  1042  06CD  2ECC               	goto	u2297
  1043  06CE  0BE6               	decfsz	??_main+1,f
  1044  06CF  2ECC               	goto	u2297
  1045  06D0  0BE7               	decfsz	??_main+2,f
  1046  06D1  2ECC               	goto	u2297
  1047                           
  1048                           ;Main Card V10.0.c: 126: TransiverInit();
  1049  06D2  120A  118A  2333  120A  118A  	fcall	_TransiverInit
  1050  06D7                     l2412:	
  1051                           ;Main Card V10.0.c: 128: while(1)
  1052                           
  1053                           
  1054                           ;Main Card V10.0.c: 129: {
  1055                           ;Main Card V10.0.c: 130: if(OperationMode() == 0)
  1056  06D7  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1057  06DC  3A00               	xorlw	0
  1058  06DD  1D03               	skipz
  1059  06DE  2EE4               	goto	l2416
  1060                           
  1061                           ;Main Card V10.0.c: 131: {
  1062                           ;Main Card V10.0.c: 132: Mode_0();
  1063  06DF  120A  158A  2387  120A  118A  	fcall	_Mode_0
  1064  06E4                     l2416:	
  1065                           
  1066                           ;Main Card V10.0.c: 133: }
  1067                           ;Main Card V10.0.c: 134: if(OperationMode() == 1)
  1068  06E4  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1069  06E9  3A01               	xorlw	1
  1070  06EA  1D03               	skipz
  1071  06EB  2EF1               	goto	l2420
  1072                           
  1073                           ;Main Card V10.0.c: 135: {
  1074                           ;Main Card V10.0.c: 136: Mode_1();
  1075  06EC  120A  158A  2432  120A  118A  	fcall	_Mode_1
  1076  06F1                     l2420:	
  1077                           
  1078                           ;Main Card V10.0.c: 137: }
  1079                           ;Main Card V10.0.c: 139: if(OperationMode() == 2)
  1080  06F1  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1081  06F6  3A02               	xorlw	2
  1082  06F7  1D03               	skipz
  1083  06F8  2EFE               	goto	l2424
  1084                           
  1085                           ;Main Card V10.0.c: 140: {
  1086                           ;Main Card V10.0.c: 141: Mode_2();
  1087  06F9  120A  158A  23B9  120A  118A  	fcall	_Mode_2
  1088  06FE                     l2424:	
  1089                           
  1090                           ;Main Card V10.0.c: 142: }
  1091                           ;Main Card V10.0.c: 143: if(OperationMode() == 3)
  1092  06FE  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1093  0703  3A03               	xorlw	3
  1094  0704  1D03               	skipz
  1095  0705  2F0B               	goto	l2428
  1096                           
  1097                           ;Main Card V10.0.c: 144: {
  1098                           ;Main Card V10.0.c: 145: Mode_3();
  1099  0706  120A  158A  2419  120A  118A  	fcall	_Mode_3
  1100  070B                     l2428:	
  1101                           
  1102                           ;Main Card V10.0.c: 146: }
  1103                           ;Main Card V10.0.c: 148: if(OperationMode() == 4)
  1104  070B  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1105  0710  3A04               	xorlw	4
  1106  0711  1D03               	skipz
  1107  0712  2F18               	goto	l2432
  1108                           
  1109                           ;Main Card V10.0.c: 149: {
  1110                           ;Main Card V10.0.c: 150: Mode_4();
  1111  0713  120A  158A  2466  120A  118A  	fcall	_Mode_4
  1112  0718                     l2432:	
  1113                           
  1114                           ;Main Card V10.0.c: 151: }
  1115                           ;Main Card V10.0.c: 153: if(OperationMode() == 5)
  1116  0718  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1117  071D  3A05               	xorlw	5
  1118  071E  1D03               	skipz
  1119  071F  2F25               	goto	l2436
  1120                           
  1121                           ;Main Card V10.0.c: 154: {
  1122                           ;Main Card V10.0.c: 155: Mode_5();
  1123  0720  120A  158A  2480  120A  118A  	fcall	_Mode_5
  1124  0725                     l2436:	
  1125                           
  1126                           ;Main Card V10.0.c: 156: }
  1127                           ;Main Card V10.0.c: 160: if(!bTransiverModeReceive)
  1128  0725  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0726  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0727  086D               	movf	_bTransiverModeReceive,w
  1131  0728  1D03               	btfss	3,2
  1132  0729  2F2F               	goto	l2440
  1133                           
  1134                           ;Main Card V10.0.c: 161: TransiverToReceive();
  1135  072A  120A  158A  26CE  120A  118A  	fcall	_TransiverToReceive
  1136  072F                     l2440:	
  1137                           
  1138                           ;Main Card V10.0.c: 162: if(PORTBbits.RB4 && bTransiverModeReceive)
  1139  072F  1283               	bcf	3,5	;RP0=0, select bank0
  1140  0730  1303               	bcf	3,6	;RP1=0, select bank0
  1141  0731  1E06               	btfss	6,4	;volatile
  1142  0732  2ED7               	goto	l2412
  1143  0733  086D               	movf	_bTransiverModeReceive,w
  1144  0734  1903               	btfsc	3,2
  1145  0735  2ED7               	goto	l2412
  1146                           
  1147                           ;Main Card V10.0.c: 163: TransiverReadFIFO();
  1148  0736  120A  158A  272B  120A  118A  	fcall	_TransiverReadFIFO
  1149  073B  2ED7               	goto	l2412
  1150  073C                     __end_of_main:	
  1151                           
  1152                           	psect	text1
  1153  07AD                     __ptext1:	
  1154 ;; *************** function _init *****************
  1155 ;; Defined at:
  1156 ;;		line 553 in file "../Main Card V10.0.c"
  1157 ;; Parameters:    Size  Location     Type
  1158 ;;		None
  1159 ;; Auto vars:     Size  Location     Type
  1160 ;;		None
  1161 ;; Return value:  Size  Location     Type
  1162 ;;                  1    wreg      void 
  1163 ;; Registers used:
  1164 ;;		wreg, status,2, status,0
  1165 ;; Tracked objects:
  1166 ;;		On entry : 0/0
  1167 ;;		On exit  : 0/0
  1168 ;;		Unchanged: 0/0
  1169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1170 ;;      Params:         0       0       0       0       0
  1171 ;;      Locals:         0       0       0       0       0
  1172 ;;      Temps:          0       0       0       0       0
  1173 ;;      Totals:         0       0       0       0       0
  1174 ;;Total ram usage:        0 bytes
  1175 ;; Hardware stack levels used:    1
  1176 ;; Hardware stack levels required when called:    2
  1177 ;; This function calls:
  1178 ;;		Nothing
  1179 ;; This function is called by:
  1180 ;;		_main
  1181 ;; This function uses a non-reentrant model
  1182 ;;
  1183                           
  1184                           
  1185                           ;psect for function _init
  1186  07AD                     _init:	
  1187                           
  1188                           ;Main Card V10.0.c: 556: OSCCONbits.IRCF2 = 1;
  1189                           
  1190                           ;incstack = 0
  1191                           ; Regs used in _init: [wreg+status,2+status,0]
  1192  07AD  1683               	bsf	3,5	;RP0=1, select bank1
  1193  07AE  1303               	bcf	3,6	;RP1=0, select bank1
  1194  07AF  170F               	bsf	15,6	;volatile
  1195                           
  1196                           ;Main Card V10.0.c: 557: OSCCONbits.IRCF1 = 1;
  1197  07B0  168F               	bsf	15,5	;volatile
  1198                           
  1199                           ;Main Card V10.0.c: 558: OSCCONbits.IRCF0 = 0;
  1200  07B1  120F               	bcf	15,4	;volatile
  1201                           
  1202                           ;Main Card V10.0.c: 559: OSCCONbits.SCS = 1;
  1203  07B2  140F               	bsf	15,0	;volatile
  1204                           
  1205                           ;Main Card V10.0.c: 562: PORTA = 0x00;
  1206  07B3  1283               	bcf	3,5	;RP0=0, select bank0
  1207  07B4  1303               	bcf	3,6	;RP1=0, select bank0
  1208  07B5  0185               	clrf	5	;volatile
  1209                           
  1210                           ;Main Card V10.0.c: 563: PORTB = 0x00;
  1211  07B6  0186               	clrf	6	;volatile
  1212                           
  1213                           ;Main Card V10.0.c: 564: PORTC = 0x00;
  1214  07B7  0187               	clrf	7	;volatile
  1215                           
  1216                           ;Main Card V10.0.c: 565: TRISA = 0b00001011;
  1217  07B8  300B               	movlw	11
  1218  07B9  1683               	bsf	3,5	;RP0=1, select bank1
  1219  07BA  1303               	bcf	3,6	;RP1=0, select bank1
  1220  07BB  0085               	movwf	5	;volatile
  1221                           
  1222                           ;Main Card V10.0.c: 566: TRISB = 0b00111111;
  1223  07BC  303F               	movlw	63
  1224  07BD  0086               	movwf	6	;volatile
  1225                           
  1226                           ;Main Card V10.0.c: 567: TRISC = 0b00010000;
  1227  07BE  3010               	movlw	16
  1228  07BF  0087               	movwf	7	;volatile
  1229                           
  1230                           ;Main Card V10.0.c: 568: ANSEL = 0b00000000;
  1231  07C0  1683               	bsf	3,5	;RP0=1, select bank3
  1232  07C1  1703               	bsf	3,6	;RP1=1, select bank3
  1233  07C2  0188               	clrf	8	;volatile
  1234                           
  1235                           ;Main Card V10.0.c: 569: ANSELH = 0b00000000;
  1236  07C3  0189               	clrf	9	;volatile
  1237                           
  1238                           ;Main Card V10.0.c: 570: ANSELbits.ANS0 = 1;
  1239  07C4  1408               	bsf	8,0	;volatile
  1240                           
  1241                           ;Main Card V10.0.c: 571: ANSELbits.ANS3 = 1;
  1242  07C5  1588               	bsf	8,3	;volatile
  1243                           
  1244                           ;Main Card V10.0.c: 572: OPTION_REGbits.nRBPU = 0;
  1245  07C6  1683               	bsf	3,5	;RP0=1, select bank1
  1246  07C7  1303               	bcf	3,6	;RP1=0, select bank1
  1247  07C8  1381               	bcf	1,7	;volatile
  1248                           
  1249                           ;Main Card V10.0.c: 573: WPUBbits.WPUB5 = 0;
  1250  07C9  1295               	bcf	21,5	;volatile
  1251  07CA                     l296:	
  1252                           ;Main Card V10.0.c: 574: while(!PORTBbits.RB5);
  1253                           
  1254  07CA  1283               	bcf	3,5	;RP0=0, select bank0
  1255  07CB  1E86               	btfss	6,5	;volatile
  1256  07CC  2FCA               	goto	l296
  1257                           
  1258                           ;Main Card V10.0.c: 577: SSPCONbits.SSPM=0x00;
  1259  07CD  30F0               	movlw	-16
  1260  07CE  0594               	andwf	20,f	;volatile
  1261                           
  1262                           ;Main Card V10.0.c: 578: SSPCONbits.CKP=0;
  1263  07CF  1214               	bcf	20,4	;volatile
  1264                           
  1265                           ;Main Card V10.0.c: 579: SSPSTATbits.CKE=1;
  1266  07D0  1683               	bsf	3,5	;RP0=1, select bank1
  1267  07D1  1303               	bcf	3,6	;RP1=0, select bank1
  1268  07D2  1714               	bsf	20,6	;volatile
  1269                           
  1270                           ;Main Card V10.0.c: 580: SSPSTATbits.SMP=0;
  1271  07D3  1394               	bcf	20,7	;volatile
  1272                           
  1273                           ;Main Card V10.0.c: 581: SSPCONbits.SSPEN=0x01;
  1274  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1275  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1276  07D6  1694               	bsf	20,5	;volatile
  1277                           
  1278                           ;Main Card V10.0.c: 582: SSPIE = 0;
  1279  07D7  1683               	bsf	3,5	;RP0=1, select bank1
  1280  07D8  1303               	bcf	3,6	;RP1=0, select bank1
  1281  07D9  118C               	bcf	12,3	;volatile
  1282                           
  1283                           ;Main Card V10.0.c: 585: PORTAbits.RA5 = 1;
  1284  07DA  1283               	bcf	3,5	;RP0=0, select bank0
  1285  07DB  1303               	bcf	3,6	;RP1=0, select bank0
  1286  07DC  1685               	bsf	5,5	;volatile
  1287                           
  1288                           ;Main Card V10.0.c: 586: PORTAbits.RA4 = 1;
  1289  07DD  1605               	bsf	5,4	;volatile
  1290                           
  1291                           ;Main Card V10.0.c: 589: INTCONbits.RBIE = 1;
  1292  07DE  158B               	bsf	11,3	;volatile
  1293                           
  1294                           ;Main Card V10.0.c: 590: INTCONbits.PEIE = 1;
  1295  07DF  170B               	bsf	11,6	;volatile
  1296                           
  1297                           ;Main Card V10.0.c: 591: PIE1bits.TMR1IE = 1;
  1298  07E0  1683               	bsf	3,5	;RP0=1, select bank1
  1299  07E1  1303               	bcf	3,6	;RP1=0, select bank1
  1300  07E2  140C               	bsf	12,0	;volatile
  1301                           
  1302                           ;Main Card V10.0.c: 592: INTCONbits.GIE = 1;
  1303  07E3  178B               	bsf	11,7	;volatile
  1304                           
  1305                           ;Main Card V10.0.c: 593: IOCBbits.IOCB5 = 1;
  1306  07E4  1696               	bsf	22,5	;volatile
  1307                           
  1308                           ;Main Card V10.0.c: 596: T1CON = 0b00110000;
  1309  07E5  3030               	movlw	48
  1310  07E6  1283               	bcf	3,5	;RP0=0, select bank0
  1311  07E7  1303               	bcf	3,6	;RP1=0, select bank0
  1312  07E8  0090               	movwf	16	;volatile
  1313                           
  1314                           ;Main Card V10.0.c: 597: TMR1H = 0x0B;
  1315  07E9  300B               	movlw	11
  1316  07EA  008F               	movwf	15	;volatile
  1317                           
  1318                           ;Main Card V10.0.c: 598: TMR1L = 0xDB;
  1319  07EB  30DB               	movlw	219
  1320  07EC  008E               	movwf	14	;volatile
  1321                           
  1322                           ;Main Card V10.0.c: 599: T1CONbits.TMR1ON = 1;
  1323  07ED  1410               	bsf	16,0	;volatile
  1324                           
  1325                           ;Main Card V10.0.c: 602: ADCON0bits.ADCS0 = 0;
  1326  07EE  131F               	bcf	31,6	;volatile
  1327                           
  1328                           ;Main Card V10.0.c: 603: ADCON0bits.ADCS1 = 0;
  1329  07EF  139F               	bcf	31,7	;volatile
  1330                           
  1331                           ;Main Card V10.0.c: 604: ADCON1bits.ADFM = 0;
  1332  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  1333  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  1334  07F2  139F               	bcf	31,7	;volatile
  1335                           
  1336                           ;Main Card V10.0.c: 605: ADCON1bits.VCFG1 = 0;
  1337  07F3  129F               	bcf	31,5	;volatile
  1338                           
  1339                           ;Main Card V10.0.c: 606: ADCON1bits.VCFG0 = 0;
  1340  07F4  121F               	bcf	31,4	;volatile
  1341                           
  1342                           ;Main Card V10.0.c: 609: intSecondCounter = 0;
  1343  07F5  1283               	bcf	3,5	;RP0=0, select bank0
  1344  07F6  1303               	bcf	3,6	;RP1=0, select bank0
  1345  07F7  01EA               	clrf	_intSecondCounter
  1346  07F8  01EB               	clrf	_intSecondCounter+1
  1347                           
  1348                           ;Main Card V10.0.c: 610: intHalfSecondCounter = 0;
  1349  07F9  1683               	bsf	3,5	;RP0=1, select bank1
  1350  07FA  1303               	bcf	3,6	;RP1=0, select bank1
  1351  07FB  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1352  07FC  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1353                           
  1354                           ;Main Card V10.0.c: 611: intMinuteCounter = 0;
  1355  07FD  01B7               	clrf	_intMinuteCounter^(0+128)
  1356  07FE  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1357  07FF  0008               	return
  1358  0800                     __end_of_init:	
  1359                           
  1360                           	psect	text2
  1361  0F2B                     __ptext2:	
  1362 ;; *************** function _TransiverReadFIFO *****************
  1363 ;; Defined at:
  1364 ;;		line 198 in file "../Main Card V10.0.c"
  1365 ;; Parameters:    Size  Location     Type
  1366 ;;		None
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;  j               2   67[BANK0 ] int 
  1369 ;;  i               2   65[BANK0 ] int 
  1370 ;; Return value:  Size  Location     Type
  1371 ;;                  1    wreg      void 
  1372 ;; Registers used:
  1373 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1374 ;; Tracked objects:
  1375 ;;		On entry : 0/0
  1376 ;;		On exit  : 0/0
  1377 ;;		Unchanged: 0/0
  1378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1379 ;;      Params:         0       0       0       0       0
  1380 ;;      Locals:         0       4       0       0       0
  1381 ;;      Temps:          0       2       0       0       0
  1382 ;;      Totals:         0       6       0       0       0
  1383 ;;Total ram usage:        6 bytes
  1384 ;; Hardware stack levels used:    1
  1385 ;; Hardware stack levels required when called:    9
  1386 ;; This function calls:
  1387 ;;		_ReadFIFO
  1388 ;;		_SetRFMode
  1389 ;;		_TransmittedDataHandler
  1390 ;;		_timerFunction
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _TransiverReadFIFO
  1398  0F2B                     _TransiverReadFIFO:	
  1399                           
  1400                           ;Main Card V10.0.c: 200: timerFunction(3, 5);
  1401                           
  1402                           ;incstack = 0
  1403 ;; hardware stack exceeded
  1404                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1405  0F2B  3003               	movlw	3
  1406  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0F2E  00A0               	movwf	timerFunction@intTimerNumber
  1409  0F2F  3000               	movlw	0
  1410  0F30  00A1               	movwf	timerFunction@intTimerNumber+1
  1411  0F31  3005               	movlw	5
  1412  0F32  00A2               	movwf	timerFunction@intSetSeconds
  1413  0F33  3000               	movlw	0
  1414  0F34  00A3               	movwf	timerFunction@intSetSeconds+1
  1415  0F35  120A  158A  23F2  120A  158A  	fcall	_timerFunction
  1416                           
  1417                           ;Main Card V10.0.c: 202: SetRFMode(0x20);
  1418  0F3A  3020               	movlw	32
  1419  0F3B  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1420                           
  1421                           ;Main Card V10.0.c: 203: bTransiverModeReceive = 0;
  1422  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1423  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1424  0F42  01ED               	clrf	_bTransiverModeReceive
  1425                           
  1426                           ;Main Card V10.0.c: 204: int i = 0;
  1427  0F43  01E1               	clrf	TransiverReadFIFO@i
  1428  0F44  01E2               	clrf	TransiverReadFIFO@i+1
  1429                           
  1430                           ;Main Card V10.0.c: 205: for (int j = 0; j < 30; ++j)
  1431  0F45  01E3               	clrf	TransiverReadFIFO@j
  1432  0F46  01E4               	clrf	TransiverReadFIFO@j+1
  1433  0F47                     L1:	
  1434  0F47  0864               	movf	TransiverReadFIFO@j+1,w
  1435  0F48  3A80               	xorlw	128
  1436  0F49  00FF               	movwf	127
  1437  0F4A  3080               	movlw	128
  1438  0F4B  027F               	subwf	127,w
  1439  0F4C  1D03               	skipz
  1440  0F4D  2F50               	goto	u1995
  1441  0F4E  301E               	movlw	30
  1442  0F4F  0263               	subwf	TransiverReadFIFO@j,w
  1443  0F50                     u1995:	
  1444  0F50  1803               	btfsc	3,0
  1445  0F51  2F74               	goto	l2374
  1446                           
  1447                           ;Main Card V10.0.c: 206: {
  1448                           ;Main Card V10.0.c: 207: TransmittedString[j] = 0;
  1449  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0F54  0863               	movf	TransiverReadFIFO@j,w
  1452  0F55  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1453  0F56  0084               	movwf	4
  1454  0F57  1383               	bcf	3,7	;select IRP bank1
  1455  0F58  0180               	clrf	0
  1456  0F59  3001               	movlw	1
  1457  0F5A  07E3               	addwf	TransiverReadFIFO@j,f
  1458  0F5B  1803               	skipnc
  1459  0F5C  0AE4               	incf	TransiverReadFIFO@j+1,f
  1460  0F5D  3000               	movlw	0
  1461  0F5E  07E4               	addwf	TransiverReadFIFO@j+1,f
  1462  0F5F  2F47               	goto	L1
  1463  0F60                     l2370:	
  1464                           ;Main Card V10.0.c: 208: }
  1465                           ;Main Card V10.0.c: 209: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1466                           
  1467                           
  1468                           ;Main Card V10.0.c: 210: {
  1469                           ;Main Card V10.0.c: 211: TransmittedString[i] = ReadFIFO();
  1470  0F60  120A  158A  23D4  120A  158A  	fcall	_ReadFIFO
  1471  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0F67  00DF               	movwf	??_TransiverReadFIFO
  1474  0F68  0861               	movf	TransiverReadFIFO@i,w
  1475  0F69  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1476  0F6A  0084               	movwf	4
  1477  0F6B  085F               	movf	??_TransiverReadFIFO,w
  1478  0F6C  1383               	bcf	3,7	;select IRP bank1
  1479  0F6D  0080               	movwf	0
  1480                           
  1481                           ;Main Card V10.0.c: 212: i++;
  1482  0F6E  3001               	movlw	1
  1483  0F6F  07E1               	addwf	TransiverReadFIFO@i,f
  1484  0F70  1803               	skipnc
  1485  0F71  0AE2               	incf	TransiverReadFIFO@i+1,f
  1486  0F72  3000               	movlw	0
  1487  0F73  07E2               	addwf	TransiverReadFIFO@i+1,f
  1488  0F74                     l2374:	
  1489  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1490  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1491  0F76  1D86               	btfss	6,3	;volatile
  1492  0F77  2F7D               	goto	l2378
  1493  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1494  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1495  0F7A  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1496  0F7B  1903               	btfsc	3,2
  1497  0F7C  2F60               	goto	l2370
  1498  0F7D                     l2378:	
  1499                           
  1500                           ;Main Card V10.0.c: 213: }
  1501                           ;Main Card V10.0.c: 215: _delay((unsigned long)((10)*(4000000/4000.0)));
  1502  0F7D  300D               	movlw	13
  1503  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1504  0F7F  00E0               	movwf	??_TransiverReadFIFO+1
  1505  0F80  30FB               	movlw	251
  1506  0F81  00DF               	movwf	??_TransiverReadFIFO
  1507  0F82                     u2307:	
  1508  0F82  0BDF               	decfsz	??_TransiverReadFIFO,f
  1509  0F83  2F82               	goto	u2307
  1510  0F84  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1511  0F85  2F82               	goto	u2307
  1512  0F86  2F87               	nop2
  1513                           
  1514                           ;Main Card V10.0.c: 216: SetRFMode(0x00);
  1515  0F87  3000               	movlw	0
  1516  0F88  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1517                           
  1518                           ;Main Card V10.0.c: 217: TransmittedDataHandler();
  1519  0F8D  120A  118A  2048   	fcall	_TransmittedDataHandler
  1520  0F90  0008               	return
  1521  0F91                     __end_of_TransiverReadFIFO:	
  1522                           
  1523                           	psect	text3
  1524  0048                     __ptext3:	
  1525 ;; *************** function _TransmittedDataHandler *****************
  1526 ;; Defined at:
  1527 ;;		line 219 in file "../Main Card V10.0.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1532 ;;  value           2   61[BANK0 ] int 
  1533 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1534 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1535 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1536 ;; Return value:  Size  Location     Type
  1537 ;;                  1    wreg      void 
  1538 ;; Registers used:
  1539 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1540 ;; Tracked objects:
  1541 ;;		On entry : 0/0
  1542 ;;		On exit  : 0/0
  1543 ;;		Unchanged: 0/0
  1544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1545 ;;      Params:         0       0       0       0       0
  1546 ;;      Locals:         0      34       0       0       0
  1547 ;;      Temps:          0       1       0       0       0
  1548 ;;      Totals:         0      35       0       0       0
  1549 ;;Total ram usage:       35 bytes
  1550 ;; Hardware stack levels used:    1
  1551 ;; Hardware stack levels required when called:    8
  1552 ;; This function calls:
  1553 ;;		_AnalogValue
  1554 ;;		_DarknessCheck
  1555 ;;		_DelayDs
  1556 ;;		_OperationMode
  1557 ;;		_TransmittString
  1558 ;;		_atoi
  1559 ;;		_eeprom_read
  1560 ;;		_eeprom_write
  1561 ;;		_strstr
  1562 ;; This function is called by:
  1563 ;;		_TransiverReadFIFO
  1564 ;; This function uses a non-reentrant model
  1565 ;;
  1566                           
  1567                           
  1568                           ;psect for function _TransmittedDataHandler
  1569  0048                     _TransmittedDataHandler:	
  1570                           
  1571                           ;Main Card V10.0.c: 222: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1572                           
  1573                           ;incstack = 0
  1574 ;; hardware stack exceeded
  1575                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1576  0048  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1577  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1578  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1579  004B  00BC               	movwf	??_TransmittedDataHandler
  1580  004C  083C               	movf	??_TransmittedDataHandler,w
  1581  004D  00AE               	movwf	strstr@s2
  1582  004E  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1583  004F  120A  158A  2688  120A  118A  	fcall	_strstr
  1584  0054  3A00               	xorlw	0
  1585  0055  1903               	skipnz
  1586  0056  2873               	goto	l2094
  1587  0057  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1588  005C  3A06               	xorlw	6
  1589  005D  1D03               	skipz
  1590  005E  2873               	goto	l2094
  1591                           
  1592                           ;Main Card V10.0.c: 223: {
  1593                           ;Main Card V10.0.c: 224: intBlinkCycle = 1;
  1594  005F  3001               	movlw	1
  1595  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0062  00E8               	movwf	_intBlinkCycle
  1598  0063  3000               	movlw	0
  1599  0064  00E9               	movwf	_intBlinkCycle+1
  1600                           
  1601                           ;Main Card V10.0.c: 225: intBlinkCounter = 0;
  1602  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1603  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1604  0067  01B1               	clrf	_intBlinkCounter^(0+128)
  1605  0068  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1606                           
  1607                           ;Main Card V10.0.c: 227: TransmittString("N1STARTED");
  1608  0069  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1609  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1610  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1611  006C  00B5               	movwf	TransmittString@dataString
  1612  006D  3080               	movlw	128
  1613  006E  00B6               	movwf	TransmittString@dataString+1
  1614  006F  120A  118A  241D   	fcall	_TransmittString
  1615                           
  1616                           ;Main Card V10.0.c: 228: }
  1617  0072  0008               	return
  1618  0073                     l2094:	
  1619                           
  1620                           ;Main Card V10.0.c: 229: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1621  0073  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1622  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0076  00BC               	movwf	??_TransmittedDataHandler
  1625  0077  083C               	movf	??_TransmittedDataHandler,w
  1626  0078  00AE               	movwf	strstr@s2
  1627  0079  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1628  007A  120A  158A  2688  120A  118A  	fcall	_strstr
  1629  007F  3A00               	xorlw	0
  1630  0080  1903               	skipnz
  1631  0081  289E               	goto	l2104
  1632  0082  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1633  0087  3A07               	xorlw	7
  1634  0088  1D03               	skipz
  1635  0089  289E               	goto	l2104
  1636                           
  1637                           ;Main Card V10.0.c: 230: {
  1638                           ;Main Card V10.0.c: 231: intBlinkCycle = 1;
  1639  008A  3001               	movlw	1
  1640  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1641  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1642  008D  00E8               	movwf	_intBlinkCycle
  1643  008E  3000               	movlw	0
  1644  008F  00E9               	movwf	_intBlinkCycle+1
  1645                           
  1646                           ;Main Card V10.0.c: 232: intBlinkCounter = 0;
  1647  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1648  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1649  0092  01B1               	clrf	_intBlinkCounter^(0+128)
  1650  0093  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1651                           
  1652                           ;Main Card V10.0.c: 234: TransmittString("N2STARTED");
  1653  0094  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1654  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1655  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1656  0097  00B5               	movwf	TransmittString@dataString
  1657  0098  3080               	movlw	128
  1658  0099  00B6               	movwf	TransmittString@dataString+1
  1659  009A  120A  118A  241D   	fcall	_TransmittString
  1660                           
  1661                           ;Main Card V10.0.c: 235: }
  1662  009D  0008               	return
  1663  009E                     l2104:	
  1664                           
  1665                           ;Main Card V10.0.c: 236: else if((strstr(TransmittedString, "N1STARTED")) && (OperationM
      +                          ode() == 4))
  1666  009E  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1667  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1668  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1669  00A1  00BC               	movwf	??_TransmittedDataHandler
  1670  00A2  083C               	movf	??_TransmittedDataHandler,w
  1671  00A3  00AE               	movwf	strstr@s2
  1672  00A4  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1673  00A5  120A  158A  2688  120A  118A  	fcall	_strstr
  1674  00AA  3A00               	xorlw	0
  1675  00AB  1903               	skipnz
  1676  00AC  28C0               	goto	l2112
  1677  00AD  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1678  00B2  3A04               	xorlw	4
  1679  00B3  1D03               	skipz
  1680  00B4  28C0               	goto	l2112
  1681                           
  1682                           ;Main Card V10.0.c: 237: {
  1683                           ;Main Card V10.0.c: 238: intBlinkCycle = 1;
  1684  00B5  3001               	movlw	1
  1685  00B6  1283               	bcf	3,5	;RP0=0, select bank0
  1686  00B7  1303               	bcf	3,6	;RP1=0, select bank0
  1687  00B8  00E8               	movwf	_intBlinkCycle
  1688  00B9  3000               	movlw	0
  1689  00BA  00E9               	movwf	_intBlinkCycle+1
  1690                           
  1691                           ;Main Card V10.0.c: 239: intBlinkCounter = 0;
  1692  00BB  1683               	bsf	3,5	;RP0=1, select bank1
  1693  00BC  1303               	bcf	3,6	;RP1=0, select bank1
  1694  00BD  01B1               	clrf	_intBlinkCounter^(0+128)
  1695  00BE  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1696                           
  1697                           ;Main Card V10.0.c: 241: }
  1698  00BF  0008               	return
  1699  00C0                     l2112:	
  1700                           
  1701                           ;Main Card V10.0.c: 242: else if((strstr(TransmittedString, "N2STARTED")) && (OperationM
      +                          ode() == 5))
  1702  00C0  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1703  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1704  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1705  00C3  00BC               	movwf	??_TransmittedDataHandler
  1706  00C4  083C               	movf	??_TransmittedDataHandler,w
  1707  00C5  00AE               	movwf	strstr@s2
  1708  00C6  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1709  00C7  120A  158A  2688  120A  118A  	fcall	_strstr
  1710  00CC  3A00               	xorlw	0
  1711  00CD  1903               	skipnz
  1712  00CE  28E2               	goto	l2120
  1713  00CF  120A  158A  23A4  120A  118A  	fcall	_OperationMode
  1714  00D4  3A05               	xorlw	5
  1715  00D5  1D03               	skipz
  1716  00D6  28E2               	goto	l2120
  1717                           
  1718                           ;Main Card V10.0.c: 243: {
  1719                           ;Main Card V10.0.c: 244: intBlinkCycle = 1;
  1720  00D7  3001               	movlw	1
  1721  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1722  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1723  00DA  00E8               	movwf	_intBlinkCycle
  1724  00DB  3000               	movlw	0
  1725  00DC  00E9               	movwf	_intBlinkCycle+1
  1726                           
  1727                           ;Main Card V10.0.c: 245: intBlinkCounter = 0;
  1728  00DD  1683               	bsf	3,5	;RP0=1, select bank1
  1729  00DE  1303               	bcf	3,6	;RP1=0, select bank1
  1730  00DF  01B1               	clrf	_intBlinkCounter^(0+128)
  1731  00E0  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1732                           
  1733                           ;Main Card V10.0.c: 247: }
  1734  00E1  0008               	return
  1735  00E2                     l2120:	
  1736                           
  1737                           ;Main Card V10.0.c: 248: else if((strstr(TransmittedString,"FLASHL")))
  1738  00E2  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1739  00E3  1283               	bcf	3,5	;RP0=0, select bank0
  1740  00E4  1303               	bcf	3,6	;RP1=0, select bank0
  1741  00E5  00BC               	movwf	??_TransmittedDataHandler
  1742  00E6  083C               	movf	??_TransmittedDataHandler,w
  1743  00E7  00AE               	movwf	strstr@s2
  1744  00E8  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1745  00E9  120A  158A  2688  120A  118A  	fcall	_strstr
  1746  00EE  3A00               	xorlw	0
  1747  00EF  1903               	skipnz
  1748  00F0  2908               	goto	l2128
  1749                           
  1750                           ;Main Card V10.0.c: 249: {
  1751                           ;Main Card V10.0.c: 250: PORTCbits.RC2 = 1;
  1752  00F1  1283               	bcf	3,5	;RP0=0, select bank0
  1753  00F2  1303               	bcf	3,6	;RP1=0, select bank0
  1754  00F3  1507               	bsf	7,2	;volatile
  1755                           
  1756                           ;Main Card V10.0.c: 251: DelayDs(10);
  1757  00F4  300A               	movlw	10
  1758  00F5  00A0               	movwf	DelayDs@cnt
  1759  00F6  3000               	movlw	0
  1760  00F7  00A1               	movwf	DelayDs@cnt+1
  1761  00F8  120A  158A  24D9  120A  118A  	fcall	_DelayDs
  1762                           
  1763                           ;Main Card V10.0.c: 252: PORTCbits.RC2 = 0;
  1764  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1765  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1766  00FF  1107               	bcf	7,2	;volatile
  1767                           
  1768                           ;Main Card V10.0.c: 253: DelayDs(5);
  1769  0100  3005               	movlw	5
  1770  0101  00A0               	movwf	DelayDs@cnt
  1771  0102  3000               	movlw	0
  1772  0103  00A1               	movwf	DelayDs@cnt+1
  1773  0104  120A  158A  24D9   	fcall	_DelayDs
  1774                           
  1775                           ;Main Card V10.0.c: 254: }
  1776  0107  0008               	return
  1777  0108                     l2128:	
  1778                           
  1779                           ;Main Card V10.0.c: 255: else if((strstr(TransmittedString,"FLASHB")))
  1780  0108  3088               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1781  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1782  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1783  010B  00BC               	movwf	??_TransmittedDataHandler
  1784  010C  083C               	movf	??_TransmittedDataHandler,w
  1785  010D  00AE               	movwf	strstr@s2
  1786  010E  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1787  010F  120A  158A  2688  120A  118A  	fcall	_strstr
  1788  0114  3A00               	xorlw	0
  1789  0115  1903               	skipnz
  1790  0116  292E               	goto	l2136
  1791                           
  1792                           ;Main Card V10.0.c: 256: {
  1793                           ;Main Card V10.0.c: 257: PORTCbits.RC1 = 1;
  1794  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1795  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1796  0119  1487               	bsf	7,1	;volatile
  1797                           
  1798                           ;Main Card V10.0.c: 258: DelayDs(10);
  1799  011A  300A               	movlw	10
  1800  011B  00A0               	movwf	DelayDs@cnt
  1801  011C  3000               	movlw	0
  1802  011D  00A1               	movwf	DelayDs@cnt+1
  1803  011E  120A  158A  24D9  120A  118A  	fcall	_DelayDs
  1804                           
  1805                           ;Main Card V10.0.c: 259: PORTCbits.RC1 = 0;
  1806  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1807  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1808  0125  1087               	bcf	7,1	;volatile
  1809                           
  1810                           ;Main Card V10.0.c: 260: DelayDs(5);
  1811  0126  3005               	movlw	5
  1812  0127  00A0               	movwf	DelayDs@cnt
  1813  0128  3000               	movlw	0
  1814  0129  00A1               	movwf	DelayDs@cnt+1
  1815  012A  120A  158A  24D9   	fcall	_DelayDs
  1816                           
  1817                           ;Main Card V10.0.c: 261: }
  1818  012D  0008               	return
  1819  012E                     l2136:	
  1820                           
  1821                           ;Main Card V10.0.c: 262: else if((strstr(TransmittedString,"SENSVAL")))
  1822  012E  3079               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1823  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1824  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1825  0131  00BC               	movwf	??_TransmittedDataHandler
  1826  0132  083C               	movf	??_TransmittedDataHandler,w
  1827  0133  00AE               	movwf	strstr@s2
  1828  0134  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1829  0135  120A  158A  2688  120A  118A  	fcall	_strstr
  1830  013A  3A00               	xorlw	0
  1831  013B  1903               	skipnz
  1832  013C  2950               	goto	l2142
  1833                           
  1834                           ;Main Card V10.0.c: 263: {
  1835                           ;Main Card V10.0.c: 264: unsigned char slask[8];
  1836                           ;Main Card V10.0.c: 265: slask[0] = AnalogValue(0);
  1837  013D  3000               	movlw	0
  1838  013E  120A  158A  2521  120A  118A  	fcall	_AnalogValue
  1839  0143  1283               	bcf	3,5	;RP0=0, select bank0
  1840  0144  1303               	bcf	3,6	;RP1=0, select bank0
  1841  0145  00BC               	movwf	??_TransmittedDataHandler
  1842  0146  083C               	movf	??_TransmittedDataHandler,w
  1843  0147  00BD               	movwf	TransmittedDataHandler@slask
  1844                           
  1845                           ;Main Card V10.0.c: 266: TransmittString(slask);
  1846  0148  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1847  0149  00B5               	movwf	TransmittString@dataString
  1848  014A  3000               	movlw	0
  1849  014B  00B6               	movwf	TransmittString@dataString+1
  1850  014C  120A  118A  241D   	fcall	_TransmittString
  1851                           
  1852                           ;Main Card V10.0.c: 267: }
  1853  014F  0008               	return
  1854  0150                     l2142:	
  1855                           
  1856                           ;Main Card V10.0.c: 268: else if((strstr(TransmittedString,"POTVAL")))
  1857  0150  308F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1858  0151  1283               	bcf	3,5	;RP0=0, select bank0
  1859  0152  1303               	bcf	3,6	;RP1=0, select bank0
  1860  0153  00BC               	movwf	??_TransmittedDataHandler
  1861  0154  083C               	movf	??_TransmittedDataHandler,w
  1862  0155  00AE               	movwf	strstr@s2
  1863  0156  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1864  0157  120A  158A  2688  120A  118A  	fcall	_strstr
  1865  015C  3A00               	xorlw	0
  1866  015D  1903               	skipnz
  1867  015E  2972               	goto	l2148
  1868                           
  1869                           ;Main Card V10.0.c: 269: {
  1870                           ;Main Card V10.0.c: 270: unsigned char slask[8];
  1871                           ;Main Card V10.0.c: 271: slask[0] = AnalogValue(3);
  1872  015F  3003               	movlw	3
  1873  0160  120A  158A  2521  120A  118A  	fcall	_AnalogValue
  1874  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0167  00BC               	movwf	??_TransmittedDataHandler
  1877  0168  083C               	movf	??_TransmittedDataHandler,w
  1878  0169  00C5               	movwf	TransmittedDataHandler@slask_705
  1879                           
  1880                           ;Main Card V10.0.c: 272: TransmittString(slask);
  1881  016A  3045               	movlw	(low (TransmittedDataHandler@slask_705| 0))& (0+255)
  1882  016B  00B5               	movwf	TransmittString@dataString
  1883  016C  3000               	movlw	0
  1884  016D  00B6               	movwf	TransmittString@dataString+1
  1885  016E  120A  118A  241D   	fcall	_TransmittString
  1886                           
  1887                           ;Main Card V10.0.c: 273: }
  1888  0171  0008               	return
  1889  0172                     l2148:	
  1890                           
  1891                           ;Main Card V10.0.c: 274: else if((strstr(TransmittedString,"DARKCALC")))
  1892  0172  3058               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1893  0173  1283               	bcf	3,5	;RP0=0, select bank0
  1894  0174  1303               	bcf	3,6	;RP1=0, select bank0
  1895  0175  00BC               	movwf	??_TransmittedDataHandler
  1896  0176  083C               	movf	??_TransmittedDataHandler,w
  1897  0177  00AE               	movwf	strstr@s2
  1898  0178  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1899  0179  120A  158A  2688  120A  118A  	fcall	_strstr
  1900  017E  3A00               	xorlw	0
  1901  017F  1903               	skipnz
  1902  0180  299D               	goto	l2158
  1903                           
  1904                           ;Main Card V10.0.c: 275: {
  1905                           ;Main Card V10.0.c: 276: DarknessCheck();
  1906  0181  120A  158A  254A  120A  118A  	fcall	_DarknessCheck
  1907                           
  1908                           ;Main Card V10.0.c: 277: if(bDark)
  1909  0186  1283               	bcf	3,5	;RP0=0, select bank0
  1910  0187  1303               	bcf	3,6	;RP1=0, select bank0
  1911  0188  086C               	movf	_bDark,w
  1912  0189  1903               	btfsc	3,2
  1913  018A  2993               	goto	l2156
  1914                           
  1915                           ;Main Card V10.0.c: 278: TransmittString("It's Dark    ");
  1916  018B  3036               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1917  018C  00B5               	movwf	TransmittString@dataString
  1918  018D  3080               	movlw	128
  1919  018E  00B6               	movwf	TransmittString@dataString+1
  1920  018F  120A  118A  241D   	fcall	_TransmittString
  1921  0192  0008               	return
  1922  0193                     l2156:	
  1923                           
  1924                           ;Main Card V10.0.c: 279: else
  1925                           ;Main Card V10.0.c: 280: TransmittString("Not Dark     ");
  1926  0193  3028               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1927  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1928  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1929  0196  00B5               	movwf	TransmittString@dataString
  1930  0197  3080               	movlw	128
  1931  0198  00B6               	movwf	TransmittString@dataString+1
  1932  0199  120A  118A  241D   	fcall	_TransmittString
  1933                           
  1934                           ;Main Card V10.0.c: 281: }
  1935  019C  0008               	return
  1936  019D                     l2158:	
  1937                           
  1938                           ;Main Card V10.0.c: 282: else if((strstr(TransmittedString,"STATE?")))
  1939  019D  3081               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  1940  019E  1283               	bcf	3,5	;RP0=0, select bank0
  1941  019F  1303               	bcf	3,6	;RP1=0, select bank0
  1942  01A0  00BC               	movwf	??_TransmittedDataHandler
  1943  01A1  083C               	movf	??_TransmittedDataHandler,w
  1944  01A2  00AE               	movwf	strstr@s2
  1945  01A3  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1946  01A4  120A  158A  2688  120A  118A  	fcall	_strstr
  1947  01A9  3A00               	xorlw	0
  1948  01AA  1903               	skipnz
  1949  01AB  29C3               	goto	l2166
  1950                           
  1951                           ;Main Card V10.0.c: 283: {
  1952                           ;Main Card V10.0.c: 284: if(bValueFromPot == TRUE)
  1953  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  1954  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  1955  01AE  036F               	decf	_bValueFromPot,w
  1956  01AF  1D03               	btfss	3,2
  1957  01B0  29B9               	goto	l2164
  1958                           
  1959                           ;Main Card V10.0.c: 285: TransmittString("Pot");
  1960  01B1  30AC               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1961  01B2  00B5               	movwf	TransmittString@dataString
  1962  01B3  3080               	movlw	128
  1963  01B4  00B6               	movwf	TransmittString@dataString+1
  1964  01B5  120A  118A  241D   	fcall	_TransmittString
  1965  01B8  0008               	return
  1966  01B9                     l2164:	
  1967                           
  1968                           ;Main Card V10.0.c: 286: else
  1969                           ;Main Card V10.0.c: 287: TransmittString("PIC");
  1970  01B9  30A8               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  1971  01BA  1283               	bcf	3,5	;RP0=0, select bank0
  1972  01BB  1303               	bcf	3,6	;RP1=0, select bank0
  1973  01BC  00B5               	movwf	TransmittString@dataString
  1974  01BD  3080               	movlw	128
  1975  01BE  00B6               	movwf	TransmittString@dataString+1
  1976  01BF  120A  118A  241D   	fcall	_TransmittString
  1977                           
  1978                           ;Main Card V10.0.c: 289: }
  1979  01C2  0008               	return
  1980  01C3                     l2166:	
  1981                           
  1982                           ;Main Card V10.0.c: 290: else if((strstr(TransmittedString,"CHSTATE")))
  1983  01C3  3061               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  1984  01C4  1283               	bcf	3,5	;RP0=0, select bank0
  1985  01C5  1303               	bcf	3,6	;RP1=0, select bank0
  1986  01C6  00BC               	movwf	??_TransmittedDataHandler
  1987  01C7  083C               	movf	??_TransmittedDataHandler,w
  1988  01C8  00AE               	movwf	strstr@s2
  1989  01C9  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1990  01CA  120A  158A  2688  120A  118A  	fcall	_strstr
  1991  01CF  3A00               	xorlw	0
  1992  01D0  1903               	skipnz
  1993  01D1  29DC               	goto	l2172
  1994                           
  1995                           ;Main Card V10.0.c: 291: {
  1996                           ;Main Card V10.0.c: 292: if(bValueFromPot== TRUE)
  1997  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1998  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1999  01D4  036F               	decf	_bValueFromPot,w
  2000  01D5  1D03               	btfss	3,2
  2001  01D6  29D9               	goto	l229
  2002                           
  2003                           ;Main Card V10.0.c: 293: bValueFromPot= FALSE;
  2004  01D7  01EF               	clrf	_bValueFromPot
  2005  01D8  0008               	return
  2006  01D9                     l229:	
  2007                           
  2008                           ;Main Card V10.0.c: 294: else
  2009                           ;Main Card V10.0.c: 295: bValueFromPot=TRUE;
  2010  01D9  01EF               	clrf	_bValueFromPot
  2011  01DA  0AEF               	incf	_bValueFromPot,f
  2012                           
  2013                           ;Main Card V10.0.c: 296: }
  2014  01DB  0008               	return
  2015  01DC                     l2172:	
  2016                           
  2017                           ;Main Card V10.0.c: 298: else if((strstr(TransmittedString,"RMDV")))
  2018  01DC  30A3               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2019  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  2020  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  2021  01DF  00BC               	movwf	??_TransmittedDataHandler
  2022  01E0  083C               	movf	??_TransmittedDataHandler,w
  2023  01E1  00AE               	movwf	strstr@s2
  2024  01E2  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2025  01E3  120A  158A  2688  120A  118A  	fcall	_strstr
  2026  01E8  3A00               	xorlw	0
  2027  01E9  1903               	skipnz
  2028  01EA  29FE               	goto	l2178
  2029                           
  2030                           ;Main Card V10.0.c: 299: {
  2031                           ;Main Card V10.0.c: 300: unsigned char slask[8];
  2032                           ;Main Card V10.0.c: 301: slask[0] = eeprom_read(addressDarknessValue);
  2033  01EB  087C               	movf	_addressDarknessValue,w
  2034  01EC  120A  158A  24FD  120A  118A  	fcall	_eeprom_read
  2035  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  2036  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  2037  01F3  00BC               	movwf	??_TransmittedDataHandler
  2038  01F4  083C               	movf	??_TransmittedDataHandler,w
  2039  01F5  00CD               	movwf	TransmittedDataHandler@slask_714
  2040                           
  2041                           ;Main Card V10.0.c: 302: TransmittString(slask);
  2042  01F6  304D               	movlw	(low (TransmittedDataHandler@slask_714| 0))& (0+255)
  2043  01F7  00B5               	movwf	TransmittString@dataString
  2044  01F8  3000               	movlw	0
  2045  01F9  00B6               	movwf	TransmittString@dataString+1
  2046  01FA  120A  118A  241D   	fcall	_TransmittString
  2047                           
  2048                           ;Main Card V10.0.c: 304: }
  2049  01FD  0008               	return
  2050  01FE                     l2178:	
  2051                           
  2052                           ;Main Card V10.0.c: 306: else if((strstr(TransmittedString,"SETDV")))
  2053  01FE  309D               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2054  01FF  1283               	bcf	3,5	;RP0=0, select bank0
  2055  0200  1303               	bcf	3,6	;RP1=0, select bank0
  2056  0201  00BC               	movwf	??_TransmittedDataHandler
  2057  0202  083C               	movf	??_TransmittedDataHandler,w
  2058  0203  00AE               	movwf	strstr@s2
  2059  0204  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2060  0205  120A  158A  2688  120A  118A  	fcall	_strstr
  2061  020A  3A00               	xorlw	0
  2062  020B  1903               	skipnz
  2063  020C  0008               	return
  2064                           
  2065                           ;Main Card V10.0.c: 307: {
  2066                           ;Main Card V10.0.c: 309: int value;
  2067                           ;Main Card V10.0.c: 310: unsigned char slask[8];
  2068                           ;Main Card V10.0.c: 311: value = atoi(&TransmittedString[6]);
  2069  020D  30C0               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2070  020E  120A  118A  273C  120A  118A  	fcall	_atoi
  2071  0213  1283               	bcf	3,5	;RP0=0, select bank0
  2072  0214  1303               	bcf	3,6	;RP1=0, select bank0
  2073  0215  0827               	movf	?_atoi+1,w
  2074  0216  00DE               	movwf	TransmittedDataHandler@value+1
  2075  0217  0826               	movf	?_atoi,w
  2076  0218  00DD               	movwf	TransmittedDataHandler@value
  2077                           
  2078                           ;Main Card V10.0.c: 312: slask[0] = (unsigned char)value;
  2079  0219  085D               	movf	TransmittedDataHandler@value,w
  2080  021A  00BC               	movwf	??_TransmittedDataHandler
  2081  021B  083C               	movf	??_TransmittedDataHandler,w
  2082  021C  00D5               	movwf	TransmittedDataHandler@slask_717
  2083                           
  2084                           ;Main Card V10.0.c: 313: TransmittString(slask);
  2085  021D  3055               	movlw	(low (TransmittedDataHandler@slask_717| 0))& (0+255)
  2086  021E  00B5               	movwf	TransmittString@dataString
  2087  021F  3000               	movlw	0
  2088  0220  00B6               	movwf	TransmittString@dataString+1
  2089  0221  120A  118A  241D  120A  118A  	fcall	_TransmittString
  2090                           
  2091                           ;Main Card V10.0.c: 314: eeprom_write(addressDarknessValue,(unsigned char)value);
  2092  0226  1283               	bcf	3,5	;RP0=0, select bank0
  2093  0227  1303               	bcf	3,6	;RP1=0, select bank0
  2094  0228  085D               	movf	TransmittedDataHandler@value,w
  2095  0229  00BC               	movwf	??_TransmittedDataHandler
  2096  022A  083C               	movf	??_TransmittedDataHandler,w
  2097  022B  00A0               	movwf	eeprom_write@value
  2098  022C  087C               	movf	_addressDarknessValue,w
  2099  022D  120A  158A  259F   	fcall	_eeprom_write
  2100  0230  0008               	return
  2101  0231                     __end_of_TransmittedDataHandler:	
  2102                           
  2103                           	psect	text4
  2104  0E88                     __ptext4:	
  2105 ;; *************** function _strstr *****************
  2106 ;; Defined at:
  2107 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strstr.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  s1              1    wreg     PTR const unsigned char 
  2110 ;;		 -> NULL(0), TransmittedString(30), 
  2111 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2112 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2113 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2114 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2115 ;;		 -> STR_1(8), 
  2116 ;; Auto vars:     Size  Location     Type
  2117 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2118 ;;		 -> NULL(0), TransmittedString(30), 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  1    wreg      PTR unsigned char 
  2121 ;; Registers used:
  2122 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2128 ;;      Params:         0       1       0       0       0
  2129 ;;      Locals:         0       1       0       0       0
  2130 ;;      Temps:          0       3       0       0       0
  2131 ;;      Totals:         0       5       0       0       0
  2132 ;;Total ram usage:        5 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    3
  2135 ;; This function calls:
  2136 ;;		_strchr
  2137 ;;		_strlen
  2138 ;;		_strncmp
  2139 ;; This function is called by:
  2140 ;;		_TransmittedDataHandler
  2141 ;; This function uses a non-reentrant model
  2142 ;;
  2143                           
  2144                           
  2145                           ;psect for function _strstr
  2146  0E88                     _strstr:	
  2147                           
  2148                           ;incstack = 0
  2149                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2150                           ;strstr@s1 stored from wreg
  2151  0E88  1283               	bcf	3,5	;RP0=0, select bank0
  2152  0E89  1303               	bcf	3,6	;RP1=0, select bank0
  2153  0E8A  00B2               	movwf	strstr@s1
  2154  0E8B  2EC3               	goto	l1932
  2155  0E8C                     l1924:	
  2156  0E8C  082E               	movf	strstr@s2,w
  2157  0E8D  00AF               	movwf	??_strstr
  2158  0E8E  082F               	movf	??_strstr,w
  2159  0E8F  00A8               	movwf	strncmp@s2
  2160  0E90  082E               	movf	strstr@s2,w
  2161  0E91  120A  158A  2573  120A  158A  	fcall	_strlen
  2162  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  2163  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  2164  0E98  0821               	movf	?_strlen+1,w
  2165  0E99  00AA               	movwf	strncmp@len+1
  2166  0E9A  0820               	movf	?_strlen,w
  2167  0E9B  00A9               	movwf	strncmp@len
  2168  0E9C  0832               	movf	strstr@s1,w
  2169  0E9D  120A  158A  2644  120A  158A  	fcall	_strncmp
  2170  0EA2  1283               	bcf	3,5	;RP0=0, select bank0
  2171  0EA3  1303               	bcf	3,6	;RP1=0, select bank0
  2172  0EA4  0828               	movf	?_strncmp,w
  2173  0EA5  0429               	iorwf	?_strncmp+1,w
  2174  0EA6  1D03               	btfss	3,2
  2175  0EA7  2EAA               	goto	l1930
  2176  0EA8  0832               	movf	strstr@s1,w
  2177  0EA9  0008               	return
  2178  0EAA                     l1930:	
  2179  0EAA  082E               	movf	strstr@s2,w
  2180  0EAB  0084               	movwf	4
  2181  0EAC  120A  118A  260A  120A  158A  	fcall	stringdir
  2182  0EB1  00AF               	movwf	??_strstr
  2183  0EB2  01B0               	clrf	??_strstr+1
  2184  0EB3  082F               	movf	??_strstr,w
  2185  0EB4  00A0               	movwf	strchr@chr
  2186  0EB5  0830               	movf	??_strstr+1,w
  2187  0EB6  00A1               	movwf	strchr@chr+1
  2188  0EB7  0832               	movf	strstr@s1,w
  2189  0EB8  3E01               	addlw	1
  2190  0EB9  120A  158A  2404  120A  158A  	fcall	_strchr
  2191  0EBE  1283               	bcf	3,5	;RP0=0, select bank0
  2192  0EBF  1303               	bcf	3,6	;RP1=0, select bank0
  2193  0EC0  00B1               	movwf	??_strstr+2
  2194  0EC1  0831               	movf	??_strstr+2,w
  2195  0EC2  00B2               	movwf	strstr@s1
  2196  0EC3                     l1932:	
  2197  0EC3  0832               	movf	strstr@s1,w
  2198  0EC4  1903               	btfsc	3,2
  2199  0EC5  2ECC               	goto	l1936
  2200  0EC6  0832               	movf	strstr@s1,w
  2201  0EC7  0084               	movwf	4
  2202  0EC8  1383               	bcf	3,7	;select IRP bank0
  2203  0EC9  0800               	movf	0,w
  2204  0ECA  1D03               	btfss	3,2
  2205  0ECB  2E8C               	goto	l1924
  2206  0ECC                     l1936:	
  2207  0ECC  3000               	movlw	0
  2208  0ECD  0008               	return
  2209  0ECE                     __end_of_strstr:	
  2210                           
  2211                           	psect	text5
  2212  0E44                     __ptext5:	
  2213 ;; *************** function _strncmp *****************
  2214 ;; Defined at:
  2215 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strncmp.c"
  2216 ;; Parameters:    Size  Location     Type
  2217 ;;  s1              1    wreg     PTR const unsigned char 
  2218 ;;		 -> NULL(0), TransmittedString(30), 
  2219 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2220 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2221 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2222 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2223 ;;		 -> STR_1(8), 
  2224 ;;  len             2    9[BANK0 ] unsigned int 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2227 ;;		 -> NULL(0), TransmittedString(30), 
  2228 ;; Return value:  Size  Location     Type
  2229 ;;                  2    8[BANK0 ] int 
  2230 ;; Registers used:
  2231 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2232 ;; Tracked objects:
  2233 ;;		On entry : 0/0
  2234 ;;		On exit  : 0/0
  2235 ;;		Unchanged: 0/0
  2236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2237 ;;      Params:         0       3       0       0       0
  2238 ;;      Locals:         0       1       0       0       0
  2239 ;;      Temps:          0       2       0       0       0
  2240 ;;      Totals:         0       6       0       0       0
  2241 ;;Total ram usage:        6 bytes
  2242 ;; Hardware stack levels used:    1
  2243 ;; Hardware stack levels required when called:    2
  2244 ;; This function calls:
  2245 ;;		Nothing
  2246 ;; This function is called by:
  2247 ;;		_strstr
  2248 ;; This function uses a non-reentrant model
  2249 ;;
  2250                           
  2251                           
  2252                           ;psect for function _strncmp
  2253  0E44                     _strncmp:	
  2254                           
  2255                           ;incstack = 0
  2256                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2257                           ;strncmp@s1 stored from wreg
  2258  0E44  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0E45  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0E46  00AD               	movwf	strncmp@s1
  2261  0E47                     l916:	
  2262  0E47  3001               	movlw	1
  2263  0E48  02A9               	subwf	strncmp@len,f
  2264  0E49  3000               	movlw	0
  2265  0E4A  1C03               	skipc
  2266  0E4B  03AA               	decf	strncmp@len+1,f
  2267  0E4C  02AA               	subwf	strncmp@len+1,f
  2268  0E4D  0A29               	incf	strncmp@len,w
  2269  0E4E  1903               	btfsc	3,2
  2270  0E4F  0A2A               	incf	strncmp@len+1,w
  2271  0E50  1903               	btfsc	3,2
  2272  0E51  2E85               	goto	l1900
  2273  0E52  082D               	movf	strncmp@s1,w
  2274  0E53  0084               	movwf	4
  2275  0E54  1383               	bcf	3,7	;select IRP bank0
  2276  0E55  0800               	movf	0,w
  2277  0E56  1903               	btfsc	3,2
  2278  0E57  2E66               	goto	l1894
  2279  0E58  0828               	movf	strncmp@s2,w
  2280  0E59  0084               	movwf	4
  2281  0E5A  120A  118A  260A  120A  158A  	fcall	stringdir
  2282  0E5F  00AB               	movwf	??_strncmp
  2283  0E60  082D               	movf	strncmp@s1,w
  2284  0E61  0084               	movwf	4
  2285  0E62  0800               	movf	0,w
  2286  0E63  062B               	xorwf	??_strncmp,w
  2287  0E64  1903               	skipnz
  2288  0E65  2E7C               	goto	l1898
  2289  0E66                     l1894:	
  2290  0E66  0828               	movf	strncmp@s2,w
  2291  0E67  0084               	movwf	4
  2292  0E68  120A  118A  260A   	fcall	stringdir
  2293  0E6B  00AB               	movwf	??_strncmp
  2294  0E6C  01AC               	clrf	??_strncmp+1
  2295  0E6D  09AB               	comf	??_strncmp,f
  2296  0E6E  09AC               	comf	??_strncmp+1,f
  2297  0E6F  0AAB               	incf	??_strncmp,f
  2298  0E70  1903               	skipnz
  2299  0E71  0AAC               	incf	??_strncmp+1,f
  2300  0E72  082D               	movf	strncmp@s1,w
  2301  0E73  0084               	movwf	4
  2302  0E74  0800               	movf	0,w
  2303  0E75  072B               	addwf	??_strncmp,w
  2304  0E76  00A8               	movwf	?_strncmp
  2305  0E77  082C               	movf	??_strncmp+1,w
  2306  0E78  1803               	skipnc
  2307  0E79  0A2C               	incf	??_strncmp+1,w
  2308  0E7A  00A9               	movwf	?_strncmp+1
  2309  0E7B  0008               	return
  2310  0E7C                     l1898:	
  2311  0E7C  3001               	movlw	1
  2312  0E7D  00AB               	movwf	??_strncmp
  2313  0E7E  082B               	movf	??_strncmp,w
  2314  0E7F  07AD               	addwf	strncmp@s1,f
  2315  0E80  3001               	movlw	1
  2316  0E81  00AB               	movwf	??_strncmp
  2317  0E82  082B               	movf	??_strncmp,w
  2318  0E83  07A8               	addwf	strncmp@s2,f
  2319  0E84  2E47               	goto	l916
  2320  0E85                     l1900:	
  2321  0E85  01A8               	clrf	?_strncmp
  2322  0E86  01A9               	clrf	?_strncmp+1
  2323  0E87  0008               	return
  2324  0E88                     __end_of_strncmp:	
  2325                           
  2326                           	psect	text6
  2327  0D73                     __ptext6:	
  2328 ;; *************** function _strlen *****************
  2329 ;; Defined at:
  2330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  2331 ;; Parameters:    Size  Location     Type
  2332 ;;  s               1    wreg     PTR const unsigned char 
  2333 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2334 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2335 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2336 ;;		 -> STR_1(8), 
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2339 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2340 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2341 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2342 ;;		 -> STR_1(8), 
  2343 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2344 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2345 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2346 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2347 ;;		 -> STR_1(8), 
  2348 ;; Return value:  Size  Location     Type
  2349 ;;                  2    0[BANK0 ] unsigned int 
  2350 ;; Registers used:
  2351 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2352 ;; Tracked objects:
  2353 ;;		On entry : 0/0
  2354 ;;		On exit  : 0/0
  2355 ;;		Unchanged: 0/0
  2356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2357 ;;      Params:         0       2       0       0       0
  2358 ;;      Locals:         0       2       0       0       0
  2359 ;;      Temps:          0       4       0       0       0
  2360 ;;      Totals:         0       8       0       0       0
  2361 ;;Total ram usage:        8 bytes
  2362 ;; Hardware stack levels used:    1
  2363 ;; Hardware stack levels required when called:    2
  2364 ;; This function calls:
  2365 ;;		Nothing
  2366 ;; This function is called by:
  2367 ;;		_strstr
  2368 ;; This function uses a non-reentrant model
  2369 ;;
  2370                           
  2371                           
  2372                           ;psect for function _strlen
  2373  0D73                     _strlen:	
  2374                           
  2375                           ;incstack = 0
  2376                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2377                           ;strlen@s stored from wreg
  2378  0D73  1283               	bcf	3,5	;RP0=0, select bank0
  2379  0D74  1303               	bcf	3,6	;RP1=0, select bank0
  2380  0D75  00A6               	movwf	strlen@s
  2381  0D76  0826               	movf	strlen@s,w
  2382  0D77  00A2               	movwf	??_strlen
  2383  0D78  0822               	movf	??_strlen,w
  2384  0D79  00A7               	movwf	strlen@cp
  2385  0D7A                     l1882:	
  2386  0D7A  0827               	movf	strlen@cp,w
  2387  0D7B  0084               	movwf	4
  2388  0D7C  120A  118A  260A  120A  158A  	fcall	stringdir
  2389  0D81  3A00               	xorlw	0
  2390  0D82  1903               	btfsc	3,2
  2391  0D83  2D89               	goto	l1884
  2392  0D84  3001               	movlw	1
  2393  0D85  00A2               	movwf	??_strlen
  2394  0D86  0822               	movf	??_strlen,w
  2395  0D87  07A7               	addwf	strlen@cp,f
  2396  0D88  2D7A               	goto	l1882
  2397  0D89                     l1884:	
  2398  0D89  0826               	movf	strlen@s,w
  2399  0D8A  00A2               	movwf	??_strlen
  2400  0D8B  3080               	movlw	128
  2401  0D8C  00A3               	movwf	??_strlen+1
  2402  0D8D  09A2               	comf	??_strlen,f
  2403  0D8E  09A3               	comf	??_strlen+1,f
  2404  0D8F  0AA2               	incf	??_strlen,f
  2405  0D90  1903               	skipnz
  2406  0D91  0AA3               	incf	??_strlen+1,f
  2407  0D92  0827               	movf	strlen@cp,w
  2408  0D93  00A4               	movwf	??_strlen+2
  2409  0D94  3080               	movlw	128
  2410  0D95  00A5               	movwf	??_strlen+3
  2411  0D96  0822               	movf	??_strlen,w
  2412  0D97  0724               	addwf	??_strlen+2,w
  2413  0D98  00A0               	movwf	?_strlen
  2414  0D99  0823               	movf	??_strlen+1,w
  2415  0D9A  1803               	skipnc
  2416  0D9B  0A23               	incf	??_strlen+1,w
  2417  0D9C  0725               	addwf	??_strlen+3,w
  2418  0D9D  00A1               	movwf	?_strlen+1
  2419  0D9E  0008               	return
  2420  0D9F                     __end_of_strlen:	
  2421                           
  2422                           	psect	text7
  2423  0C04                     __ptext7:	
  2424 ;; *************** function _strchr *****************
  2425 ;; Defined at:
  2426 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strchr.c"
  2427 ;; Parameters:    Size  Location     Type
  2428 ;;  ptr             1    wreg     PTR const unsigned char 
  2429 ;;		 -> NULL(0), TransmittedString(30), 
  2430 ;;  chr             2    0[BANK0 ] int 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2433 ;;		 -> NULL(0), TransmittedString(30), 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      PTR unsigned char 
  2436 ;; Registers used:
  2437 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         0       2       0       0       0
  2444 ;;      Locals:         0       1       0       0       0
  2445 ;;      Temps:          0       0       0       0       0
  2446 ;;      Totals:         0       3       0       0       0
  2447 ;;Total ram usage:        3 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    2
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_strstr
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function _strchr
  2459  0C04                     _strchr:	
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2463                           ;strchr@ptr stored from wreg
  2464  0C04  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0C05  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0C06  00A2               	movwf	strchr@ptr
  2467  0C07                     l904:	
  2468  0C07  0822               	movf	strchr@ptr,w
  2469  0C08  0084               	movwf	4
  2470  0C09  1383               	bcf	3,7	;select IRP bank0
  2471  0C0A  0800               	movf	0,w
  2472  0C0B  0620               	xorwf	strchr@chr,w
  2473  0C0C  1D03               	skipz
  2474  0C0D  2C10               	goto	l1910
  2475  0C0E  0822               	movf	strchr@ptr,w
  2476  0C0F  0008               	return
  2477  0C10                     l1910:	
  2478  0C10  0822               	movf	strchr@ptr,w
  2479  0C11  0084               	movwf	4
  2480  0C12  3001               	movlw	1
  2481  0C13  07A2               	addwf	strchr@ptr,f
  2482  0C14  0800               	movf	0,w
  2483  0C15  1D03               	btfss	3,2
  2484  0C16  2C07               	goto	l904
  2485  0C17  3000               	movlw	0
  2486  0C18  0008               	return
  2487  0C19                     __end_of_strchr:	
  2488                           
  2489                           	psect	text8
  2490  0D9F                     __ptext8:	
  2491 ;; *************** function _eeprom_write *****************
  2492 ;; Defined at:
  2493 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eewrite.c"
  2494 ;; Parameters:    Size  Location     Type
  2495 ;;  addr            1    wreg     unsigned char 
  2496 ;;  value           1    0[BANK0 ] unsigned char 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;  addr            1    2[BANK0 ] unsigned char 
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       1       0       0       0
  2509 ;;      Locals:         0       1       0       0       0
  2510 ;;      Temps:          0       1       0       0       0
  2511 ;;      Totals:         0       3       0       0       0
  2512 ;;Total ram usage:        3 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    2
  2515 ;; This function calls:
  2516 ;;		Nothing
  2517 ;; This function is called by:
  2518 ;;		_TransmittedDataHandler
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _eeprom_write
  2524  0D9F                     _eeprom_write:	
  2525                           
  2526                           ;incstack = 0
  2527                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2528                           ;eeprom_write@addr stored from wreg
  2529  0D9F  1283               	bcf	3,5	;RP0=0, select bank0
  2530  0DA0  1303               	bcf	3,6	;RP1=0, select bank0
  2531  0DA1  00A2               	movwf	eeprom_write@addr
  2532  0DA2                     l422:	
  2533  0DA2  1683               	bsf	3,5	;RP0=1, select bank3
  2534  0DA3  1703               	bsf	3,6	;RP1=1, select bank3
  2535  0DA4  188C               	btfsc	12,1	;volsfr
  2536  0DA5  2DA2               	goto	l422
  2537  0DA6  1283               	bcf	3,5	;RP0=0, select bank0
  2538  0DA7  1303               	bcf	3,6	;RP1=0, select bank0
  2539  0DA8  0822               	movf	eeprom_write@addr,w
  2540  0DA9  1283               	bcf	3,5	;RP0=0, select bank2
  2541  0DAA  1703               	bsf	3,6	;RP1=1, select bank2
  2542  0DAB  008D               	movwf	13	;volatile
  2543  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  2544  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  2545  0DAE  0820               	movf	eeprom_write@value,w
  2546  0DAF  1283               	bcf	3,5	;RP0=0, select bank2
  2547  0DB0  1703               	bsf	3,6	;RP1=1, select bank2
  2548  0DB1  008C               	movwf	12	;volatile
  2549  0DB2  303F               	movlw	63
  2550  0DB3  1283               	bcf	3,5	;RP0=0, select bank0
  2551  0DB4  1303               	bcf	3,6	;RP1=0, select bank0
  2552  0DB5  00A1               	movwf	??_eeprom_write
  2553  0DB6  0821               	movf	??_eeprom_write,w
  2554  0DB7  1683               	bsf	3,5	;RP0=1, select bank3
  2555  0DB8  1703               	bsf	3,6	;RP1=1, select bank3
  2556  0DB9  058C               	andwf	12,f	;volsfr
  2557  0DBA  1283               	bcf	3,5	;RP0=0, select bank0
  2558  0DBB  1303               	bcf	3,6	;RP1=0, select bank0
  2559  0DBC  1003               	bcf	3,0	;volatile
  2560  0DBD  1B8B               	btfsc	11,7	;volatile
  2561  0DBE  1403               	bsf	3,0	;volatile
  2562  0DBF  138B               	bcf	11,7	;volatile
  2563  0DC0  1683               	bsf	3,5	;RP0=1, select bank3
  2564  0DC1  1703               	bsf	3,6	;RP1=1, select bank3
  2565  0DC2  150C               	bsf	12,2	;volsfr
  2566  0DC3  3055               	movlw	85
  2567  0DC4  008D               	movwf	13	;volsfr
  2568  0DC5  30AA               	movlw	170
  2569  0DC6  008D               	movwf	13	;volsfr
  2570  0DC7  148C               	bsf	12,1	;volsfr
  2571  0DC8  110C               	bcf	12,2	;volsfr
  2572  0DC9  1283               	bcf	3,5	;RP0=0, select bank0
  2573  0DCA  1303               	bcf	3,6	;RP1=0, select bank0
  2574  0DCB  1C03               	btfss	3,0	;volatile
  2575  0DCC  0008               	return
  2576  0DCD  178B               	bsf	11,7	;volatile
  2577  0DCE  0008               	return
  2578  0DCF                     __end_of_eeprom_write:	
  2579                           
  2580                           	psect	text9
  2581  073C                     __ptext9:	
  2582 ;; *************** function _atoi *****************
  2583 ;; Defined at:
  2584 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atoi.c"
  2585 ;; Parameters:    Size  Location     Type
  2586 ;;  s               1    wreg     PTR const unsigned char 
  2587 ;;		 -> TransmittedString(30), 
  2588 ;; Auto vars:     Size  Location     Type
  2589 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2590 ;;		 -> TransmittedString(30), 
  2591 ;;  a               2   11[BANK0 ] int 
  2592 ;;  sign            1   10[BANK0 ] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  2    6[BANK0 ] int 
  2595 ;; Registers used:
  2596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2602 ;;      Params:         0       2       0       0       0
  2603 ;;      Locals:         0       4       0       0       0
  2604 ;;      Temps:          0       2       0       0       0
  2605 ;;      Totals:         0       8       0       0       0
  2606 ;;Total ram usage:        8 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    3
  2609 ;; This function calls:
  2610 ;;		___wmul
  2611 ;;		_isdigit
  2612 ;; This function is called by:
  2613 ;;		_TransmittedDataHandler
  2614 ;; This function uses a non-reentrant model
  2615 ;;
  2616                           
  2617                           
  2618                           ;psect for function _atoi
  2619  073C                     _atoi:	
  2620                           
  2621                           ;incstack = 0
  2622                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2623                           ;atoi@s stored from wreg
  2624  073C  1283               	bcf	3,5	;RP0=0, select bank0
  2625  073D  1303               	bcf	3,6	;RP1=0, select bank0
  2626  073E  00AD               	movwf	atoi@s
  2627  073F                     l2004:	
  2628  073F  082D               	movf	atoi@s,w
  2629  0740  0084               	movwf	4
  2630  0741  3020               	movlw	32
  2631  0742  1383               	bcf	3,7	;select IRP bank0
  2632  0743  0600               	xorwf	0,w
  2633  0744  1D03               	btfss	3,2
  2634  0745  2F4B               	goto	l2006
  2635  0746                     l2002:	
  2636  0746  3001               	movlw	1
  2637  0747  00A8               	movwf	??_atoi
  2638  0748  0828               	movf	??_atoi,w
  2639  0749  07AD               	addwf	atoi@s,f
  2640  074A  2F3F               	goto	l2004
  2641  074B                     l2006:	
  2642  074B  082D               	movf	atoi@s,w
  2643  074C  0084               	movwf	4
  2644  074D  3009               	movlw	9
  2645  074E  0600               	xorwf	0,w
  2646  074F  1903               	btfsc	3,2
  2647  0750  2F46               	goto	l2002
  2648  0751  01AB               	clrf	atoi@a
  2649  0752  01AC               	clrf	atoi@a+1
  2650  0753  01AA               	clrf	atoi@sign
  2651  0754  082D               	movf	atoi@s,w
  2652  0755  0084               	movwf	4
  2653  0756  302D               	movlw	45
  2654  0757  0600               	xorwf	0,w
  2655  0758  1D03               	btfss	3,2
  2656  0759  2F5F               	goto	l2014
  2657  075A  3001               	movlw	1
  2658  075B  00A8               	movwf	??_atoi
  2659  075C  0828               	movf	??_atoi,w
  2660  075D  07AA               	addwf	atoi@sign,f
  2661  075E  2F65               	goto	l2020
  2662  075F                     l2014:	
  2663  075F  082D               	movf	atoi@s,w
  2664  0760  0084               	movwf	4
  2665  0761  302B               	movlw	43
  2666  0762  0600               	xorwf	0,w
  2667  0763  1D03               	btfss	3,2
  2668  0764  2F69               	goto	l2022
  2669  0765                     l2020:	
  2670  0765  3001               	movlw	1
  2671  0766  00A8               	movwf	??_atoi
  2672  0767  0828               	movf	??_atoi,w
  2673  0768  07AD               	addwf	atoi@s,f
  2674  0769                     l2022:	
  2675  0769  082D               	movf	atoi@s,w
  2676  076A  0084               	movwf	4
  2677  076B  0800               	movf	0,w
  2678  076C  120A  158A  23E2  120A  118A  	fcall	_isdigit
  2679  0771  1C03               	btfss	3,0
  2680  0772  2F97               	goto	l2024
  2681  0773  1283               	bcf	3,5	;RP0=0, select bank0
  2682  0774  1303               	bcf	3,6	;RP1=0, select bank0
  2683  0775  082C               	movf	atoi@a+1,w
  2684  0776  00A1               	movwf	___wmul@multiplier+1
  2685  0777  082B               	movf	atoi@a,w
  2686  0778  00A0               	movwf	___wmul@multiplier
  2687  0779  300A               	movlw	10
  2688  077A  00A2               	movwf	___wmul@multiplicand
  2689  077B  3000               	movlw	0
  2690  077C  00A3               	movwf	___wmul@multiplicand+1
  2691  077D  120A  158A  24B6  120A  118A  	fcall	___wmul
  2692  0782  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0783  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0784  082D               	movf	atoi@s,w
  2695  0785  0084               	movwf	4
  2696  0786  1383               	bcf	3,7	;select IRP bank0
  2697  0787  0800               	movf	0,w
  2698  0788  0720               	addwf	?___wmul,w
  2699  0789  00A8               	movwf	??_atoi
  2700  078A  0821               	movf	?___wmul+1,w
  2701  078B  1803               	skipnc
  2702  078C  0A21               	incf	?___wmul+1,w
  2703  078D  00A9               	movwf	??_atoi+1
  2704  078E  0828               	movf	??_atoi,w
  2705  078F  3ED0               	addlw	208
  2706  0790  00AB               	movwf	atoi@a
  2707  0791  0829               	movf	??_atoi+1,w
  2708  0792  1803               	skipnc
  2709  0793  3E01               	addlw	1
  2710  0794  3EFF               	addlw	255
  2711  0795  00AC               	movwf	atoi@a+1
  2712  0796  2F65               	goto	l2020
  2713  0797                     l2024:	
  2714  0797  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0798  1303               	bcf	3,6	;RP1=0, select bank0
  2716  0799  082A               	movf	atoi@sign,w
  2717  079A  1903               	btfsc	3,2
  2718  079B  2FA8               	goto	l2030
  2719  079C  092B               	comf	atoi@a,w
  2720  079D  00A8               	movwf	??_atoi
  2721  079E  092C               	comf	atoi@a+1,w
  2722  079F  00A9               	movwf	??_atoi+1
  2723  07A0  0AA8               	incf	??_atoi,f
  2724  07A1  1903               	skipnz
  2725  07A2  0AA9               	incf	??_atoi+1,f
  2726  07A3  0828               	movf	??_atoi,w
  2727  07A4  00A6               	movwf	?_atoi
  2728  07A5  0829               	movf	??_atoi+1,w
  2729  07A6  00A7               	movwf	?_atoi+1
  2730  07A7  0008               	return
  2731  07A8                     l2030:	
  2732  07A8  082C               	movf	atoi@a+1,w
  2733  07A9  00A7               	movwf	?_atoi+1
  2734  07AA  082B               	movf	atoi@a,w
  2735  07AB  00A6               	movwf	?_atoi
  2736  07AC  0008               	return
  2737  07AD                     __end_of_atoi:	
  2738                           
  2739                           	psect	text10
  2740  0BE2                     __ptext10:	
  2741 ;; *************** function _isdigit *****************
  2742 ;; Defined at:
  2743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  c               1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  c               1    1[BANK0 ] unsigned char 
  2748 ;; Return value:  Size  Location     Type
  2749 ;;		None               void
  2750 ;; Registers used:
  2751 ;;		wreg, status,2, status,0
  2752 ;; Tracked objects:
  2753 ;;		On entry : 0/0
  2754 ;;		On exit  : 0/0
  2755 ;;		Unchanged: 0/0
  2756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2757 ;;      Params:         0       0       0       0       0
  2758 ;;      Locals:         0       2       0       0       0
  2759 ;;      Temps:          0       0       0       0       0
  2760 ;;      Totals:         0       2       0       0       0
  2761 ;;Total ram usage:        2 bytes
  2762 ;; Hardware stack levels used:    1
  2763 ;; Hardware stack levels required when called:    2
  2764 ;; This function calls:
  2765 ;;		Nothing
  2766 ;; This function is called by:
  2767 ;;		_atoi
  2768 ;; This function uses a non-reentrant model
  2769 ;;
  2770                           
  2771                           
  2772                           ;psect for function _isdigit
  2773  0BE2                     _isdigit:	
  2774                           
  2775                           ;incstack = 0
  2776                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2777                           ;isdigit@c stored from wreg
  2778  0BE2  1283               	bcf	3,5	;RP0=0, select bank0
  2779  0BE3  1303               	bcf	3,6	;RP1=0, select bank0
  2780  0BE4  00A1               	movwf	isdigit@c
  2781  0BE5  01A0               	clrf	_isdigit$1089
  2782  0BE6  303A               	movlw	58
  2783  0BE7  0221               	subwf	isdigit@c,w
  2784  0BE8  1803               	skipnc
  2785  0BE9  2BF0               	goto	l1874
  2786  0BEA  3030               	movlw	48
  2787  0BEB  0221               	subwf	isdigit@c,w
  2788  0BEC  1C03               	skipc
  2789  0BED  2BF0               	goto	l1874
  2790  0BEE  01A0               	clrf	_isdigit$1089
  2791  0BEF  0AA0               	incf	_isdigit$1089,f
  2792  0BF0                     l1874:	
  2793  0BF0  0C20               	rrf	_isdigit$1089,w
  2794  0BF1  0008               	return
  2795  0BF2                     __end_of_isdigit:	
  2796                           
  2797                           	psect	text11
  2798  0CB6                     __ptext11:	
  2799 ;; *************** function ___wmul *****************
  2800 ;; Defined at:
  2801 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2802 ;; Parameters:    Size  Location     Type
  2803 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2804 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2805 ;; Auto vars:     Size  Location     Type
  2806 ;;  product         2    4[BANK0 ] unsigned int 
  2807 ;; Return value:  Size  Location     Type
  2808 ;;                  2    0[BANK0 ] unsigned int 
  2809 ;; Registers used:
  2810 ;;		wreg, status,2, status,0
  2811 ;; Tracked objects:
  2812 ;;		On entry : 0/0
  2813 ;;		On exit  : 0/0
  2814 ;;		Unchanged: 0/0
  2815 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2816 ;;      Params:         0       4       0       0       0
  2817 ;;      Locals:         0       2       0       0       0
  2818 ;;      Temps:          0       0       0       0       0
  2819 ;;      Totals:         0       6       0       0       0
  2820 ;;Total ram usage:        6 bytes
  2821 ;; Hardware stack levels used:    1
  2822 ;; Hardware stack levels required when called:    2
  2823 ;; This function calls:
  2824 ;;		Nothing
  2825 ;; This function is called by:
  2826 ;;		_atoi
  2827 ;; This function uses a non-reentrant model
  2828 ;;
  2829                           
  2830                           
  2831                           ;psect for function ___wmul
  2832  0CB6                     ___wmul:	
  2833                           
  2834                           ;incstack = 0
  2835                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2836  0CB6  1283               	bcf	3,5	;RP0=0, select bank0
  2837  0CB7  1303               	bcf	3,6	;RP1=0, select bank0
  2838  0CB8  01A4               	clrf	___wmul@product
  2839  0CB9  01A5               	clrf	___wmul@product+1
  2840  0CBA                     l1854:	
  2841  0CBA  1C20               	btfss	___wmul@multiplier,0
  2842  0CBB  2CC2               	goto	l512
  2843  0CBC  0822               	movf	___wmul@multiplicand,w
  2844  0CBD  07A4               	addwf	___wmul@product,f
  2845  0CBE  1803               	skipnc
  2846  0CBF  0AA5               	incf	___wmul@product+1,f
  2847  0CC0  0823               	movf	___wmul@multiplicand+1,w
  2848  0CC1  07A5               	addwf	___wmul@product+1,f
  2849  0CC2                     l512:	
  2850  0CC2  3001               	movlw	1
  2851  0CC3                     u1245:	
  2852  0CC3  1003               	clrc
  2853  0CC4  0DA2               	rlf	___wmul@multiplicand,f
  2854  0CC5  0DA3               	rlf	___wmul@multiplicand+1,f
  2855  0CC6  3EFF               	addlw	-1
  2856  0CC7  1D03               	skipz
  2857  0CC8  2CC3               	goto	u1245
  2858  0CC9  3001               	movlw	1
  2859  0CCA                     u1255:	
  2860  0CCA  1003               	clrc
  2861  0CCB  0CA1               	rrf	___wmul@multiplier+1,f
  2862  0CCC  0CA0               	rrf	___wmul@multiplier,f
  2863  0CCD  3EFF               	addlw	-1
  2864  0CCE  1D03               	skipz
  2865  0CCF  2CCA               	goto	u1255
  2866  0CD0  0820               	movf	___wmul@multiplier,w
  2867  0CD1  0421               	iorwf	___wmul@multiplier+1,w
  2868  0CD2  1D03               	btfss	3,2
  2869  0CD3  2CBA               	goto	l1854
  2870  0CD4  0825               	movf	___wmul@product+1,w
  2871  0CD5  00A1               	movwf	?___wmul+1
  2872  0CD6  0824               	movf	___wmul@product,w
  2873  0CD7  00A0               	movwf	?___wmul
  2874  0CD8  0008               	return
  2875  0CD9                     __end_of___wmul:	
  2876                           
  2877                           	psect	text12
  2878  0BA4                     __ptext12:	
  2879 ;; *************** function _OperationMode *****************
  2880 ;; Defined at:
  2881 ;;		line 1065 in file "../Main Card V10.0.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;		None
  2884 ;; Auto vars:     Size  Location     Type
  2885 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2886 ;; Return value:  Size  Location     Type
  2887 ;;                  1    wreg      unsigned char 
  2888 ;; Registers used:
  2889 ;;		wreg, status,2
  2890 ;; Tracked objects:
  2891 ;;		On entry : 0/0
  2892 ;;		On exit  : 0/0
  2893 ;;		Unchanged: 0/0
  2894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2895 ;;      Params:         0       0       0       0       0
  2896 ;;      Locals:         0       1       0       0       0
  2897 ;;      Temps:          0       1       0       0       0
  2898 ;;      Totals:         0       2       0       0       0
  2899 ;;Total ram usage:        2 bytes
  2900 ;; Hardware stack levels used:    1
  2901 ;; Hardware stack levels required when called:    2
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_main
  2906 ;;		_TransmittedDataHandler
  2907 ;; This function uses a non-reentrant model
  2908 ;;
  2909                           
  2910                           
  2911                           ;psect for function _OperationMode
  2912  0BA4                     _OperationMode:	
  2913                           
  2914                           ;Main Card V10.0.c: 1067: unsigned char bracketStatus;
  2915                           ;Main Card V10.0.c: 1068: bracketStatus = ((~PORTB) & 0b00000111) ;
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _OperationMode: [wreg+status,2]
  2919  0BA4  1283               	bcf	3,5	;RP0=0, select bank0
  2920  0BA5  1303               	bcf	3,6	;RP1=0, select bank0
  2921  0BA6  0906               	comf	6,w	;volatile
  2922  0BA7  3907               	andlw	7
  2923  0BA8  00A0               	movwf	??_OperationMode
  2924  0BA9  0820               	movf	??_OperationMode,w
  2925  0BAA  00A1               	movwf	OperationMode@bracketStatus
  2926                           
  2927                           ;Main Card V10.0.c: 1070: return bracketStatus;
  2928  0BAB  0821               	movf	OperationMode@bracketStatus,w
  2929  0BAC  0008               	return
  2930  0BAD                     __end_of_OperationMode:	
  2931                           
  2932                           	psect	text13
  2933  0BD4                     __ptext13:	
  2934 ;; *************** function _ReadFIFO *****************
  2935 ;; Defined at:
  2936 ;;		line 880 in file "../Main Card V10.0.c"
  2937 ;; Parameters:    Size  Location     Type
  2938 ;;		None
  2939 ;; Auto vars:     Size  Location     Type
  2940 ;;  value           1    4[BANK0 ] unsigned char 
  2941 ;; Return value:  Size  Location     Type
  2942 ;;                  1    wreg      unsigned char 
  2943 ;; Registers used:
  2944 ;;		wreg, status,2, status,0, pclath, cstack
  2945 ;; Tracked objects:
  2946 ;;		On entry : 0/0
  2947 ;;		On exit  : 0/0
  2948 ;;		Unchanged: 0/0
  2949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2950 ;;      Params:         0       0       0       0       0
  2951 ;;      Locals:         0       1       0       0       0
  2952 ;;      Temps:          0       1       0       0       0
  2953 ;;      Totals:         0       2       0       0       0
  2954 ;;Total ram usage:        2 bytes
  2955 ;; Hardware stack levels used:    1
  2956 ;; Hardware stack levels required when called:    4
  2957 ;; This function calls:
  2958 ;;		_ReadSPI
  2959 ;; This function is called by:
  2960 ;;		_TransiverReadFIFO
  2961 ;; This function uses a non-reentrant model
  2962 ;;
  2963                           
  2964                           
  2965                           ;psect for function _ReadFIFO
  2966  0BD4                     _ReadFIFO:	
  2967                           
  2968                           ;Main Card V10.0.c: 882: BYTE value;
  2969                           ;Main Card V10.0.c: 883: PORTAbits.RA5 = 0;
  2970                           
  2971                           ;incstack = 0
  2972                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  2973  0BD4  1283               	bcf	3,5	;RP0=0, select bank0
  2974  0BD5  1303               	bcf	3,6	;RP1=0, select bank0
  2975  0BD6  1285               	bcf	5,5	;volatile
  2976                           
  2977                           ;Main Card V10.0.c: 884: value = ReadSPI();
  2978  0BD7  120A  158A  238B   	fcall	_ReadSPI
  2979  0BDA  1283               	bcf	3,5	;RP0=0, select bank0
  2980  0BDB  1303               	bcf	3,6	;RP1=0, select bank0
  2981  0BDC  00A3               	movwf	??_ReadFIFO
  2982  0BDD  0823               	movf	??_ReadFIFO,w
  2983  0BDE  00A4               	movwf	ReadFIFO@value
  2984                           
  2985                           ;Main Card V10.0.c: 885: PORTAbits.RA5 = 1;
  2986  0BDF  1685               	bsf	5,5	;volatile
  2987                           
  2988                           ;Main Card V10.0.c: 886: return value;
  2989  0BE0  0824               	movf	ReadFIFO@value,w
  2990  0BE1  0008               	return
  2991  0BE2                     __end_of_ReadFIFO:	
  2992                           
  2993                           	psect	text14
  2994  0333                     __ptext14:	
  2995 ;; *************** function _TransiverInit *****************
  2996 ;; Defined at:
  2997 ;;		line 645 in file "../Main Card V10.0.c"
  2998 ;; Parameters:    Size  Location     Type
  2999 ;;		None
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;		None
  3002 ;; Return value:  Size  Location     Type
  3003 ;;                  1    wreg      void 
  3004 ;; Registers used:
  3005 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3006 ;; Tracked objects:
  3007 ;;		On entry : 0/0
  3008 ;;		On exit  : 0/0
  3009 ;;		Unchanged: 0/0
  3010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3011 ;;      Params:         0       0       0       0       0
  3012 ;;      Locals:         0       0       0       0       0
  3013 ;;      Temps:          0       1       0       0       0
  3014 ;;      Totals:         0       1       0       0       0
  3015 ;;Total ram usage:        1 bytes
  3016 ;; Hardware stack levels used:    1
  3017 ;; Hardware stack levels required when called:    7
  3018 ;; This function calls:
  3019 ;;		_Blink
  3020 ;;		_FindChannel
  3021 ;;		_RegisterRead
  3022 ;;		_RegisterSet
  3023 ;;		_SetRFMode
  3024 ;; This function is called by:
  3025 ;;		_main
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           
  3029                           
  3030                           ;psect for function _TransiverInit
  3031  0333                     _TransiverInit:	
  3032                           
  3033                           ;Main Card V10.0.c: 648: RegisterSet(0x00, 0x30);
  3034                           
  3035                           ;incstack = 0
  3036                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3037  0333  3030               	movlw	48
  3038  0334  1283               	bcf	3,5	;RP0=0, select bank0
  3039  0335  1303               	bcf	3,6	;RP1=0, select bank0
  3040  0336  00B5               	movwf	??_TransiverInit
  3041  0337  0835               	movf	??_TransiverInit,w
  3042  0338  00A7               	movwf	RegisterSet@value
  3043  0339  3000               	movlw	0
  3044  033A  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3045                           
  3046                           ;Main Card V10.0.c: 649: RegisterSet(0x01,(0xA8));
  3047  033F  30A8               	movlw	168
  3048  0340  1283               	bcf	3,5	;RP0=0, select bank0
  3049  0341  1303               	bcf	3,6	;RP1=0, select bank0
  3050  0342  00B5               	movwf	??_TransiverInit
  3051  0343  0835               	movf	??_TransiverInit,w
  3052  0344  00A7               	movwf	RegisterSet@value
  3053  0345  3001               	movlw	1
  3054  0346  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3055                           
  3056                           ;Main Card V10.0.c: 650: RegisterSet(0x02, 0x09);
  3057  034B  3009               	movlw	9
  3058  034C  1283               	bcf	3,5	;RP0=0, select bank0
  3059  034D  1303               	bcf	3,6	;RP1=0, select bank0
  3060  034E  00B5               	movwf	??_TransiverInit
  3061  034F  0835               	movf	??_TransiverInit,w
  3062  0350  00A7               	movwf	RegisterSet@value
  3063  0351  3002               	movlw	2
  3064  0352  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3065                           
  3066                           ;Main Card V10.0.c: 651: RegisterSet(0x03, 0x07);
  3067  0357  3007               	movlw	7
  3068  0358  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0359  1303               	bcf	3,6	;RP1=0, select bank0
  3070  035A  00B5               	movwf	??_TransiverInit
  3071  035B  0835               	movf	??_TransiverInit,w
  3072  035C  00A7               	movwf	RegisterSet@value
  3073  035D  3003               	movlw	3
  3074  035E  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3075                           
  3076                           ;Main Card V10.0.c: 652: RegisterSet(0x05,(0x0A));
  3077  0363  300A               	movlw	10
  3078  0364  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0365  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0366  00B5               	movwf	??_TransiverInit
  3081  0367  0835               	movf	??_TransiverInit,w
  3082  0368  00A7               	movwf	RegisterSet@value
  3083  0369  3005               	movlw	5
  3084  036A  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3085                           
  3086                           ;Main Card V10.0.c: 653: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3087  036F  30B9               	movlw	185
  3088  0370  1283               	bcf	3,5	;RP0=0, select bank0
  3089  0371  1303               	bcf	3,6	;RP1=0, select bank0
  3090  0372  00B5               	movwf	??_TransiverInit
  3091  0373  0835               	movf	??_TransiverInit,w
  3092  0374  00A7               	movwf	RegisterSet@value
  3093  0375  300D               	movlw	13
  3094  0376  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3095                           
  3096                           ;Main Card V10.0.c: 654: RegisterSet(0x0E,(0x01|0x10|0x01));
  3097  037B  3011               	movlw	17
  3098  037C  1283               	bcf	3,5	;RP0=0, select bank0
  3099  037D  1303               	bcf	3,6	;RP1=0, select bank0
  3100  037E  00B5               	movwf	??_TransiverInit
  3101  037F  0835               	movf	??_TransiverInit,w
  3102  0380  00A7               	movwf	RegisterSet@value
  3103  0381  300E               	movlw	14
  3104  0382  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3105                           
  3106                           ;Main Card V10.0.c: 655: RegisterSet(0x10, 0xA3);
  3107  0387  30A3               	movlw	163
  3108  0388  1283               	bcf	3,5	;RP0=0, select bank0
  3109  0389  1303               	bcf	3,6	;RP1=0, select bank0
  3110  038A  00B5               	movwf	??_TransiverInit
  3111  038B  0835               	movf	??_TransiverInit,w
  3112  038C  00A7               	movwf	RegisterSet@value
  3113  038D  3010               	movlw	16
  3114  038E  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3115                           
  3116                           ;Main Card V10.0.c: 656: RegisterSet(0x12,(0x18|0x20|0x06));
  3117  0393  303E               	movlw	62
  3118  0394  1283               	bcf	3,5	;RP0=0, select bank0
  3119  0395  1303               	bcf	3,6	;RP1=0, select bank0
  3120  0396  00B5               	movwf	??_TransiverInit
  3121  0397  0835               	movf	??_TransiverInit,w
  3122  0398  00A7               	movwf	RegisterSet@value
  3123  0399  3012               	movlw	18
  3124  039A  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3125                           
  3126                           ;Main Card V10.0.c: 657: RegisterSet(0x16,('S'));
  3127  039F  3053               	movlw	83
  3128  03A0  1283               	bcf	3,5	;RP0=0, select bank0
  3129  03A1  1303               	bcf	3,6	;RP1=0, select bank0
  3130  03A2  00B5               	movwf	??_TransiverInit
  3131  03A3  0835               	movf	??_TransiverInit,w
  3132  03A4  00A7               	movwf	RegisterSet@value
  3133  03A5  3016               	movlw	22
  3134  03A6  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3135                           
  3136                           ;Main Card V10.0.c: 658: RegisterSet(0x17,('Y'));
  3137  03AB  3059               	movlw	89
  3138  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  3139  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  3140  03AE  00B5               	movwf	??_TransiverInit
  3141  03AF  0835               	movf	??_TransiverInit,w
  3142  03B0  00A7               	movwf	RegisterSet@value
  3143  03B1  3017               	movlw	23
  3144  03B2  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3145                           
  3146                           ;Main Card V10.0.c: 659: RegisterSet(0x18,('N'));
  3147  03B7  304E               	movlw	78
  3148  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  3149  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  3150  03BA  00B5               	movwf	??_TransiverInit
  3151  03BB  0835               	movf	??_TransiverInit,w
  3152  03BC  00A7               	movwf	RegisterSet@value
  3153  03BD  3018               	movlw	24
  3154  03BE  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3155                           
  3156                           ;Main Card V10.0.c: 660: RegisterSet(0x19,('C'));
  3157  03C3  3043               	movlw	67
  3158  03C4  1283               	bcf	3,5	;RP0=0, select bank0
  3159  03C5  1303               	bcf	3,6	;RP1=0, select bank0
  3160  03C6  00B5               	movwf	??_TransiverInit
  3161  03C7  0835               	movf	??_TransiverInit,w
  3162  03C8  00A7               	movwf	RegisterSet@value
  3163  03C9  3019               	movlw	25
  3164  03CA  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3165                           
  3166                           ;Main Card V10.0.c: 661: RegisterSet(0x1A, 0x72);
  3167  03CF  3072               	movlw	114
  3168  03D0  1283               	bcf	3,5	;RP0=0, select bank0
  3169  03D1  1303               	bcf	3,6	;RP1=0, select bank0
  3170  03D2  00B5               	movwf	??_TransiverInit
  3171  03D3  0835               	movf	??_TransiverInit,w
  3172  03D4  00A7               	movwf	RegisterSet@value
  3173  03D5  301A               	movlw	26
  3174  03D6  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3175                           
  3176                           ;Main Card V10.0.c: 662: RegisterSet(0x1B, 0x3C);
  3177  03DB  303C               	movlw	60
  3178  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  3179  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  3180  03DE  00B5               	movwf	??_TransiverInit
  3181  03DF  0835               	movf	??_TransiverInit,w
  3182  03E0  00A7               	movwf	RegisterSet@value
  3183  03E1  301B               	movlw	27
  3184  03E2  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3185                           
  3186                           ;Main Card V10.0.c: 663: RegisterSet(0x1F, 0x80);
  3187  03E7  3080               	movlw	128
  3188  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  3189  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  3190  03EA  00B5               	movwf	??_TransiverInit
  3191  03EB  0835               	movf	??_TransiverInit,w
  3192  03EC  00A7               	movwf	RegisterSet@value
  3193  03ED  301F               	movlw	31
  3194  03EE  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3195                           
  3196                           ;Main Card V10.0.c: 664: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3197  03F3  3000               	movlw	0
  3198  03F4  120A  158A  249A  120A  118A  	fcall	_RegisterRead
  3199  03F9  3801               	iorlw	1
  3200  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  3201  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  3202  03FC  00B5               	movwf	??_TransiverInit
  3203  03FD  0835               	movf	??_TransiverInit,w
  3204  03FE  00A7               	movwf	RegisterSet@value
  3205  03FF  3000               	movlw	0
  3206  0400  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3207                           
  3208                           ;Main Card V10.0.c: 666: if(FindChannel() == 1)
  3209  0405  120A  118A  2231  120A  118A  	fcall	_FindChannel
  3210  040A  3A01               	xorlw	1
  3211  040B  1D03               	skipz
  3212  040C  2C18               	goto	l2302
  3213                           
  3214                           ;Main Card V10.0.c: 667: Blink(1);
  3215  040D  3001               	movlw	1
  3216  040E  1283               	bcf	3,5	;RP0=0, select bank0
  3217  040F  1303               	bcf	3,6	;RP1=0, select bank0
  3218  0410  00A6               	movwf	Blink@n
  3219  0411  3000               	movlw	0
  3220  0412  00A7               	movwf	Blink@n+1
  3221  0413  120A  158A  25CF  120A  118A  	fcall	_Blink
  3222  0418                     l2302:	
  3223                           
  3224                           ;Main Card V10.0.c: 668: SetRFMode(0x00);
  3225  0418  3000               	movlw	0
  3226  0419  120A  158A  2791   	fcall	_SetRFMode
  3227  041C  0008               	return
  3228  041D                     __end_of_TransiverInit:	
  3229                           
  3230                           	psect	text15
  3231  0DCF                     __ptext15:	
  3232 ;; *************** function _Blink *****************
  3233 ;; Defined at:
  3234 ;;		line 793 in file "../Main Card V10.0.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;  n               2    6[BANK0 ] int 
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;  i               2    9[BANK0 ] int 
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, status,2, status,0, pclath, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3248 ;;      Params:         0       2       0       0       0
  3249 ;;      Locals:         0       2       0       0       0
  3250 ;;      Temps:          0       1       0       0       0
  3251 ;;      Totals:         0       5       0       0       0
  3252 ;;Total ram usage:        5 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    3
  3255 ;; This function calls:
  3256 ;;		_DelayDs
  3257 ;; This function is called by:
  3258 ;;		_TransiverInit
  3259 ;; This function uses a non-reentrant model
  3260 ;;
  3261                           
  3262                           
  3263                           ;psect for function _Blink
  3264  0DCF                     _Blink:	
  3265                           
  3266                           ;Main Card V10.0.c: 795: for(int i = 1;i<=n;i++)
  3267                           
  3268                           ;incstack = 0
  3269                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3270  0DCF  3001               	movlw	1
  3271  0DD0  1283               	bcf	3,5	;RP0=0, select bank0
  3272  0DD1  1303               	bcf	3,6	;RP1=0, select bank0
  3273  0DD2  00A9               	movwf	Blink@i
  3274  0DD3  3000               	movlw	0
  3275  0DD4  00AA               	movwf	Blink@i+1
  3276  0DD5                     l2222:	
  3277  0DD5  0827               	movf	Blink@n+1,w
  3278  0DD6  3A80               	xorlw	128
  3279  0DD7  00A8               	movwf	??_Blink
  3280  0DD8  082A               	movf	Blink@i+1,w
  3281  0DD9  3A80               	xorlw	128
  3282  0DDA  0228               	subwf	??_Blink,w
  3283  0DDB  1D03               	skipz
  3284  0DDC  2DDF               	goto	u1865
  3285  0DDD  0829               	movf	Blink@i,w
  3286  0DDE  0226               	subwf	Blink@n,w
  3287  0DDF                     u1865:	
  3288  0DDF  1C03               	btfss	3,0
  3289  0DE0  0008               	return
  3290                           
  3291                           ;Main Card V10.0.c: 796: {
  3292                           ;Main Card V10.0.c: 797: PORTCbits.RC1 = 1;
  3293  0DE1  1283               	bcf	3,5	;RP0=0, select bank0
  3294  0DE2  1303               	bcf	3,6	;RP1=0, select bank0
  3295  0DE3  1487               	bsf	7,1	;volatile
  3296                           
  3297                           ;Main Card V10.0.c: 798: DelayDs(2);
  3298  0DE4  3002               	movlw	2
  3299  0DE5  00A0               	movwf	DelayDs@cnt
  3300  0DE6  3000               	movlw	0
  3301  0DE7  00A1               	movwf	DelayDs@cnt+1
  3302  0DE8  120A  158A  24D9  120A  158A  	fcall	_DelayDs
  3303                           
  3304                           ;Main Card V10.0.c: 799: PORTCbits.RC1 = 0;
  3305  0DED  1283               	bcf	3,5	;RP0=0, select bank0
  3306  0DEE  1303               	bcf	3,6	;RP1=0, select bank0
  3307  0DEF  1087               	bcf	7,1	;volatile
  3308                           
  3309                           ;Main Card V10.0.c: 800: DelayDs(6);
  3310  0DF0  3006               	movlw	6
  3311  0DF1  00A0               	movwf	DelayDs@cnt
  3312  0DF2  3000               	movlw	0
  3313  0DF3  00A1               	movwf	DelayDs@cnt+1
  3314  0DF4  120A  158A  24D9  120A  158A  	fcall	_DelayDs
  3315  0DF9  3001               	movlw	1
  3316  0DFA  1283               	bcf	3,5	;RP0=0, select bank0
  3317  0DFB  1303               	bcf	3,6	;RP1=0, select bank0
  3318  0DFC  07A9               	addwf	Blink@i,f
  3319  0DFD  1803               	skipnc
  3320  0DFE  0AAA               	incf	Blink@i+1,f
  3321  0DFF  3000               	movlw	0
  3322  0E00  07AA               	addwf	Blink@i+1,f
  3323  0E01  2DD5               	goto	l2222
  3324  0E02                     __end_of_Blink:	
  3325                           
  3326                           	psect	text16
  3327  0C80                     __ptext16:	
  3328 ;; *************** function _Mode_5 *****************
  3329 ;; Defined at:
  3330 ;;		line 451 in file "../Main Card V10.0.c"
  3331 ;; Parameters:    Size  Location     Type
  3332 ;;		None
  3333 ;; Auto vars:     Size  Location     Type
  3334 ;;		None
  3335 ;; Return value:  Size  Location     Type
  3336 ;;                  1    wreg      void 
  3337 ;; Registers used:
  3338 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3339 ;; Tracked objects:
  3340 ;;		On entry : 0/0
  3341 ;;		On exit  : 0/0
  3342 ;;		Unchanged: 0/0
  3343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3344 ;;      Params:         0       0       0       0       0
  3345 ;;      Locals:         0       0       0       0       0
  3346 ;;      Temps:          0       0       0       0       0
  3347 ;;      Totals:         0       0       0       0       0
  3348 ;;Total ram usage:        0 bytes
  3349 ;; Hardware stack levels used:    1
  3350 ;; Hardware stack levels required when called:    8
  3351 ;; This function calls:
  3352 ;;		_LightWithSensController
  3353 ;;		_TransiverToReceive
  3354 ;;		_TransmittString
  3355 ;; This function is called by:
  3356 ;;		_main
  3357 ;; This function uses a non-reentrant model
  3358 ;;
  3359                           
  3360                           
  3361                           ;psect for function _Mode_5
  3362  0C80                     _Mode_5:	
  3363                           
  3364                           ;Main Card V10.0.c: 453: if(btnPush)
  3365                           
  3366                           ;incstack = 0
  3367 ;; hardware stack exceeded
  3368                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3369  0C80  1283               	bcf	3,5	;RP0=0, select bank0
  3370  0C81  1303               	bcf	3,6	;RP1=0, select bank0
  3371  0C82  086E               	movf	_btnPush,w
  3372  0C83  1903               	btfsc	3,2
  3373  0C84  2C96               	goto	l2350
  3374                           
  3375                           ;Main Card V10.0.c: 454: {
  3376                           ;Main Card V10.0.c: 455: TransmittString("N2BLINK");
  3377  0C85  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3378  0C86  00B5               	movwf	TransmittString@dataString
  3379  0C87  3080               	movlw	128
  3380  0C88  00B6               	movwf	TransmittString@dataString+1
  3381  0C89  120A  118A  241D  120A  158A  	fcall	_TransmittString
  3382                           
  3383                           ;Main Card V10.0.c: 456: TransiverToReceive();
  3384  0C8E  120A  158A  26CE  120A  158A  	fcall	_TransiverToReceive
  3385                           
  3386                           ;Main Card V10.0.c: 457: btnPush=FALSE;
  3387  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0C95  01EE               	clrf	_btnPush
  3390  0C96                     l2350:	
  3391                           
  3392                           ;Main Card V10.0.c: 458: }
  3393                           ;Main Card V10.0.c: 460: LightWithSensController();
  3394  0C96  120A  118A  25C1   	fcall	_LightWithSensController
  3395  0C99  0008               	return
  3396  0C9A                     __end_of_Mode_5:	
  3397                           
  3398                           	psect	text17
  3399  0C66                     __ptext17:	
  3400 ;; *************** function _Mode_4 *****************
  3401 ;; Defined at:
  3402 ;;		line 436 in file "../Main Card V10.0.c"
  3403 ;; Parameters:    Size  Location     Type
  3404 ;;		None
  3405 ;; Auto vars:     Size  Location     Type
  3406 ;;		None
  3407 ;; Return value:  Size  Location     Type
  3408 ;;                  1    wreg      void 
  3409 ;; Registers used:
  3410 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3411 ;; Tracked objects:
  3412 ;;		On entry : 0/0
  3413 ;;		On exit  : 0/0
  3414 ;;		Unchanged: 0/0
  3415 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3416 ;;      Params:         0       0       0       0       0
  3417 ;;      Locals:         0       0       0       0       0
  3418 ;;      Temps:          0       0       0       0       0
  3419 ;;      Totals:         0       0       0       0       0
  3420 ;;Total ram usage:        0 bytes
  3421 ;; Hardware stack levels used:    1
  3422 ;; Hardware stack levels required when called:    8
  3423 ;; This function calls:
  3424 ;;		_LightWithSensController
  3425 ;;		_TransiverToReceive
  3426 ;;		_TransmittString
  3427 ;; This function is called by:
  3428 ;;		_main
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           
  3432                           
  3433                           ;psect for function _Mode_4
  3434  0C66                     _Mode_4:	
  3435                           
  3436                           ;Main Card V10.0.c: 438: if(btnPush)
  3437                           
  3438                           ;incstack = 0
  3439 ;; hardware stack exceeded
  3440                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3441  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  3442  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  3443  0C68  086E               	movf	_btnPush,w
  3444  0C69  1903               	btfsc	3,2
  3445  0C6A  2C7C               	goto	l2342
  3446                           
  3447                           ;Main Card V10.0.c: 439: {
  3448                           ;Main Card V10.0.c: 440: TransmittString("N1BLINK");
  3449  0C6B  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3450  0C6C  00B5               	movwf	TransmittString@dataString
  3451  0C6D  3080               	movlw	128
  3452  0C6E  00B6               	movwf	TransmittString@dataString+1
  3453  0C6F  120A  118A  241D  120A  158A  	fcall	_TransmittString
  3454                           
  3455                           ;Main Card V10.0.c: 441: TransiverToReceive();
  3456  0C74  120A  158A  26CE  120A  158A  	fcall	_TransiverToReceive
  3457                           
  3458                           ;Main Card V10.0.c: 442: btnPush=FALSE;
  3459  0C79  1283               	bcf	3,5	;RP0=0, select bank0
  3460  0C7A  1303               	bcf	3,6	;RP1=0, select bank0
  3461  0C7B  01EE               	clrf	_btnPush
  3462  0C7C                     l2342:	
  3463                           
  3464                           ;Main Card V10.0.c: 443: }
  3465                           ;Main Card V10.0.c: 445: LightWithSensController();
  3466  0C7C  120A  118A  25C1   	fcall	_LightWithSensController
  3467  0C7F  0008               	return
  3468  0C80                     __end_of_Mode_4:	
  3469                           
  3470                           	psect	text18
  3471  041D                     __ptext18:	
  3472 ;; *************** function _TransmittString *****************
  3473 ;; Defined at:
  3474 ;;		line 337 in file "../Main Card V10.0.c"
  3475 ;; Parameters:    Size  Location     Type
  3476 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3477 ;;		 -> STR_21(8), STR_20(8), TransmittedDataHandler@slask_717(8), TransmittedDataHandler@slask_714(8), 
  3478 ;;		 -> STR_16(4), STR_15(4), STR_13(14), STR_12(14), 
  3479 ;;		 -> TransmittedDataHandler@slask_705(8), TransmittedDataHandler@slask(8), STR_4(10), STR_2(10), 
  3480 ;; Auto vars:     Size  Location     Type
  3481 ;;  i               2   26[BANK0 ] int 
  3482 ;; Return value:  Size  Location     Type
  3483 ;;                  1    wreg      void 
  3484 ;; Registers used:
  3485 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3486 ;; Tracked objects:
  3487 ;;		On entry : 0/0
  3488 ;;		On exit  : 0/0
  3489 ;;		Unchanged: 0/0
  3490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3491 ;;      Params:         0       2       0       0       0
  3492 ;;      Locals:         0       2       0       0       0
  3493 ;;      Temps:          0       3       0       0       0
  3494 ;;      Totals:         0       7       0       0       0
  3495 ;;Total ram usage:        7 bytes
  3496 ;; Hardware stack levels used:    1
  3497 ;; Hardware stack levels required when called:    7
  3498 ;; This function calls:
  3499 ;;		_FindChannel
  3500 ;;		_RegisterRead
  3501 ;;		_RegisterSet
  3502 ;;		_SetRFMode
  3503 ;;		_WriteFIFO
  3504 ;;		_timerFunction
  3505 ;; This function is called by:
  3506 ;;		_TransmittedDataHandler
  3507 ;;		_Mode_4
  3508 ;;		_Mode_5
  3509 ;; This function uses a non-reentrant model
  3510 ;;
  3511                           
  3512                           
  3513                           ;psect for function _TransmittString
  3514  041D                     _TransmittString:	
  3515                           
  3516                           ;Main Card V10.0.c: 339: timerFunction(4, 5);
  3517                           
  3518                           ;incstack = 0
  3519 ;; hardware stack exceeded
  3520                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3521  041D  3004               	movlw	4
  3522  041E  1283               	bcf	3,5	;RP0=0, select bank0
  3523  041F  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0420  00A0               	movwf	timerFunction@intTimerNumber
  3525  0421  3000               	movlw	0
  3526  0422  00A1               	movwf	timerFunction@intTimerNumber+1
  3527  0423  3005               	movlw	5
  3528  0424  00A2               	movwf	timerFunction@intSetSeconds
  3529  0425  3000               	movlw	0
  3530  0426  00A3               	movwf	timerFunction@intSetSeconds+1
  3531  0427  120A  158A  23F2  120A  118A  	fcall	_timerFunction
  3532                           
  3533                           ;Main Card V10.0.c: 341: int i = 0;
  3534  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3535  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3536  042E  01BA               	clrf	TransmittString@i
  3537  042F  01BB               	clrf	TransmittString@i+1
  3538                           
  3539                           ;Main Card V10.0.c: 344: SetRFMode(0x20);
  3540  0430  3020               	movlw	32
  3541  0431  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3542                           
  3543                           ;Main Card V10.0.c: 345: _delay((unsigned long)((10)*(4000000/4000.0)));
  3544  0436  300D               	movlw	13
  3545  0437  1283               	bcf	3,5	;RP0=0, select bank0
  3546  0438  1303               	bcf	3,6	;RP1=0, select bank0
  3547  0439  00B8               	movwf	??_TransmittString+1
  3548  043A  30FB               	movlw	251
  3549  043B  00B7               	movwf	??_TransmittString
  3550  043C                     u2317:	
  3551  043C  0BB7               	decfsz	??_TransmittString,f
  3552  043D  2C3C               	goto	u2317
  3553  043E  0BB8               	decfsz	??_TransmittString+1,f
  3554  043F  2C3C               	goto	u2317
  3555  0440  2C41               	nop2
  3556                           
  3557                           ;Main Card V10.0.c: 346: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3558  0441  300E               	movlw	14
  3559  0442  120A  158A  249A  120A  118A  	fcall	_RegisterRead
  3560  0447  3802               	iorlw	2
  3561  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3562  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3563  044A  00B7               	movwf	??_TransmittString
  3564  044B  0837               	movf	??_TransmittString,w
  3565  044C  00A7               	movwf	RegisterSet@value
  3566  044D  300E               	movlw	14
  3567  044E  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  3568                           
  3569                           ;Main Card V10.0.c: 347: SetRFMode(0x40);
  3570  0453  3040               	movlw	64
  3571  0454  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3572  0459                     l1956:	
  3573                           ;Main Card V10.0.c: 348: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3574                           
  3575  0459  300E               	movlw	14
  3576  045A  120A  158A  249A  120A  118A  	fcall	_RegisterRead
  3577  045F  3902               	andlw	2
  3578  0460  1D03               	btfss	3,2
  3579  0461  2C6C               	goto	l1958
  3580                           
  3581                           ;Main Card V10.0.c: 349: {
  3582                           ;Main Card V10.0.c: 350: if(bTimerComplete[4])
  3583  0462  1683               	bsf	3,5	;RP0=1, select bank1
  3584  0463  1303               	bcf	3,6	;RP1=0, select bank1
  3585  0464  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3586  0465  1903               	btfsc	3,2
  3587  0466  2C59               	goto	l1956
  3588                           
  3589                           ;Main Card V10.0.c: 351: {
  3590                           ;Main Card V10.0.c: 352: FindChannel();
  3591  0467  120A  118A  2231  120A  118A  	fcall	_FindChannel
  3592  046C                     l1958:	
  3593                           ;Main Card V10.0.c: 353: break;
  3594                           
  3595                           
  3596                           ;Main Card V10.0.c: 354: }
  3597                           ;Main Card V10.0.c: 356: }
  3598                           ;Main Card V10.0.c: 357: SetRFMode(0x80);
  3599  046C  3080               	movlw	128
  3600  046D  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3601                           
  3602                           ;Main Card V10.0.c: 358: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3603  0472  30A6               	movlw	166
  3604  0473  1283               	bcf	3,5	;RP0=0, select bank0
  3605  0474  1303               	bcf	3,6	;RP1=0, select bank0
  3606  0475  00B7               	movwf	??_TransmittString
  3607  0476                     u2327:	
  3608  0476  0BB7               	decfsz	??_TransmittString,f
  3609  0477  2C76               	goto	u2327
  3610  0478  0000               	nop
  3611                           
  3612                           ;Main Card V10.0.c: 361: WriteFIFO('S');
  3613  0479  3053               	movlw	83
  3614  047A  120A  158A  23AD  120A  118A  	fcall	_WriteFIFO
  3615                           
  3616                           ;Main Card V10.0.c: 362: WriteFIFO('Y');
  3617  047F  3059               	movlw	89
  3618  0480  120A  158A  23AD  120A  118A  	fcall	_WriteFIFO
  3619                           
  3620                           ;Main Card V10.0.c: 363: WriteFIFO('N');
  3621  0485  304E               	movlw	78
  3622  0486  120A  158A  23AD  120A  118A  	fcall	_WriteFIFO
  3623                           
  3624                           ;Main Card V10.0.c: 364: WriteFIFO('C');
  3625  048B  3043               	movlw	67
  3626  048C  120A  158A  23AD  120A  118A  	fcall	_WriteFIFO
  3627  0491                     l1974:	
  3628                           ;Main Card V10.0.c: 367: while(dataString[i] != 0)
  3629                           
  3630  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3631  0492  1303               	bcf	3,6	;RP1=0, select bank0
  3632  0493  083A               	movf	TransmittString@i,w
  3633  0494  0735               	addwf	TransmittString@dataString,w
  3634  0495  00B8               	movwf	??_TransmittString+1
  3635  0496  0836               	movf	TransmittString@dataString+1,w
  3636  0497  00B7               	movwf	??_TransmittString
  3637  0498  1803               	skipnc
  3638  0499  0AB7               	incf	??_TransmittString,f
  3639  049A  1BBA               	btfsc	TransmittString@i,7
  3640  049B  03B7               	decf	??_TransmittString,f
  3641  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3642  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3643  049E  0837               	movf	??_TransmittString,w
  3644  049F  00B9               	movwf	??_TransmittString+2
  3645  04A0  0839               	movf	??_TransmittString+2,w
  3646  04A1  00FF               	movwf	127
  3647  04A2  0838               	movf	??_TransmittString+1,w
  3648  04A3  0084               	movwf	4
  3649  04A4  120A  118A  2600  120A  118A  	fcall	stringtab
  3650  04A9  3A00               	xorlw	0
  3651  04AA  1903               	btfsc	3,2
  3652  04AB  2CD7               	goto	l245
  3653                           
  3654                           ;Main Card V10.0.c: 368: {
  3655                           ;Main Card V10.0.c: 369: WriteFIFO(dataString[i]);
  3656  04AC  1283               	bcf	3,5	;RP0=0, select bank0
  3657  04AD  1303               	bcf	3,6	;RP1=0, select bank0
  3658  04AE  083A               	movf	TransmittString@i,w
  3659  04AF  0735               	addwf	TransmittString@dataString,w
  3660  04B0  00B8               	movwf	??_TransmittString+1
  3661  04B1  0836               	movf	TransmittString@dataString+1,w
  3662  04B2  00B7               	movwf	??_TransmittString
  3663  04B3  1803               	skipnc
  3664  04B4  0AB7               	incf	??_TransmittString,f
  3665  04B5  1BBA               	btfsc	TransmittString@i,7
  3666  04B6  03B7               	decf	??_TransmittString,f
  3667  04B7  1283               	bcf	3,5	;RP0=0, select bank0
  3668  04B8  1303               	bcf	3,6	;RP1=0, select bank0
  3669  04B9  0837               	movf	??_TransmittString,w
  3670  04BA  00B9               	movwf	??_TransmittString+2
  3671  04BB  0839               	movf	??_TransmittString+2,w
  3672  04BC  00FF               	movwf	127
  3673  04BD  0838               	movf	??_TransmittString+1,w
  3674  04BE  0084               	movwf	4
  3675  04BF  120A  118A  2600  120A  118A  	fcall	stringtab
  3676  04C4  120A  158A  23AD  120A  118A  	fcall	_WriteFIFO
  3677                           
  3678                           ;Main Card V10.0.c: 370: i++;
  3679  04C9  3001               	movlw	1
  3680  04CA  1283               	bcf	3,5	;RP0=0, select bank0
  3681  04CB  1303               	bcf	3,6	;RP1=0, select bank0
  3682  04CC  07BA               	addwf	TransmittString@i,f
  3683  04CD  1803               	skipnc
  3684  04CE  0ABB               	incf	TransmittString@i+1,f
  3685  04CF  3000               	movlw	0
  3686  04D0  07BB               	addwf	TransmittString@i+1,f
  3687  04D1  2C91               	goto	l1974
  3688  04D2                     l1976:	
  3689                           ;Main Card V10.0.c: 371: }
  3690                           ;Main Card V10.0.c: 374: while(!PORTBbits.RB4)
  3691                           
  3692                           
  3693                           ;Main Card V10.0.c: 375: {
  3694                           ;Main Card V10.0.c: 376: if(bTimerComplete[4])
  3695  04D2  1683               	bsf	3,5	;RP0=1, select bank1
  3696  04D3  1303               	bcf	3,6	;RP1=0, select bank1
  3697  04D4  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3698  04D5  1D03               	btfss	3,2
  3699  04D6  2CDA               	goto	l1980
  3700  04D7                     l245:	
  3701                           ;Main Card V10.0.c: 377: break;
  3702                           
  3703  04D7  1283               	bcf	3,5	;RP0=0, select bank0
  3704  04D8  1E06               	btfss	6,4	;volatile
  3705  04D9  2CD2               	goto	l1976
  3706  04DA                     l1980:	
  3707                           
  3708                           ;Main Card V10.0.c: 378: }
  3709                           ;Main Card V10.0.c: 379: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3710  04DA  3003               	movlw	3
  3711  04DB  1283               	bcf	3,5	;RP0=0, select bank0
  3712  04DC  00B7               	movwf	??_TransmittString
  3713  04DD                     u2337:	
  3714  04DD  0BB7               	decfsz	??_TransmittString,f
  3715  04DE  2CDD               	goto	u2337
  3716                           
  3717                           ;Main Card V10.0.c: 380: SetRFMode(0x00);
  3718  04DF  3000               	movlw	0
  3719  04E0  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3720                           
  3721                           ;Main Card V10.0.c: 381: _delay((unsigned long)((1)*(4000000/4000.0)));
  3722  04E5  30F9               	movlw	249
  3723  04E6  1283               	bcf	3,5	;RP0=0, select bank0
  3724  04E7  1303               	bcf	3,6	;RP1=0, select bank0
  3725  04E8  00B7               	movwf	??_TransmittString
  3726  04E9                     u2347:	
  3727  04E9  0000               	nop
  3728  04EA  0BB7               	decfsz	??_TransmittString,f
  3729  04EB  2CE9               	goto	u2347
  3730  04EC  2CED               	nop2	;nop
  3731  04ED  0000               	nop
  3732  04EE  0008               	return
  3733  04EF                     __end_of_TransmittString:	
  3734                           
  3735                           	psect	text19
  3736  0BAD                     __ptext19:	
  3737 ;; *************** function _WriteFIFO *****************
  3738 ;; Defined at:
  3739 ;;		line 907 in file "../Main Card V10.0.c"
  3740 ;; Parameters:    Size  Location     Type
  3741 ;;  Data            1    wreg     unsigned char 
  3742 ;; Auto vars:     Size  Location     Type
  3743 ;;  Data            1    3[BANK0 ] unsigned char 
  3744 ;; Return value:  Size  Location     Type
  3745 ;;                  1    wreg      void 
  3746 ;; Registers used:
  3747 ;;		wreg, status,2, status,0, pclath, cstack
  3748 ;; Tracked objects:
  3749 ;;		On entry : 0/0
  3750 ;;		On exit  : 0/0
  3751 ;;		Unchanged: 0/0
  3752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3753 ;;      Params:         0       0       0       0       0
  3754 ;;      Locals:         0       1       0       0       0
  3755 ;;      Temps:          0       0       0       0       0
  3756 ;;      Totals:         0       1       0       0       0
  3757 ;;Total ram usage:        1 bytes
  3758 ;; Hardware stack levels used:    1
  3759 ;; Hardware stack levels required when called:    3
  3760 ;; This function calls:
  3761 ;;		_WriteSPI
  3762 ;; This function is called by:
  3763 ;;		_TransmittString
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           
  3768                           ;psect for function _WriteFIFO
  3769  0BAD                     _WriteFIFO:	
  3770                           
  3771                           ;incstack = 0
  3772                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3773                           ;WriteFIFO@Data stored from wreg
  3774  0BAD  1283               	bcf	3,5	;RP0=0, select bank0
  3775  0BAE  1303               	bcf	3,6	;RP1=0, select bank0
  3776  0BAF  00A3               	movwf	WriteFIFO@Data
  3777                           
  3778                           ;Main Card V10.0.c: 909: PORTAbits.RA5 = 0;
  3779  0BB0  1285               	bcf	5,5	;volatile
  3780                           
  3781                           ;Main Card V10.0.c: 910: WriteSPI(Data);
  3782  0BB1  0823               	movf	WriteFIFO@Data,w
  3783  0BB2  120A  158A  23C6   	fcall	_WriteSPI
  3784                           
  3785                           ;Main Card V10.0.c: 911: PORTAbits.RA5 = 1;
  3786  0BB5  1283               	bcf	3,5	;RP0=0, select bank0
  3787  0BB6  1303               	bcf	3,6	;RP1=0, select bank0
  3788  0BB7  1685               	bsf	5,5	;volatile
  3789  0BB8  0008               	return
  3790  0BB9                     __end_of_WriteFIFO:	
  3791                           
  3792                           	psect	text20
  3793  0ECE                     __ptext20:	
  3794 ;; *************** function _TransiverToReceive *****************
  3795 ;; Defined at:
  3796 ;;		line 172 in file "../Main Card V10.0.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;                  1    wreg      void 
  3803 ;; Registers used:
  3804 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3810 ;;      Params:         0       0       0       0       0
  3811 ;;      Locals:         0       0       0       0       0
  3812 ;;      Temps:          0       2       0       0       0
  3813 ;;      Totals:         0       2       0       0       0
  3814 ;;Total ram usage:        2 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:    7
  3817 ;; This function calls:
  3818 ;;		_FindChannel
  3819 ;;		_RegisterRead
  3820 ;;		_RegisterSet
  3821 ;;		_SetRFMode
  3822 ;;		_timerFunction
  3823 ;; This function is called by:
  3824 ;;		_main
  3825 ;;		_Mode_4
  3826 ;;		_Mode_5
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           
  3831                           ;psect for function _TransiverToReceive
  3832  0ECE                     _TransiverToReceive:	
  3833                           
  3834                           ;Main Card V10.0.c: 174: timerFunction(2, 5);
  3835                           
  3836                           ;incstack = 0
  3837                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3838  0ECE  3002               	movlw	2
  3839  0ECF  1283               	bcf	3,5	;RP0=0, select bank0
  3840  0ED0  1303               	bcf	3,6	;RP1=0, select bank0
  3841  0ED1  00A0               	movwf	timerFunction@intTimerNumber
  3842  0ED2  3000               	movlw	0
  3843  0ED3  00A1               	movwf	timerFunction@intTimerNumber+1
  3844  0ED4  3005               	movlw	5
  3845  0ED5  00A2               	movwf	timerFunction@intSetSeconds
  3846  0ED6  3000               	movlw	0
  3847  0ED7  00A3               	movwf	timerFunction@intSetSeconds+1
  3848  0ED8  120A  158A  23F2  120A  158A  	fcall	_timerFunction
  3849                           
  3850                           ;Main Card V10.0.c: 178: SetRFMode(0x20);
  3851  0EDD  3020               	movlw	32
  3852  0EDE  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3853                           
  3854                           ;Main Card V10.0.c: 179: _delay((unsigned long)((10)*(4000000/4000.0)));
  3855  0EE3  300D               	movlw	13
  3856  0EE4  1283               	bcf	3,5	;RP0=0, select bank0
  3857  0EE5  1303               	bcf	3,6	;RP1=0, select bank0
  3858  0EE6  00B6               	movwf	??_TransiverToReceive+1
  3859  0EE7  30FB               	movlw	251
  3860  0EE8  00B5               	movwf	??_TransiverToReceive
  3861  0EE9                     u2357:	
  3862  0EE9  0BB5               	decfsz	??_TransiverToReceive,f
  3863  0EEA  2EE9               	goto	u2357
  3864  0EEB  0BB6               	decfsz	??_TransiverToReceive+1,f
  3865  0EEC  2EE9               	goto	u2357
  3866  0EED  2EEE               	nop2
  3867                           
  3868                           ;Main Card V10.0.c: 180: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3869  0EEE  300E               	movlw	14
  3870  0EEF  120A  158A  249A  120A  158A  	fcall	_RegisterRead
  3871  0EF4  3802               	iorlw	2
  3872  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3873  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3874  0EF7  00B5               	movwf	??_TransiverToReceive
  3875  0EF8  0835               	movf	??_TransiverToReceive,w
  3876  0EF9  00A7               	movwf	RegisterSet@value
  3877  0EFA  300E               	movlw	14
  3878  0EFB  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  3879                           
  3880                           ;Main Card V10.0.c: 181: SetRFMode(0x40);
  3881  0F00  3040               	movlw	64
  3882  0F01  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3883  0F06                     l2066:	
  3884                           ;Main Card V10.0.c: 182: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3885                           
  3886  0F06  300E               	movlw	14
  3887  0F07  120A  158A  249A  120A  158A  	fcall	_RegisterRead
  3888  0F0C  3902               	andlw	2
  3889  0F0D  1D03               	btfss	3,2
  3890  0F0E  2F19               	goto	l2068
  3891                           
  3892                           ;Main Card V10.0.c: 183: {
  3893                           ;Main Card V10.0.c: 184: if(bTimerComplete[2])
  3894  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  3895  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  3896  0F11  082C               	movf	(_bTimerComplete^(0+128)+2),w
  3897  0F12  1903               	btfsc	3,2
  3898  0F13  2F06               	goto	l2066
  3899                           
  3900                           ;Main Card V10.0.c: 185: {
  3901                           ;Main Card V10.0.c: 186: FindChannel();
  3902  0F14  120A  118A  2231  120A  158A  	fcall	_FindChannel
  3903  0F19                     l2068:	
  3904                           ;Main Card V10.0.c: 187: break;
  3905                           
  3906                           
  3907                           ;Main Card V10.0.c: 188: }
  3908                           ;Main Card V10.0.c: 189: }
  3909                           ;Main Card V10.0.c: 191: SetRFMode(0x60);
  3910  0F19  3060               	movlw	96
  3911  0F1A  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3912                           
  3913                           ;Main Card V10.0.c: 192: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3914  0F1F  30A6               	movlw	166
  3915  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3916  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3917  0F22  00B5               	movwf	??_TransiverToReceive
  3918  0F23                     u2367:	
  3919  0F23  0BB5               	decfsz	??_TransiverToReceive,f
  3920  0F24  2F23               	goto	u2367
  3921  0F25  0000               	nop
  3922                           
  3923                           ;Main Card V10.0.c: 193: bTransiverModeReceive = 1;
  3924  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0F28  01ED               	clrf	_bTransiverModeReceive
  3927  0F29  0AED               	incf	_bTransiverModeReceive,f
  3928  0F2A  0008               	return
  3929  0F2B                     __end_of_TransiverToReceive:	
  3930                           
  3931                           	psect	text21
  3932  0231                     __ptext21:	
  3933 ;; *************** function _FindChannel *****************
  3934 ;; Defined at:
  3935 ;;		line 690 in file "../Main Card V10.0.c"
  3936 ;; Parameters:    Size  Location     Type
  3937 ;;		None
  3938 ;; Auto vars:     Size  Location     Type
  3939 ;;  i               2   19[BANK0 ] int 
  3940 ;;  cnt             2   17[BANK0 ] int 
  3941 ;; Return value:  Size  Location     Type
  3942 ;;                  1    wreg      unsigned char 
  3943 ;; Registers used:
  3944 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3945 ;; Tracked objects:
  3946 ;;		On entry : 0/0
  3947 ;;		On exit  : 0/0
  3948 ;;		Unchanged: 0/0
  3949 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3950 ;;      Params:         0       0       0       0       0
  3951 ;;      Locals:         0       4       0       0       0
  3952 ;;      Temps:          0       3       0       0       0
  3953 ;;      Totals:         0       7       0       0       0
  3954 ;;Total ram usage:        7 bytes
  3955 ;; Hardware stack levels used:    1
  3956 ;; Hardware stack levels required when called:    6
  3957 ;; This function calls:
  3958 ;;		_RegisterRead
  3959 ;;		_RegisterSet
  3960 ;;		_SetRFMode
  3961 ;; This function is called by:
  3962 ;;		_TransiverToReceive
  3963 ;;		_TransmittString
  3964 ;;		_TransiverInit
  3965 ;; This function uses a non-reentrant model
  3966 ;;
  3967                           
  3968                           
  3969                           ;psect for function _FindChannel
  3970  0231                     _FindChannel:	
  3971                           
  3972                           ;Main Card V10.0.c: 692: int cnt = 0;
  3973                           
  3974                           ;incstack = 0
  3975 ;; using string table level
  3976                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3977  0231  1283               	bcf	3,5	;RP0=0, select bank0
  3978  0232  1303               	bcf	3,6	;RP1=0, select bank0
  3979  0233  01B1               	clrf	FindChannel@cnt
  3980  0234  01B2               	clrf	FindChannel@cnt+1
  3981                           
  3982                           ;Main Card V10.0.c: 693: bChannelFound = 0;
  3983  0235  1683               	bsf	3,5	;RP0=1, select bank1
  3984  0236  1303               	bcf	3,6	;RP1=0, select bank1
  3985  0237  01B9               	clrf	_bChannelFound^(0+128)
  3986                           
  3987                           ;Main Card V10.0.c: 694: channelFound = 0;
  3988  0238  01AF               	clrf	_channelFound^(0+128)
  3989  0239  01B0               	clrf	(_channelFound+1)^(0+128)
  3990                           
  3991                           ;Main Card V10.0.c: 696: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3992  023A  3006               	movlw	6
  3993  023B  1283               	bcf	3,5	;RP0=0, select bank0
  3994  023C  1303               	bcf	3,6	;RP1=0, select bank0
  3995  023D  00B0               	movwf	??_FindChannel+2
  3996  023E  3013               	movlw	19
  3997  023F  00AF               	movwf	??_FindChannel+1
  3998  0240  30B1               	movlw	177
  3999  0241  00AE               	movwf	??_FindChannel
  4000  0242                     u2377:	
  4001  0242  0BAE               	decfsz	??_FindChannel,f
  4002  0243  2A42               	goto	u2377
  4003  0244  0BAF               	decfsz	??_FindChannel+1,f
  4004  0245  2A42               	goto	u2377
  4005  0246  0BB0               	decfsz	??_FindChannel+2,f
  4006  0247  2A42               	goto	u2377
  4007  0248  2A49               	nop2
  4008                           
  4009                           ;Main Card V10.0.c: 697: for (int i = 0; i < 13; i++)
  4010  0249  1283               	bcf	3,5	;RP0=0, select bank0
  4011  024A  1303               	bcf	3,6	;RP1=0, select bank0
  4012  024B  01B3               	clrf	FindChannel@i
  4013  024C  01B4               	clrf	FindChannel@i+1
  4014  024D  0834               	movf	FindChannel@i+1,w
  4015  024E  3A80               	xorlw	128
  4016  024F  00FF               	movwf	127
  4017  0250  3080               	movlw	128
  4018  0251  027F               	subwf	127,w
  4019  0252  1D03               	skipz
  4020  0253  2A56               	goto	u1175
  4021  0254  300D               	movlw	13
  4022  0255  0233               	subwf	FindChannel@i,w
  4023  0256                     u1175:	
  4024  0256  1803               	btfsc	3,0
  4025  0257  2B31               	goto	l1824
  4026  0258                     l1800:	
  4027                           
  4028                           ;Main Card V10.0.c: 698: {
  4029                           ;Main Card V10.0.c: 699: RegisterSet(0x06,ChannelR[i]);
  4030  0258  1283               	bcf	3,5	;RP0=0, select bank0
  4031  0259  1303               	bcf	3,6	;RP1=0, select bank0
  4032  025A  0833               	movf	FindChannel@i,w
  4033  025B  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4034  025C  0084               	movwf	4
  4035  025D  120A  118A  260A  120A  118A  	fcall	stringdir
  4036  0262  00AE               	movwf	??_FindChannel
  4037  0263  082E               	movf	??_FindChannel,w
  4038  0264  00A7               	movwf	RegisterSet@value
  4039  0265  3006               	movlw	6
  4040  0266  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4041                           
  4042                           ;Main Card V10.0.c: 700: RegisterSet(0x07,ChannelP[i]);
  4043  026B  1283               	bcf	3,5	;RP0=0, select bank0
  4044  026C  1303               	bcf	3,6	;RP1=0, select bank0
  4045  026D  0833               	movf	FindChannel@i,w
  4046  026E  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4047  026F  0084               	movwf	4
  4048  0270  120A  118A  260A  120A  118A  	fcall	stringdir
  4049  0275  00AE               	movwf	??_FindChannel
  4050  0276  082E               	movf	??_FindChannel,w
  4051  0277  00A7               	movwf	RegisterSet@value
  4052  0278  3007               	movlw	7
  4053  0279  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4054                           
  4055                           ;Main Card V10.0.c: 701: RegisterSet(0x08,ChannelS[i]);
  4056  027E  1283               	bcf	3,5	;RP0=0, select bank0
  4057  027F  1303               	bcf	3,6	;RP1=0, select bank0
  4058  0280  0833               	movf	FindChannel@i,w
  4059  0281  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4060  0282  0084               	movwf	4
  4061  0283  120A  118A  260A  120A  118A  	fcall	stringdir
  4062  0288  00AE               	movwf	??_FindChannel
  4063  0289  082E               	movf	??_FindChannel,w
  4064  028A  00A7               	movwf	RegisterSet@value
  4065  028B  3008               	movlw	8
  4066  028C  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4067                           
  4068                           ;Main Card V10.0.c: 702: RegisterSet(0x09,ChannelR[i]);
  4069  0291  1283               	bcf	3,5	;RP0=0, select bank0
  4070  0292  1303               	bcf	3,6	;RP1=0, select bank0
  4071  0293  0833               	movf	FindChannel@i,w
  4072  0294  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4073  0295  0084               	movwf	4
  4074  0296  120A  118A  260A  120A  118A  	fcall	stringdir
  4075  029B  00AE               	movwf	??_FindChannel
  4076  029C  082E               	movf	??_FindChannel,w
  4077  029D  00A7               	movwf	RegisterSet@value
  4078  029E  3009               	movlw	9
  4079  029F  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4080                           
  4081                           ;Main Card V10.0.c: 703: RegisterSet(0x0A,ChannelP[i]);
  4082  02A4  1283               	bcf	3,5	;RP0=0, select bank0
  4083  02A5  1303               	bcf	3,6	;RP1=0, select bank0
  4084  02A6  0833               	movf	FindChannel@i,w
  4085  02A7  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4086  02A8  0084               	movwf	4
  4087  02A9  120A  118A  260A  120A  118A  	fcall	stringdir
  4088  02AE  00AE               	movwf	??_FindChannel
  4089  02AF  082E               	movf	??_FindChannel,w
  4090  02B0  00A7               	movwf	RegisterSet@value
  4091  02B1  300A               	movlw	10
  4092  02B2  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4093                           
  4094                           ;Main Card V10.0.c: 704: RegisterSet(0x0B,ChannelS[i]);
  4095  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4096  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4097  02B9  0833               	movf	FindChannel@i,w
  4098  02BA  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4099  02BB  0084               	movwf	4
  4100  02BC  120A  118A  260A  120A  118A  	fcall	stringdir
  4101  02C1  00AE               	movwf	??_FindChannel
  4102  02C2  082E               	movf	??_FindChannel,w
  4103  02C3  00A7               	movwf	RegisterSet@value
  4104  02C4  300B               	movlw	11
  4105  02C5  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4106                           
  4107                           ;Main Card V10.0.c: 705: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4108  02CA  300E               	movlw	14
  4109  02CB  120A  158A  249A  120A  118A  	fcall	_RegisterRead
  4110  02D0  3802               	iorlw	2
  4111  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  4112  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  4113  02D3  00AE               	movwf	??_FindChannel
  4114  02D4  082E               	movf	??_FindChannel,w
  4115  02D5  00A7               	movwf	RegisterSet@value
  4116  02D6  300E               	movlw	14
  4117  02D7  120A  158A  244C  120A  118A  	fcall	_RegisterSet
  4118                           
  4119                           ;Main Card V10.0.c: 706: SetRFMode(0x40);
  4120  02DC  3040               	movlw	64
  4121  02DD  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  4122                           
  4123                           ;Main Card V10.0.c: 707: cnt = 0;
  4124  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  4125  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  4126  02E4  01B1               	clrf	FindChannel@cnt
  4127  02E5  01B2               	clrf	FindChannel@cnt+1
  4128  02E6                     l1818:	
  4129                           ;Main Card V10.0.c: 708: while(cnt < 5)
  4130                           
  4131  02E6  1283               	bcf	3,5	;RP0=0, select bank0
  4132  02E7  1303               	bcf	3,6	;RP1=0, select bank0
  4133  02E8  0832               	movf	FindChannel@cnt+1,w
  4134  02E9  3A80               	xorlw	128
  4135  02EA  00FF               	movwf	127
  4136  02EB  3080               	movlw	128
  4137  02EC  027F               	subwf	127,w
  4138  02ED  1D03               	skipz
  4139  02EE  2AF1               	goto	u1195
  4140  02EF  3005               	movlw	5
  4141  02F0  0231               	subwf	FindChannel@cnt,w
  4142  02F1                     u1195:	
  4143  02F1  1803               	btfsc	3,0
  4144  02F2  2B1E               	goto	l1820
  4145                           
  4146                           ;Main Card V10.0.c: 709: {
  4147                           ;Main Card V10.0.c: 711: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4148  02F3  300E               	movlw	14
  4149  02F4  120A  158A  249A  120A  118A  	fcall	_RegisterRead
  4150  02F9  3902               	andlw	2
  4151  02FA  1903               	btfsc	3,2
  4152  02FB  2B0E               	goto	l1816
  4153                           
  4154                           ;Main Card V10.0.c: 712: {
  4155                           ;Main Card V10.0.c: 713: bChannelFound = 1;
  4156  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  4157  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  4158  02FE  01B9               	clrf	_bChannelFound^(0+128)
  4159  02FF  0AB9               	incf	_bChannelFound^(0+128),f
  4160                           
  4161                           ;Main Card V10.0.c: 714: channelFound = i;
  4162  0300  1283               	bcf	3,5	;RP0=0, select bank0
  4163  0301  1303               	bcf	3,6	;RP1=0, select bank0
  4164  0302  0834               	movf	FindChannel@i+1,w
  4165  0303  1683               	bsf	3,5	;RP0=1, select bank1
  4166  0304  1303               	bcf	3,6	;RP1=0, select bank1
  4167  0305  00B0               	movwf	(_channelFound+1)^(0+128)
  4168  0306  1283               	bcf	3,5	;RP0=0, select bank0
  4169  0307  1303               	bcf	3,6	;RP1=0, select bank0
  4170  0308  0833               	movf	FindChannel@i,w
  4171  0309  1683               	bsf	3,5	;RP0=1, select bank1
  4172  030A  1303               	bcf	3,6	;RP1=0, select bank1
  4173  030B  00AF               	movwf	_channelFound^(0+128)
  4174                           
  4175                           ;Main Card V10.0.c: 715: return 1;
  4176  030C  3001               	movlw	1
  4177  030D  0008               	return
  4178  030E                     l1816:	
  4179                           
  4180                           ;Main Card V10.0.c: 716: }
  4181                           ;Main Card V10.0.c: 717: cnt++;
  4182  030E  3001               	movlw	1
  4183  030F  1283               	bcf	3,5	;RP0=0, select bank0
  4184  0310  1303               	bcf	3,6	;RP1=0, select bank0
  4185  0311  07B1               	addwf	FindChannel@cnt,f
  4186  0312  1803               	skipnc
  4187  0313  0AB2               	incf	FindChannel@cnt+1,f
  4188  0314  3000               	movlw	0
  4189  0315  07B2               	addwf	FindChannel@cnt+1,f
  4190                           
  4191                           ;Main Card V10.0.c: 718: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4192  0316  30F9               	movlw	249
  4193  0317  00AE               	movwf	??_FindChannel
  4194  0318                     u2387:	
  4195  0318  0000               	nop
  4196  0319  0BAE               	decfsz	??_FindChannel,f
  4197  031A  2B18               	goto	u2387
  4198  031B  2B1C               	nop2	;nop
  4199  031C  0000               	nop
  4200  031D  2AE6               	goto	l1818
  4201  031E                     l1820:	
  4202  031E  3001               	movlw	1
  4203  031F  1283               	bcf	3,5	;RP0=0, select bank0
  4204  0320  1303               	bcf	3,6	;RP1=0, select bank0
  4205  0321  07B3               	addwf	FindChannel@i,f
  4206  0322  1803               	skipnc
  4207  0323  0AB4               	incf	FindChannel@i+1,f
  4208  0324  3000               	movlw	0
  4209  0325  07B4               	addwf	FindChannel@i+1,f
  4210  0326  0834               	movf	FindChannel@i+1,w
  4211  0327  3A80               	xorlw	128
  4212  0328  00FF               	movwf	127
  4213  0329  3080               	movlw	128
  4214  032A  027F               	subwf	127,w
  4215  032B  1D03               	skipz
  4216  032C  2B2F               	goto	u1205
  4217  032D  300D               	movlw	13
  4218  032E  0233               	subwf	FindChannel@i,w
  4219  032F                     u1205:	
  4220  032F  1C03               	skipc
  4221  0330  2A58               	goto	l1800
  4222  0331                     l1824:	
  4223                           
  4224                           ;Main Card V10.0.c: 719: }
  4225                           ;Main Card V10.0.c: 722: }
  4226                           ;Main Card V10.0.c: 723: return 0;
  4227  0331  3000               	movlw	0
  4228  0332  0008               	return
  4229  0333                     __end_of_FindChannel:	
  4230                           
  4231                           	psect	text22
  4232  0F91                     __ptext22:	
  4233 ;; *************** function _SetRFMode *****************
  4234 ;; Defined at:
  4235 ;;		line 745 in file "../Main Card V10.0.c"
  4236 ;; Parameters:    Size  Location     Type
  4237 ;;  mode            1    wreg     unsigned char 
  4238 ;; Auto vars:     Size  Location     Type
  4239 ;;  mode            1   12[BANK0 ] unsigned char 
  4240 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4241 ;; Return value:  Size  Location     Type
  4242 ;;                  1    wreg      void 
  4243 ;; Registers used:
  4244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4245 ;; Tracked objects:
  4246 ;;		On entry : 0/0
  4247 ;;		On exit  : 0/0
  4248 ;;		Unchanged: 0/0
  4249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4250 ;;      Params:         0       0       0       0       0
  4251 ;;      Locals:         0       2       0       0       0
  4252 ;;      Temps:          0       1       0       0       0
  4253 ;;      Totals:         0       3       0       0       0
  4254 ;;Total ram usage:        3 bytes
  4255 ;; Hardware stack levels used:    1
  4256 ;; Hardware stack levels required when called:    5
  4257 ;; This function calls:
  4258 ;;		_RegisterRead
  4259 ;;		_RegisterSet
  4260 ;; This function is called by:
  4261 ;;		_TransiverToReceive
  4262 ;;		_TransiverReadFIFO
  4263 ;;		_TransmittString
  4264 ;;		_TransiverInit
  4265 ;;		_FindChannel
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _SetRFMode
  4271  0F91                     _SetRFMode:	
  4272                           
  4273                           ;incstack = 0
  4274                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4275                           ;SetRFMode@mode stored from wreg
  4276  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4277  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4278  0F93  00AC               	movwf	SetRFMode@mode
  4279                           
  4280                           ;Main Card V10.0.c: 747: PORTAbits.RA4 = 0;
  4281  0F94  1205               	bcf	5,4	;volatile
  4282                           
  4283                           ;Main Card V10.0.c: 748: BYTE mcparam0_read;
  4284                           ;Main Card V10.0.c: 749: mcparam0_read = RegisterRead(0);
  4285  0F95  3000               	movlw	0
  4286  0F96  120A  158A  249A  120A  158A  	fcall	_RegisterRead
  4287  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4288  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4289  0F9D  00AB               	movwf	??_SetRFMode
  4290  0F9E  082B               	movf	??_SetRFMode,w
  4291  0F9F  00AD               	movwf	SetRFMode@mcparam0_read
  4292                           
  4293                           ;Main Card V10.0.c: 750: switch (mode) {
  4294  0FA0  2FE9               	goto	l1780
  4295  0FA1                     l1768:	
  4296                           ;Main Card V10.0.c: 751: case 0x80:
  4297                           
  4298                           
  4299                           ;Main Card V10.0.c: 752: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4300  0FA1  082D               	movf	SetRFMode@mcparam0_read,w
  4301  0FA2  391F               	andlw	31
  4302  0FA3  3880               	iorlw	128
  4303  0FA4  00AB               	movwf	??_SetRFMode
  4304  0FA5  082B               	movf	??_SetRFMode,w
  4305  0FA6  00A7               	movwf	RegisterSet@value
  4306  0FA7  3000               	movlw	0
  4307  0FA8  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  4308                           
  4309                           ;Main Card V10.0.c: 754: break;
  4310  0FAD  2FFC               	goto	l332
  4311  0FAE                     l1770:	
  4312                           ;Main Card V10.0.c: 755: case 0x60:
  4313                           
  4314                           
  4315                           ;Main Card V10.0.c: 756: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4316  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4317  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4318  0FB0  082D               	movf	SetRFMode@mcparam0_read,w
  4319  0FB1  391F               	andlw	31
  4320  0FB2  3860               	iorlw	96
  4321  0FB3  00AB               	movwf	??_SetRFMode
  4322  0FB4  082B               	movf	??_SetRFMode,w
  4323  0FB5  00A7               	movwf	RegisterSet@value
  4324  0FB6  3000               	movlw	0
  4325  0FB7  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  4326                           
  4327                           ;Main Card V10.0.c: 758: break;
  4328  0FBC  2FFC               	goto	l332
  4329  0FBD                     l1772:	
  4330                           ;Main Card V10.0.c: 759: case 0x40:
  4331                           
  4332                           
  4333                           ;Main Card V10.0.c: 760: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4334  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4335  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4336  0FBF  082D               	movf	SetRFMode@mcparam0_read,w
  4337  0FC0  391F               	andlw	31
  4338  0FC1  3840               	iorlw	64
  4339  0FC2  00AB               	movwf	??_SetRFMode
  4340  0FC3  082B               	movf	??_SetRFMode,w
  4341  0FC4  00A7               	movwf	RegisterSet@value
  4342  0FC5  3000               	movlw	0
  4343  0FC6  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  4344                           
  4345                           ;Main Card V10.0.c: 762: break;
  4346  0FCB  2FFC               	goto	l332
  4347  0FCC                     l1774:	
  4348                           ;Main Card V10.0.c: 763: case 0x20:
  4349                           
  4350                           
  4351                           ;Main Card V10.0.c: 764: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4352  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  4353  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  4354  0FCE  082D               	movf	SetRFMode@mcparam0_read,w
  4355  0FCF  391F               	andlw	31
  4356  0FD0  3820               	iorlw	32
  4357  0FD1  00AB               	movwf	??_SetRFMode
  4358  0FD2  082B               	movf	??_SetRFMode,w
  4359  0FD3  00A7               	movwf	RegisterSet@value
  4360  0FD4  3000               	movlw	0
  4361  0FD5  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  4362                           
  4363                           ;Main Card V10.0.c: 766: break;
  4364  0FDA  2FFC               	goto	l332
  4365  0FDB                     l1776:	
  4366                           ;Main Card V10.0.c: 767: case 0x00:
  4367                           
  4368                           
  4369                           ;Main Card V10.0.c: 768: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4370  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4371  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4372  0FDD  082D               	movf	SetRFMode@mcparam0_read,w
  4373  0FDE  391F               	andlw	31
  4374  0FDF  00AB               	movwf	??_SetRFMode
  4375  0FE0  082B               	movf	??_SetRFMode,w
  4376  0FE1  00A7               	movwf	RegisterSet@value
  4377  0FE2  3000               	movlw	0
  4378  0FE3  120A  158A  244C  120A  158A  	fcall	_RegisterSet
  4379                           
  4380                           ;Main Card V10.0.c: 771: }
  4381                           
  4382                           ;Main Card V10.0.c: 770: break;
  4383  0FE8  2FFC               	goto	l332
  4384  0FE9                     l1780:	
  4385  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4386  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4387  0FEB  082C               	movf	SetRFMode@mode,w
  4388                           
  4389                           ; Switch size 1, requested type "space"
  4390                           ; Number of cases is 5, Range of values is 0 to 128
  4391                           ; switch strategies available:
  4392                           ; Name         Instructions Cycles
  4393                           ; simple_byte           16     9 (average)
  4394                           ; jumptable            260     6 (fixed)
  4395                           ;	Chosen strategy is simple_byte
  4396  0FEC  3A00               	xorlw	0	; case 0
  4397  0FED  1903               	skipnz
  4398  0FEE  2FDB               	goto	l1776
  4399  0FEF  3A20               	xorlw	32	; case 32
  4400  0FF0  1903               	skipnz
  4401  0FF1  2FCC               	goto	l1774
  4402  0FF2  3A60               	xorlw	96	; case 64
  4403  0FF3  1903               	skipnz
  4404  0FF4  2FBD               	goto	l1772
  4405  0FF5  3A20               	xorlw	32	; case 96
  4406  0FF6  1903               	skipnz
  4407  0FF7  2FAE               	goto	l1770
  4408  0FF8  3AE0               	xorlw	224	; case 128
  4409  0FF9  1903               	skipnz
  4410  0FFA  2FA1               	goto	l1768
  4411  0FFB  2FFC               	goto	l332
  4412  0FFC                     l332:	
  4413                           
  4414                           ;Main Card V10.0.c: 772: PORTAbits.RA4 = 1;
  4415  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4416  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4417  0FFE  1605               	bsf	5,4	;volatile
  4418  0FFF  0008               	return
  4419  1000                     __end_of_SetRFMode:	
  4420                           
  4421                           	psect	text23
  4422  0C4C                     __ptext23:	
  4423 ;; *************** function _RegisterSet *****************
  4424 ;; Defined at:
  4425 ;;		line 854 in file "../Main Card V10.0.c"
  4426 ;; Parameters:    Size  Location     Type
  4427 ;;  adress          1    wreg     unsigned char 
  4428 ;;  value           1    7[BANK0 ] unsigned char 
  4429 ;; Auto vars:     Size  Location     Type
  4430 ;;  adress          1   10[BANK0 ] unsigned char 
  4431 ;; Return value:  Size  Location     Type
  4432 ;;                  1    wreg      void 
  4433 ;; Registers used:
  4434 ;;		wreg, status,2, status,0, pclath, cstack
  4435 ;; Tracked objects:
  4436 ;;		On entry : 0/0
  4437 ;;		On exit  : 0/0
  4438 ;;		Unchanged: 0/0
  4439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4440 ;;      Params:         0       1       0       0       0
  4441 ;;      Locals:         0       1       0       0       0
  4442 ;;      Temps:          0       2       0       0       0
  4443 ;;      Totals:         0       4       0       0       0
  4444 ;;Total ram usage:        4 bytes
  4445 ;; Hardware stack levels used:    1
  4446 ;; Hardware stack levels required when called:    3
  4447 ;; This function calls:
  4448 ;;		_WriteSPI
  4449 ;; This function is called by:
  4450 ;;		_TransiverToReceive
  4451 ;;		_TransmittString
  4452 ;;		_TransiverInit
  4453 ;;		_FindChannel
  4454 ;;		_SetRFMode
  4455 ;; This function uses a non-reentrant model
  4456 ;;
  4457                           
  4458                           
  4459                           ;psect for function _RegisterSet
  4460  0C4C                     _RegisterSet:	
  4461                           
  4462                           ;incstack = 0
  4463                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4464                           ;RegisterSet@adress stored from wreg
  4465  0C4C  1283               	bcf	3,5	;RP0=0, select bank0
  4466  0C4D  1303               	bcf	3,6	;RP1=0, select bank0
  4467  0C4E  00AA               	movwf	RegisterSet@adress
  4468                           
  4469                           ;Main Card V10.0.c: 856: PORTAbits.RA4 = 0;
  4470  0C4F  1205               	bcf	5,4	;volatile
  4471                           
  4472                           ;Main Card V10.0.c: 857: adress = (adress<<1);
  4473  0C50  082A               	movf	RegisterSet@adress,w
  4474  0C51  00A8               	movwf	??_RegisterSet
  4475  0C52  0728               	addwf	??_RegisterSet,w
  4476  0C53  00A9               	movwf	??_RegisterSet+1
  4477  0C54  0829               	movf	??_RegisterSet+1,w
  4478  0C55  00AA               	movwf	RegisterSet@adress
  4479                           
  4480                           ;Main Card V10.0.c: 858: WriteSPI(adress);
  4481  0C56  082A               	movf	RegisterSet@adress,w
  4482  0C57  120A  158A  23C6  120A  158A  	fcall	_WriteSPI
  4483                           
  4484                           ;Main Card V10.0.c: 859: WriteSPI(value);
  4485  0C5C  1283               	bcf	3,5	;RP0=0, select bank0
  4486  0C5D  1303               	bcf	3,6	;RP1=0, select bank0
  4487  0C5E  0827               	movf	RegisterSet@value,w
  4488  0C5F  120A  158A  23C6   	fcall	_WriteSPI
  4489                           
  4490                           ;Main Card V10.0.c: 860: PORTAbits.RA4 = 1;
  4491  0C62  1283               	bcf	3,5	;RP0=0, select bank0
  4492  0C63  1303               	bcf	3,6	;RP1=0, select bank0
  4493  0C64  1605               	bsf	5,4	;volatile
  4494  0C65  0008               	return
  4495  0C66                     __end_of_RegisterSet:	
  4496                           
  4497                           	psect	text24
  4498  0C9A                     __ptext24:	
  4499 ;; *************** function _RegisterRead *****************
  4500 ;; Defined at:
  4501 ;;		line 824 in file "../Main Card V10.0.c"
  4502 ;; Parameters:    Size  Location     Type
  4503 ;;  adress          1    wreg     unsigned char 
  4504 ;; Auto vars:     Size  Location     Type
  4505 ;;  adress          1    6[BANK0 ] unsigned char 
  4506 ;;  value           1    5[BANK0 ] unsigned char 
  4507 ;; Return value:  Size  Location     Type
  4508 ;;                  1    wreg      unsigned char 
  4509 ;; Registers used:
  4510 ;;		wreg, status,2, status,0, pclath, cstack
  4511 ;; Tracked objects:
  4512 ;;		On entry : 0/0
  4513 ;;		On exit  : 0/0
  4514 ;;		Unchanged: 0/0
  4515 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4516 ;;      Params:         0       0       0       0       0
  4517 ;;      Locals:         0       2       0       0       0
  4518 ;;      Temps:          0       2       0       0       0
  4519 ;;      Totals:         0       4       0       0       0
  4520 ;;Total ram usage:        4 bytes
  4521 ;; Hardware stack levels used:    1
  4522 ;; Hardware stack levels required when called:    4
  4523 ;; This function calls:
  4524 ;;		_ReadSPI
  4525 ;;		_WriteSPI
  4526 ;; This function is called by:
  4527 ;;		_TransiverToReceive
  4528 ;;		_TransmittString
  4529 ;;		_TransiverInit
  4530 ;;		_FindChannel
  4531 ;;		_SetRFMode
  4532 ;; This function uses a non-reentrant model
  4533 ;;
  4534                           
  4535                           
  4536                           ;psect for function _RegisterRead
  4537  0C9A                     _RegisterRead:	
  4538                           
  4539                           ;incstack = 0
  4540                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4541                           ;RegisterRead@adress stored from wreg
  4542  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  4543  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  4544  0C9C  00A6               	movwf	RegisterRead@adress
  4545                           
  4546                           ;Main Card V10.0.c: 826: BYTE value;
  4547                           ;Main Card V10.0.c: 827: PORTAbits.RA4 = 0;
  4548  0C9D  1205               	bcf	5,4	;volatile
  4549                           
  4550                           ;Main Card V10.0.c: 828: adress = ((adress<<1)|0x40);
  4551  0C9E  0826               	movf	RegisterRead@adress,w
  4552  0C9F  00A3               	movwf	??_RegisterRead
  4553  0CA0  0723               	addwf	??_RegisterRead,w
  4554  0CA1  3840               	iorlw	64
  4555  0CA2  00A4               	movwf	??_RegisterRead+1
  4556  0CA3  0824               	movf	??_RegisterRead+1,w
  4557  0CA4  00A6               	movwf	RegisterRead@adress
  4558                           
  4559                           ;Main Card V10.0.c: 829: WriteSPI(adress);
  4560  0CA5  0826               	movf	RegisterRead@adress,w
  4561  0CA6  120A  158A  23C6  120A  158A  	fcall	_WriteSPI
  4562                           
  4563                           ;Main Card V10.0.c: 830: value = ReadSPI();
  4564  0CAB  120A  158A  238B   	fcall	_ReadSPI
  4565  0CAE  1283               	bcf	3,5	;RP0=0, select bank0
  4566  0CAF  1303               	bcf	3,6	;RP1=0, select bank0
  4567  0CB0  00A3               	movwf	??_RegisterRead
  4568  0CB1  0823               	movf	??_RegisterRead,w
  4569  0CB2  00A5               	movwf	RegisterRead@value
  4570                           
  4571                           ;Main Card V10.0.c: 831: PORTAbits.RA4 = 1;
  4572  0CB3  1605               	bsf	5,4	;volatile
  4573                           
  4574                           ;Main Card V10.0.c: 832: return value;
  4575  0CB4  0825               	movf	RegisterRead@value,w
  4576  0CB5  0008               	return
  4577  0CB6                     __end_of_RegisterRead:	
  4578                           
  4579                           	psect	text25
  4580  0B8B                     __ptext25:	
  4581 ;; *************** function _ReadSPI *****************
  4582 ;; Defined at:
  4583 ;;		line 637 in file "../Main Card V10.0.c"
  4584 ;; Parameters:    Size  Location     Type
  4585 ;;		None
  4586 ;; Auto vars:     Size  Location     Type
  4587 ;;		None
  4588 ;; Return value:  Size  Location     Type
  4589 ;;                  1    wreg      unsigned char 
  4590 ;; Registers used:
  4591 ;;		wreg, status,2, status,0, pclath, cstack
  4592 ;; Tracked objects:
  4593 ;;		On entry : 0/0
  4594 ;;		On exit  : 0/0
  4595 ;;		Unchanged: 0/0
  4596 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4597 ;;      Params:         0       0       0       0       0
  4598 ;;      Locals:         0       0       0       0       0
  4599 ;;      Temps:          0       0       0       0       0
  4600 ;;      Totals:         0       0       0       0       0
  4601 ;;Total ram usage:        0 bytes
  4602 ;; Hardware stack levels used:    1
  4603 ;; Hardware stack levels required when called:    3
  4604 ;; This function calls:
  4605 ;;		_WriteSPI
  4606 ;; This function is called by:
  4607 ;;		_RegisterRead
  4608 ;;		_ReadFIFO
  4609 ;; This function uses a non-reentrant model
  4610 ;;
  4611                           
  4612                           
  4613                           ;psect for function _ReadSPI
  4614  0B8B                     _ReadSPI:	
  4615                           
  4616                           ;Main Card V10.0.c: 639: WriteSPI(0x00);
  4617                           
  4618                           ;incstack = 0
  4619                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4620  0B8B  3000               	movlw	0
  4621  0B8C  120A  158A  23C6   	fcall	_WriteSPI
  4622                           
  4623                           ;Main Card V10.0.c: 640: return SSPBUF;
  4624  0B8F  1283               	bcf	3,5	;RP0=0, select bank0
  4625  0B90  1303               	bcf	3,6	;RP1=0, select bank0
  4626  0B91  0813               	movf	19,w	;volatile
  4627  0B92  0008               	return
  4628  0B93                     __end_of_ReadSPI:	
  4629                           
  4630                           	psect	text26
  4631  0BC6                     __ptext26:	
  4632 ;; *************** function _WriteSPI *****************
  4633 ;; Defined at:
  4634 ;;		line 625 in file "../Main Card V10.0.c"
  4635 ;; Parameters:    Size  Location     Type
  4636 ;;  databyte        1    wreg     unsigned char 
  4637 ;; Auto vars:     Size  Location     Type
  4638 ;;  databyte        1    2[BANK0 ] unsigned char 
  4639 ;;  buffer          1    1[BANK0 ] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4649 ;;      Params:         0       0       0       0       0
  4650 ;;      Locals:         0       2       0       0       0
  4651 ;;      Temps:          0       1       0       0       0
  4652 ;;      Totals:         0       3       0       0       0
  4653 ;;Total ram usage:        3 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		Nothing
  4658 ;; This function is called by:
  4659 ;;		_ReadSPI
  4660 ;;		_RegisterRead
  4661 ;;		_RegisterSet
  4662 ;;		_WriteFIFO
  4663 ;; This function uses a non-reentrant model
  4664 ;;
  4665                           
  4666                           
  4667                           ;psect for function _WriteSPI
  4668  0BC6                     _WriteSPI:	
  4669                           
  4670                           ;incstack = 0
  4671                           ; Regs used in _WriteSPI: [wreg]
  4672                           ;WriteSPI@databyte stored from wreg
  4673  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  4674  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  4675  0BC8  00A2               	movwf	WriteSPI@databyte
  4676                           
  4677                           ;Main Card V10.0.c: 627: unsigned char buffer;
  4678                           ;Main Card V10.0.c: 628: buffer = SSPBUF;
  4679  0BC9  0813               	movf	19,w	;volatile
  4680  0BCA  00A0               	movwf	??_WriteSPI
  4681  0BCB  0820               	movf	??_WriteSPI,w
  4682  0BCC  00A1               	movwf	WriteSPI@buffer
  4683                           
  4684                           ;Main Card V10.0.c: 629: PIR1bits.SSPIF=0;
  4685  0BCD  118C               	bcf	12,3	;volatile
  4686                           
  4687                           ;Main Card V10.0.c: 630: SSPBUF = databyte;
  4688  0BCE  0822               	movf	WriteSPI@databyte,w
  4689  0BCF  0093               	movwf	19	;volatile
  4690  0BD0                     l308:	
  4691                           ;Main Card V10.0.c: 631: while(PIR1bits.SSPIF == 0);
  4692                           
  4693  0BD0  1D8C               	btfss	12,3	;volatile
  4694  0BD1  2BD0               	goto	l308
  4695                           
  4696                           ;Main Card V10.0.c: 632: PIR1bits.SSPIF = 0;
  4697  0BD2  118C               	bcf	12,3	;volatile
  4698  0BD3  0008               	return
  4699  0BD4                     __end_of_WriteSPI:	
  4700                           
  4701                           	psect	text27
  4702  0C19                     __ptext27:	
  4703 ;; *************** function _Mode_3 *****************
  4704 ;; Defined at:
  4705 ;;		line 423 in file "../Main Card V10.0.c"
  4706 ;; Parameters:    Size  Location     Type
  4707 ;;		None
  4708 ;; Auto vars:     Size  Location     Type
  4709 ;;		None
  4710 ;; Return value:  Size  Location     Type
  4711 ;;                  1    wreg      void 
  4712 ;; Registers used:
  4713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4714 ;; Tracked objects:
  4715 ;;		On entry : 0/0
  4716 ;;		On exit  : 0/0
  4717 ;;		Unchanged: 0/0
  4718 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4719 ;;      Params:         0       0       0       0       0
  4720 ;;      Locals:         0       0       0       0       0
  4721 ;;      Temps:          0       0       0       0       0
  4722 ;;      Totals:         0       0       0       0       0
  4723 ;;Total ram usage:        0 bytes
  4724 ;; Hardware stack levels used:    1
  4725 ;; Hardware stack levels required when called:    6
  4726 ;; This function calls:
  4727 ;;		_LightWithSensController
  4728 ;; This function is called by:
  4729 ;;		_main
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _Mode_3
  4735  0C19                     _Mode_3:	
  4736                           
  4737                           ;Main Card V10.0.c: 425: LightWithSensController();
  4738                           
  4739                           ;incstack = 0
  4740                           ; Regs used in _Mode_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4741  0C19  120A  118A  25C1  120A  158A  	fcall	_LightWithSensController
  4742                           
  4743                           ;Main Card V10.0.c: 426: if(bDark && PORTAbits.RA1 && intBlinkCycle == 0)
  4744  0C1E  1283               	bcf	3,5	;RP0=0, select bank0
  4745  0C1F  1303               	bcf	3,6	;RP1=0, select bank0
  4746  0C20  086C               	movf	_bDark,w
  4747  0C21  1903               	btfsc	3,2
  4748  0C22  0008               	return
  4749  0C23  1C85               	btfss	5,1	;volatile
  4750  0C24  0008               	return
  4751  0C25  0868               	movf	_intBlinkCycle,w
  4752  0C26  0469               	iorwf	_intBlinkCycle+1,w
  4753  0C27  1D03               	btfss	3,2
  4754  0C28  0008               	return
  4755                           
  4756                           ;Main Card V10.0.c: 427: {
  4757                           ;Main Card V10.0.c: 428: intBlinkCycle = 1;
  4758  0C29  3001               	movlw	1
  4759  0C2A  00E8               	movwf	_intBlinkCycle
  4760  0C2B  3000               	movlw	0
  4761  0C2C  00E9               	movwf	_intBlinkCycle+1
  4762                           
  4763                           ;Main Card V10.0.c: 429: intBlinkCounter = 0;
  4764  0C2D  1683               	bsf	3,5	;RP0=1, select bank1
  4765  0C2E  1303               	bcf	3,6	;RP1=0, select bank1
  4766  0C2F  01B1               	clrf	_intBlinkCounter^(0+128)
  4767  0C30  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  4768  0C31  0008               	return
  4769  0C32                     __end_of_Mode_3:	
  4770                           
  4771                           	psect	text28
  4772  0BB9                     __ptext28:	
  4773 ;; *************** function _Mode_2 *****************
  4774 ;; Defined at:
  4775 ;;		line 412 in file "../Main Card V10.0.c"
  4776 ;; Parameters:    Size  Location     Type
  4777 ;;		None
  4778 ;; Auto vars:     Size  Location     Type
  4779 ;;		None
  4780 ;; Return value:  Size  Location     Type
  4781 ;;                  1    wreg      void 
  4782 ;; Registers used:
  4783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4784 ;; Tracked objects:
  4785 ;;		On entry : 0/0
  4786 ;;		On exit  : 0/0
  4787 ;;		Unchanged: 0/0
  4788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4789 ;;      Params:         0       0       0       0       0
  4790 ;;      Locals:         0       0       0       0       0
  4791 ;;      Temps:          0       0       0       0       0
  4792 ;;      Totals:         0       0       0       0       0
  4793 ;;Total ram usage:        0 bytes
  4794 ;; Hardware stack levels used:    1
  4795 ;; Hardware stack levels required when called:    6
  4796 ;; This function calls:
  4797 ;;		_LightWithSensController
  4798 ;; This function is called by:
  4799 ;;		_main
  4800 ;; This function uses a non-reentrant model
  4801 ;;
  4802                           
  4803                           
  4804                           ;psect for function _Mode_2
  4805  0BB9                     _Mode_2:	
  4806                           
  4807                           ;Main Card V10.0.c: 414: LightWithSensController();
  4808                           
  4809                           ;incstack = 0
  4810                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4811  0BB9  120A  118A  25C1  120A  158A  	fcall	_LightWithSensController
  4812                           
  4813                           ;Main Card V10.0.c: 415: if(PORTCbits.RC2)
  4814  0BBE  1283               	bcf	3,5	;RP0=0, select bank0
  4815  0BBF  1303               	bcf	3,6	;RP1=0, select bank0
  4816  0BC0  1D07               	btfss	7,2	;volatile
  4817  0BC1  2BC4               	goto	l261
  4818                           
  4819                           ;Main Card V10.0.c: 416: PORTCbits.RC1 = 1;
  4820  0BC2  1487               	bsf	7,1	;volatile
  4821  0BC3  0008               	return
  4822  0BC4                     l261:	
  4823                           
  4824                           ;Main Card V10.0.c: 417: else
  4825                           ;Main Card V10.0.c: 418: PORTCbits.RC1 = 0;
  4826  0BC4  1087               	bcf	7,1	;volatile
  4827  0BC5  0008               	return
  4828  0BC6                     __end_of_Mode_2:	
  4829                           
  4830                           	psect	text29
  4831  0C32                     __ptext29:	
  4832 ;; *************** function _Mode_1 *****************
  4833 ;; Defined at:
  4834 ;;		line 398 in file "../Main Card V10.0.c"
  4835 ;; Parameters:    Size  Location     Type
  4836 ;;		None
  4837 ;; Auto vars:     Size  Location     Type
  4838 ;;		None
  4839 ;; Return value:  Size  Location     Type
  4840 ;;                  1    wreg      void 
  4841 ;; Registers used:
  4842 ;;		wreg, status,2, status,0, pclath, cstack
  4843 ;; Tracked objects:
  4844 ;;		On entry : 0/0
  4845 ;;		On exit  : 0/0
  4846 ;;		Unchanged: 0/0
  4847 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4848 ;;      Params:         0       0       0       0       0
  4849 ;;      Locals:         0       0       0       0       0
  4850 ;;      Temps:          0       0       0       0       0
  4851 ;;      Totals:         0       0       0       0       0
  4852 ;;Total ram usage:        0 bytes
  4853 ;; Hardware stack levels used:    1
  4854 ;; Hardware stack levels required when called:    5
  4855 ;; This function calls:
  4856 ;;		_DarknessCheck
  4857 ;; This function is called by:
  4858 ;;		_main
  4859 ;; This function uses a non-reentrant model
  4860 ;;
  4861                           
  4862                           
  4863                           ;psect for function _Mode_1
  4864  0C32                     _Mode_1:	
  4865                           
  4866                           ;Main Card V10.0.c: 401: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4867                           
  4868                           ;incstack = 0
  4869                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4870  0C32  301E               	movlw	30
  4871  0C33  1283               	bcf	3,5	;RP0=0, select bank0
  4872  0C34  1303               	bcf	3,6	;RP1=0, select bank0
  4873  0C35  066A               	xorwf	_intSecondCounter,w
  4874  0C36  046B               	iorwf	_intSecondCounter+1,w
  4875  0C37  1903               	btfsc	3,2
  4876  0C38  1907               	btfsc	7,2	;volatile
  4877  0C39  2C3F               	goto	l2312
  4878                           
  4879                           ;Main Card V10.0.c: 402: DarknessCheck();
  4880  0C3A  120A  158A  254A  120A  158A  	fcall	_DarknessCheck
  4881  0C3F                     l2312:	
  4882                           
  4883                           ;Main Card V10.0.c: 403: if((intBlinkCycle == 1)&&(bDark == 1))
  4884  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  4885  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  4886  0C41  0368               	decf	_intBlinkCycle,w
  4887  0C42  0469               	iorwf	_intBlinkCycle+1,w
  4888  0C43  1D03               	btfss	3,2
  4889  0C44  2C4A               	goto	l256
  4890  0C45  036C               	decf	_bDark,w
  4891  0C46  1D03               	btfss	3,2
  4892  0C47  2C4A               	goto	l256
  4893                           
  4894                           ;Main Card V10.0.c: 404: PORTCbits.RC2 = 1;
  4895  0C48  1507               	bsf	7,2	;volatile
  4896  0C49  0008               	return
  4897  0C4A                     l256:	
  4898                           
  4899                           ;Main Card V10.0.c: 405: else
  4900                           ;Main Card V10.0.c: 406: PORTCbits.RC2 = 0;
  4901  0C4A  1107               	bcf	7,2	;volatile
  4902  0C4B  0008               	return
  4903  0C4C                     __end_of_Mode_1:	
  4904                           
  4905                           	psect	text30
  4906  0B87                     __ptext30:	
  4907 ;; *************** function _Mode_0 *****************
  4908 ;; Defined at:
  4909 ;;		line 390 in file "../Main Card V10.0.c"
  4910 ;; Parameters:    Size  Location     Type
  4911 ;;		None
  4912 ;; Auto vars:     Size  Location     Type
  4913 ;;		None
  4914 ;; Return value:  Size  Location     Type
  4915 ;;                  1    wreg      void 
  4916 ;; Registers used:
  4917 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4918 ;; Tracked objects:
  4919 ;;		On entry : 0/0
  4920 ;;		On exit  : 0/0
  4921 ;;		Unchanged: 0/0
  4922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4923 ;;      Params:         0       0       0       0       0
  4924 ;;      Locals:         0       0       0       0       0
  4925 ;;      Temps:          0       0       0       0       0
  4926 ;;      Totals:         0       0       0       0       0
  4927 ;;Total ram usage:        0 bytes
  4928 ;; Hardware stack levels used:    1
  4929 ;; Hardware stack levels required when called:    6
  4930 ;; This function calls:
  4931 ;;		_LightWithSensController
  4932 ;; This function is called by:
  4933 ;;		_main
  4934 ;; This function uses a non-reentrant model
  4935 ;;
  4936                           
  4937                           
  4938                           ;psect for function _Mode_0
  4939  0B87                     _Mode_0:	
  4940                           
  4941                           ;Main Card V10.0.c: 392: LightWithSensController();
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4945  0B87  120A  118A  25C1   	fcall	_LightWithSensController
  4946  0B8A  0008               	return
  4947  0B8B                     __end_of_Mode_0:	
  4948                           
  4949                           	psect	text31
  4950  05C1                     __ptext31:	
  4951 ;; *************** function _LightWithSensController *****************
  4952 ;; Defined at:
  4953 ;;		line 467 in file "../Main Card V10.0.c"
  4954 ;; Parameters:    Size  Location     Type
  4955 ;;		None
  4956 ;; Auto vars:     Size  Location     Type
  4957 ;;		None
  4958 ;; Return value:  Size  Location     Type
  4959 ;;                  1    wreg      void 
  4960 ;; Registers used:
  4961 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4962 ;; Tracked objects:
  4963 ;;		On entry : 0/0
  4964 ;;		On exit  : 0/0
  4965 ;;		Unchanged: 0/0
  4966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4967 ;;      Params:         0       0       0       0       0
  4968 ;;      Locals:         0       0       0       0       0
  4969 ;;      Temps:          0       0       0       0       0
  4970 ;;      Totals:         0       0       0       0       0
  4971 ;;Total ram usage:        0 bytes
  4972 ;; Hardware stack levels used:    1
  4973 ;; Hardware stack levels required when called:    5
  4974 ;; This function calls:
  4975 ;;		_DarknessCheck
  4976 ;;		_timerFunction
  4977 ;; This function is called by:
  4978 ;;		_Mode_0
  4979 ;;		_Mode_2
  4980 ;;		_Mode_3
  4981 ;;		_Mode_4
  4982 ;;		_Mode_5
  4983 ;; This function uses a non-reentrant model
  4984 ;;
  4985                           
  4986                           
  4987                           ;psect for function _LightWithSensController
  4988  05C1                     _LightWithSensController:	
  4989                           
  4990                           ;Main Card V10.0.c: 471: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4991                           
  4992                           ;incstack = 0
  4993                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4994  05C1  301E               	movlw	30
  4995  05C2  1283               	bcf	3,5	;RP0=0, select bank0
  4996  05C3  1303               	bcf	3,6	;RP1=0, select bank0
  4997  05C4  066A               	xorwf	_intSecondCounter,w
  4998  05C5  046B               	iorwf	_intSecondCounter+1,w
  4999  05C6  1903               	btfsc	3,2
  5000  05C7  1907               	btfsc	7,2	;volatile
  5001  05C8  2DCE               	goto	l2194
  5002                           
  5003                           ;Main Card V10.0.c: 472: DarknessCheck();
  5004  05C9  120A  158A  254A  120A  118A  	fcall	_DarknessCheck
  5005  05CE                     l2194:	
  5006                           
  5007                           ;Main Card V10.0.c: 476: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  5008  05CE  1283               	bcf	3,5	;RP0=0, select bank0
  5009  05CF  1303               	bcf	3,6	;RP1=0, select bank0
  5010  05D0  036C               	decf	_bDark,w
  5011  05D1  1903               	btfsc	3,2
  5012  05D2  1C85               	btfss	5,1	;volatile
  5013  05D3  2DE3               	goto	l2204
  5014  05D4  1907               	btfsc	7,2	;volatile
  5015  05D5  2DE3               	goto	l2204
  5016                           
  5017                           ;Main Card V10.0.c: 477: {
  5018                           ;Main Card V10.0.c: 479: PORTCbits.RC2 = 1;
  5019  05D6  1507               	bsf	7,2	;volatile
  5020                           
  5021                           ;Main Card V10.0.c: 481: timerFunction(0,120);
  5022  05D7  3000               	movlw	0
  5023  05D8  00A0               	movwf	timerFunction@intTimerNumber
  5024  05D9  00A1               	movwf	timerFunction@intTimerNumber+1
  5025  05DA  3078               	movlw	120
  5026  05DB  00A2               	movwf	timerFunction@intSetSeconds
  5027  05DC  3000               	movlw	0
  5028  05DD  00A3               	movwf	timerFunction@intSetSeconds+1
  5029  05DE  120A  158A  23F2  120A  118A  	fcall	_timerFunction
  5030  05E3                     l2204:	
  5031                           
  5032                           ;Main Card V10.0.c: 482: }
  5033                           ;Main Card V10.0.c: 485: if(bTimerComplete[0])
  5034  05E3  1683               	bsf	3,5	;RP0=1, select bank1
  5035  05E4  1303               	bcf	3,6	;RP1=0, select bank1
  5036  05E5  082A               	movf	_bTimerComplete^(0+128),w
  5037  05E6  1903               	btfsc	3,2
  5038  05E7  0008               	return
  5039                           
  5040                           ;Main Card V10.0.c: 486: {
  5041                           ;Main Card V10.0.c: 487: DarknessCheck();
  5042  05E8  120A  158A  254A  120A  118A  	fcall	_DarknessCheck
  5043                           
  5044                           ;Main Card V10.0.c: 488: if((bDark)&&(PORTAbits.RA1))
  5045  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  5046  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  5047  05EF  086C               	movf	_bDark,w
  5048  05F0  1D03               	btfss	3,2
  5049  05F1  1C85               	btfss	5,1	;volatile
  5050  05F2  2DFE               	goto	l281
  5051                           
  5052                           ;Main Card V10.0.c: 489: {
  5053                           ;Main Card V10.0.c: 490: timerFunction(0,120);
  5054  05F3  3000               	movlw	0
  5055  05F4  00A0               	movwf	timerFunction@intTimerNumber
  5056  05F5  00A1               	movwf	timerFunction@intTimerNumber+1
  5057  05F6  3078               	movlw	120
  5058  05F7  00A2               	movwf	timerFunction@intSetSeconds
  5059  05F8  3000               	movlw	0
  5060  05F9  00A3               	movwf	timerFunction@intSetSeconds+1
  5061  05FA  120A  158A  23F2   	fcall	_timerFunction
  5062                           
  5063                           ;Main Card V10.0.c: 491: }
  5064  05FD  0008               	return
  5065  05FE                     l281:	
  5066                           
  5067                           ;Main Card V10.0.c: 492: else
  5068                           ;Main Card V10.0.c: 493: PORTCbits.RC2 = 0;
  5069  05FE  1107               	bcf	7,2	;volatile
  5070  05FF  0008               	return
  5071  0600                     __end_of_LightWithSensController:	
  5072                           
  5073                           	psect	text32
  5074  0BF2                     __ptext32:	
  5075 ;; *************** function _timerFunction *****************
  5076 ;; Defined at:
  5077 ;;		line 518 in file "../Main Card V10.0.c"
  5078 ;; Parameters:    Size  Location     Type
  5079 ;;  intTimerNumb    2    0[BANK0 ] int 
  5080 ;;  intSetSecond    2    2[BANK0 ] int 
  5081 ;; Auto vars:     Size  Location     Type
  5082 ;;		None
  5083 ;; Return value:  Size  Location     Type
  5084 ;;                  1    wreg      unsigned char 
  5085 ;; Registers used:
  5086 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5087 ;; Tracked objects:
  5088 ;;		On entry : 0/0
  5089 ;;		On exit  : 0/0
  5090 ;;		Unchanged: 0/0
  5091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5092 ;;      Params:         0       4       0       0       0
  5093 ;;      Locals:         0       0       0       0       0
  5094 ;;      Temps:          0       1       0       0       0
  5095 ;;      Totals:         0       5       0       0       0
  5096 ;;Total ram usage:        5 bytes
  5097 ;; Hardware stack levels used:    1
  5098 ;; Hardware stack levels required when called:    2
  5099 ;; This function calls:
  5100 ;;		Nothing
  5101 ;; This function is called by:
  5102 ;;		_TransiverToReceive
  5103 ;;		_TransiverReadFIFO
  5104 ;;		_TransmittString
  5105 ;;		_LightWithSensController
  5106 ;; This function uses a non-reentrant model
  5107 ;;
  5108                           
  5109                           
  5110                           ;psect for function _timerFunction
  5111  0BF2                     _timerFunction:	
  5112                           
  5113                           ;Main Card V10.0.c: 520: intClockTimer[intTimerNumber] = intSetSeconds;
  5114                           
  5115                           ;incstack = 0
  5116                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5117  0BF2  1283               	bcf	3,5	;RP0=0, select bank0
  5118  0BF3  1303               	bcf	3,6	;RP1=0, select bank0
  5119  0BF4  0820               	movf	timerFunction@intTimerNumber,w
  5120  0BF5  00A4               	movwf	??_timerFunction
  5121  0BF6  0724               	addwf	??_timerFunction,w
  5122  0BF7  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5123  0BF8  0084               	movwf	4
  5124  0BF9  0822               	movf	timerFunction@intSetSeconds,w
  5125  0BFA  1383               	bcf	3,7	;select IRP bank1
  5126  0BFB  0080               	movwf	0
  5127  0BFC  0A84               	incf	4,f
  5128  0BFD  0823               	movf	timerFunction@intSetSeconds+1,w
  5129  0BFE  0080               	movwf	0
  5130                           
  5131                           ;Main Card V10.0.c: 521: bTimerComplete[intTimerNumber] = 0;
  5132  0BFF  0820               	movf	timerFunction@intTimerNumber,w
  5133  0C00  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5134  0C01  0084               	movwf	4
  5135  0C02  0180               	clrf	0
  5136  0C03  0008               	return
  5137  0C04                     __end_of_timerFunction:	
  5138                           ;Main Card V10.0.c: 522: return 1;
  5139                           ;	Return value of _timerFunction is never used
  5140                           
  5141                           
  5142                           	psect	text33
  5143  0D4A                     __ptext33:	
  5144 ;; *************** function _DarknessCheck *****************
  5145 ;; Defined at:
  5146 ;;		line 1031 in file "../Main Card V10.0.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0, pclath, cstack
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5160 ;;      Params:         0       0       0       0       0
  5161 ;;      Locals:         0       1       0       0       0
  5162 ;;      Temps:          0       1       0       0       0
  5163 ;;      Totals:         0       2       0       0       0
  5164 ;;Total ram usage:        2 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    4
  5167 ;; This function calls:
  5168 ;;		_AnalogValue
  5169 ;;		_eeprom_read
  5170 ;; This function is called by:
  5171 ;;		_TransmittedDataHandler
  5172 ;;		_Mode_1
  5173 ;;		_LightWithSensController
  5174 ;; This function uses a non-reentrant model
  5175 ;;
  5176                           
  5177                           
  5178                           ;psect for function _DarknessCheck
  5179  0D4A                     _DarknessCheck:	
  5180                           
  5181                           ;Main Card V10.0.c: 1033: unsigned char darknessValue;
  5182                           ;Main Card V10.0.c: 1034: PORTCbits.RC0 = 0;
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5186  0D4A  1283               	bcf	3,5	;RP0=0, select bank0
  5187  0D4B  1303               	bcf	3,6	;RP1=0, select bank0
  5188  0D4C  1007               	bcf	7,0	;volatile
  5189                           
  5190                           ;Main Card V10.0.c: 1036: if(bValueFromPot == TRUE)
  5191  0D4D  036F               	decf	_bValueFromPot,w
  5192  0D4E  1D03               	btfss	3,2
  5193  0D4F  2D57               	goto	l1992
  5194                           
  5195                           ;Main Card V10.0.c: 1037: darknessValue= AnalogValue(3);
  5196  0D50  3003               	movlw	3
  5197  0D51  120A  158A  2521  120A  158A  	fcall	_AnalogValue
  5198  0D56  2D5D               	goto	L2
  5199  0D57                     l1992:	
  5200                           
  5201                           ;Main Card V10.0.c: 1038: else
  5202                           ;Main Card V10.0.c: 1039: darknessValue=eeprom_read(addressDarknessValue);
  5203  0D57  087C               	movf	_addressDarknessValue,w
  5204  0D58  120A  158A  24FD  120A  158A  	fcall	_eeprom_read
  5205  0D5D                     L2:	
  5206  0D5D  1283               	bcf	3,5	;RP0=0, select bank0
  5207  0D5E  1303               	bcf	3,6	;RP1=0, select bank0
  5208  0D5F  00A8               	movwf	??_DarknessCheck
  5209  0D60  0828               	movf	??_DarknessCheck,w
  5210  0D61  00A9               	movwf	DarknessCheck@darknessValue
  5211                           
  5212                           ;Main Card V10.0.c: 1041: if(AnalogValue(0)>darknessValue)
  5213  0D62  3000               	movlw	0
  5214  0D63  120A  158A  2521  120A  158A  	fcall	_AnalogValue
  5215  0D68  1283               	bcf	3,5	;RP0=0, select bank0
  5216  0D69  1303               	bcf	3,6	;RP1=0, select bank0
  5217  0D6A  0229               	subwf	DarknessCheck@darknessValue,w
  5218  0D6B  1803               	skipnc
  5219  0D6C  2D70               	goto	l1996
  5220                           
  5221                           ;Main Card V10.0.c: 1042: bDark = 1;
  5222  0D6D  01EC               	clrf	_bDark
  5223  0D6E  0AEC               	incf	_bDark,f
  5224  0D6F  2D71               	goto	l1998
  5225  0D70                     l1996:	
  5226                           
  5227                           ;Main Card V10.0.c: 1043: else
  5228                           ;Main Card V10.0.c: 1044: bDark = 0;
  5229  0D70  01EC               	clrf	_bDark
  5230  0D71                     l1998:	
  5231                           
  5232                           ;Main Card V10.0.c: 1045: PORTCbits.RC0 = 0;
  5233  0D71  1007               	bcf	7,0	;volatile
  5234  0D72  0008               	return
  5235  0D73                     __end_of_DarknessCheck:	
  5236                           
  5237                           	psect	text34
  5238  0CFD                     __ptext34:	
  5239 ;; *************** function _eeprom_read *****************
  5240 ;; Defined at:
  5241 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  5242 ;; Parameters:    Size  Location     Type
  5243 ;;  addr            1    wreg     unsigned char 
  5244 ;; Auto vars:     Size  Location     Type
  5245 ;;  addr            1    1[BANK0 ] unsigned char 
  5246 ;; Return value:  Size  Location     Type
  5247 ;;                  1    wreg      unsigned char 
  5248 ;; Registers used:
  5249 ;;		wreg, status,2, status,0
  5250 ;; Tracked objects:
  5251 ;;		On entry : 0/0
  5252 ;;		On exit  : 0/0
  5253 ;;		Unchanged: 0/0
  5254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5255 ;;      Params:         0       0       0       0       0
  5256 ;;      Locals:         0       1       0       0       0
  5257 ;;      Temps:          0       1       0       0       0
  5258 ;;      Totals:         0       2       0       0       0
  5259 ;;Total ram usage:        2 bytes
  5260 ;; Hardware stack levels used:    1
  5261 ;; Hardware stack levels required when called:    2
  5262 ;; This function calls:
  5263 ;;		Nothing
  5264 ;; This function is called by:
  5265 ;;		_TransmittedDataHandler
  5266 ;;		_DarknessCheck
  5267 ;; This function uses a non-reentrant model
  5268 ;;
  5269                           
  5270                           
  5271                           ;psect for function _eeprom_read
  5272  0CFD                     _eeprom_read:	
  5273                           
  5274                           ;incstack = 0
  5275                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5276                           ;eeprom_read@addr stored from wreg
  5277  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  5278  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  5279  0CFF  00A1               	movwf	eeprom_read@addr
  5280  0D00  2D03               	goto	l400
  5281  0D01                     u1221:	
  5282  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  5283  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  5284  0D03                     l400:	
  5285  0D03  0064               	clrwdt	;# 
  5286  0D04  1683               	bsf	3,5	;RP0=1, select bank3
  5287  0D05  1703               	bsf	3,6	;RP1=1, select bank3
  5288  0D06  188C               	btfsc	12,1	;volsfr
  5289  0D07  2D01               	goto	u1221
  5290  0D08  1283               	bcf	3,5	;RP0=0, select bank0
  5291  0D09  1303               	bcf	3,6	;RP1=0, select bank0
  5292  0D0A  0821               	movf	eeprom_read@addr,w
  5293  0D0B  1283               	bcf	3,5	;RP0=0, select bank2
  5294  0D0C  1703               	bsf	3,6	;RP1=1, select bank2
  5295  0D0D  008D               	movwf	13	;volatile
  5296  0D0E  303F               	movlw	63
  5297  0D0F  1283               	bcf	3,5	;RP0=0, select bank0
  5298  0D10  1303               	bcf	3,6	;RP1=0, select bank0
  5299  0D11  00A0               	movwf	??_eeprom_read
  5300  0D12  0820               	movf	??_eeprom_read,w
  5301  0D13  1683               	bsf	3,5	;RP0=1, select bank3
  5302  0D14  1703               	bsf	3,6	;RP1=1, select bank3
  5303  0D15  058C               	andwf	12,f	;volsfr
  5304  0D16  140C               	bsf	12,0	;volsfr
  5305  0D17  1003               	clrc
  5306  0D18  180C               	btfsc	12,0	;volsfr
  5307  0D19  1403               	setc
  5308  0D1A  3000               	movlw	0
  5309  0D1B  1803               	skipnc
  5310  0D1C  3001               	movlw	1
  5311  0D1D  1283               	bcf	3,5	;RP0=0, select bank2
  5312  0D1E  1703               	bsf	3,6	;RP1=1, select bank2
  5313  0D1F  080C               	movf	12,w	;volatile
  5314  0D20  0008               	return
  5315  0D21                     __end_of_eeprom_read:	
  5316                           
  5317                           	psect	text35
  5318  0D21                     __ptext35:	
  5319 ;; *************** function _AnalogValue *****************
  5320 ;; Defined at:
  5321 ;;		line 1004 in file "../Main Card V10.0.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  channel         1    wreg     unsigned char 
  5324 ;; Auto vars:     Size  Location     Type
  5325 ;;  channel         1    7[BANK0 ] unsigned char 
  5326 ;; Return value:  Size  Location     Type
  5327 ;;                  1    wreg      unsigned char 
  5328 ;; Registers used:
  5329 ;;		wreg, status,2, status,0, pclath, cstack
  5330 ;; Tracked objects:
  5331 ;;		On entry : 0/0
  5332 ;;		On exit  : 0/0
  5333 ;;		Unchanged: 0/0
  5334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5335 ;;      Params:         0       0       0       0       0
  5336 ;;      Locals:         0       1       0       0       0
  5337 ;;      Temps:          0       1       0       0       0
  5338 ;;      Totals:         0       2       0       0       0
  5339 ;;Total ram usage:        2 bytes
  5340 ;; Hardware stack levels used:    1
  5341 ;; Hardware stack levels required when called:    3
  5342 ;; This function calls:
  5343 ;;		_DelayDs
  5344 ;; This function is called by:
  5345 ;;		_TransmittedDataHandler
  5346 ;;		_DarknessCheck
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           
  5351                           ;psect for function _AnalogValue
  5352  0D21                     _AnalogValue:	
  5353                           
  5354                           ;incstack = 0
  5355                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5356                           ;AnalogValue@channel stored from wreg
  5357  0D21  1283               	bcf	3,5	;RP0=0, select bank0
  5358  0D22  1303               	bcf	3,6	;RP1=0, select bank0
  5359  0D23  00A7               	movwf	AnalogValue@channel
  5360                           
  5361                           ;Main Card V10.0.c: 1006: ADCON0bits.CHS = channel;
  5362  0D24  0827               	movf	AnalogValue@channel,w
  5363  0D25  00A6               	movwf	??_AnalogValue
  5364  0D26  0DA6               	rlf	??_AnalogValue,f
  5365  0D27  0DA6               	rlf	??_AnalogValue,f
  5366  0D28  081F               	movf	31,w	;volatile
  5367  0D29  0626               	xorwf	??_AnalogValue,w
  5368  0D2A  39C3               	andlw	-61
  5369  0D2B  0626               	xorwf	??_AnalogValue,w
  5370  0D2C  009F               	movwf	31	;volatile
  5371                           
  5372                           ;Main Card V10.0.c: 1007: ADCON0bits.ADON = 1;
  5373  0D2D  141F               	bsf	31,0	;volatile
  5374                           
  5375                           ;Main Card V10.0.c: 1008: DelayDs(1);
  5376  0D2E  3001               	movlw	1
  5377  0D2F  00A0               	movwf	DelayDs@cnt
  5378  0D30  3000               	movlw	0
  5379  0D31  00A1               	movwf	DelayDs@cnt+1
  5380  0D32  120A  158A  24D9  120A  158A  	fcall	_DelayDs
  5381                           
  5382                           ;Main Card V10.0.c: 1009: ADCON0bits.GO = 1;
  5383  0D37  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0D38  1303               	bcf	3,6	;RP1=0, select bank0
  5385  0D39  149F               	bsf	31,1	;volatile
  5386                           
  5387                           ;Main Card V10.0.c: 1010: DelayDs(1);
  5388  0D3A  3001               	movlw	1
  5389  0D3B  00A0               	movwf	DelayDs@cnt
  5390  0D3C  3000               	movlw	0
  5391  0D3D  00A1               	movwf	DelayDs@cnt+1
  5392  0D3E  120A  158A  24D9  120A  158A  	fcall	_DelayDs
  5393  0D43                     l374:	
  5394                           ;Main Card V10.0.c: 1011: while(ADCON0bits.GO);
  5395                           
  5396  0D43  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0D44  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0D45  189F               	btfsc	31,1	;volatile
  5399  0D46  2D43               	goto	l374
  5400                           
  5401                           ;Main Card V10.0.c: 1012: ADCON0bits.ADON = 0;
  5402  0D47  101F               	bcf	31,0	;volatile
  5403                           
  5404                           ;Main Card V10.0.c: 1013: return ADRESH;
  5405  0D48  081E               	movf	30,w	;volatile
  5406  0D49  0008               	return
  5407  0D4A                     __end_of_AnalogValue:	
  5408                           
  5409                           	psect	text36
  5410  0CD9                     __ptext36:	
  5411 ;; *************** function _DelayDs *****************
  5412 ;; Defined at:
  5413 ;;		line 616 in file "../Main Card V10.0.c"
  5414 ;; Parameters:    Size  Location     Type
  5415 ;;  cnt             2    0[BANK0 ] int 
  5416 ;; Auto vars:     Size  Location     Type
  5417 ;;  i               2    4[BANK0 ] int 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  1    wreg      void 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5427 ;;      Params:         0       2       0       0       0
  5428 ;;      Locals:         0       2       0       0       0
  5429 ;;      Temps:          0       2       0       0       0
  5430 ;;      Totals:         0       6       0       0       0
  5431 ;;Total ram usage:        6 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    2
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_TransmittedDataHandler
  5438 ;;		_Blink
  5439 ;;		_AnalogValue
  5440 ;; This function uses a non-reentrant model
  5441 ;;
  5442                           
  5443                           
  5444                           ;psect for function _DelayDs
  5445  0CD9                     _DelayDs:	
  5446                           
  5447                           ;Main Card V10.0.c: 617: int i;
  5448                           ;Main Card V10.0.c: 618: for(i=0;i<cnt;i++){
  5449                           
  5450                           ;incstack = 0
  5451                           ; Regs used in _DelayDs: [wreg+status,2]
  5452  0CD9  1283               	bcf	3,5	;RP0=0, select bank0
  5453  0CDA  1303               	bcf	3,6	;RP1=0, select bank0
  5454  0CDB  01A4               	clrf	DelayDs@i
  5455  0CDC  01A5               	clrf	DelayDs@i+1
  5456  0CDD                     l302:	
  5457  0CDD  0825               	movf	DelayDs@i+1,w
  5458  0CDE  3A80               	xorlw	128
  5459  0CDF  00A2               	movwf	??_DelayDs
  5460  0CE0  0821               	movf	DelayDs@cnt+1,w
  5461  0CE1  3A80               	xorlw	128
  5462  0CE2  0222               	subwf	??_DelayDs,w
  5463  0CE3  1D03               	skipz
  5464  0CE4  2CE7               	goto	u1165
  5465  0CE5  0820               	movf	DelayDs@cnt,w
  5466  0CE6  0224               	subwf	DelayDs@i,w
  5467  0CE7                     u1165:	
  5468  0CE7  1803               	btfsc	3,0
  5469  0CE8  0008               	return
  5470                           
  5471                           ;Main Card V10.0.c: 619: _delay((unsigned long)((100)*(4000000/4000.0)));
  5472  0CE9  3082               	movlw	130
  5473  0CEA  1283               	bcf	3,5	;RP0=0, select bank0
  5474  0CEB  1303               	bcf	3,6	;RP1=0, select bank0
  5475  0CEC  00A3               	movwf	??_DelayDs+1
  5476  0CED  30DD               	movlw	221
  5477  0CEE  00A2               	movwf	??_DelayDs
  5478  0CEF                     u2397:	
  5479  0CEF  0BA2               	decfsz	??_DelayDs,f
  5480  0CF0  2CEF               	goto	u2397
  5481  0CF1  0BA3               	decfsz	??_DelayDs+1,f
  5482  0CF2  2CEF               	goto	u2397
  5483  0CF3  2CF4               	nop2
  5484  0CF4  3001               	movlw	1
  5485  0CF5  1283               	bcf	3,5	;RP0=0, select bank0
  5486  0CF6  1303               	bcf	3,6	;RP1=0, select bank0
  5487  0CF7  07A4               	addwf	DelayDs@i,f
  5488  0CF8  1803               	skipnc
  5489  0CF9  0AA5               	incf	DelayDs@i+1,f
  5490  0CFA  3000               	movlw	0
  5491  0CFB  07A5               	addwf	DelayDs@i+1,f
  5492  0CFC  2CDD               	goto	l302
  5493  0CFD                     __end_of_DelayDs:	
  5494                           
  5495                           	psect	text37
  5496  04EF                     __ptext37:	
  5497 ;; *************** function _tc_int *****************
  5498 ;; Defined at:
  5499 ;;		line 931 in file "../Main Card V10.0.c"
  5500 ;; Parameters:    Size  Location     Type
  5501 ;;		None
  5502 ;; Auto vars:     Size  Location     Type
  5503 ;;		None
  5504 ;; Return value:  Size  Location     Type
  5505 ;;                  1    wreg      void 
  5506 ;; Registers used:
  5507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5508 ;; Tracked objects:
  5509 ;;		On entry : 0/0
  5510 ;;		On exit  : 0/0
  5511 ;;		Unchanged: 0/0
  5512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5513 ;;      Params:         0       0       0       0       0
  5514 ;;      Locals:         0       0       0       0       0
  5515 ;;      Temps:          7       0       0       0       0
  5516 ;;      Totals:         7       0       0       0       0
  5517 ;;Total ram usage:        7 bytes
  5518 ;; Hardware stack levels used:    1
  5519 ;; Hardware stack levels required when called:    1
  5520 ;; This function calls:
  5521 ;;		_TimerCounter
  5522 ;;		i1_OperationMode
  5523 ;; This function is called by:
  5524 ;;		Interrupt level 1
  5525 ;; This function uses a non-reentrant model
  5526 ;;
  5527                           
  5528                           
  5529                           ;psect for function _tc_int
  5530  04EF                     _tc_int:	
  5531                           
  5532                           ;Main Card V10.0.c: 935: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5533  04EF  1A86               	btfsc	6,5	;volatile
  5534  04F0  2D0A               	goto	i1l358
  5535  04F1  0868               	movf	_intBlinkCycle,w
  5536  04F2  0469               	iorwf	_intBlinkCycle+1,w
  5537  04F3  1D03               	btfss	3,2
  5538  04F4  2D0A               	goto	i1l358
  5539  04F5  120A  158A  239B  120A  118A  	fcall	i1_OperationMode
  5540  04FA  00F5               	movwf	??_tc_int
  5541  04FB  3002               	movlw	2
  5542  04FC  0275               	subwf	??_tc_int,w
  5543  04FD  1803               	skipnc
  5544  04FE  2D0A               	goto	i1l358
  5545                           
  5546                           ;Main Card V10.0.c: 936: intBlinkCycle = 1;
  5547  04FF  3001               	movlw	1
  5548  0500  1283               	bcf	3,5	;RP0=0, select bank0
  5549  0501  1303               	bcf	3,6	;RP1=0, select bank0
  5550  0502  00E8               	movwf	_intBlinkCycle
  5551  0503  3000               	movlw	0
  5552  0504  00E9               	movwf	_intBlinkCycle+1
  5553                           
  5554                           ;Main Card V10.0.c: 937: intBlinkCounter = 0;
  5555  0505  1683               	bsf	3,5	;RP0=1, select bank1
  5556  0506  1303               	bcf	3,6	;RP1=0, select bank1
  5557  0507  01B1               	clrf	_intBlinkCounter^(0+128)
  5558  0508  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5559                           
  5560                           ;Main Card V10.0.c: 939: }else if(PORTBbits.RB5==0)
  5561  0509  2D10               	goto	i1l359
  5562  050A                     i1l358:	
  5563  050A  1283               	bcf	3,5	;RP0=0, select bank0
  5564  050B  1303               	bcf	3,6	;RP1=0, select bank0
  5565  050C  1A86               	btfsc	6,5	;volatile
  5566  050D  2D10               	goto	i1l359
  5567                           
  5568                           ;Main Card V10.0.c: 940: btnPush=TRUE;
  5569  050E  01EE               	clrf	_btnPush
  5570  050F  0AEE               	incf	_btnPush,f
  5571  0510                     i1l359:	
  5572                           
  5573                           ;Main Card V10.0.c: 942: if(TMR1IF ==1){
  5574  0510  1283               	bcf	3,5	;RP0=0, select bank0
  5575  0511  1C0C               	btfss	12,0	;volatile
  5576  0512  2DB4               	goto	L3
  5577                           
  5578                           ;Main Card V10.0.c: 943: TMR1ON = 0;
  5579  0513  1010               	bcf	16,0	;volatile
  5580                           
  5581                           ;Main Card V10.0.c: 944: TMR1H = 0x0B;
  5582  0514  300B               	movlw	11
  5583  0515  008F               	movwf	15	;volatile
  5584                           
  5585                           ;Main Card V10.0.c: 945: TMR1L = 0xDB;
  5586  0516  30DB               	movlw	219
  5587  0517  008E               	movwf	14	;volatile
  5588                           
  5589                           ;Main Card V10.0.c: 947: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5590  0518  0368               	decf	_intBlinkCycle,w
  5591  0519  0469               	iorwf	_intBlinkCycle+1,w
  5592  051A  1D03               	btfss	3,2
  5593  051B  2D42               	goto	i1l2474
  5594  051C  1683               	bsf	3,5	;RP0=1, select bank1
  5595  051D  1303               	bcf	3,6	;RP1=0, select bank1
  5596  051E  0859               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5597  051F  00F6               	movwf	??_tc_int+1
  5598  0520  0858               	movf	_intNumberOfBlinks^(0+128),w
  5599  0521  00F5               	movwf	??_tc_int
  5600  0522  1003               	clrc
  5601  0523  0DF5               	rlf	??_tc_int,f
  5602  0524  0DF6               	rlf	??_tc_int+1,f
  5603  0525  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5604  0526  3A80               	xorlw	128
  5605  0527  00F7               	movwf	??_tc_int+2
  5606  0528  0876               	movf	??_tc_int+1,w
  5607  0529  3A80               	xorlw	128
  5608  052A  0277               	subwf	??_tc_int+2,w
  5609  052B  1D03               	skipz
  5610  052C  2D2F               	goto	u221_25
  5611  052D  0875               	movf	??_tc_int,w
  5612  052E  0231               	subwf	_intBlinkCounter^(0+128),w
  5613  052F                     u221_25:	
  5614  052F  1803               	skipnc
  5615  0530  2D42               	goto	i1l2474
  5616                           
  5617                           ;Main Card V10.0.c: 948: intBlinkCounter++;
  5618  0531  3001               	movlw	1
  5619  0532  1683               	bsf	3,5	;RP0=1, select bank1
  5620  0533  1303               	bcf	3,6	;RP1=0, select bank1
  5621  0534  07B1               	addwf	_intBlinkCounter^(0+128),f
  5622  0535  1803               	skipnc
  5623  0536  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5624  0537  3000               	movlw	0
  5625  0538  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5626                           
  5627                           ;Main Card V10.0.c: 950: if(PORTCbits.RC1 == 0)
  5628  0539  1283               	bcf	3,5	;RP0=0, select bank0
  5629  053A  1303               	bcf	3,6	;RP1=0, select bank0
  5630  053B  1887               	btfsc	7,1	;volatile
  5631  053C  2D3F               	goto	i1l363
  5632                           
  5633                           ;Main Card V10.0.c: 951: PORTCbits.RC1 = 1;
  5634  053D  1487               	bsf	7,1	;volatile
  5635  053E  2D62               	goto	i1l2482
  5636  053F                     i1l363:	
  5637                           
  5638                           ;Main Card V10.0.c: 952: else if(PORTCbits.RC1 == 1)
  5639  053F  1C87               	btfss	7,1	;volatile
  5640  0540  2D62               	goto	i1l2482
  5641  0541  2D61               	goto	i1l2480
  5642  0542                     i1l2474:	
  5643                           ;Main Card V10.0.c: 954: }
  5644                           
  5645                           ;Main Card V10.0.c: 953: PORTCbits.RC1 = 0;
  5646                           
  5647                           
  5648                           ;Main Card V10.0.c: 956: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5649  0542  1283               	bcf	3,5	;RP0=0, select bank0
  5650  0543  1303               	bcf	3,6	;RP1=0, select bank0
  5651  0544  0368               	decf	_intBlinkCycle,w
  5652  0545  0469               	iorwf	_intBlinkCycle+1,w
  5653  0546  1D03               	btfss	3,2
  5654  0547  2D62               	goto	i1l2482
  5655  0548  1683               	bsf	3,5	;RP0=1, select bank1
  5656  0549  1303               	bcf	3,6	;RP1=0, select bank1
  5657  054A  0859               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5658  054B  00F6               	movwf	??_tc_int+1
  5659  054C  0858               	movf	_intNumberOfBlinks^(0+128),w
  5660  054D  00F5               	movwf	??_tc_int
  5661  054E  1003               	clrc
  5662  054F  0DF5               	rlf	??_tc_int,f
  5663  0550  0DF6               	rlf	??_tc_int+1,f
  5664  0551  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5665  0552  3A80               	xorlw	128
  5666  0553  00F7               	movwf	??_tc_int+2
  5667  0554  0876               	movf	??_tc_int+1,w
  5668  0555  3A80               	xorlw	128
  5669  0556  0277               	subwf	??_tc_int+2,w
  5670  0557  1D03               	skipz
  5671  0558  2D5B               	goto	u225_25
  5672  0559  0875               	movf	??_tc_int,w
  5673  055A  0231               	subwf	_intBlinkCounter^(0+128),w
  5674  055B                     u225_25:	
  5675  055B  1C03               	skipc
  5676  055C  2D62               	goto	i1l2482
  5677                           
  5678                           ;Main Card V10.0.c: 957: intBlinkCycle = 0;
  5679  055D  1283               	bcf	3,5	;RP0=0, select bank0
  5680  055E  1303               	bcf	3,6	;RP1=0, select bank0
  5681  055F  01E8               	clrf	_intBlinkCycle
  5682  0560  01E9               	clrf	_intBlinkCycle+1
  5683  0561                     i1l2480:	
  5684                           
  5685                           ;Main Card V10.0.c: 958: PORTCbits.RC1 = 0;
  5686  0561  1087               	bcf	7,1	;volatile
  5687  0562                     i1l2482:	
  5688                           
  5689                           ;Main Card V10.0.c: 959: }
  5690                           ;Main Card V10.0.c: 962: intHalfSecondCounter++;
  5691  0562  3001               	movlw	1
  5692  0563  1683               	bsf	3,5	;RP0=1, select bank1
  5693  0564  1303               	bcf	3,6	;RP1=0, select bank1
  5694  0565  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5695  0566  1803               	skipnc
  5696  0567  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5697  0568  3000               	movlw	0
  5698  0569  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5699                           
  5700                           ;Main Card V10.0.c: 963: if(intHalfSecondCounter>=2)
  5701  056A  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5702  056B  3A80               	xorlw	128
  5703  056C  00FF               	movwf	127
  5704  056D  3080               	movlw	128
  5705  056E  027F               	subwf	127,w
  5706  056F  1D03               	skipz
  5707  0570  2D73               	goto	u226_25
  5708  0571  3002               	movlw	2
  5709  0572  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5710  0573                     u226_25:	
  5711  0573  1C03               	skipc
  5712  0574  2D86               	goto	i1l2492
  5713                           
  5714                           ;Main Card V10.0.c: 964: {
  5715                           ;Main Card V10.0.c: 965: intHalfSecondCounter = 0;
  5716  0575  1683               	bsf	3,5	;RP0=1, select bank1
  5717  0576  1303               	bcf	3,6	;RP1=0, select bank1
  5718  0577  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5719  0578  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5720                           
  5721                           ;Main Card V10.0.c: 966: intSecondCounter++;
  5722  0579  3001               	movlw	1
  5723  057A  1283               	bcf	3,5	;RP0=0, select bank0
  5724  057B  1303               	bcf	3,6	;RP1=0, select bank0
  5725  057C  07EA               	addwf	_intSecondCounter,f
  5726  057D  1803               	skipnc
  5727  057E  0AEB               	incf	_intSecondCounter+1,f
  5728  057F  3000               	movlw	0
  5729  0580  07EB               	addwf	_intSecondCounter+1,f
  5730                           
  5731                           ;Main Card V10.0.c: 967: TimerCounter();
  5732  0581  120A  158A  2602  120A  118A  	fcall	_TimerCounter
  5733  0586                     i1l2492:	
  5734                           
  5735                           ;Main Card V10.0.c: 968: }
  5736                           ;Main Card V10.0.c: 969: if(intSecondCounter >=60)
  5737  0586  1283               	bcf	3,5	;RP0=0, select bank0
  5738  0587  1303               	bcf	3,6	;RP1=0, select bank0
  5739  0588  086B               	movf	_intSecondCounter+1,w
  5740  0589  3A80               	xorlw	128
  5741  058A  00FF               	movwf	127
  5742  058B  3080               	movlw	128
  5743  058C  027F               	subwf	127,w
  5744  058D  1D03               	skipz
  5745  058E  2D91               	goto	u227_25
  5746  058F  303C               	movlw	60
  5747  0590  026A               	subwf	_intSecondCounter,w
  5748  0591                     u227_25:	
  5749  0591  1C03               	skipc
  5750  0592  2D9F               	goto	i1l2498
  5751                           
  5752                           ;Main Card V10.0.c: 970: {
  5753                           ;Main Card V10.0.c: 971: intSecondCounter = 0;
  5754  0593  1283               	bcf	3,5	;RP0=0, select bank0
  5755  0594  1303               	bcf	3,6	;RP1=0, select bank0
  5756  0595  01EA               	clrf	_intSecondCounter
  5757  0596  01EB               	clrf	_intSecondCounter+1
  5758                           
  5759                           ;Main Card V10.0.c: 972: intMinuteCounter++;
  5760  0597  3001               	movlw	1
  5761  0598  1683               	bsf	3,5	;RP0=1, select bank1
  5762  0599  1303               	bcf	3,6	;RP1=0, select bank1
  5763  059A  07B7               	addwf	_intMinuteCounter^(0+128),f
  5764  059B  1803               	skipnc
  5765  059C  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5766  059D  3000               	movlw	0
  5767  059E  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5768  059F                     i1l2498:	
  5769                           
  5770                           ;Main Card V10.0.c: 973: }
  5771                           ;Main Card V10.0.c: 974: if(intMinuteCounter >= 60)
  5772  059F  1683               	bsf	3,5	;RP0=1, select bank1
  5773  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  5774  05A1  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5775  05A2  3A80               	xorlw	128
  5776  05A3  00FF               	movwf	127
  5777  05A4  3080               	movlw	128
  5778  05A5  027F               	subwf	127,w
  5779  05A6  1D03               	skipz
  5780  05A7  2DAA               	goto	u228_25
  5781  05A8  303C               	movlw	60
  5782  05A9  0237               	subwf	_intMinuteCounter^(0+128),w
  5783  05AA                     u228_25:	
  5784  05AA  1C03               	skipc
  5785  05AB  2DB0               	goto	i1l2502
  5786                           
  5787                           ;Main Card V10.0.c: 975: {
  5788                           ;Main Card V10.0.c: 976: intMinuteCounter = 0;
  5789  05AC  1683               	bsf	3,5	;RP0=1, select bank1
  5790  05AD  1303               	bcf	3,6	;RP1=0, select bank1
  5791  05AE  01B7               	clrf	_intMinuteCounter^(0+128)
  5792  05AF  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5793  05B0                     i1l2502:	
  5794                           
  5795                           ;Main Card V10.0.c: 977: }
  5796                           ;Main Card V10.0.c: 980: TMR1ON = 1;
  5797  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  5798  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  5799  05B2  1410               	bsf	16,0	;volatile
  5800                           
  5801                           ;Main Card V10.0.c: 981: }
  5802                           ;Main Card V10.0.c: 982: TMR1IF = 0;
  5803  05B3  100C               	bcf	12,0	;volatile
  5804  05B4                     L3:	
  5805                           
  5806                           ;Main Card V10.0.c: 983: RBIF = 0;
  5807  05B4  100B               	bcf	11,0	;volatile
  5808                           
  5809                           ;Main Card V10.0.c: 984: GIE = 1;
  5810  05B5  178B               	bsf	11,7	;volatile
  5811                           
  5812                           ;Main Card V10.0.c: 985: return;
  5813  05B6  087B               	movf	??_tc_int+6,w
  5814  05B7  00FF               	movwf	127
  5815  05B8  087A               	movf	??_tc_int+5,w
  5816  05B9  008A               	movwf	10
  5817  05BA  0879               	movf	??_tc_int+4,w
  5818  05BB  0084               	movwf	4
  5819  05BC  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5820  05BD  0083               	movwf	3
  5821  05BE  0EFE               	swapf	126,f
  5822  05BF  0E7E               	swapf	126,w
  5823  05C0  0009               	retfie
  5824  05C1                     __end_of_tc_int:	
  5825                           
  5826                           	psect	intentry
  5827  0004                     __pintentry:	
  5828                           ;incstack = 0
  5829 ;; hardware stack exceeded
  5830                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5831                           
  5832  0004                     interrupt_function:	
  5833  007E                     saved_w	set	btemp
  5834  0004  00FE               	movwf	btemp
  5835  0005  0E03               	swapf	3,w
  5836  0006  00F8               	movwf	??_tc_int+3
  5837  0007  0804               	movf	4,w
  5838  0008  00F9               	movwf	??_tc_int+4
  5839  0009  080A               	movf	10,w
  5840  000A  00FA               	movwf	??_tc_int+5
  5841  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5842  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5843  000D  087F               	movf	btemp+1,w
  5844  000E  00FB               	movwf	??_tc_int+6
  5845  000F  120A  118A  2CEF   	ljmp	_tc_int
  5846                           
  5847                           	psect	text38
  5848  0B9B                     __ptext38:	
  5849 ;; *************** function i1_OperationMode *****************
  5850 ;; Defined at:
  5851 ;;		line 1065 in file "../Main Card V10.0.c"
  5852 ;; Parameters:    Size  Location     Type
  5853 ;;		None
  5854 ;; Auto vars:     Size  Location     Type
  5855 ;;  OperationMod    1    1[COMMON] unsigned char 
  5856 ;; Return value:  Size  Location     Type
  5857 ;;                  1    wreg      unsigned char 
  5858 ;; Registers used:
  5859 ;;		wreg, status,2
  5860 ;; Tracked objects:
  5861 ;;		On entry : 0/0
  5862 ;;		On exit  : 0/0
  5863 ;;		Unchanged: 0/0
  5864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5865 ;;      Params:         0       0       0       0       0
  5866 ;;      Locals:         1       0       0       0       0
  5867 ;;      Temps:          1       0       0       0       0
  5868 ;;      Totals:         2       0       0       0       0
  5869 ;;Total ram usage:        2 bytes
  5870 ;; Hardware stack levels used:    1
  5871 ;; This function calls:
  5872 ;;		Nothing
  5873 ;; This function is called by:
  5874 ;;		_tc_int
  5875 ;; This function uses a non-reentrant model
  5876 ;;
  5877                           
  5878                           
  5879                           ;psect for function i1_OperationMode
  5880  0B9B                     i1_OperationMode:	
  5881                           
  5882                           ;Main Card V10.0.c: 1067: unsigned char bracketStatus;
  5883                           ;Main Card V10.0.c: 1068: bracketStatus = ((~PORTB) & 0b00000111) ;
  5884                           
  5885                           ;incstack = 0
  5886 ;; hardware stack exceeded
  5887                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5888  0B9B  1283               	bcf	3,5	;RP0=0, select bank0
  5889  0B9C  1303               	bcf	3,6	;RP1=0, select bank0
  5890  0B9D  0906               	comf	6,w	;volatile
  5891  0B9E  3907               	andlw	7
  5892  0B9F  00F0               	movwf	??i1_OperationMode
  5893  0BA0  0870               	movf	??i1_OperationMode,w
  5894  0BA1  00F1               	movwf	i1OperationMode@bracketStatus
  5895                           
  5896                           ;Main Card V10.0.c: 1070: return bracketStatus;
  5897  0BA2  0871               	movf	i1OperationMode@bracketStatus,w
  5898  0BA3  0008               	return
  5899  0BA4                     __end_ofi1_OperationMode:	
  5900                           
  5901                           	psect	text39
  5902  0E02                     __ptext39:	
  5903 ;; *************** function _TimerCounter *****************
  5904 ;; Defined at:
  5905 ;;		line 540 in file "../Main Card V10.0.c"
  5906 ;; Parameters:    Size  Location     Type
  5907 ;;		None
  5908 ;; Auto vars:     Size  Location     Type
  5909 ;;  i               2    3[COMMON] int 
  5910 ;; Return value:  Size  Location     Type
  5911 ;;                  1    wreg      void 
  5912 ;; Registers used:
  5913 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5914 ;; Tracked objects:
  5915 ;;		On entry : 0/0
  5916 ;;		On exit  : 0/0
  5917 ;;		Unchanged: 0/0
  5918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5919 ;;      Params:         0       0       0       0       0
  5920 ;;      Locals:         2       0       0       0       0
  5921 ;;      Temps:          3       0       0       0       0
  5922 ;;      Totals:         5       0       0       0       0
  5923 ;;Total ram usage:        5 bytes
  5924 ;; Hardware stack levels used:    1
  5925 ;; This function calls:
  5926 ;;		Nothing
  5927 ;; This function is called by:
  5928 ;;		_tc_int
  5929 ;; This function uses a non-reentrant model
  5930 ;;
  5931                           
  5932                           
  5933                           ;psect for function _TimerCounter
  5934  0E02                     _TimerCounter:	
  5935                           
  5936                           ;Main Card V10.0.c: 542: for (int i = 0; i < 5; i++)
  5937                           
  5938                           ;incstack = 0
  5939 ;; hardware stack exceeded
  5940                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5941  0E02  01F3               	clrf	TimerCounter@i
  5942  0E03  01F4               	clrf	TimerCounter@i+1
  5943  0E04                     L4:	
  5944  0E04  0874               	movf	TimerCounter@i+1,w
  5945  0E05  3A80               	xorlw	128
  5946  0E06  00FF               	movwf	127
  5947  0E07  3080               	movlw	128
  5948  0E08  027F               	subwf	127,w
  5949  0E09  1D03               	skipz
  5950  0E0A  2E0D               	goto	u203_25
  5951  0E0B  3005               	movlw	5
  5952  0E0C  0273               	subwf	TimerCounter@i,w
  5953  0E0D                     u203_25:	
  5954  0E0D  1803               	btfsc	3,0
  5955  0E0E  0008               	return
  5956                           
  5957                           ;Main Card V10.0.c: 543: {
  5958                           ;Main Card V10.0.c: 544: if(intClockTimer[i]>0)
  5959  0E0F  0873               	movf	TimerCounter@i,w
  5960  0E10  00F0               	movwf	??_TimerCounter
  5961  0E11  0770               	addwf	??_TimerCounter,w
  5962  0E12  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5963  0E13  0084               	movwf	4
  5964  0E14  1383               	bcf	3,7	;select IRP bank1
  5965  0E15  0800               	movf	0,w
  5966  0E16  00F1               	movwf	??_TimerCounter+1
  5967  0E17  0A84               	incf	4,f
  5968  0E18  0800               	movf	0,w
  5969  0E19  00F2               	movwf	??_TimerCounter+2
  5970  0E1A  0872               	movf	??_TimerCounter+2,w
  5971  0E1B  3A80               	xorlw	128
  5972  0E1C  00FF               	movwf	127
  5973  0E1D  3080               	movlw	128
  5974  0E1E  027F               	subwf	127,w
  5975  0E1F  1D03               	skipz
  5976  0E20  2E23               	goto	u204_25
  5977  0E21  3001               	movlw	1
  5978  0E22  0271               	subwf	??_TimerCounter+1,w
  5979  0E23                     u204_25:	
  5980  0E23  1C03               	skipc
  5981  0E24  2E37               	goto	i1l2394
  5982                           
  5983                           ;Main Card V10.0.c: 545: intClockTimer[i]--;
  5984  0E25  0873               	movf	TimerCounter@i,w
  5985  0E26  00F0               	movwf	??_TimerCounter
  5986  0E27  0770               	addwf	??_TimerCounter,w
  5987  0E28  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5988  0E29  0084               	movwf	4
  5989  0E2A  30FF               	movlw	255
  5990  0E2B  1383               	bcf	3,7	;select IRP bank1
  5991  0E2C  0780               	addwf	0,f
  5992  0E2D  0F84               	incfsz	4,f
  5993  0E2E  0800               	movf	0,w
  5994  0E2F  1803               	skipnc
  5995  0E30  0A00               	incf	0,w
  5996  0E31  00FF               	movwf	127
  5997  0E32  30FF               	movlw	255
  5998  0E33  077F               	addwf	127,w
  5999  0E34  0080               	movwf	0
  6000  0E35  0384               	decf	4,f
  6001  0E36  2E3D               	goto	i1l2396
  6002  0E37                     i1l2394:	
  6003                           
  6004                           ;Main Card V10.0.c: 546: else
  6005                           ;Main Card V10.0.c: 547: bTimerComplete[i] = 1;
  6006  0E37  0873               	movf	TimerCounter@i,w
  6007  0E38  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  6008  0E39  0084               	movwf	4
  6009  0E3A  1383               	bcf	3,7	;select IRP bank1
  6010  0E3B  0180               	clrf	0
  6011  0E3C  0A80               	incf	0,f
  6012  0E3D                     i1l2396:	
  6013  0E3D  3001               	movlw	1
  6014  0E3E  07F3               	addwf	TimerCounter@i,f
  6015  0E3F  1803               	skipnc
  6016  0E40  0AF4               	incf	TimerCounter@i+1,f
  6017  0E41  3000               	movlw	0
  6018  0E42  07F4               	addwf	TimerCounter@i+1,f
  6019  0E43  2E04               	goto	L4
  6020  0E44                     __end_of_TimerCounter:	
  6021  007E                     btemp	set	126	;btemp
  6022  007E                     wtemp	set	126
  6023  007E                     wtemp0	set	126
  6024  0080                     wtemp1	set	128
  6025  0082                     wtemp2	set	130
  6026  0084                     wtemp3	set	132
  6027  0086                     wtemp4	set	134
  6028  0088                     wtemp5	set	136
  6029  007F                     wtemp6	set	127
  6030  007E                     ttemp	set	126
  6031  007E                     ttemp0	set	126
  6032  0081                     ttemp1	set	129
  6033  0084                     ttemp2	set	132
  6034  0087                     ttemp3	set	135
  6035  007F                     ttemp4	set	127
  6036  007E                     ltemp	set	126
  6037  007E                     ltemp0	set	126
  6038  0082                     ltemp1	set	130
  6039  0086                     ltemp2	set	134
  6040  0080                     ltemp3	set	128


Data Sizes:
    Strings     136
    Constant    39
    Data        3
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      58
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_21(CODE[8]), STR_20(CODE[8]), TransmittedDataHandler@slask_717(BANK0[8]), TransmittedDataHandler@slask_714(BANK0[8]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_13(CODE[14]), STR_12(CODE[14]), 
		 -> TransmittedDataHandler@slask_705(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), STR_4(CODE[10]), STR_2(CODE[10]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _TransiverToReceive->_FindChannel
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   87389
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_3
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   18618
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15453
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1993
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0    9911
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     668
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   22133
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   22133
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10852
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_3                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     626
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1332
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     626
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     580
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     558
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_3
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3A       7       72.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C0      12        0.0%
ABS                  0      0      C0       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Mar 30 21:03:42 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006D                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l302 0CDD                               l400 0D03  
                             l308 0BD0                               l332 0FFC                               l261 0BC4  
                             l245 04D7                               l229 01D9                               l422 0DA2  
                             l256 0C4A                               l512 0CC2                               l281 05FE  
                             l374 0D43                               l296 07CA                               l904 0C07  
                             l916 0E47                               _GIE 005F             __end_of_DarknessCheck 0D73  
                             fsr0 0004                               indf 0000               __end_of_FindChannel 0333  
  __end_of_TransmittedDataHandler 0231                   ??_timerFunction 0024                      __CFG_LVP$OFF 0000  
                            l2002 0746                              l2020 0765                              l2004 073F  
                            l2030 07A8                              l2022 0769                              l2014 075F  
                            l2006 074B                              l2024 0797                              l2120 00E2  
                            l2112 00C0                              l2104 009E                              l2204 05E3  
                            l2222 0DD5                              l2302 0418                              l2142 0150  
                            l2312 0C3F                              l2136 012E                              l2128 0108  
                            l2066 0F06                              l2068 0F19                              l2172 01DC  
                            l2164 01B9                              l2156 0193                              l2148 0172  
                            l2420 06F1                              l2412 06D7                              l2342 0C7C  
                            l2350 0C96                              l2166 01C3                              l2158 019D  
                            l2094 0073                              l1800 0258                              l2440 072F  
                            l2432 0718                              l2424 06FE                              l2416 06E4  
                            l2194 05CE                              l2178 01FE                              l2370 0F60  
                            l1820 031E                              l1900 0E85                              l2436 0725  
                            l2428 070B                              l1910 0C10                              l2374 0F74  
                            l1816 030E                              l1824 0331                              l1770 0FAE  
                            l1818 02E6                              l1930 0EAA                              l2378 0F7D  
                            l1772 0FBD                              l1780 0FE9                              l1924 0E8C  
                            l1932 0EC3                              l1774 0FCC                              l1854 0CBA  
                            l1776 0FDB                              l1768 0FA1                              l1936 0ECC  
                            l1874 0BF0                              l1882 0D7A                              l1980 04DA  
                            l1956 0459                              l1884 0D89                              l1974 0491  
                            l1958 046C                              l1894 0E66                              l1992 0D57  
                            l1976 04D2                              l1898 0E7C                              l1996 0D70  
                            l1998 0D71       __size_of_TransiverToReceive 005D                              STR_1 0678  
                            STR_2 0653                              STR_3 0680                              STR_4 065D  
                            STR_5 0653                              STR_6 065D                              STR_7 06A5  
                            STR_8 0697                              STR_9 0688                              u1221 0D01  
                            u1205 032F                              u1165 0CE7                              u1245 0CC3  
                            u1175 0256                              u1255 0CCA                              u1195 02F1  
                            u2307 0F82                              u2317 043C                              u2327 0476  
                            u2337 04DD                              u2347 04E9                              u2357 0EE9  
                            u2367 0F23                              u2377 0242                              u2297 06CC  
                            u2387 0318                              u2397 0CEF                              u1865 0DDF  
                            _RBIF 0058                              u1995 0F50                              _WREN 0C62  
                  ??_eeprom_write 0021                              _atoi 073C                              _main 06BF  
                            _init 07AD                              btemp 007E                              ltemp 007E  
                            start 0012                              ttemp 007E                              wtemp 007E  
                   __CFG_IESO$OFF 0000                   __end_of_DelayDs 0CFD                  TransmittString@i 003A  
__size_of_LightWithSensController 003F                   __end_of_ReadSPI 0B93                             ?_atoi 0026  
                           ?_main 0070                             ?_init 0070                             _EEADR 010D  
                           STR_10 069E                             STR_11 0667                             STR_20 0678  
                           STR_12 0645                             STR_21 0680                             STR_13 0637  
                           STR_14 0690                             STR_15 06BB                             STR_16 06B7  
                           STR_17 0670                     __CFG_WDTE$OFF 0000                             STR_18 06B2  
                           STR_19 06AC                             _CARRY 0018                             _ANSEL 0188  
           __end_of_OperationMode 0BAD                             _T1CON 0010                             i1l363 053F  
                           i1l358 050A                             i1l359 0510                             _TMR1H 000F  
                           _TMR1L 000E                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _SSPIE 0463                             _Blink 0DCF  
                           _bDark 006C                    __CFG_FCMEN$OFF 0000                   __end_of_isdigit 0BF2  
                     _AnalogValue 0D21                             atoi@a 002B                             atoi@s 002D  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                 ??_TransiverInit 0035                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                     _intBlinkCycle 0068                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                  WriteSPI@buffer 0021                  __end_of_ChannelP 061D                  __end_of_ChannelR 062A  
                __end_of_ChannelS 0637                   __end_of_strncmp 0E88                    __CFG_MCLRE$OFF 0000  
                   _intClockTimer 00A0                 _intNumberOfBlinks 00D8                   __initialization 0015  
                    __end_of_atoi 07AD                      __end_of_main 073C                      __end_of_init 0800  
                __end_of_ReadFIFO 0BE2                     ReadFIFO@value 0024                       _FindChannel 0231  
                   ??_RegisterSet 0028                            ??_atoi 0028                            ??_main 0065  
                          ??_init 0020                            ?_Blink 0026                            _ADRESH 001E  
                          _EEDATA 010C                            _EECON1 018C                            _EECON2 018D  
                          _ANSELH 0189                  __end_of_WriteSPI 0BD4                            i1l2502 05B0  
                          i1l2480 0561                            i1l2394 0E37                            i1l2482 0562  
                          i1l2474 0542                            i1l2396 0E3D                            i1l2492 0586  
                          i1l2498 059F                            u203_25 0E0D                            u204_25 0E23  
                          u221_25 052F                            u225_25 055B                            u226_25 0573  
                          u227_25 0591                            u228_25 05AA                         ??_DelayDs 0022  
                          Blink@i 0029                            Blink@n 0026                            _TMR1IF 0060  
                          _TMR1ON 0080      i1OperationMode@bracketStatus 0071                            _SSPBUF 0013  
                       ??_ReadSPI 0023                            _Mode_0 0B87                            _Mode_1 0C32  
                          _Mode_2 0BB9                            _Mode_3 0C19                            _Mode_4 0C66  
                          _Mode_5 0C80                __size_of_SetRFMode 006F              __size_of_eeprom_read 0024  
                          ___wmul 0CB6                            _tc_int 04EF              __end_of_eeprom_write 0DCF  
                          _strchr 0C04                            _strlen 0D73                            _strstr 0E88  
                       ??_isdigit 0020                            saved_w 007E               __end_of_RegisterSet 0C66  
                   ?_RegisterRead 0070                RegisterRead@adress 0026       TransmittedDataHandler@slask 003D  
     TransmittedDataHandler@value 005D                         ??_strncmp 002B                __size_of_WriteFIFO 000C  
         __end_of__initialization 0044                   eeprom_read@addr 0021           _LightWithSensController 05C1  
                   _bChannelFound 00B9                     __end_of_Blink 0E02                    __pcstackCOMMON 0070  
                    __pidataBANK0 0003                      __pidataBANK1 0B85                      _channelFound 00AF  
                  _OPTION_REGbits 0081                           ??_Blink 0028                 __end_of_SetRFMode 1000  
               eeprom_write@value 0020                    ??_RegisterRead 0023                        __pbssBANK0 0068  
                      __pbssBANK1 00A0                        __pbssBANK3 0190          __size_ofi1_OperationMode 0009  
                       ?_ReadFIFO 0070        timerFunction@intSetSeconds 0022                AnalogValue@channel 0027  
                         ?_Mode_0 0070                           ?_Mode_1 0070                           ?_Mode_2 0070  
                         ?_Mode_3 0070                           ?_Mode_4 0070                           ?_Mode_5 0070  
        __size_of_TransmittString 00D2                        __pmaintext 06BF                           ?___wmul 0020  
                      __pintentry 0004                           ?_tc_int 0070                         ?_WriteSPI 0070  
               __end_of_WriteFIFO 0BB9                           ?_strchr 0020                           ?_strlen 0020  
                     _RegisterSet 0C4C                           ?_strstr 002E                     ?_TimerCounter 0070  
      __end_of_TransiverToReceive 0F2B             __end_of_timerFunction 0C04                      ?_AnalogValue 0070  
                      __stringtab 0600                        ??_ReadFIFO 0023                           _DelayDs 0CD9  
       ??_LightWithSensController 002A                           _ReadSPI 0B8B            __size_of_DarknessCheck 0029  
                 __size_of_Mode_0 0004                   __size_of_Mode_1 001A                   __size_of_Mode_2 000D  
                 __size_of_Mode_3 0019                   __size_of_Mode_4 001A                   __size_of_Mode_5 001A  
      OperationMode@bracketStatus 0021             __size_of_eeprom_write 0030                   __size_of___wmul 0023  
                    ?_FindChannel 0070                         _ANSELbits 0188                        ??_WriteSPI 0020  
                 __size_of_tc_int 00D2                           __ptext1 07AD                           __ptext2 0F2B  
                         __ptext3 0048                           __ptext4 0E88                           __ptext5 0E44  
                         __ptext6 0D73                           __ptext7 0C04                           __ptext8 0D9F  
                         __ptext9 073C                           _btnPush 006E                   __size_of_strchr 0015  
                 __size_of_strlen 002C                         _T1CONbits 0010                   __size_of_strstr 0046  
                         _isdigit 0BE2                    ??_TimerCounter 0070                           clrloop0 0B94  
                         _strncmp 0E44              end_of_initialization 0044                      _eeprom_write 0D9F  
           __end_of_TransiverInit 041D            __size_of_OperationMode 0009                 ??i1_OperationMode 0070  
                WriteSPI@databyte 0022              __end_of_RegisterRead 0CB6                     WriteFIFO@Data 0023  
        ??_TransmittedDataHandler 003C                           strlen@s 0026                   _intBlinkCounter 00B1  
               ??_TransmittString 0037                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                     _DarknessCheck 0D4A                     ??_eeprom_read 0020  
                  __end_of_Mode_0 0B8B                    __end_of_Mode_1 0C4C                    __end_of_Mode_2 0BC6  
                  __end_of_Mode_3 0C32                    __end_of_Mode_4 0C80                    __end_of_Mode_5 0C9A  
                  __end_of___wmul 0CD9                    __end_of_tc_int 05C1                    ?_DarknessCheck 0070  
                   _OperationMode 0BA4                    __end_of_strchr 0C19                    __end_of_strlen 0D9F  
                  __end_of_strstr 0ECE               start_initialization 0015             _intDarkCheckIntervall 00B3  
      DarknessCheck@darknessValue 0029                         _SetRFMode 0F91              __size_of_AnalogValue 0029  
               __size_of_ReadFIFO 000E          __CFG_FOSC$INTRC_NOCLKOUT 0000                          ??_Mode_0 002A  
                        ??_Mode_1 002A                          ??_Mode_2 002A                          ??_Mode_3 002A  
                        ??_Mode_4 003C                          ??_Mode_5 003C              __end_of_TimerCounter 0E44  
                        ??___wmul 0024               __end_of_eeprom_read 0D21                     TimerCounter@i 0073  
                     __pdataBANK0 006F                       __pdataBANK1 00D8                          ??_tc_int 0075  
 __size_of_TransmittedDataHandler 01E9                      ?_RegisterSet 0027                          ??_strchr 0022  
                        ??_strlen 0022                          ??_strstr 002F                    ?_OperationMode 0070  
            __size_of_FindChannel 0102         TransmittString@dataString 0035                 RegisterRead@value 0025  
               __size_of_WriteSPI 000E                       __pbssCOMMON 007C                         ___latbits 0002  
                       _WriteFIFO 0BAD                     __pcstackBANK0 0020                      _ReceivedData 0190  
          SetRFMode@mcparam0_read 002D                      _isdigit$1089 0020                        ?_SetRFMode 0070  
                eeprom_write@addr 0022                          ?_DelayDs 0020                 RegisterSet@adress 002A  
                        ?_ReadSPI 0070             __size_of_RegisterRead 001C                _TransiverToReceive 0ECE  
             ?_TransiverToReceive 0070                   ??_DarknessCheck 0028                         __pstrings 0600  
                        ?_isdigit 0070       timerFunction@intTimerNumber 0020                    __size_of_Blink 0033  
                      ?_WriteFIFO 0070                   i1_OperationMode 0B9B              ??_TransiverToReceive 0035  
                    _RegisterRead 0C9A                          ?_strncmp 0028            _TransmittedDataHandler 0048  
               interrupt_function 0004                    ___wmul@product 0024                          _IOCBbits 0096  
                        DelayDs@i 0024                      FindChannel@i 0033                         clear_ram0 0B93  
                     _eeprom_read 0CFD                          _PIE1bits 008C                   _TransmittString 041D  
                        _PIR1bits 000C            __size_of_timerFunction 0012                   ??_OperationMode 0020  
                   SetRFMode@mode 002C                        _ADCON0bits 001F                       __stringbase 060F  
                      _ADCON1bits 009F                 ___wmul@multiplier 0020                          _WPUBbits 0095  
                        _ChannelP 0610                          _ChannelR 061D                          _ChannelS 062A  
        ?_LightWithSensController 0070                       ??_SetRFMode 002B                          _ReadFIFO 0BD4  
           __size_of_TimerCounter 0042                  __size_of_DelayDs 0024                  __size_of_ReadSPI 0008  
                  _bTimerComplete 00AA                  _intMinuteCounter 00B7                 _TransiverReadFIFO 0F2B  
                        _WriteSPI 0BC6                __end_of__stringtab 0610                  _intSecondCounter 006A  
              ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0BA4            __size_of_TransiverInit 00EA  
            __size_of_RegisterSet 001A                  RegisterSet@value 0027                       ??_WriteFIFO 0023  
                __size_of_isdigit 0010                      _TimerCounter 0E02                          __ptext10 0BE2  
                        __ptext11 0CB6                          __ptext20 0ECE                          __ptext12 0BA4  
                        __ptext21 0231                          __ptext13 0BD4                          __ptext30 0B87  
                        __ptext22 0F91                          __ptext14 0333                          __ptext31 05C1  
                        __ptext23 0C4C                          __ptext15 0DCF                          __ptext32 0BF2  
                        __ptext24 0C9A                          __ptext16 0C80                          __ptext33 0D4A  
                        __ptext25 0B8B                          __ptext17 0C66                          __ptext34 0CFD  
                        __ptext26 0BC6                          __ptext18 041D                          __ptext35 0D21  
                        __ptext27 0C19                          __ptext19 0BAD                          __ptext36 0CD9  
                        __ptext28 0BB9                          __ptext37 04EF                          __ptext29 0C32  
                        __ptext38 0B9B                          __ptext39 0E02               ??_TransiverReadFIFO 005F  
                   _timerFunction 0BF2           __end_of_TransmittString 04EF   TransmittedDataHandler@slask_705 0045  
 TransmittedDataHandler@slask_714 004D   TransmittedDataHandler@slask_717 0055                  __size_of_strncmp 0044  
                   __size_of_atoi 0071                     __size_of_main 007D                     __size_of_init 0053  
                      strncmp@len 0029                     _bValueFromPot 006F         __end_of_TransiverReadFIFO 0F91  
                        atoi@sign 002A                        DelayDs@cnt 0020                    FindChannel@cnt 0031  
 __end_of_LightWithSensController 0600              _intHalfSecondCounter 00B5                        _INTCONbits 000B  
              TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063                          isdigit@c 0021  
                  ?_timerFunction 0020                     ??_AnalogValue 0026                 _TransmittedString 00BA  
                        intlevel1 0000                         strchr@chr 0020                         strchr@ptr 0022  
                   _TransiverInit 0333                         strncmp@s1 002D                         strncmp@s2 0028  
                       stringcode 060A                        _OSCCONbits 008F                     ??_FindChannel 002E  
                ?i1_OperationMode 0070                          strlen@cp 0027                          stringdir 060A  
                        stringtab 0600           ?_TransmittedDataHandler 0070                          strstr@s1 0032  
                        strstr@s2 002E                  ?_TransmittString 0035                     ?_eeprom_write 0020  
                  ?_TransiverInit 0070                      ?_eeprom_read 0070               __end_of_AnalogValue 0D4A  
                      _SSPCONbits 0014              _addressDarknessValue 007C  
