

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Thu May 11 19:29:11 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.40
    61                           ; Generated 01/12/2016 GMT
    62                           ; 
    63                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F886 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  0003                     __pidataBANK0:	
   173                           
   174                           ;initializer for _bValueFromPot
   175  0003  3401               	retlw	1
   176                           
   177                           	psect	idataBANK1
   178  0B3C                     __pidataBANK1:	
   179                           
   180                           ;initializer for _intLightOnTime
   181  0B3C  3478               	retlw	120
   182  0B3D  3400               	retlw	0
   183                           
   184                           ;initializer for _intNumberOfBlinks
   185  0B3E  3458               	retlw	88
   186  0B3F  3402               	retlw	2
   187                           
   188                           	psect	strings
   189  0600                     __pstrings:	
   190  0600                     stringtab:	
   191  0600                     __stringtab:	
   192                           
   193                           ;	String table - string pointers are 1 byte each
   194  0600  1BFF               	btfsc	btemp+1,7
   195  0601  2E0A               	ljmp	stringcode
   196  0602  1383               	bcf	3,7
   197  0603  187F               	btfsc	btemp+1,0
   198  0604  1783               	bsf	3,7
   199  0605  0800               	movf	0,w
   200  0606  0A84               	incf	4,f
   201  0607  1903               	skipnz
   202  0608  0AFF               	incf	btemp+1,f
   203  0609  0008               	return
   204  060A                     stringcode:	
   205  060A                     stringdir:	
   206  060A  3006               	movlw	high stringdir
   207  060B  008A               	movwf	10
   208  060C  0804               	movf	4,w
   209  060D  0A84               	incf	4,f
   210  060E  0782               	addwf	2,f
   211  060F                     __stringbase:	
   212  060F  3400               	retlw	0
   213  0610                     __end_of__stringtab:	
   214  0610                     _ChannelP:	
   215  0610  343F               	retlw	63
   216  0611  3447               	retlw	71
   217  0612  344F               	retlw	79
   218  0613  3457               	retlw	87
   219  0614  345F               	retlw	95
   220  0615  3477               	retlw	119
   221  0616  347E               	retlw	126
   222  0617  347F               	retlw	127
   223  0618  3486               	retlw	134
   224  0619  3487               	retlw	135
   225  061A  3437               	retlw	55
   226  061B  3467               	retlw	103
   227  061C  346F               	retlw	111
   228  061D                     __end_of_ChannelP:	
   229  061D                     _ChannelR:	
   230  061D  344F               	retlw	79
   231  061E  3459               	retlw	89
   232  061F  3463               	retlw	99
   233  0620  346D               	retlw	109
   234  0621  3477               	retlw	119
   235  0622  3495               	retlw	149
   236  0623  349F               	retlw	159
   237  0624  349F               	retlw	159
   238  0625  34A9               	retlw	169
   239  0626  34A9               	retlw	169
   240  0627  3445               	retlw	69
   241  0628  3481               	retlw	129
   242  0629  348B               	retlw	139
   243  062A                     __end_of_ChannelR:	
   244  062A                     _ChannelS:	
   245  062A  3418               	retlw	24
   246  062B  341B               	retlw	27
   247  062C  341E               	retlw	30
   248  062D  3421               	retlw	33
   249  062E  3424               	retlw	36
   250  062F  342D               	retlw	45
   251  0630  347B               	retlw	123
   252  0631  3430               	retlw	48
   253  0632  347E               	retlw	126
   254  0633  3433               	retlw	51
   255  0634  3415               	retlw	21
   256  0635  3427               	retlw	39
   257  0636  342A               	retlw	42
   258  0637                     __end_of_ChannelS:	
   259  001F                     _ADCON0bits	set	31
   260  001E                     _ADRESH	set	30
   261  000B                     _INTCONbits	set	11
   262  000C                     _PIR1bits	set	12
   263  0005                     _PORTA	set	5
   264  0005                     _PORTAbits	set	5
   265  0006                     _PORTB	set	6
   266  0006                     _PORTBbits	set	6
   267  0007                     _PORTC	set	7
   268  0007                     _PORTCbits	set	7
   269  0013                     _SSPBUF	set	19
   270  0014                     _SSPCONbits	set	20
   271  0010                     _T1CON	set	16
   272  0010                     _T1CONbits	set	16
   273  000F                     _TMR1H	set	15
   274  000E                     _TMR1L	set	14
   275  0018                     _CARRY	set	24
   276  005F                     _GIE	set	95
   277  0058                     _RBIF	set	88
   278  0060                     _TMR1IF	set	96
   279  0080                     _TMR1ON	set	128
   280  009F                     _ADCON1bits	set	159
   281  0096                     _IOCBbits	set	150
   282  0081                     _OPTION_REGbits	set	129
   283  008F                     _OSCCONbits	set	143
   284  008C                     _PIE1bits	set	140
   285  0094                     _SSPSTATbits	set	148
   286  0085                     _TRISA	set	133
   287  0086                     _TRISB	set	134
   288  0087                     _TRISC	set	135
   289  0095                     _WPUBbits	set	149
   290  0463                     _SSPIE	set	1123
   291  010D                     _EEADR	set	269
   292  010C                     _EEDATA	set	268
   293  0188                     _ANSEL	set	392
   294  0189                     _ANSELH	set	393
   295  0188                     _ANSELbits	set	392
   296  018C                     _EECON1	set	396
   297  018D                     _EECON2	set	397
   298  0C60                     _RD	set	3168
   299  0C61                     _WR	set	3169
   300  0C62                     _WREN	set	3170
   301  0637                     STR_13:	
   302  0637  344E               	retlw	78	;'N'
   303  0638  346F               	retlw	111	;'o'
   304  0639  3474               	retlw	116	;'t'
   305  063A  3420               	retlw	32	;' '
   306  063B  3444               	retlw	68	;'D'
   307  063C  3461               	retlw	97	;'a'
   308  063D  3472               	retlw	114	;'r'
   309  063E  346B               	retlw	107	;'k'
   310  063F  3420               	retlw	32	;' '
   311  0640  3420               	retlw	32	;' '
   312  0641  3420               	retlw	32	;' '
   313  0642  3420               	retlw	32	;' '
   314  0643  3420               	retlw	32	;' '
   315  0644  3400               	retlw	0
   316  0645                     STR_12:	
   317  0645  3449               	retlw	73	;'I'
   318  0646  3474               	retlw	116	;'t'
   319  0647  3427               	retlw	39	;'''
   320  0648  3473               	retlw	115	;'s'
   321  0649  3420               	retlw	32	;' '
   322  064A  3444               	retlw	68	;'D'
   323  064B  3461               	retlw	97	;'a'
   324  064C  3472               	retlw	114	;'r'
   325  064D  346B               	retlw	107	;'k'
   326  064E  3420               	retlw	32	;' '
   327  064F  3420               	retlw	32	;' '
   328  0650  3420               	retlw	32	;' '
   329  0651  3420               	retlw	32	;' '
   330  0652  3400               	retlw	0
   331  0653                     STR_2:	
   332  0653  344E               	retlw	78	;'N'
   333  0654  3431               	retlw	49	;'1'
   334  0655  3453               	retlw	83	;'S'
   335  0656  3454               	retlw	84	;'T'
   336  0657  3441               	retlw	65	;'A'
   337  0658  3452               	retlw	82	;'R'
   338  0659  3454               	retlw	84	;'T'
   339  065A  3445               	retlw	69	;'E'
   340  065B  3444               	retlw	68	;'D'
   341  065C  3400               	retlw	0
   342  065D                     STR_4:	
   343  065D  344E               	retlw	78	;'N'
   344  065E  3432               	retlw	50	;'2'
   345  065F  3453               	retlw	83	;'S'
   346  0660  3454               	retlw	84	;'T'
   347  0661  3441               	retlw	65	;'A'
   348  0662  3452               	retlw	82	;'R'
   349  0663  3454               	retlw	84	;'T'
   350  0664  3445               	retlw	69	;'E'
   351  0665  3444               	retlw	68	;'D'
   352  0666  3400               	retlw	0
   353  0667                     STR_11:	
   354  0667  3444               	retlw	68	;'D'
   355  0668  3441               	retlw	65	;'A'
   356  0669  3452               	retlw	82	;'R'
   357  066A  344B               	retlw	75	;'K'
   358  066B  3443               	retlw	67	;'C'
   359  066C  3441               	retlw	65	;'A'
   360  066D  344C               	retlw	76	;'L'
   361  066E  3443               	retlw	67	;'C'
   362  066F  3400               	retlw	0
   363  0670                     STR_17:	
   364  0670  3443               	retlw	67	;'C'
   365  0671  3448               	retlw	72	;'H'
   366  0672  3453               	retlw	83	;'S'
   367  0673  3454               	retlw	84	;'T'
   368  0674  3441               	retlw	65	;'A'
   369  0675  3454               	retlw	84	;'T'
   370  0676  3445               	retlw	69	;'E'
   371  0677  3400               	retlw	0
   372  0678                     STR_1:	
   373  0678  344E               	retlw	78	;'N'
   374  0679  3431               	retlw	49	;'1'
   375  067A  3442               	retlw	66	;'B'
   376  067B  344C               	retlw	76	;'L'
   377  067C  3449               	retlw	73	;'I'
   378  067D  344E               	retlw	78	;'N'
   379  067E  344B               	retlw	75	;'K'
   380  067F  3400               	retlw	0
   381  0680                     STR_3:	
   382  0680  344E               	retlw	78	;'N'
   383  0681  3432               	retlw	50	;'2'
   384  0682  3442               	retlw	66	;'B'
   385  0683  344C               	retlw	76	;'L'
   386  0684  3449               	retlw	73	;'I'
   387  0685  344E               	retlw	78	;'N'
   388  0686  344B               	retlw	75	;'K'
   389  0687  3400               	retlw	0
   390  0688                     STR_9:	
   391  0688  3453               	retlw	83	;'S'
   392  0689  3445               	retlw	69	;'E'
   393  068A  344E               	retlw	78	;'N'
   394  068B  3453               	retlw	83	;'S'
   395  068C  3456               	retlw	86	;'V'
   396  068D  3441               	retlw	65	;'A'
   397  068E  344C               	retlw	76	;'L'
   398  068F  3400               	retlw	0
   399  0690                     STR_14:	
   400  0690  3453               	retlw	83	;'S'
   401  0691  3454               	retlw	84	;'T'
   402  0692  3441               	retlw	65	;'A'
   403  0693  3454               	retlw	84	;'T'
   404  0694  3445               	retlw	69	;'E'
   405  0695  343F               	retlw	63	;'?'
   406  0696  3400               	retlw	0
   407  0697                     STR_8:	
   408  0697  3446               	retlw	70	;'F'
   409  0698  344C               	retlw	76	;'L'
   410  0699  3441               	retlw	65	;'A'
   411  069A  3453               	retlw	83	;'S'
   412  069B  3448               	retlw	72	;'H'
   413  069C  3442               	retlw	66	;'B'
   414  069D  3400               	retlw	0
   415  069E                     STR_10:	
   416  069E  3450               	retlw	80	;'P'
   417  069F  344F               	retlw	79	;'O'
   418  06A0  3454               	retlw	84	;'T'
   419  06A1  3456               	retlw	86	;'V'
   420  06A2  3441               	retlw	65	;'A'
   421  06A3  344C               	retlw	76	;'L'
   422  06A4  3400               	retlw	0
   423  06A5                     STR_7:	
   424  06A5  3446               	retlw	70	;'F'
   425  06A6  344C               	retlw	76	;'L'
   426  06A7  3441               	retlw	65	;'A'
   427  06A8  3453               	retlw	83	;'S'
   428  06A9  3448               	retlw	72	;'H'
   429  06AA  344C               	retlw	76	;'L'
   430  06AB  3400               	retlw	0
   431  06AC                     STR_19:	
   432  06AC  3453               	retlw	83	;'S'
   433  06AD  3445               	retlw	69	;'E'
   434  06AE  3454               	retlw	84	;'T'
   435  06AF  3444               	retlw	68	;'D'
   436  06B0  3456               	retlw	86	;'V'
   437  06B1  3400               	retlw	0
   438  06B2                     STR_18:	
   439  06B2  3452               	retlw	82	;'R'
   440  06B3  344D               	retlw	77	;'M'
   441  06B4  3444               	retlw	68	;'D'
   442  06B5  3456               	retlw	86	;'V'
   443  06B6  3400               	retlw	0
   444  06B7                     STR_16:	
   445  06B7  3450               	retlw	80	;'P'
   446  06B8  3449               	retlw	73	;'I'
   447  06B9  3443               	retlw	67	;'C'
   448  06BA  3400               	retlw	0
   449  06BB                     STR_15:	
   450  06BB  3450               	retlw	80	;'P'
   451  06BC  346F               	retlw	111	;'o'
   452  06BD  3474               	retlw	116	;'t'
   453  06BE  3400               	retlw	0
   454  0653                     
   455                           ; #config settings
   456  0000                     
   457                           	psect	cinit
   458  0015                     start_initialization:	
   459  0015                     __initialization:	
   460                           
   461                           ; Initialize objects allocated to BANK1
   462  0015  1683               	bsf	3,5	;RP0=1, select bank1
   463  0016  1303               	bcf	3,6	;RP1=0, select bank1
   464  0017  120A  158A  233C  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   465  001C  00D8               	movwf	__pdataBANK1& (0+127)
   466  001D  120A  158A  233D  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   467  0022  00D9               	movwf	(__pdataBANK1+1)& (0+127)
   468  0023  120A  158A  233E  120A  118A  	fcall	__pidataBANK1+2	;fetch initializer
   469  0028  00DA               	movwf	(__pdataBANK1+2)& (0+127)
   470  0029  120A  158A  233F  120A  118A  	fcall	__pidataBANK1+3	;fetch initializer
   471  002E  00DB               	movwf	(__pdataBANK1+3)& (0+127)
   472                           
   473                           ; Initialize objects allocated to BANK0
   474  002F  1283               	bcf	3,5	;RP0=0, select bank0
   475  0030  1303               	bcf	3,6	;RP1=0, select bank0
   476  0031  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   477  0036  00EF               	movwf	__pdataBANK0& (0+127)
   478                           
   479                           ; Clear objects allocated to BANK3
   480  0037  1783               	bsf	3,7	;select IRP bank2
   481  0038  3090               	movlw	low __pbssBANK3
   482  0039  0084               	movwf	4
   483  003A  30B8               	movlw	low (__pbssBANK3+40)
   484  003B  120A  158A  2348  120A  118A  	fcall	clear_ram0
   485                           
   486                           ; Clear objects allocated to BANK1
   487  0040  1383               	bcf	3,7	;select IRP bank0
   488  0041  30A0               	movlw	low __pbssBANK1
   489  0042  0084               	movwf	4
   490  0043  30D8               	movlw	low (__pbssBANK1+56)
   491  0044  120A  158A  2348   	fcall	clear_ram0
   492                           
   493                           ; Clear objects allocated to BANK0
   494  0047  01E8               	clrf	__pbssBANK0& (0+127)
   495  0048  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   496  0049  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   497  004A  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   498  004B  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   499  004C  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   500  004D  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   501                           
   502                           ; Clear objects allocated to COMMON
   503  004E  01FC               	clrf	__pbssCOMMON& (0+127)
   504  004F  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   505  0050                     end_of_initialization:	
   506                           ;End of C runtime variable initialization code
   507                           
   508  0050                     __end_of__initialization:	
   509  0050  0183               	clrf	3
   510  0051  120A  118A  2EBF   	ljmp	_main	;jump to C main() function
   511                           
   512                           	psect	bssCOMMON
   513  007C                     __pbssCOMMON:	
   514  007C                     _addressDarknessValue:	
   515  007C                     	ds	2
   516                           
   517                           	psect	bssBANK0
   518  0068                     __pbssBANK0:	
   519  0068                     _intBlinkCycle:	
   520  0068                     	ds	2
   521  006A                     _intSecondCounter:	
   522  006A                     	ds	2
   523  006C                     _bDark:	
   524  006C                     	ds	1
   525  006D                     _bTransiverModeReceive:	
   526  006D                     	ds	1
   527  006E                     _btnPush:	
   528  006E                     	ds	1
   529                           
   530                           	psect	dataBANK0
   531  006F                     __pdataBANK0:	
   532  006F                     _bValueFromPot:	
   533  006F                     	ds	1
   534                           
   535                           	psect	bssBANK1
   536  00A0                     __pbssBANK1:	
   537  00A0                     _intClockTimer:	
   538  00A0                     	ds	10
   539  00AA                     _bTimerComplete:	
   540  00AA                     	ds	5
   541  00AF                     _channelFound:	
   542  00AF                     	ds	2
   543  00B1                     _intBlinkCounter:	
   544  00B1                     	ds	2
   545  00B3                     _intDarkCheckIntervall:	
   546  00B3                     	ds	2
   547  00B5                     _intHalfSecondCounter:	
   548  00B5                     	ds	2
   549  00B7                     _intMinuteCounter:	
   550  00B7                     	ds	2
   551  00B9                     _bChannelFound:	
   552  00B9                     	ds	1
   553  00BA                     _TransmittedString:	
   554  00BA                     	ds	30
   555                           
   556                           	psect	dataBANK1
   557  00D8                     __pdataBANK1:	
   558  00D8                     _intLightOnTime:	
   559  00D8                     	ds	2
   560  00DA                     _intNumberOfBlinks:	
   561  00DA                     	ds	2
   562                           
   563                           	psect	bssBANK3
   564  0190                     __pbssBANK3:	
   565  0190                     _ReceivedData:	
   566  0190                     	ds	40
   567                           
   568                           	psect	clrtext
   569  0B48                     clear_ram0:	
   570                           ;	Called with FSR containing the base address, and
   571                           ;	W with the last address+1
   572                           
   573  0B48  0064               	clrwdt	;clear the watchdog before getting into this loop
   574  0B49                     clrloop0:	
   575  0B49  0180               	clrf	0	;clear RAM location pointed to by FSR
   576  0B4A  0A84               	incf	4,f	;increment pointer
   577  0B4B  0604               	xorwf	4,w	;XOR with final address
   578  0B4C  1903               	btfsc	3,2	;have we reached the end yet?
   579  0B4D  3400               	retlw	0	;all done for this memory range, return
   580  0B4E  0604               	xorwf	4,w	;XOR again to restore value
   581  0B4F  2B49               	goto	clrloop0	;do the next byte
   582                           
   583                           	psect	cstackCOMMON
   584  0070                     __pcstackCOMMON:	
   585  0070                     ?_isdigit:	
   586  0070                     ?_init:	
   587                           ; 1 bit 
   588                           
   589  0070                     ?_OperationMode:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_TransiverInit:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_Mode_0:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_Mode_1:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_Mode_2:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_Mode_3:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_Mode_4:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_Mode_5:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_TransiverToReceive:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_TransiverReadFIFO:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_SetRFMode:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_RegisterRead:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0070                     ?_FindChannel:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0070                     ?_ReadFIFO:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_TransmittedDataHandler:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_AnalogValue:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_DarknessCheck:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_eeprom_read:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_WriteFIFO:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_LightWithSensController:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_main:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_TimerCounter:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_TimerCounter:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_WriteSPI:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_ReadSPI:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0070                     ?_tc_int:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0070                     ?i1_OperationMode:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ??i1_OperationMode:	
   671                           ; 1 bytes @ 0x0
   672                           
   673                           
   674                           ; 1 bytes @ 0x0
   675  0070                     	ds	1
   676  0071                     i1OperationMode@bracketStatus:	
   677                           
   678                           ; 1 bytes @ 0x1
   679  0071                     	ds	2
   680  0073                     TimerCounter@i:	
   681                           
   682                           ; 2 bytes @ 0x3
   683  0073                     	ds	2
   684  0075                     ??_tc_int:	
   685                           
   686                           ; 1 bytes @ 0x5
   687  0075                     	ds	7
   688                           
   689                           	psect	cstackBANK0
   690  0020                     __pcstackBANK0:	
   691  0020                     ??_init:	
   692  0020                     ??_OperationMode:	
   693                           ; 1 bytes @ 0x0
   694                           
   695  0020                     ?_timerFunction:	
   696                           ; 1 bytes @ 0x0
   697                           
   698  0020                     ?_DelayDs:	
   699                           ; 1 bytes @ 0x0
   700                           
   701  0020                     ??_eeprom_read:	
   702                           ; 1 bytes @ 0x0
   703                           
   704  0020                     ?_eeprom_write:	
   705                           ; 1 bytes @ 0x0
   706                           
   707  0020                     ??_isdigit:	
   708                           ; 1 bytes @ 0x0
   709                           
   710  0020                     ?_strchr:	
   711                           ; 1 bytes @ 0x0
   712                           
   713  0020                     ??_WriteSPI:	
   714                           ; 1 bytes @ 0x0
   715                           
   716  0020                     ?_strlen:	
   717                           ; 1 bytes @ 0x0
   718                           
   719  0020                     ?___wmul:	
   720                           ; 2 bytes @ 0x0
   721                           
   722  0020                     eeprom_write@value:	
   723                           ; 2 bytes @ 0x0
   724                           
   725  0020                     _isdigit$1090:	
   726                           ; 1 bytes @ 0x0
   727                           
   728  0020                     timerFunction@intTimerNumber:	
   729                           ; 1 bytes @ 0x0
   730                           
   731  0020                     DelayDs@cnt:	
   732                           ; 2 bytes @ 0x0
   733                           
   734  0020                     ___wmul@multiplier:	
   735                           ; 2 bytes @ 0x0
   736                           
   737  0020                     strchr@chr:	
   738                           ; 2 bytes @ 0x0
   739                           
   740                           
   741                           ; 2 bytes @ 0x0
   742  0020                     	ds	1
   743  0021                     ??_eeprom_write:	
   744  0021                     WriteSPI@buffer:	
   745                           ; 1 bytes @ 0x1
   746                           
   747  0021                     OperationMode@bracketStatus:	
   748                           ; 1 bytes @ 0x1
   749                           
   750  0021                     eeprom_read@addr:	
   751                           ; 1 bytes @ 0x1
   752                           
   753  0021                     isdigit@c:	
   754                           ; 1 bytes @ 0x1
   755                           
   756                           
   757                           ; 1 bytes @ 0x1
   758  0021                     	ds	1
   759  0022                     ??_DelayDs:	
   760  0022                     ??_strlen:	
   761                           ; 1 bytes @ 0x2
   762                           
   763  0022                     ??_strchr:	
   764                           ; 1 bytes @ 0x2
   765                           
   766  0022                     WriteSPI@databyte:	
   767                           ; 1 bytes @ 0x2
   768                           
   769  0022                     eeprom_write@addr:	
   770                           ; 1 bytes @ 0x2
   771                           
   772  0022                     strchr@ptr:	
   773                           ; 1 bytes @ 0x2
   774                           
   775  0022                     timerFunction@intSetSeconds:	
   776                           ; 1 bytes @ 0x2
   777                           
   778  0022                     ___wmul@multiplicand:	
   779                           ; 2 bytes @ 0x2
   780                           
   781                           
   782                           ; 2 bytes @ 0x2
   783  0022                     	ds	1
   784  0023                     ??_RegisterRead:	
   785  0023                     ??_ReadFIFO:	
   786                           ; 1 bytes @ 0x3
   787                           
   788  0023                     ??_WriteFIFO:	
   789                           ; 1 bytes @ 0x3
   790                           
   791  0023                     ??_ReadSPI:	
   792                           ; 1 bytes @ 0x3
   793                           
   794  0023                     WriteFIFO@Data:	
   795                           ; 1 bytes @ 0x3
   796                           
   797                           
   798                           ; 1 bytes @ 0x3
   799  0023                     	ds	1
   800  0024                     ??_timerFunction:	
   801  0024                     ??___wmul:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0024                     ReadFIFO@value:	
   805                           ; 1 bytes @ 0x4
   806                           
   807  0024                     DelayDs@i:	
   808                           ; 1 bytes @ 0x4
   809                           
   810  0024                     ___wmul@product:	
   811                           ; 2 bytes @ 0x4
   812                           
   813                           
   814                           ; 2 bytes @ 0x4
   815  0024                     	ds	1
   816  0025                     RegisterRead@value:	
   817                           
   818                           ; 1 bytes @ 0x5
   819  0025                     	ds	1
   820  0026                     ??_AnalogValue:	
   821  0026                     ?_Blink:	
   822                           ; 1 bytes @ 0x6
   823                           
   824  0026                     ?_atoi:	
   825                           ; 1 bytes @ 0x6
   826                           
   827  0026                     RegisterRead@adress:	
   828                           ; 2 bytes @ 0x6
   829                           
   830  0026                     strlen@s:	
   831                           ; 1 bytes @ 0x6
   832                           
   833  0026                     Blink@n:	
   834                           ; 1 bytes @ 0x6
   835                           
   836                           
   837                           ; 2 bytes @ 0x6
   838  0026                     	ds	1
   839  0027                     ?_RegisterSet:	
   840  0027                     RegisterSet@value:	
   841                           ; 1 bytes @ 0x7
   842                           
   843  0027                     AnalogValue@channel:	
   844                           ; 1 bytes @ 0x7
   845                           
   846  0027                     strlen@cp:	
   847                           ; 1 bytes @ 0x7
   848                           
   849                           
   850                           ; 1 bytes @ 0x7
   851  0027                     	ds	1
   852  0028                     ??_RegisterSet:	
   853  0028                     ??_DarknessCheck:	
   854                           ; 1 bytes @ 0x8
   855                           
   856  0028                     ??_atoi:	
   857                           ; 1 bytes @ 0x8
   858                           
   859  0028                     ??_Blink:	
   860                           ; 1 bytes @ 0x8
   861                           
   862  0028                     ?_strncmp:	
   863                           ; 1 bytes @ 0x8
   864                           
   865  0028                     strncmp@s2:	
   866                           ; 2 bytes @ 0x8
   867                           
   868                           
   869                           ; 1 bytes @ 0x8
   870  0028                     	ds	1
   871  0029                     DarknessCheck@darknessValue:	
   872  0029                     Blink@i:	
   873                           ; 1 bytes @ 0x9
   874                           
   875  0029                     strncmp@len:	
   876                           ; 2 bytes @ 0x9
   877                           
   878                           
   879                           ; 2 bytes @ 0x9
   880  0029                     	ds	1
   881  002A                     ??_Mode_0:	
   882  002A                     ??_Mode_1:	
   883                           ; 1 bytes @ 0xA
   884                           
   885  002A                     ??_Mode_2:	
   886                           ; 1 bytes @ 0xA
   887                           
   888  002A                     ??_Mode_3:	
   889                           ; 1 bytes @ 0xA
   890                           
   891  002A                     ??_LightWithSensController:	
   892                           ; 1 bytes @ 0xA
   893                           
   894  002A                     RegisterSet@adress:	
   895                           ; 1 bytes @ 0xA
   896                           
   897  002A                     atoi@sign:	
   898                           ; 1 bytes @ 0xA
   899                           
   900                           
   901                           ; 1 bytes @ 0xA
   902  002A                     	ds	1
   903  002B                     ??_SetRFMode:	
   904  002B                     ??_strncmp:	
   905                           ; 1 bytes @ 0xB
   906                           
   907  002B                     atoi@a:	
   908                           ; 1 bytes @ 0xB
   909                           
   910                           
   911                           ; 2 bytes @ 0xB
   912  002B                     	ds	1
   913  002C                     SetRFMode@mode:	
   914                           
   915                           ; 1 bytes @ 0xC
   916  002C                     	ds	1
   917  002D                     SetRFMode@mcparam0_read:	
   918  002D                     atoi@s:	
   919                           ; 1 bytes @ 0xD
   920                           
   921  002D                     strncmp@s1:	
   922                           ; 1 bytes @ 0xD
   923                           
   924                           
   925                           ; 1 bytes @ 0xD
   926  002D                     	ds	1
   927  002E                     ??_FindChannel:	
   928  002E                     ?_strstr:	
   929                           ; 1 bytes @ 0xE
   930                           
   931  002E                     strstr@s2:	
   932                           ; 1 bytes @ 0xE
   933                           
   934                           
   935                           ; 1 bytes @ 0xE
   936  002E                     	ds	1
   937  002F                     ??_strstr:	
   938                           
   939                           ; 1 bytes @ 0xF
   940  002F                     	ds	2
   941  0031                     FindChannel@cnt:	
   942                           
   943                           ; 2 bytes @ 0x11
   944  0031                     	ds	1
   945  0032                     strstr@s1:	
   946                           
   947                           ; 1 bytes @ 0x12
   948  0032                     	ds	1
   949  0033                     FindChannel@i:	
   950                           
   951                           ; 2 bytes @ 0x13
   952  0033                     	ds	2
   953  0035                     ??_TransiverInit:	
   954  0035                     ??_TransiverToReceive:	
   955                           ; 1 bytes @ 0x15
   956                           
   957  0035                     ?_TransmittString:	
   958                           ; 1 bytes @ 0x15
   959                           
   960  0035                     TransmittString@dataString:	
   961                           ; 1 bytes @ 0x15
   962                           
   963                           
   964                           ; 2 bytes @ 0x15
   965  0035                     	ds	2
   966  0037                     ??_TransmittString:	
   967                           
   968                           ; 1 bytes @ 0x17
   969  0037                     	ds	3
   970  003A                     TransmittString@i:	
   971                           
   972                           ; 2 bytes @ 0x1A
   973  003A                     	ds	2
   974  003C                     ??_Mode_4:	
   975  003C                     ??_Mode_5:	
   976                           ; 1 bytes @ 0x1C
   977                           
   978  003C                     ??_TransmittedDataHandler:	
   979                           ; 1 bytes @ 0x1C
   980                           
   981                           
   982                           ; 1 bytes @ 0x1C
   983  003C                     	ds	1
   984  003D                     TransmittedDataHandler@slask:	
   985                           
   986                           ; 8 bytes @ 0x1D
   987  003D                     	ds	8
   988  0045                     TransmittedDataHandler@slask_706:	
   989                           
   990                           ; 8 bytes @ 0x25
   991  0045                     	ds	8
   992  004D                     TransmittedDataHandler@slask_715:	
   993                           
   994                           ; 8 bytes @ 0x2D
   995  004D                     	ds	8
   996  0055                     TransmittedDataHandler@slask_718:	
   997                           
   998                           ; 8 bytes @ 0x35
   999  0055                     	ds	8
  1000  005D                     TransmittedDataHandler@value:	
  1001                           
  1002                           ; 2 bytes @ 0x3D
  1003  005D                     	ds	2
  1004  005F                     ??_TransiverReadFIFO:	
  1005                           
  1006                           ; 1 bytes @ 0x3F
  1007  005F                     	ds	2
  1008  0061                     TransiverReadFIFO@i:	
  1009                           
  1010                           ; 2 bytes @ 0x41
  1011  0061                     	ds	2
  1012  0063                     TransiverReadFIFO@j:	
  1013                           
  1014                           ; 2 bytes @ 0x43
  1015  0063                     	ds	2
  1016  0065                     ??_main:	
  1017                           
  1018                           ; 1 bytes @ 0x45
  1019  0065                     	ds	3
  1020                           
  1021                           	psect	maintext
  1022  06BF                     __pmaintext:	
  1023 ;;
  1024 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1025 ;;
  1026 ;; *************** function _main *****************
  1027 ;; Defined at:
  1028 ;;		line 121 in file "../Main Card V10.0.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;		None
  1033 ;; Return value:  Size  Location     Type
  1034 ;;                  1    wreg      void 
  1035 ;; Registers used:
  1036 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1037 ;; Tracked objects:
  1038 ;;		On entry : B00/0
  1039 ;;		On exit  : 0/0
  1040 ;;		Unchanged: 0/0
  1041 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1042 ;;      Params:         0       0       0       0       0
  1043 ;;      Locals:         0       0       0       0       0
  1044 ;;      Temps:          0       3       0       0       0
  1045 ;;      Totals:         0       3       0       0       0
  1046 ;;Total ram usage:        3 bytes
  1047 ;; Hardware stack levels required when called:   10
  1048 ;; This function calls:
  1049 ;;		_Mode_0
  1050 ;;		_Mode_1
  1051 ;;		_Mode_2
  1052 ;;		_Mode_3
  1053 ;;		_Mode_4
  1054 ;;		_Mode_5
  1055 ;;		_OperationMode
  1056 ;;		_TransiverInit
  1057 ;;		_TransiverReadFIFO
  1058 ;;		_TransiverToReceive
  1059 ;;		_init
  1060 ;; This function is called by:
  1061 ;;		Startup code after reset
  1062 ;; This function uses a non-reentrant model
  1063 ;;
  1064                           
  1065                           
  1066                           ;psect for function _main
  1067  06BF                     _main:	
  1068                           
  1069                           ;Main Card V10.0.c: 124: init();
  1070                           
  1071                           ;incstack = 0
  1072 ;; hardware stack exceeded
  1073                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1074  06BF  120A  158A  267C  120A  118A  	fcall	_init
  1075                           
  1076                           ;Main Card V10.0.c: 126: if(OperationMode() == 3){
  1077  06C4  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1078  06C9  3A03               	xorlw	3
  1079  06CA  1D03               	skipz
  1080  06CB  2ED6               	goto	l175
  1081                           
  1082                           ;Main Card V10.0.c: 127: intNumberOfBlinks = 180;
  1083  06CC  30B4               	movlw	180
  1084  06CD  1683               	bsf	3,5	;RP0=1, select bank1
  1085  06CE  1303               	bcf	3,6	;RP1=0, select bank1
  1086  06CF  00DA               	movwf	_intNumberOfBlinks^(0+128)
  1087  06D0  3000               	movlw	0
  1088  06D1  00DB               	movwf	(_intNumberOfBlinks^(0+128)+1)
  1089                           
  1090                           ;Main Card V10.0.c: 128: intLightOnTime = 180;
  1091  06D2  30B4               	movlw	180
  1092  06D3  00D8               	movwf	_intLightOnTime^(0+128)
  1093  06D4  3000               	movlw	0
  1094  06D5  00D9               	movwf	(_intLightOnTime^(0+128)+1)
  1095  06D6                     l175:	
  1096                           
  1097                           ;Main Card V10.0.c: 129: }
  1098                           ;Main Card V10.0.c: 130: _delay((unsigned long)((800)*(4000000/4000.0)));
  1099  06D6  3005               	movlw	5
  1100  06D7  1283               	bcf	3,5	;RP0=0, select bank0
  1101  06D8  1303               	bcf	3,6	;RP1=0, select bank0
  1102  06D9  00E7               	movwf	??_main+2
  1103  06DA  300F               	movlw	15
  1104  06DB  00E6               	movwf	??_main+1
  1105  06DC  30F0               	movlw	240
  1106  06DD  00E5               	movwf	??_main
  1107  06DE                     u2357:	
  1108  06DE  0BE5               	decfsz	??_main,f
  1109  06DF  2EDE               	goto	u2357
  1110  06E0  0BE6               	decfsz	??_main+1,f
  1111  06E1  2EDE               	goto	u2357
  1112  06E2  0BE7               	decfsz	??_main+2,f
  1113  06E3  2EDE               	goto	u2357
  1114  06E4  0000               	nop
  1115                           
  1116                           ;Main Card V10.0.c: 131: TransiverInit();
  1117  06E5  120A  118A  242F  120A  118A  	fcall	_TransiverInit
  1118  06EA                     l2425:	
  1119                           ;Main Card V10.0.c: 133: while(1)
  1120                           
  1121                           
  1122                           ;Main Card V10.0.c: 134: {
  1123                           ;Main Card V10.0.c: 135: if(OperationMode() == 0)
  1124  06EA  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1125  06EF  3A00               	xorlw	0
  1126  06F0  1D03               	skipz
  1127  06F1  2EF7               	goto	l2429
  1128                           
  1129                           ;Main Card V10.0.c: 136: {
  1130                           ;Main Card V10.0.c: 137: Mode_0();
  1131  06F2  120A  158A  2338  120A  118A  	fcall	_Mode_0
  1132  06F7                     l2429:	
  1133                           
  1134                           ;Main Card V10.0.c: 138: }
  1135                           ;Main Card V10.0.c: 139: if(OperationMode() == 1)
  1136  06F7  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1137  06FC  3A01               	xorlw	1
  1138  06FD  1D03               	skipz
  1139  06FE  2F04               	goto	l2433
  1140                           
  1141                           ;Main Card V10.0.c: 140: {
  1142                           ;Main Card V10.0.c: 141: Mode_1();
  1143  06FF  120A  158A  23C5  120A  118A  	fcall	_Mode_1
  1144  0704                     l2433:	
  1145                           
  1146                           ;Main Card V10.0.c: 142: }
  1147                           ;Main Card V10.0.c: 144: if(OperationMode() == 2)
  1148  0704  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1149  0709  3A02               	xorlw	2
  1150  070A  1D03               	skipz
  1151  070B  2F11               	goto	l2437
  1152                           
  1153                           ;Main Card V10.0.c: 145: {
  1154                           ;Main Card V10.0.c: 146: Mode_2();
  1155  070C  120A  118A  27F3  120A  118A  	fcall	_Mode_2
  1156  0711                     l2437:	
  1157                           
  1158                           ;Main Card V10.0.c: 147: }
  1159                           ;Main Card V10.0.c: 148: if(OperationMode() == 3)
  1160  0711  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1161  0716  3A03               	xorlw	3
  1162  0717  1D03               	skipz
  1163  0718  2F1E               	goto	l2441
  1164                           
  1165                           ;Main Card V10.0.c: 149: {
  1166                           ;Main Card V10.0.c: 150: Mode_3();
  1167  0719  120A  158A  23AC  120A  118A  	fcall	_Mode_3
  1168  071E                     l2441:	
  1169                           
  1170                           ;Main Card V10.0.c: 151: }
  1171                           ;Main Card V10.0.c: 153: if(OperationMode() == 4)
  1172  071E  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1173  0723  3A04               	xorlw	4
  1174  0724  1D03               	skipz
  1175  0725  2F2B               	goto	l2445
  1176                           
  1177                           ;Main Card V10.0.c: 154: {
  1178                           ;Main Card V10.0.c: 155: Mode_4();
  1179  0726  120A  158A  23F9  120A  118A  	fcall	_Mode_4
  1180  072B                     l2445:	
  1181                           
  1182                           ;Main Card V10.0.c: 156: }
  1183                           ;Main Card V10.0.c: 158: if(OperationMode() == 5)
  1184  072B  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1185  0730  3A05               	xorlw	5
  1186  0731  1D03               	skipz
  1187  0732  2F38               	goto	l2449
  1188                           
  1189                           ;Main Card V10.0.c: 159: {
  1190                           ;Main Card V10.0.c: 160: Mode_5();
  1191  0733  120A  158A  2413  120A  118A  	fcall	_Mode_5
  1192  0738                     l2449:	
  1193                           
  1194                           ;Main Card V10.0.c: 161: }
  1195                           ;Main Card V10.0.c: 165: if(!bTransiverModeReceive)
  1196  0738  1283               	bcf	3,5	;RP0=0, select bank0
  1197  0739  1303               	bcf	3,6	;RP1=0, select bank0
  1198  073A  086D               	movf	_bTransiverModeReceive,w
  1199  073B  1D03               	btfss	3,2
  1200  073C  2F42               	goto	l2453
  1201                           
  1202                           ;Main Card V10.0.c: 166: TransiverToReceive();
  1203  073D  120A  158A  26CF  120A  118A  	fcall	_TransiverToReceive
  1204  0742                     l2453:	
  1205                           
  1206                           ;Main Card V10.0.c: 167: if(PORTBbits.RB4 && bTransiverModeReceive)
  1207  0742  1283               	bcf	3,5	;RP0=0, select bank0
  1208  0743  1303               	bcf	3,6	;RP1=0, select bank0
  1209  0744  1E06               	btfss	6,4	;volatile
  1210  0745  2EEA               	goto	l2425
  1211  0746  086D               	movf	_bTransiverModeReceive,w
  1212  0747  1903               	btfsc	3,2
  1213  0748  2EEA               	goto	l2425
  1214                           
  1215                           ;Main Card V10.0.c: 168: TransiverReadFIFO();
  1216  0749  120A  158A  272B  120A  118A  	fcall	_TransiverReadFIFO
  1217  074E  2EEA               	goto	l2425
  1218  074F                     __end_of_main:	
  1219                           
  1220                           	psect	text1
  1221  0E7C                     __ptext1:	
  1222 ;; *************** function _init *****************
  1223 ;; Defined at:
  1224 ;;		line 558 in file "../Main Card V10.0.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;		None
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;		None
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         0       0       0       0       0
  1240 ;;      Temps:          0       0       0       0       0
  1241 ;;      Totals:         0       0       0       0       0
  1242 ;;Total ram usage:        0 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    2
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _init
  1254  0E7C                     _init:	
  1255                           
  1256                           ;Main Card V10.0.c: 561: OSCCONbits.IRCF2 = 1;
  1257                           
  1258                           ;incstack = 0
  1259                           ; Regs used in _init: [wreg+status,2+status,0]
  1260  0E7C  1683               	bsf	3,5	;RP0=1, select bank1
  1261  0E7D  1303               	bcf	3,6	;RP1=0, select bank1
  1262  0E7E  170F               	bsf	15,6	;volatile
  1263                           
  1264                           ;Main Card V10.0.c: 562: OSCCONbits.IRCF1 = 1;
  1265  0E7F  168F               	bsf	15,5	;volatile
  1266                           
  1267                           ;Main Card V10.0.c: 563: OSCCONbits.IRCF0 = 0;
  1268  0E80  120F               	bcf	15,4	;volatile
  1269                           
  1270                           ;Main Card V10.0.c: 564: OSCCONbits.SCS = 1;
  1271  0E81  140F               	bsf	15,0	;volatile
  1272                           
  1273                           ;Main Card V10.0.c: 567: PORTA = 0x00;
  1274  0E82  1283               	bcf	3,5	;RP0=0, select bank0
  1275  0E83  1303               	bcf	3,6	;RP1=0, select bank0
  1276  0E84  0185               	clrf	5	;volatile
  1277                           
  1278                           ;Main Card V10.0.c: 568: PORTB = 0x00;
  1279  0E85  0186               	clrf	6	;volatile
  1280                           
  1281                           ;Main Card V10.0.c: 569: PORTC = 0x00;
  1282  0E86  0187               	clrf	7	;volatile
  1283                           
  1284                           ;Main Card V10.0.c: 570: TRISA = 0b00001011;
  1285  0E87  300B               	movlw	11
  1286  0E88  1683               	bsf	3,5	;RP0=1, select bank1
  1287  0E89  1303               	bcf	3,6	;RP1=0, select bank1
  1288  0E8A  0085               	movwf	5	;volatile
  1289                           
  1290                           ;Main Card V10.0.c: 571: TRISB = 0b00111111;
  1291  0E8B  303F               	movlw	63
  1292  0E8C  0086               	movwf	6	;volatile
  1293                           
  1294                           ;Main Card V10.0.c: 572: TRISC = 0b00010000;
  1295  0E8D  3010               	movlw	16
  1296  0E8E  0087               	movwf	7	;volatile
  1297                           
  1298                           ;Main Card V10.0.c: 573: ANSEL = 0b00000000;
  1299  0E8F  1683               	bsf	3,5	;RP0=1, select bank3
  1300  0E90  1703               	bsf	3,6	;RP1=1, select bank3
  1301  0E91  0188               	clrf	8	;volatile
  1302                           
  1303                           ;Main Card V10.0.c: 574: ANSELH = 0b00000000;
  1304  0E92  0189               	clrf	9	;volatile
  1305                           
  1306                           ;Main Card V10.0.c: 575: ANSELbits.ANS0 = 1;
  1307  0E93  1408               	bsf	8,0	;volatile
  1308                           
  1309                           ;Main Card V10.0.c: 576: ANSELbits.ANS3 = 1;
  1310  0E94  1588               	bsf	8,3	;volatile
  1311                           
  1312                           ;Main Card V10.0.c: 577: OPTION_REGbits.nRBPU = 0;
  1313  0E95  1683               	bsf	3,5	;RP0=1, select bank1
  1314  0E96  1303               	bcf	3,6	;RP1=0, select bank1
  1315  0E97  1381               	bcf	1,7	;volatile
  1316                           
  1317                           ;Main Card V10.0.c: 578: WPUBbits.WPUB5 = 0;
  1318  0E98  1295               	bcf	21,5	;volatile
  1319  0E99                     l299:	
  1320                           ;Main Card V10.0.c: 579: while(!PORTBbits.RB5);
  1321                           
  1322  0E99  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0E9A  1E86               	btfss	6,5	;volatile
  1324  0E9B  2E99               	goto	l299
  1325                           
  1326                           ;Main Card V10.0.c: 582: SSPCONbits.SSPM=0x00;
  1327  0E9C  30F0               	movlw	-16
  1328  0E9D  0594               	andwf	20,f	;volatile
  1329                           
  1330                           ;Main Card V10.0.c: 583: SSPCONbits.CKP=0;
  1331  0E9E  1214               	bcf	20,4	;volatile
  1332                           
  1333                           ;Main Card V10.0.c: 584: SSPSTATbits.CKE=1;
  1334  0E9F  1683               	bsf	3,5	;RP0=1, select bank1
  1335  0EA0  1303               	bcf	3,6	;RP1=0, select bank1
  1336  0EA1  1714               	bsf	20,6	;volatile
  1337                           
  1338                           ;Main Card V10.0.c: 585: SSPSTATbits.SMP=0;
  1339  0EA2  1394               	bcf	20,7	;volatile
  1340                           
  1341                           ;Main Card V10.0.c: 586: SSPCONbits.SSPEN=0x01;
  1342  0EA3  1283               	bcf	3,5	;RP0=0, select bank0
  1343  0EA4  1303               	bcf	3,6	;RP1=0, select bank0
  1344  0EA5  1694               	bsf	20,5	;volatile
  1345                           
  1346                           ;Main Card V10.0.c: 587: SSPIE = 0;
  1347  0EA6  1683               	bsf	3,5	;RP0=1, select bank1
  1348  0EA7  1303               	bcf	3,6	;RP1=0, select bank1
  1349  0EA8  118C               	bcf	12,3	;volatile
  1350                           
  1351                           ;Main Card V10.0.c: 590: PORTAbits.RA5 = 1;
  1352  0EA9  1283               	bcf	3,5	;RP0=0, select bank0
  1353  0EAA  1303               	bcf	3,6	;RP1=0, select bank0
  1354  0EAB  1685               	bsf	5,5	;volatile
  1355                           
  1356                           ;Main Card V10.0.c: 591: PORTAbits.RA4 = 1;
  1357  0EAC  1605               	bsf	5,4	;volatile
  1358                           
  1359                           ;Main Card V10.0.c: 594: INTCONbits.RBIE = 1;
  1360  0EAD  158B               	bsf	11,3	;volatile
  1361                           
  1362                           ;Main Card V10.0.c: 595: INTCONbits.PEIE = 1;
  1363  0EAE  170B               	bsf	11,6	;volatile
  1364                           
  1365                           ;Main Card V10.0.c: 596: PIE1bits.TMR1IE = 1;
  1366  0EAF  1683               	bsf	3,5	;RP0=1, select bank1
  1367  0EB0  1303               	bcf	3,6	;RP1=0, select bank1
  1368  0EB1  140C               	bsf	12,0	;volatile
  1369                           
  1370                           ;Main Card V10.0.c: 597: INTCONbits.GIE = 1;
  1371  0EB2  178B               	bsf	11,7	;volatile
  1372                           
  1373                           ;Main Card V10.0.c: 598: IOCBbits.IOCB5 = 1;
  1374  0EB3  1696               	bsf	22,5	;volatile
  1375                           
  1376                           ;Main Card V10.0.c: 601: T1CON = 0b00110000;
  1377  0EB4  3030               	movlw	48
  1378  0EB5  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0EB6  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0EB7  0090               	movwf	16	;volatile
  1381                           
  1382                           ;Main Card V10.0.c: 602: TMR1H = 0x0B;
  1383  0EB8  300B               	movlw	11
  1384  0EB9  008F               	movwf	15	;volatile
  1385                           
  1386                           ;Main Card V10.0.c: 603: TMR1L = 0xDB;
  1387  0EBA  30DB               	movlw	219
  1388  0EBB  008E               	movwf	14	;volatile
  1389                           
  1390                           ;Main Card V10.0.c: 604: T1CONbits.TMR1ON = 1;
  1391  0EBC  1410               	bsf	16,0	;volatile
  1392                           
  1393                           ;Main Card V10.0.c: 607: ADCON0bits.ADCS0 = 0;
  1394  0EBD  131F               	bcf	31,6	;volatile
  1395                           
  1396                           ;Main Card V10.0.c: 608: ADCON0bits.ADCS1 = 0;
  1397  0EBE  139F               	bcf	31,7	;volatile
  1398                           
  1399                           ;Main Card V10.0.c: 609: ADCON1bits.ADFM = 0;
  1400  0EBF  1683               	bsf	3,5	;RP0=1, select bank1
  1401  0EC0  1303               	bcf	3,6	;RP1=0, select bank1
  1402  0EC1  139F               	bcf	31,7	;volatile
  1403                           
  1404                           ;Main Card V10.0.c: 610: ADCON1bits.VCFG1 = 0;
  1405  0EC2  129F               	bcf	31,5	;volatile
  1406                           
  1407                           ;Main Card V10.0.c: 611: ADCON1bits.VCFG0 = 0;
  1408  0EC3  121F               	bcf	31,4	;volatile
  1409                           
  1410                           ;Main Card V10.0.c: 614: intSecondCounter = 0;
  1411  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  1412  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  1413  0EC6  01EA               	clrf	_intSecondCounter
  1414  0EC7  01EB               	clrf	_intSecondCounter+1
  1415                           
  1416                           ;Main Card V10.0.c: 615: intHalfSecondCounter = 0;
  1417  0EC8  1683               	bsf	3,5	;RP0=1, select bank1
  1418  0EC9  1303               	bcf	3,6	;RP1=0, select bank1
  1419  0ECA  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1420  0ECB  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1421                           
  1422                           ;Main Card V10.0.c: 616: intMinuteCounter = 0;
  1423  0ECC  01B7               	clrf	_intMinuteCounter^(0+128)
  1424  0ECD  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1425  0ECE  0008               	return
  1426  0ECF                     __end_of_init:	
  1427                           
  1428                           	psect	text2
  1429  0F2B                     __ptext2:	
  1430 ;; *************** function _TransiverReadFIFO *****************
  1431 ;; Defined at:
  1432 ;;		line 203 in file "../Main Card V10.0.c"
  1433 ;; Parameters:    Size  Location     Type
  1434 ;;		None
  1435 ;; Auto vars:     Size  Location     Type
  1436 ;;  j               2   67[BANK0 ] int 
  1437 ;;  i               2   65[BANK0 ] int 
  1438 ;; Return value:  Size  Location     Type
  1439 ;;                  1    wreg      void 
  1440 ;; Registers used:
  1441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1442 ;; Tracked objects:
  1443 ;;		On entry : 0/0
  1444 ;;		On exit  : 0/0
  1445 ;;		Unchanged: 0/0
  1446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1447 ;;      Params:         0       0       0       0       0
  1448 ;;      Locals:         0       4       0       0       0
  1449 ;;      Temps:          0       2       0       0       0
  1450 ;;      Totals:         0       6       0       0       0
  1451 ;;Total ram usage:        6 bytes
  1452 ;; Hardware stack levels used:    1
  1453 ;; Hardware stack levels required when called:    9
  1454 ;; This function calls:
  1455 ;;		_ReadFIFO
  1456 ;;		_SetRFMode
  1457 ;;		_TransmittedDataHandler
  1458 ;;		_timerFunction
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           
  1465                           ;psect for function _TransiverReadFIFO
  1466  0F2B                     _TransiverReadFIFO:	
  1467                           
  1468                           ;Main Card V10.0.c: 205: timerFunction(3, 5);
  1469                           
  1470                           ;incstack = 0
  1471 ;; hardware stack exceeded
  1472                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1473  0F2B  3003               	movlw	3
  1474  0F2C  1283               	bcf	3,5	;RP0=0, select bank0
  1475  0F2D  1303               	bcf	3,6	;RP1=0, select bank0
  1476  0F2E  00A0               	movwf	timerFunction@intTimerNumber
  1477  0F2F  3000               	movlw	0
  1478  0F30  00A1               	movwf	timerFunction@intTimerNumber+1
  1479  0F31  3005               	movlw	5
  1480  0F32  00A2               	movwf	timerFunction@intSetSeconds
  1481  0F33  3000               	movlw	0
  1482  0F34  00A3               	movwf	timerFunction@intSetSeconds+1
  1483  0F35  120A  158A  239A  120A  158A  	fcall	_timerFunction
  1484                           
  1485                           ;Main Card V10.0.c: 207: SetRFMode(0x20);
  1486  0F3A  3020               	movlw	32
  1487  0F3B  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1488                           
  1489                           ;Main Card V10.0.c: 208: bTransiverModeReceive = 0;
  1490  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  1491  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  1492  0F42  01ED               	clrf	_bTransiverModeReceive
  1493                           
  1494                           ;Main Card V10.0.c: 209: int i = 0;
  1495  0F43  01E1               	clrf	TransiverReadFIFO@i
  1496  0F44  01E2               	clrf	TransiverReadFIFO@i+1
  1497                           
  1498                           ;Main Card V10.0.c: 210: for (int j = 0; j < 30; ++j)
  1499  0F45  01E3               	clrf	TransiverReadFIFO@j
  1500  0F46  01E4               	clrf	TransiverReadFIFO@j+1
  1501  0F47                     L1:	
  1502  0F47  0864               	movf	TransiverReadFIFO@j+1,w
  1503  0F48  3A80               	xorlw	128
  1504  0F49  00FF               	movwf	127
  1505  0F4A  3080               	movlw	128
  1506  0F4B  027F               	subwf	127,w
  1507  0F4C  1D03               	skipz
  1508  0F4D  2F50               	goto	u2025
  1509  0F4E  301E               	movlw	30
  1510  0F4F  0263               	subwf	TransiverReadFIFO@j,w
  1511  0F50                     u2025:	
  1512  0F50  1803               	btfsc	3,0
  1513  0F51  2F74               	goto	l2385
  1514                           
  1515                           ;Main Card V10.0.c: 211: {
  1516                           ;Main Card V10.0.c: 212: TransmittedString[j] = 0;
  1517  0F52  1283               	bcf	3,5	;RP0=0, select bank0
  1518  0F53  1303               	bcf	3,6	;RP1=0, select bank0
  1519  0F54  0863               	movf	TransiverReadFIFO@j,w
  1520  0F55  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1521  0F56  0084               	movwf	4
  1522  0F57  1383               	bcf	3,7	;select IRP bank1
  1523  0F58  0180               	clrf	0
  1524  0F59  3001               	movlw	1
  1525  0F5A  07E3               	addwf	TransiverReadFIFO@j,f
  1526  0F5B  1803               	skipnc
  1527  0F5C  0AE4               	incf	TransiverReadFIFO@j+1,f
  1528  0F5D  3000               	movlw	0
  1529  0F5E  07E4               	addwf	TransiverReadFIFO@j+1,f
  1530  0F5F  2F47               	goto	L1
  1531  0F60                     l2381:	
  1532                           ;Main Card V10.0.c: 213: }
  1533                           ;Main Card V10.0.c: 214: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1534                           
  1535                           
  1536                           ;Main Card V10.0.c: 215: {
  1537                           ;Main Card V10.0.c: 216: TransmittedString[i] = ReadFIFO();
  1538  0F60  120A  158A  237C  120A  158A  	fcall	_ReadFIFO
  1539  0F65  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0F66  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0F67  00DF               	movwf	??_TransiverReadFIFO
  1542  0F68  0861               	movf	TransiverReadFIFO@i,w
  1543  0F69  3EBA               	addlw	(low (_TransmittedString| 0))& (0+255)
  1544  0F6A  0084               	movwf	4
  1545  0F6B  085F               	movf	??_TransiverReadFIFO,w
  1546  0F6C  1383               	bcf	3,7	;select IRP bank1
  1547  0F6D  0080               	movwf	0
  1548                           
  1549                           ;Main Card V10.0.c: 217: i++;
  1550  0F6E  3001               	movlw	1
  1551  0F6F  07E1               	addwf	TransiverReadFIFO@i,f
  1552  0F70  1803               	skipnc
  1553  0F71  0AE2               	incf	TransiverReadFIFO@i+1,f
  1554  0F72  3000               	movlw	0
  1555  0F73  07E2               	addwf	TransiverReadFIFO@i+1,f
  1556  0F74                     l2385:	
  1557  0F74  1283               	bcf	3,5	;RP0=0, select bank0
  1558  0F75  1303               	bcf	3,6	;RP1=0, select bank0
  1559  0F76  1D86               	btfss	6,3	;volatile
  1560  0F77  2F7D               	goto	l2389
  1561  0F78  1683               	bsf	3,5	;RP0=1, select bank1
  1562  0F79  1303               	bcf	3,6	;RP1=0, select bank1
  1563  0F7A  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1564  0F7B  1903               	btfsc	3,2
  1565  0F7C  2F60               	goto	l2381
  1566  0F7D                     l2389:	
  1567                           
  1568                           ;Main Card V10.0.c: 218: }
  1569                           ;Main Card V10.0.c: 220: _delay((unsigned long)((10)*(4000000/4000.0)));
  1570  0F7D  300D               	movlw	13
  1571  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1572  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1573  0F80  00E0               	movwf	??_TransiverReadFIFO+1
  1574  0F81  30FB               	movlw	251
  1575  0F82  00DF               	movwf	??_TransiverReadFIFO
  1576  0F83                     u2367:	
  1577  0F83  0BDF               	decfsz	??_TransiverReadFIFO,f
  1578  0F84  2F83               	goto	u2367
  1579  0F85  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1580  0F86  2F83               	goto	u2367
  1581                           
  1582                           ;Main Card V10.0.c: 221: SetRFMode(0x00);
  1583  0F87  3000               	movlw	0
  1584  0F88  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  1585                           
  1586                           ;Main Card V10.0.c: 222: TransmittedDataHandler();
  1587  0F8D  120A  118A  2054   	fcall	_TransmittedDataHandler
  1588  0F90  0008               	return
  1589  0F91                     __end_of_TransiverReadFIFO:	
  1590                           
  1591                           	psect	text3
  1592  0054                     __ptext3:	
  1593 ;; *************** function _TransmittedDataHandler *****************
  1594 ;; Defined at:
  1595 ;;		line 224 in file "../Main Card V10.0.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1600 ;;  value           2   61[BANK0 ] int 
  1601 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1602 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1603 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1604 ;; Return value:  Size  Location     Type
  1605 ;;                  1    wreg      void 
  1606 ;; Registers used:
  1607 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1608 ;; Tracked objects:
  1609 ;;		On entry : 0/0
  1610 ;;		On exit  : 0/0
  1611 ;;		Unchanged: 0/0
  1612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1613 ;;      Params:         0       0       0       0       0
  1614 ;;      Locals:         0      34       0       0       0
  1615 ;;      Temps:          0       1       0       0       0
  1616 ;;      Totals:         0      35       0       0       0
  1617 ;;Total ram usage:       35 bytes
  1618 ;; Hardware stack levels used:    1
  1619 ;; Hardware stack levels required when called:    8
  1620 ;; This function calls:
  1621 ;;		_AnalogValue
  1622 ;;		_DarknessCheck
  1623 ;;		_DelayDs
  1624 ;;		_OperationMode
  1625 ;;		_TransmittString
  1626 ;;		_atoi
  1627 ;;		_eeprom_read
  1628 ;;		_eeprom_write
  1629 ;;		_strstr
  1630 ;; This function is called by:
  1631 ;;		_TransiverReadFIFO
  1632 ;; This function uses a non-reentrant model
  1633 ;;
  1634                           
  1635                           
  1636                           ;psect for function _TransmittedDataHandler
  1637  0054                     _TransmittedDataHandler:	
  1638                           
  1639                           ;Main Card V10.0.c: 227: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1640                           
  1641                           ;incstack = 0
  1642 ;; hardware stack exceeded
  1643                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1644  0054  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1645  0055  1283               	bcf	3,5	;RP0=0, select bank0
  1646  0056  1303               	bcf	3,6	;RP1=0, select bank0
  1647  0057  00BC               	movwf	??_TransmittedDataHandler
  1648  0058  083C               	movf	??_TransmittedDataHandler,w
  1649  0059  00AE               	movwf	strstr@s2
  1650  005A  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1651  005B  120A  158A  25E7  120A  118A  	fcall	_strstr
  1652  0060  3A00               	xorlw	0
  1653  0061  1903               	skipnz
  1654  0062  287F               	goto	l2105
  1655  0063  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1656  0068  3A06               	xorlw	6
  1657  0069  1D03               	skipz
  1658  006A  287F               	goto	l2105
  1659                           
  1660                           ;Main Card V10.0.c: 228: {
  1661                           ;Main Card V10.0.c: 229: intBlinkCycle = 1;
  1662  006B  3001               	movlw	1
  1663  006C  1283               	bcf	3,5	;RP0=0, select bank0
  1664  006D  1303               	bcf	3,6	;RP1=0, select bank0
  1665  006E  00E8               	movwf	_intBlinkCycle
  1666  006F  3000               	movlw	0
  1667  0070  00E9               	movwf	_intBlinkCycle+1
  1668                           
  1669                           ;Main Card V10.0.c: 230: intBlinkCounter = 0;
  1670  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1671  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1672  0073  01B1               	clrf	_intBlinkCounter^(0+128)
  1673  0074  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1674                           
  1675                           ;Main Card V10.0.c: 232: TransmittString("N1STARTED");
  1676  0075  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1677  0076  1283               	bcf	3,5	;RP0=0, select bank0
  1678  0077  1303               	bcf	3,6	;RP1=0, select bank0
  1679  0078  00B5               	movwf	TransmittString@dataString
  1680  0079  3080               	movlw	128
  1681  007A  00B6               	movwf	TransmittString@dataString+1
  1682  007B  120A  118A  2519   	fcall	_TransmittString
  1683                           
  1684                           ;Main Card V10.0.c: 233: }
  1685  007E  0008               	return
  1686  007F                     l2105:	
  1687                           
  1688                           ;Main Card V10.0.c: 234: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1689  007F  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1690  0080  1283               	bcf	3,5	;RP0=0, select bank0
  1691  0081  1303               	bcf	3,6	;RP1=0, select bank0
  1692  0082  00BC               	movwf	??_TransmittedDataHandler
  1693  0083  083C               	movf	??_TransmittedDataHandler,w
  1694  0084  00AE               	movwf	strstr@s2
  1695  0085  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1696  0086  120A  158A  25E7  120A  118A  	fcall	_strstr
  1697  008B  3A00               	xorlw	0
  1698  008C  1903               	skipnz
  1699  008D  28AA               	goto	l2115
  1700  008E  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1701  0093  3A07               	xorlw	7
  1702  0094  1D03               	skipz
  1703  0095  28AA               	goto	l2115
  1704                           
  1705                           ;Main Card V10.0.c: 235: {
  1706                           ;Main Card V10.0.c: 236: intBlinkCycle = 1;
  1707  0096  3001               	movlw	1
  1708  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1709  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1710  0099  00E8               	movwf	_intBlinkCycle
  1711  009A  3000               	movlw	0
  1712  009B  00E9               	movwf	_intBlinkCycle+1
  1713                           
  1714                           ;Main Card V10.0.c: 237: intBlinkCounter = 0;
  1715  009C  1683               	bsf	3,5	;RP0=1, select bank1
  1716  009D  1303               	bcf	3,6	;RP1=0, select bank1
  1717  009E  01B1               	clrf	_intBlinkCounter^(0+128)
  1718  009F  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1719                           
  1720                           ;Main Card V10.0.c: 239: TransmittString("N2STARTED");
  1721  00A0  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1722  00A1  1283               	bcf	3,5	;RP0=0, select bank0
  1723  00A2  1303               	bcf	3,6	;RP1=0, select bank0
  1724  00A3  00B5               	movwf	TransmittString@dataString
  1725  00A4  3080               	movlw	128
  1726  00A5  00B6               	movwf	TransmittString@dataString+1
  1727  00A6  120A  118A  2519   	fcall	_TransmittString
  1728                           
  1729                           ;Main Card V10.0.c: 240: }
  1730  00A9  0008               	return
  1731  00AA                     l2115:	
  1732                           
  1733                           ;Main Card V10.0.c: 241: else if((strstr(TransmittedString, "N1STARTED")) && (OperationM
      +                          ode() == 4))
  1734  00AA  3044               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1735  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1736  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1737  00AD  00BC               	movwf	??_TransmittedDataHandler
  1738  00AE  083C               	movf	??_TransmittedDataHandler,w
  1739  00AF  00AE               	movwf	strstr@s2
  1740  00B0  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1741  00B1  120A  158A  25E7  120A  118A  	fcall	_strstr
  1742  00B6  3A00               	xorlw	0
  1743  00B7  1903               	skipnz
  1744  00B8  28CC               	goto	l2123
  1745  00B9  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1746  00BE  3A04               	xorlw	4
  1747  00BF  1D03               	skipz
  1748  00C0  28CC               	goto	l2123
  1749                           
  1750                           ;Main Card V10.0.c: 242: {
  1751                           ;Main Card V10.0.c: 243: intBlinkCycle = 1;
  1752  00C1  3001               	movlw	1
  1753  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1754  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1755  00C4  00E8               	movwf	_intBlinkCycle
  1756  00C5  3000               	movlw	0
  1757  00C6  00E9               	movwf	_intBlinkCycle+1
  1758                           
  1759                           ;Main Card V10.0.c: 244: intBlinkCounter = 0;
  1760  00C7  1683               	bsf	3,5	;RP0=1, select bank1
  1761  00C8  1303               	bcf	3,6	;RP1=0, select bank1
  1762  00C9  01B1               	clrf	_intBlinkCounter^(0+128)
  1763  00CA  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1764                           
  1765                           ;Main Card V10.0.c: 246: }
  1766  00CB  0008               	return
  1767  00CC                     l2123:	
  1768                           
  1769                           ;Main Card V10.0.c: 247: else if((strstr(TransmittedString, "N2STARTED")) && (OperationM
      +                          ode() == 5))
  1770  00CC  304E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1771  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  1772  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  1773  00CF  00BC               	movwf	??_TransmittedDataHandler
  1774  00D0  083C               	movf	??_TransmittedDataHandler,w
  1775  00D1  00AE               	movwf	strstr@s2
  1776  00D2  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1777  00D3  120A  158A  25E7  120A  118A  	fcall	_strstr
  1778  00D8  3A00               	xorlw	0
  1779  00D9  1903               	skipnz
  1780  00DA  28EE               	goto	l2131
  1781  00DB  120A  158A  2359  120A  118A  	fcall	_OperationMode
  1782  00E0  3A05               	xorlw	5
  1783  00E1  1D03               	skipz
  1784  00E2  28EE               	goto	l2131
  1785                           
  1786                           ;Main Card V10.0.c: 248: {
  1787                           ;Main Card V10.0.c: 249: intBlinkCycle = 1;
  1788  00E3  3001               	movlw	1
  1789  00E4  1283               	bcf	3,5	;RP0=0, select bank0
  1790  00E5  1303               	bcf	3,6	;RP1=0, select bank0
  1791  00E6  00E8               	movwf	_intBlinkCycle
  1792  00E7  3000               	movlw	0
  1793  00E8  00E9               	movwf	_intBlinkCycle+1
  1794                           
  1795                           ;Main Card V10.0.c: 250: intBlinkCounter = 0;
  1796  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  1797  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  1798  00EB  01B1               	clrf	_intBlinkCounter^(0+128)
  1799  00EC  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1800                           
  1801                           ;Main Card V10.0.c: 252: }
  1802  00ED  0008               	return
  1803  00EE                     l2131:	
  1804                           
  1805                           ;Main Card V10.0.c: 253: else if((strstr(TransmittedString,"FLASHL")))
  1806  00EE  3096               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1807  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1808  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1809  00F1  00BC               	movwf	??_TransmittedDataHandler
  1810  00F2  083C               	movf	??_TransmittedDataHandler,w
  1811  00F3  00AE               	movwf	strstr@s2
  1812  00F4  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1813  00F5  120A  158A  25E7  120A  118A  	fcall	_strstr
  1814  00FA  3A00               	xorlw	0
  1815  00FB  1903               	skipnz
  1816  00FC  2914               	goto	l2139
  1817                           
  1818                           ;Main Card V10.0.c: 254: {
  1819                           ;Main Card V10.0.c: 255: PORTCbits.RC2 = 1;
  1820  00FD  1283               	bcf	3,5	;RP0=0, select bank0
  1821  00FE  1303               	bcf	3,6	;RP1=0, select bank0
  1822  00FF  1507               	bsf	7,2	;volatile
  1823                           
  1824                           ;Main Card V10.0.c: 256: DelayDs(10);
  1825  0100  300A               	movlw	10
  1826  0101  00A0               	movwf	DelayDs@cnt
  1827  0102  3000               	movlw	0
  1828  0103  00A1               	movwf	DelayDs@cnt+1
  1829  0104  120A  158A  2449  120A  118A  	fcall	_DelayDs
  1830                           
  1831                           ;Main Card V10.0.c: 257: PORTCbits.RC2 = 0;
  1832  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1833  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1834  010B  1107               	bcf	7,2	;volatile
  1835                           
  1836                           ;Main Card V10.0.c: 258: DelayDs(5);
  1837  010C  3005               	movlw	5
  1838  010D  00A0               	movwf	DelayDs@cnt
  1839  010E  3000               	movlw	0
  1840  010F  00A1               	movwf	DelayDs@cnt+1
  1841  0110  120A  158A  2449   	fcall	_DelayDs
  1842                           
  1843                           ;Main Card V10.0.c: 259: }
  1844  0113  0008               	return
  1845  0114                     l2139:	
  1846                           
  1847                           ;Main Card V10.0.c: 260: else if((strstr(TransmittedString,"FLASHB")))
  1848  0114  3088               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1849  0115  1283               	bcf	3,5	;RP0=0, select bank0
  1850  0116  1303               	bcf	3,6	;RP1=0, select bank0
  1851  0117  00BC               	movwf	??_TransmittedDataHandler
  1852  0118  083C               	movf	??_TransmittedDataHandler,w
  1853  0119  00AE               	movwf	strstr@s2
  1854  011A  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1855  011B  120A  158A  25E7  120A  118A  	fcall	_strstr
  1856  0120  3A00               	xorlw	0
  1857  0121  1903               	skipnz
  1858  0122  293A               	goto	l2147
  1859                           
  1860                           ;Main Card V10.0.c: 261: {
  1861                           ;Main Card V10.0.c: 262: PORTCbits.RC1 = 1;
  1862  0123  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0124  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0125  1487               	bsf	7,1	;volatile
  1865                           
  1866                           ;Main Card V10.0.c: 263: DelayDs(10);
  1867  0126  300A               	movlw	10
  1868  0127  00A0               	movwf	DelayDs@cnt
  1869  0128  3000               	movlw	0
  1870  0129  00A1               	movwf	DelayDs@cnt+1
  1871  012A  120A  158A  2449  120A  118A  	fcall	_DelayDs
  1872                           
  1873                           ;Main Card V10.0.c: 264: PORTCbits.RC1 = 0;
  1874  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1875  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1876  0131  1087               	bcf	7,1	;volatile
  1877                           
  1878                           ;Main Card V10.0.c: 265: DelayDs(5);
  1879  0132  3005               	movlw	5
  1880  0133  00A0               	movwf	DelayDs@cnt
  1881  0134  3000               	movlw	0
  1882  0135  00A1               	movwf	DelayDs@cnt+1
  1883  0136  120A  158A  2449   	fcall	_DelayDs
  1884                           
  1885                           ;Main Card V10.0.c: 266: }
  1886  0139  0008               	return
  1887  013A                     l2147:	
  1888                           
  1889                           ;Main Card V10.0.c: 267: else if((strstr(TransmittedString,"SENSVAL")))
  1890  013A  3079               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1891  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1892  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1893  013D  00BC               	movwf	??_TransmittedDataHandler
  1894  013E  083C               	movf	??_TransmittedDataHandler,w
  1895  013F  00AE               	movwf	strstr@s2
  1896  0140  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1897  0141  120A  158A  25E7  120A  118A  	fcall	_strstr
  1898  0146  3A00               	xorlw	0
  1899  0147  1903               	skipnz
  1900  0148  295C               	goto	l2153
  1901                           
  1902                           ;Main Card V10.0.c: 268: {
  1903                           ;Main Card V10.0.c: 269: unsigned char slask[8];
  1904                           ;Main Card V10.0.c: 270: slask[0] = AnalogValue(0);
  1905  0149  3000               	movlw	0
  1906  014A  120A  158A  24B3  120A  118A  	fcall	_AnalogValue
  1907  014F  1283               	bcf	3,5	;RP0=0, select bank0
  1908  0150  1303               	bcf	3,6	;RP1=0, select bank0
  1909  0151  00BC               	movwf	??_TransmittedDataHandler
  1910  0152  083C               	movf	??_TransmittedDataHandler,w
  1911  0153  00BD               	movwf	TransmittedDataHandler@slask
  1912                           
  1913                           ;Main Card V10.0.c: 271: TransmittString(slask);
  1914  0154  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1915  0155  00B5               	movwf	TransmittString@dataString
  1916  0156  3000               	movlw	0
  1917  0157  00B6               	movwf	TransmittString@dataString+1
  1918  0158  120A  118A  2519   	fcall	_TransmittString
  1919                           
  1920                           ;Main Card V10.0.c: 272: }
  1921  015B  0008               	return
  1922  015C                     l2153:	
  1923                           
  1924                           ;Main Card V10.0.c: 273: else if((strstr(TransmittedString,"POTVAL")))
  1925  015C  308F               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1926  015D  1283               	bcf	3,5	;RP0=0, select bank0
  1927  015E  1303               	bcf	3,6	;RP1=0, select bank0
  1928  015F  00BC               	movwf	??_TransmittedDataHandler
  1929  0160  083C               	movf	??_TransmittedDataHandler,w
  1930  0161  00AE               	movwf	strstr@s2
  1931  0162  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1932  0163  120A  158A  25E7  120A  118A  	fcall	_strstr
  1933  0168  3A00               	xorlw	0
  1934  0169  1903               	skipnz
  1935  016A  297E               	goto	l2159
  1936                           
  1937                           ;Main Card V10.0.c: 274: {
  1938                           ;Main Card V10.0.c: 275: unsigned char slask[8];
  1939                           ;Main Card V10.0.c: 276: slask[0] = AnalogValue(3);
  1940  016B  3003               	movlw	3
  1941  016C  120A  158A  24B3  120A  118A  	fcall	_AnalogValue
  1942  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1943  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1944  0173  00BC               	movwf	??_TransmittedDataHandler
  1945  0174  083C               	movf	??_TransmittedDataHandler,w
  1946  0175  00C5               	movwf	TransmittedDataHandler@slask_706
  1947                           
  1948                           ;Main Card V10.0.c: 277: TransmittString(slask);
  1949  0176  3045               	movlw	(low (TransmittedDataHandler@slask_706| 0))& (0+255)
  1950  0177  00B5               	movwf	TransmittString@dataString
  1951  0178  3000               	movlw	0
  1952  0179  00B6               	movwf	TransmittString@dataString+1
  1953  017A  120A  118A  2519   	fcall	_TransmittString
  1954                           
  1955                           ;Main Card V10.0.c: 278: }
  1956  017D  0008               	return
  1957  017E                     l2159:	
  1958                           
  1959                           ;Main Card V10.0.c: 279: else if((strstr(TransmittedString,"DARKCALC")))
  1960  017E  3058               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1961  017F  1283               	bcf	3,5	;RP0=0, select bank0
  1962  0180  1303               	bcf	3,6	;RP1=0, select bank0
  1963  0181  00BC               	movwf	??_TransmittedDataHandler
  1964  0182  083C               	movf	??_TransmittedDataHandler,w
  1965  0183  00AE               	movwf	strstr@s2
  1966  0184  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  1967  0185  120A  158A  25E7  120A  118A  	fcall	_strstr
  1968  018A  3A00               	xorlw	0
  1969  018B  1903               	skipnz
  1970  018C  29A9               	goto	l2169
  1971                           
  1972                           ;Main Card V10.0.c: 280: {
  1973                           ;Main Card V10.0.c: 281: DarknessCheck();
  1974  018D  120A  158A  24DC  120A  118A  	fcall	_DarknessCheck
  1975                           
  1976                           ;Main Card V10.0.c: 282: if(bDark)
  1977  0192  1283               	bcf	3,5	;RP0=0, select bank0
  1978  0193  1303               	bcf	3,6	;RP1=0, select bank0
  1979  0194  086C               	movf	_bDark,w
  1980  0195  1903               	btfsc	3,2
  1981  0196  299F               	goto	l2167
  1982                           
  1983                           ;Main Card V10.0.c: 283: TransmittString("It's Dark    ");
  1984  0197  3036               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1985  0198  00B5               	movwf	TransmittString@dataString
  1986  0199  3080               	movlw	128
  1987  019A  00B6               	movwf	TransmittString@dataString+1
  1988  019B  120A  118A  2519   	fcall	_TransmittString
  1989  019E  0008               	return
  1990  019F                     l2167:	
  1991                           
  1992                           ;Main Card V10.0.c: 284: else
  1993                           ;Main Card V10.0.c: 285: TransmittString("Not Dark     ");
  1994  019F  3028               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  1995  01A0  1283               	bcf	3,5	;RP0=0, select bank0
  1996  01A1  1303               	bcf	3,6	;RP1=0, select bank0
  1997  01A2  00B5               	movwf	TransmittString@dataString
  1998  01A3  3080               	movlw	128
  1999  01A4  00B6               	movwf	TransmittString@dataString+1
  2000  01A5  120A  118A  2519   	fcall	_TransmittString
  2001                           
  2002                           ;Main Card V10.0.c: 286: }
  2003  01A8  0008               	return
  2004  01A9                     l2169:	
  2005                           
  2006                           ;Main Card V10.0.c: 287: else if((strstr(TransmittedString,"STATE?")))
  2007  01A9  3081               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2008  01AA  1283               	bcf	3,5	;RP0=0, select bank0
  2009  01AB  1303               	bcf	3,6	;RP1=0, select bank0
  2010  01AC  00BC               	movwf	??_TransmittedDataHandler
  2011  01AD  083C               	movf	??_TransmittedDataHandler,w
  2012  01AE  00AE               	movwf	strstr@s2
  2013  01AF  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2014  01B0  120A  158A  25E7  120A  118A  	fcall	_strstr
  2015  01B5  3A00               	xorlw	0
  2016  01B6  1903               	skipnz
  2017  01B7  29CF               	goto	l2177
  2018                           
  2019                           ;Main Card V10.0.c: 288: {
  2020                           ;Main Card V10.0.c: 289: if(bValueFromPot == TRUE)
  2021  01B8  1283               	bcf	3,5	;RP0=0, select bank0
  2022  01B9  1303               	bcf	3,6	;RP1=0, select bank0
  2023  01BA  036F               	decf	_bValueFromPot,w
  2024  01BB  1D03               	btfss	3,2
  2025  01BC  29C5               	goto	l2175
  2026                           
  2027                           ;Main Card V10.0.c: 290: TransmittString("Pot");
  2028  01BD  30AC               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2029  01BE  00B5               	movwf	TransmittString@dataString
  2030  01BF  3080               	movlw	128
  2031  01C0  00B6               	movwf	TransmittString@dataString+1
  2032  01C1  120A  118A  2519   	fcall	_TransmittString
  2033  01C4  0008               	return
  2034  01C5                     l2175:	
  2035                           
  2036                           ;Main Card V10.0.c: 291: else
  2037                           ;Main Card V10.0.c: 292: TransmittString("PIC");
  2038  01C5  30A8               	movlw	(low ((STR_16-__stringbase)| (0+32768)))& (0+255)
  2039  01C6  1283               	bcf	3,5	;RP0=0, select bank0
  2040  01C7  1303               	bcf	3,6	;RP1=0, select bank0
  2041  01C8  00B5               	movwf	TransmittString@dataString
  2042  01C9  3080               	movlw	128
  2043  01CA  00B6               	movwf	TransmittString@dataString+1
  2044  01CB  120A  118A  2519   	fcall	_TransmittString
  2045                           
  2046                           ;Main Card V10.0.c: 294: }
  2047  01CE  0008               	return
  2048  01CF                     l2177:	
  2049                           
  2050                           ;Main Card V10.0.c: 295: else if((strstr(TransmittedString,"CHSTATE")))
  2051  01CF  3061               	movlw	(low ((STR_17-__stringbase)| (0+32768)))& (0+255)
  2052  01D0  1283               	bcf	3,5	;RP0=0, select bank0
  2053  01D1  1303               	bcf	3,6	;RP1=0, select bank0
  2054  01D2  00BC               	movwf	??_TransmittedDataHandler
  2055  01D3  083C               	movf	??_TransmittedDataHandler,w
  2056  01D4  00AE               	movwf	strstr@s2
  2057  01D5  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2058  01D6  120A  158A  25E7  120A  118A  	fcall	_strstr
  2059  01DB  3A00               	xorlw	0
  2060  01DC  1903               	skipnz
  2061  01DD  29E8               	goto	l2183
  2062                           
  2063                           ;Main Card V10.0.c: 296: {
  2064                           ;Main Card V10.0.c: 297: if(bValueFromPot== TRUE)
  2065  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  2066  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  2067  01E0  036F               	decf	_bValueFromPot,w
  2068  01E1  1D03               	btfss	3,2
  2069  01E2  29E5               	goto	l232
  2070                           
  2071                           ;Main Card V10.0.c: 298: bValueFromPot= FALSE;
  2072  01E3  01EF               	clrf	_bValueFromPot
  2073  01E4  0008               	return
  2074  01E5                     l232:	
  2075                           
  2076                           ;Main Card V10.0.c: 299: else
  2077                           ;Main Card V10.0.c: 300: bValueFromPot=TRUE;
  2078  01E5  01EF               	clrf	_bValueFromPot
  2079  01E6  0AEF               	incf	_bValueFromPot,f
  2080                           
  2081                           ;Main Card V10.0.c: 301: }
  2082  01E7  0008               	return
  2083  01E8                     l2183:	
  2084                           
  2085                           ;Main Card V10.0.c: 303: else if((strstr(TransmittedString,"RMDV")))
  2086  01E8  30A3               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2087  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2088  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2089  01EB  00BC               	movwf	??_TransmittedDataHandler
  2090  01EC  083C               	movf	??_TransmittedDataHandler,w
  2091  01ED  00AE               	movwf	strstr@s2
  2092  01EE  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2093  01EF  120A  158A  25E7  120A  118A  	fcall	_strstr
  2094  01F4  3A00               	xorlw	0
  2095  01F5  1903               	skipnz
  2096  01F6  2A0A               	goto	l2189
  2097                           
  2098                           ;Main Card V10.0.c: 304: {
  2099                           ;Main Card V10.0.c: 305: unsigned char slask[8];
  2100                           ;Main Card V10.0.c: 306: slask[0] = eeprom_read(addressDarknessValue);
  2101  01F7  087C               	movf	_addressDarknessValue,w
  2102  01F8  120A  158A  248F  120A  118A  	fcall	_eeprom_read
  2103  01FD  1283               	bcf	3,5	;RP0=0, select bank0
  2104  01FE  1303               	bcf	3,6	;RP1=0, select bank0
  2105  01FF  00BC               	movwf	??_TransmittedDataHandler
  2106  0200  083C               	movf	??_TransmittedDataHandler,w
  2107  0201  00CD               	movwf	TransmittedDataHandler@slask_715
  2108                           
  2109                           ;Main Card V10.0.c: 307: TransmittString(slask);
  2110  0202  304D               	movlw	(low (TransmittedDataHandler@slask_715| 0))& (0+255)
  2111  0203  00B5               	movwf	TransmittString@dataString
  2112  0204  3000               	movlw	0
  2113  0205  00B6               	movwf	TransmittString@dataString+1
  2114  0206  120A  118A  2519   	fcall	_TransmittString
  2115                           
  2116                           ;Main Card V10.0.c: 309: }
  2117  0209  0008               	return
  2118  020A                     l2189:	
  2119                           
  2120                           ;Main Card V10.0.c: 311: else if((strstr(TransmittedString,"SETDV")))
  2121  020A  309D               	movlw	(low ((STR_19-__stringbase)| (0+32768)))& (0+255)
  2122  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2123  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2124  020D  00BC               	movwf	??_TransmittedDataHandler
  2125  020E  083C               	movf	??_TransmittedDataHandler,w
  2126  020F  00AE               	movwf	strstr@s2
  2127  0210  30BA               	movlw	(low (_TransmittedString| 0))& (0+255)
  2128  0211  120A  158A  25E7  120A  118A  	fcall	_strstr
  2129  0216  3A00               	xorlw	0
  2130  0217  1903               	skipnz
  2131  0218  0008               	return
  2132                           
  2133                           ;Main Card V10.0.c: 312: {
  2134                           ;Main Card V10.0.c: 314: int value;
  2135                           ;Main Card V10.0.c: 315: unsigned char slask[8];
  2136                           ;Main Card V10.0.c: 316: value = atoi(&TransmittedString[6]);
  2137  0219  30C0               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2138  021A  120A  118A  274F  120A  118A  	fcall	_atoi
  2139  021F  1283               	bcf	3,5	;RP0=0, select bank0
  2140  0220  1303               	bcf	3,6	;RP1=0, select bank0
  2141  0221  0827               	movf	?_atoi+1,w
  2142  0222  00DE               	movwf	TransmittedDataHandler@value+1
  2143  0223  0826               	movf	?_atoi,w
  2144  0224  00DD               	movwf	TransmittedDataHandler@value
  2145                           
  2146                           ;Main Card V10.0.c: 317: slask[0] = (unsigned char)value;
  2147  0225  085D               	movf	TransmittedDataHandler@value,w
  2148  0226  00BC               	movwf	??_TransmittedDataHandler
  2149  0227  083C               	movf	??_TransmittedDataHandler,w
  2150  0228  00D5               	movwf	TransmittedDataHandler@slask_718
  2151                           
  2152                           ;Main Card V10.0.c: 318: TransmittString(slask);
  2153  0229  3055               	movlw	(low (TransmittedDataHandler@slask_718| 0))& (0+255)
  2154  022A  00B5               	movwf	TransmittString@dataString
  2155  022B  3000               	movlw	0
  2156  022C  00B6               	movwf	TransmittString@dataString+1
  2157  022D  120A  118A  2519  120A  118A  	fcall	_TransmittString
  2158                           
  2159                           ;Main Card V10.0.c: 319: eeprom_write(addressDarknessValue,(unsigned char)value);
  2160  0232  1283               	bcf	3,5	;RP0=0, select bank0
  2161  0233  1303               	bcf	3,6	;RP1=0, select bank0
  2162  0234  085D               	movf	TransmittedDataHandler@value,w
  2163  0235  00BC               	movwf	??_TransmittedDataHandler
  2164  0236  083C               	movf	??_TransmittedDataHandler,w
  2165  0237  00A0               	movwf	eeprom_write@value
  2166  0238  087C               	movf	_addressDarknessValue,w
  2167  0239  120A  158A  2531   	fcall	_eeprom_write
  2168  023C  0008               	return
  2169  023D                     __end_of_TransmittedDataHandler:	
  2170                           
  2171                           	psect	text4
  2172  0DE7                     __ptext4:	
  2173 ;; *************** function _strstr *****************
  2174 ;; Defined at:
  2175 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strstr.c"
  2176 ;; Parameters:    Size  Location     Type
  2177 ;;  s1              1    wreg     PTR const unsigned char 
  2178 ;;		 -> NULL(0), TransmittedString(30), 
  2179 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2180 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2181 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2182 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2183 ;;		 -> STR_1(8), 
  2184 ;; Auto vars:     Size  Location     Type
  2185 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2186 ;;		 -> NULL(0), TransmittedString(30), 
  2187 ;; Return value:  Size  Location     Type
  2188 ;;                  1    wreg      PTR unsigned char 
  2189 ;; Registers used:
  2190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2191 ;; Tracked objects:
  2192 ;;		On entry : 0/0
  2193 ;;		On exit  : 0/0
  2194 ;;		Unchanged: 0/0
  2195 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2196 ;;      Params:         0       1       0       0       0
  2197 ;;      Locals:         0       1       0       0       0
  2198 ;;      Temps:          0       3       0       0       0
  2199 ;;      Totals:         0       5       0       0       0
  2200 ;;Total ram usage:        5 bytes
  2201 ;; Hardware stack levels used:    1
  2202 ;; Hardware stack levels required when called:    3
  2203 ;; This function calls:
  2204 ;;		_strchr
  2205 ;;		_strlen
  2206 ;;		_strncmp
  2207 ;; This function is called by:
  2208 ;;		_TransmittedDataHandler
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           
  2213                           ;psect for function _strstr
  2214  0DE7                     _strstr:	
  2215                           
  2216                           ;incstack = 0
  2217                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2218                           ;strstr@s1 stored from wreg
  2219  0DE7  1283               	bcf	3,5	;RP0=0, select bank0
  2220  0DE8  1303               	bcf	3,6	;RP1=0, select bank0
  2221  0DE9  00B2               	movwf	strstr@s1
  2222  0DEA  2E22               	goto	l1943
  2223  0DEB                     l1935:	
  2224  0DEB  082E               	movf	strstr@s2,w
  2225  0DEC  00AF               	movwf	??_strstr
  2226  0DED  082F               	movf	??_strstr,w
  2227  0DEE  00A8               	movwf	strncmp@s2
  2228  0DEF  082E               	movf	strstr@s2,w
  2229  0DF0  120A  158A  2505  120A  158A  	fcall	_strlen
  2230  0DF5  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0DF6  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0DF7  0821               	movf	?_strlen+1,w
  2233  0DF8  00AA               	movwf	strncmp@len+1
  2234  0DF9  0820               	movf	?_strlen,w
  2235  0DFA  00A9               	movwf	strncmp@len
  2236  0DFB  0832               	movf	strstr@s1,w
  2237  0DFC  120A  158A  25A3  120A  158A  	fcall	_strncmp
  2238  0E01  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0E02  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0E03  0828               	movf	?_strncmp,w
  2241  0E04  0429               	iorwf	?_strncmp+1,w
  2242  0E05  1D03               	btfss	3,2
  2243  0E06  2E09               	goto	l1941
  2244  0E07  0832               	movf	strstr@s1,w
  2245  0E08  0008               	return
  2246  0E09                     l1941:	
  2247  0E09  082E               	movf	strstr@s2,w
  2248  0E0A  0084               	movwf	4
  2249  0E0B  120A  118A  260A  120A  158A  	fcall	stringdir
  2250  0E10  00AF               	movwf	??_strstr
  2251  0E11  01B0               	clrf	??_strstr+1
  2252  0E12  082F               	movf	??_strstr,w
  2253  0E13  00A0               	movwf	strchr@chr
  2254  0E14  0830               	movf	??_strstr+1,w
  2255  0E15  00A1               	movwf	strchr@chr+1
  2256  0E16  0832               	movf	strstr@s1,w
  2257  0E17  3E01               	addlw	1
  2258  0E18  120A  118A  25EB  120A  158A  	fcall	_strchr
  2259  0E1D  1283               	bcf	3,5	;RP0=0, select bank0
  2260  0E1E  1303               	bcf	3,6	;RP1=0, select bank0
  2261  0E1F  00B1               	movwf	??_strstr+2
  2262  0E20  0831               	movf	??_strstr+2,w
  2263  0E21  00B2               	movwf	strstr@s1
  2264  0E22                     l1943:	
  2265  0E22  0832               	movf	strstr@s1,w
  2266  0E23  1903               	btfsc	3,2
  2267  0E24  2E2B               	goto	l1947
  2268  0E25  0832               	movf	strstr@s1,w
  2269  0E26  0084               	movwf	4
  2270  0E27  1383               	bcf	3,7	;select IRP bank0
  2271  0E28  0800               	movf	0,w
  2272  0E29  1D03               	btfss	3,2
  2273  0E2A  2DEB               	goto	l1935
  2274  0E2B                     l1947:	
  2275  0E2B  3000               	movlw	0
  2276  0E2C  0008               	return
  2277  0E2D                     __end_of_strstr:	
  2278                           
  2279                           	psect	text5
  2280  0DA3                     __ptext5:	
  2281 ;; *************** function _strncmp *****************
  2282 ;; Defined at:
  2283 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strncmp.c"
  2284 ;; Parameters:    Size  Location     Type
  2285 ;;  s1              1    wreg     PTR const unsigned char 
  2286 ;;		 -> NULL(0), TransmittedString(30), 
  2287 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2288 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2289 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2290 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2291 ;;		 -> STR_1(8), 
  2292 ;;  len             2    9[BANK0 ] unsigned int 
  2293 ;; Auto vars:     Size  Location     Type
  2294 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2295 ;;		 -> NULL(0), TransmittedString(30), 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  2    8[BANK0 ] int 
  2298 ;; Registers used:
  2299 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2305 ;;      Params:         0       3       0       0       0
  2306 ;;      Locals:         0       1       0       0       0
  2307 ;;      Temps:          0       2       0       0       0
  2308 ;;      Totals:         0       6       0       0       0
  2309 ;;Total ram usage:        6 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    2
  2312 ;; This function calls:
  2313 ;;		Nothing
  2314 ;; This function is called by:
  2315 ;;		_strstr
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _strncmp
  2321  0DA3                     _strncmp:	
  2322                           
  2323                           ;incstack = 0
  2324                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2325                           ;strncmp@s1 stored from wreg
  2326  0DA3  1283               	bcf	3,5	;RP0=0, select bank0
  2327  0DA4  1303               	bcf	3,6	;RP1=0, select bank0
  2328  0DA5  00AD               	movwf	strncmp@s1
  2329  0DA6                     l921:	
  2330  0DA6  3001               	movlw	1
  2331  0DA7  02A9               	subwf	strncmp@len,f
  2332  0DA8  3000               	movlw	0
  2333  0DA9  1C03               	skipc
  2334  0DAA  03AA               	decf	strncmp@len+1,f
  2335  0DAB  02AA               	subwf	strncmp@len+1,f
  2336  0DAC  0A29               	incf	strncmp@len,w
  2337  0DAD  1903               	btfsc	3,2
  2338  0DAE  0A2A               	incf	strncmp@len+1,w
  2339  0DAF  1903               	btfsc	3,2
  2340  0DB0  2DE4               	goto	l1911
  2341  0DB1  082D               	movf	strncmp@s1,w
  2342  0DB2  0084               	movwf	4
  2343  0DB3  1383               	bcf	3,7	;select IRP bank0
  2344  0DB4  0800               	movf	0,w
  2345  0DB5  1903               	btfsc	3,2
  2346  0DB6  2DC5               	goto	l1905
  2347  0DB7  0828               	movf	strncmp@s2,w
  2348  0DB8  0084               	movwf	4
  2349  0DB9  120A  118A  260A  120A  158A  	fcall	stringdir
  2350  0DBE  00AB               	movwf	??_strncmp
  2351  0DBF  082D               	movf	strncmp@s1,w
  2352  0DC0  0084               	movwf	4
  2353  0DC1  0800               	movf	0,w
  2354  0DC2  062B               	xorwf	??_strncmp,w
  2355  0DC3  1903               	skipnz
  2356  0DC4  2DDB               	goto	l1909
  2357  0DC5                     l1905:	
  2358  0DC5  0828               	movf	strncmp@s2,w
  2359  0DC6  0084               	movwf	4
  2360  0DC7  120A  118A  260A   	fcall	stringdir
  2361  0DCA  00AB               	movwf	??_strncmp
  2362  0DCB  01AC               	clrf	??_strncmp+1
  2363  0DCC  09AB               	comf	??_strncmp,f
  2364  0DCD  09AC               	comf	??_strncmp+1,f
  2365  0DCE  0AAB               	incf	??_strncmp,f
  2366  0DCF  1903               	skipnz
  2367  0DD0  0AAC               	incf	??_strncmp+1,f
  2368  0DD1  082D               	movf	strncmp@s1,w
  2369  0DD2  0084               	movwf	4
  2370  0DD3  0800               	movf	0,w
  2371  0DD4  072B               	addwf	??_strncmp,w
  2372  0DD5  00A8               	movwf	?_strncmp
  2373  0DD6  082C               	movf	??_strncmp+1,w
  2374  0DD7  1803               	skipnc
  2375  0DD8  0A2C               	incf	??_strncmp+1,w
  2376  0DD9  00A9               	movwf	?_strncmp+1
  2377  0DDA  0008               	return
  2378  0DDB                     l1909:	
  2379  0DDB  3001               	movlw	1
  2380  0DDC  00AB               	movwf	??_strncmp
  2381  0DDD  082B               	movf	??_strncmp,w
  2382  0DDE  07AD               	addwf	strncmp@s1,f
  2383  0DDF  3001               	movlw	1
  2384  0DE0  00AB               	movwf	??_strncmp
  2385  0DE1  082B               	movf	??_strncmp,w
  2386  0DE2  07A8               	addwf	strncmp@s2,f
  2387  0DE3  2DA6               	goto	l921
  2388  0DE4                     l1911:	
  2389  0DE4  01A8               	clrf	?_strncmp
  2390  0DE5  01A9               	clrf	?_strncmp+1
  2391  0DE6  0008               	return
  2392  0DE7                     __end_of_strncmp:	
  2393                           
  2394                           	psect	text6
  2395  0D05                     __ptext6:	
  2396 ;; *************** function _strlen *****************
  2397 ;; Defined at:
  2398 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  s               1    wreg     PTR const unsigned char 
  2401 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2402 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2403 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2404 ;;		 -> STR_1(8), 
  2405 ;; Auto vars:     Size  Location     Type
  2406 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2407 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2408 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2409 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2410 ;;		 -> STR_1(8), 
  2411 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2412 ;;		 -> STR_19(6), STR_18(5), STR_17(8), STR_14(7), 
  2413 ;;		 -> STR_11(9), STR_10(7), STR_9(8), STR_8(7), 
  2414 ;;		 -> STR_7(7), STR_6(10), STR_5(10), STR_3(8), 
  2415 ;;		 -> STR_1(8), 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2    0[BANK0 ] unsigned int 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2425 ;;      Params:         0       2       0       0       0
  2426 ;;      Locals:         0       2       0       0       0
  2427 ;;      Temps:          0       4       0       0       0
  2428 ;;      Totals:         0       8       0       0       0
  2429 ;;Total ram usage:        8 bytes
  2430 ;; Hardware stack levels used:    1
  2431 ;; Hardware stack levels required when called:    2
  2432 ;; This function calls:
  2433 ;;		Nothing
  2434 ;; This function is called by:
  2435 ;;		_strstr
  2436 ;; This function uses a non-reentrant model
  2437 ;;
  2438                           
  2439                           
  2440                           ;psect for function _strlen
  2441  0D05                     _strlen:	
  2442                           
  2443                           ;incstack = 0
  2444                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2445                           ;strlen@s stored from wreg
  2446  0D05  1283               	bcf	3,5	;RP0=0, select bank0
  2447  0D06  1303               	bcf	3,6	;RP1=0, select bank0
  2448  0D07  00A6               	movwf	strlen@s
  2449  0D08  0826               	movf	strlen@s,w
  2450  0D09  00A2               	movwf	??_strlen
  2451  0D0A  0822               	movf	??_strlen,w
  2452  0D0B  00A7               	movwf	strlen@cp
  2453  0D0C                     l1893:	
  2454  0D0C  0827               	movf	strlen@cp,w
  2455  0D0D  0084               	movwf	4
  2456  0D0E  120A  118A  260A  120A  158A  	fcall	stringdir
  2457  0D13  3A00               	xorlw	0
  2458  0D14  1903               	btfsc	3,2
  2459  0D15  2D1B               	goto	l1895
  2460  0D16  3001               	movlw	1
  2461  0D17  00A2               	movwf	??_strlen
  2462  0D18  0822               	movf	??_strlen,w
  2463  0D19  07A7               	addwf	strlen@cp,f
  2464  0D1A  2D0C               	goto	l1893
  2465  0D1B                     l1895:	
  2466  0D1B  0826               	movf	strlen@s,w
  2467  0D1C  00A2               	movwf	??_strlen
  2468  0D1D  3080               	movlw	128
  2469  0D1E  00A3               	movwf	??_strlen+1
  2470  0D1F  09A2               	comf	??_strlen,f
  2471  0D20  09A3               	comf	??_strlen+1,f
  2472  0D21  0AA2               	incf	??_strlen,f
  2473  0D22  1903               	skipnz
  2474  0D23  0AA3               	incf	??_strlen+1,f
  2475  0D24  0827               	movf	strlen@cp,w
  2476  0D25  00A4               	movwf	??_strlen+2
  2477  0D26  3080               	movlw	128
  2478  0D27  00A5               	movwf	??_strlen+3
  2479  0D28  0822               	movf	??_strlen,w
  2480  0D29  0724               	addwf	??_strlen+2,w
  2481  0D2A  00A0               	movwf	?_strlen
  2482  0D2B  0823               	movf	??_strlen+1,w
  2483  0D2C  1803               	skipnc
  2484  0D2D  0A23               	incf	??_strlen+1,w
  2485  0D2E  0725               	addwf	??_strlen+3,w
  2486  0D2F  00A1               	movwf	?_strlen+1
  2487  0D30  0008               	return
  2488  0D31                     __end_of_strlen:	
  2489                           
  2490                           	psect	text7
  2491  05EB                     __ptext7:	
  2492 ;; *************** function _strchr *****************
  2493 ;; Defined at:
  2494 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strchr.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  ptr             1    wreg     PTR const unsigned char 
  2497 ;;		 -> NULL(0), TransmittedString(30), 
  2498 ;;  chr             2    0[BANK0 ] int 
  2499 ;; Auto vars:     Size  Location     Type
  2500 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2501 ;;		 -> NULL(0), TransmittedString(30), 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      PTR unsigned char 
  2504 ;; Registers used:
  2505 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       2       0       0       0
  2512 ;;      Locals:         0       1       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         0       3       0       0       0
  2515 ;;Total ram usage:        3 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    2
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_strstr
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _strchr
  2527  05EB                     _strchr:	
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2531                           ;strchr@ptr stored from wreg
  2532  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  2533  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  2534  05ED  00A2               	movwf	strchr@ptr
  2535  05EE                     l909:	
  2536  05EE  0822               	movf	strchr@ptr,w
  2537  05EF  0084               	movwf	4
  2538  05F0  1383               	bcf	3,7	;select IRP bank0
  2539  05F1  0800               	movf	0,w
  2540  05F2  0620               	xorwf	strchr@chr,w
  2541  05F3  1D03               	skipz
  2542  05F4  2DF7               	goto	l1921
  2543  05F5  0822               	movf	strchr@ptr,w
  2544  05F6  0008               	return
  2545  05F7                     l1921:	
  2546  05F7  0822               	movf	strchr@ptr,w
  2547  05F8  0084               	movwf	4
  2548  05F9  3001               	movlw	1
  2549  05FA  07A2               	addwf	strchr@ptr,f
  2550  05FB  0800               	movf	0,w
  2551  05FC  1D03               	btfss	3,2
  2552  05FD  2DEE               	goto	l909
  2553  05FE  3000               	movlw	0
  2554  05FF  0008               	return
  2555  0600                     __end_of_strchr:	
  2556                           
  2557                           	psect	text8
  2558  0D31                     __ptext8:	
  2559 ;; *************** function _eeprom_write *****************
  2560 ;; Defined at:
  2561 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2562 ;; Parameters:    Size  Location     Type
  2563 ;;  addr            1    wreg     unsigned char 
  2564 ;;  value           1    0[BANK0 ] unsigned char 
  2565 ;; Auto vars:     Size  Location     Type
  2566 ;;  addr            1    2[BANK0 ] unsigned char 
  2567 ;; Return value:  Size  Location     Type
  2568 ;;                  1    wreg      void 
  2569 ;; Registers used:
  2570 ;;		wreg, status,2, status,0
  2571 ;; Tracked objects:
  2572 ;;		On entry : 0/0
  2573 ;;		On exit  : 0/0
  2574 ;;		Unchanged: 0/0
  2575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2576 ;;      Params:         0       1       0       0       0
  2577 ;;      Locals:         0       1       0       0       0
  2578 ;;      Temps:          0       1       0       0       0
  2579 ;;      Totals:         0       3       0       0       0
  2580 ;;Total ram usage:        3 bytes
  2581 ;; Hardware stack levels used:    1
  2582 ;; Hardware stack levels required when called:    2
  2583 ;; This function calls:
  2584 ;;		Nothing
  2585 ;; This function is called by:
  2586 ;;		_TransmittedDataHandler
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           
  2591                           ;psect for function _eeprom_write
  2592  0D31                     _eeprom_write:	
  2593                           
  2594                           ;incstack = 0
  2595                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2596                           ;eeprom_write@addr stored from wreg
  2597  0D31  1283               	bcf	3,5	;RP0=0, select bank0
  2598  0D32  1303               	bcf	3,6	;RP1=0, select bank0
  2599  0D33  00A2               	movwf	eeprom_write@addr
  2600  0D34                     l427:	
  2601  0D34  1683               	bsf	3,5	;RP0=1, select bank3
  2602  0D35  1703               	bsf	3,6	;RP1=1, select bank3
  2603  0D36  188C               	btfsc	12,1	;volsfr
  2604  0D37  2D34               	goto	l427
  2605  0D38  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0D39  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0D3A  0822               	movf	eeprom_write@addr,w
  2608  0D3B  1283               	bcf	3,5	;RP0=0, select bank2
  2609  0D3C  1703               	bsf	3,6	;RP1=1, select bank2
  2610  0D3D  008D               	movwf	13	;volatile
  2611  0D3E  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0D3F  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0D40  0820               	movf	eeprom_write@value,w
  2614  0D41  1283               	bcf	3,5	;RP0=0, select bank2
  2615  0D42  1703               	bsf	3,6	;RP1=1, select bank2
  2616  0D43  008C               	movwf	12	;volatile
  2617  0D44  303F               	movlw	63
  2618  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  2619  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  2620  0D47  00A1               	movwf	??_eeprom_write
  2621  0D48  0821               	movf	??_eeprom_write,w
  2622  0D49  1683               	bsf	3,5	;RP0=1, select bank3
  2623  0D4A  1703               	bsf	3,6	;RP1=1, select bank3
  2624  0D4B  058C               	andwf	12,f	;volsfr
  2625  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  2626  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  2627  0D4E  1003               	bcf	3,0	;volatile
  2628  0D4F  1B8B               	btfsc	11,7	;volatile
  2629  0D50  1403               	bsf	3,0	;volatile
  2630  0D51  138B               	bcf	11,7	;volatile
  2631  0D52  1683               	bsf	3,5	;RP0=1, select bank3
  2632  0D53  1703               	bsf	3,6	;RP1=1, select bank3
  2633  0D54  150C               	bsf	12,2	;volsfr
  2634  0D55  3055               	movlw	85
  2635  0D56  008D               	movwf	13	;volsfr
  2636  0D57  30AA               	movlw	170
  2637  0D58  008D               	movwf	13	;volsfr
  2638  0D59  148C               	bsf	12,1	;volsfr
  2639  0D5A  110C               	bcf	12,2	;volsfr
  2640  0D5B  1283               	bcf	3,5	;RP0=0, select bank0
  2641  0D5C  1303               	bcf	3,6	;RP1=0, select bank0
  2642  0D5D  1C03               	btfss	3,0	;volatile
  2643  0D5E  0008               	return
  2644  0D5F  178B               	bsf	11,7	;volatile
  2645  0D60  0008               	return
  2646  0D61                     __end_of_eeprom_write:	
  2647                           
  2648                           	psect	text9
  2649  074F                     __ptext9:	
  2650 ;; *************** function _atoi *****************
  2651 ;; Defined at:
  2652 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  2653 ;; Parameters:    Size  Location     Type
  2654 ;;  s               1    wreg     PTR const unsigned char 
  2655 ;;		 -> TransmittedString(30), 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2658 ;;		 -> TransmittedString(30), 
  2659 ;;  a               2   11[BANK0 ] int 
  2660 ;;  sign            1   10[BANK0 ] unsigned char 
  2661 ;; Return value:  Size  Location     Type
  2662 ;;                  2    6[BANK0 ] int 
  2663 ;; Registers used:
  2664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2665 ;; Tracked objects:
  2666 ;;		On entry : 0/0
  2667 ;;		On exit  : 0/0
  2668 ;;		Unchanged: 0/0
  2669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2670 ;;      Params:         0       2       0       0       0
  2671 ;;      Locals:         0       4       0       0       0
  2672 ;;      Temps:          0       2       0       0       0
  2673 ;;      Totals:         0       8       0       0       0
  2674 ;;Total ram usage:        8 bytes
  2675 ;; Hardware stack levels used:    1
  2676 ;; Hardware stack levels required when called:    3
  2677 ;; This function calls:
  2678 ;;		___wmul
  2679 ;;		_isdigit
  2680 ;; This function is called by:
  2681 ;;		_TransmittedDataHandler
  2682 ;; This function uses a non-reentrant model
  2683 ;;
  2684                           
  2685                           
  2686                           ;psect for function _atoi
  2687  074F                     _atoi:	
  2688                           
  2689                           ;incstack = 0
  2690                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2691                           ;atoi@s stored from wreg
  2692  074F  1283               	bcf	3,5	;RP0=0, select bank0
  2693  0750  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0751  00AD               	movwf	atoi@s
  2695  0752                     l2015:	
  2696  0752  082D               	movf	atoi@s,w
  2697  0753  0084               	movwf	4
  2698  0754  3020               	movlw	32
  2699  0755  1383               	bcf	3,7	;select IRP bank0
  2700  0756  0600               	xorwf	0,w
  2701  0757  1D03               	btfss	3,2
  2702  0758  2F5E               	goto	l2017
  2703  0759                     l2013:	
  2704  0759  3001               	movlw	1
  2705  075A  00A8               	movwf	??_atoi
  2706  075B  0828               	movf	??_atoi,w
  2707  075C  07AD               	addwf	atoi@s,f
  2708  075D  2F52               	goto	l2015
  2709  075E                     l2017:	
  2710  075E  082D               	movf	atoi@s,w
  2711  075F  0084               	movwf	4
  2712  0760  3009               	movlw	9
  2713  0761  0600               	xorwf	0,w
  2714  0762  1903               	btfsc	3,2
  2715  0763  2F59               	goto	l2013
  2716  0764  01AB               	clrf	atoi@a
  2717  0765  01AC               	clrf	atoi@a+1
  2718  0766  01AA               	clrf	atoi@sign
  2719  0767  082D               	movf	atoi@s,w
  2720  0768  0084               	movwf	4
  2721  0769  302D               	movlw	45
  2722  076A  0600               	xorwf	0,w
  2723  076B  1D03               	btfss	3,2
  2724  076C  2F72               	goto	l2025
  2725  076D  3001               	movlw	1
  2726  076E  00A8               	movwf	??_atoi
  2727  076F  0828               	movf	??_atoi,w
  2728  0770  07AA               	addwf	atoi@sign,f
  2729  0771  2F78               	goto	l2031
  2730  0772                     l2025:	
  2731  0772  082D               	movf	atoi@s,w
  2732  0773  0084               	movwf	4
  2733  0774  302B               	movlw	43
  2734  0775  0600               	xorwf	0,w
  2735  0776  1D03               	btfss	3,2
  2736  0777  2F7C               	goto	l2033
  2737  0778                     l2031:	
  2738  0778  3001               	movlw	1
  2739  0779  00A8               	movwf	??_atoi
  2740  077A  0828               	movf	??_atoi,w
  2741  077B  07AD               	addwf	atoi@s,f
  2742  077C                     l2033:	
  2743  077C  082D               	movf	atoi@s,w
  2744  077D  0084               	movwf	4
  2745  077E  0800               	movf	0,w
  2746  077F  120A  158A  238A  120A  118A  	fcall	_isdigit
  2747  0784  1C03               	btfss	3,0
  2748  0785  2FAA               	goto	l2035
  2749  0786  1283               	bcf	3,5	;RP0=0, select bank0
  2750  0787  1303               	bcf	3,6	;RP1=0, select bank0
  2751  0788  082C               	movf	atoi@a+1,w
  2752  0789  00A1               	movwf	___wmul@multiplier+1
  2753  078A  082B               	movf	atoi@a,w
  2754  078B  00A0               	movwf	___wmul@multiplier
  2755  078C  300A               	movlw	10
  2756  078D  00A2               	movwf	___wmul@multiplicand
  2757  078E  3000               	movlw	0
  2758  078F  00A3               	movwf	___wmul@multiplicand+1
  2759  0790  120A  158A  246C  120A  118A  	fcall	___wmul
  2760  0795  1283               	bcf	3,5	;RP0=0, select bank0
  2761  0796  1303               	bcf	3,6	;RP1=0, select bank0
  2762  0797  082D               	movf	atoi@s,w
  2763  0798  0084               	movwf	4
  2764  0799  1383               	bcf	3,7	;select IRP bank0
  2765  079A  0800               	movf	0,w
  2766  079B  0720               	addwf	?___wmul,w
  2767  079C  00A8               	movwf	??_atoi
  2768  079D  0821               	movf	?___wmul+1,w
  2769  079E  1803               	skipnc
  2770  079F  0A21               	incf	?___wmul+1,w
  2771  07A0  00A9               	movwf	??_atoi+1
  2772  07A1  0828               	movf	??_atoi,w
  2773  07A2  3ED0               	addlw	208
  2774  07A3  00AB               	movwf	atoi@a
  2775  07A4  0829               	movf	??_atoi+1,w
  2776  07A5  1803               	skipnc
  2777  07A6  3E01               	addlw	1
  2778  07A7  3EFF               	addlw	255
  2779  07A8  00AC               	movwf	atoi@a+1
  2780  07A9  2F78               	goto	l2031
  2781  07AA                     l2035:	
  2782  07AA  1283               	bcf	3,5	;RP0=0, select bank0
  2783  07AB  1303               	bcf	3,6	;RP1=0, select bank0
  2784  07AC  082A               	movf	atoi@sign,w
  2785  07AD  1903               	btfsc	3,2
  2786  07AE  2FBB               	goto	l2041
  2787  07AF  092B               	comf	atoi@a,w
  2788  07B0  00A8               	movwf	??_atoi
  2789  07B1  092C               	comf	atoi@a+1,w
  2790  07B2  00A9               	movwf	??_atoi+1
  2791  07B3  0AA8               	incf	??_atoi,f
  2792  07B4  1903               	skipnz
  2793  07B5  0AA9               	incf	??_atoi+1,f
  2794  07B6  0828               	movf	??_atoi,w
  2795  07B7  00A6               	movwf	?_atoi
  2796  07B8  0829               	movf	??_atoi+1,w
  2797  07B9  00A7               	movwf	?_atoi+1
  2798  07BA  0008               	return
  2799  07BB                     l2041:	
  2800  07BB  082C               	movf	atoi@a+1,w
  2801  07BC  00A7               	movwf	?_atoi+1
  2802  07BD  082B               	movf	atoi@a,w
  2803  07BE  00A6               	movwf	?_atoi
  2804  07BF  0008               	return
  2805  07C0                     __end_of_atoi:	
  2806                           
  2807                           	psect	text10
  2808  0B8A                     __ptext10:	
  2809 ;; *************** function _isdigit *****************
  2810 ;; Defined at:
  2811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2812 ;; Parameters:    Size  Location     Type
  2813 ;;  c               1    wreg     unsigned char 
  2814 ;; Auto vars:     Size  Location     Type
  2815 ;;  c               1    1[BANK0 ] unsigned char 
  2816 ;; Return value:  Size  Location     Type
  2817 ;;		None               void
  2818 ;; Registers used:
  2819 ;;		wreg, status,2, status,0
  2820 ;; Tracked objects:
  2821 ;;		On entry : 0/0
  2822 ;;		On exit  : 0/0
  2823 ;;		Unchanged: 0/0
  2824 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2825 ;;      Params:         0       0       0       0       0
  2826 ;;      Locals:         0       2       0       0       0
  2827 ;;      Temps:          0       0       0       0       0
  2828 ;;      Totals:         0       2       0       0       0
  2829 ;;Total ram usage:        2 bytes
  2830 ;; Hardware stack levels used:    1
  2831 ;; Hardware stack levels required when called:    2
  2832 ;; This function calls:
  2833 ;;		Nothing
  2834 ;; This function is called by:
  2835 ;;		_atoi
  2836 ;; This function uses a non-reentrant model
  2837 ;;
  2838                           
  2839                           
  2840                           ;psect for function _isdigit
  2841  0B8A                     _isdigit:	
  2842                           
  2843                           ;incstack = 0
  2844                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2845                           ;isdigit@c stored from wreg
  2846  0B8A  1283               	bcf	3,5	;RP0=0, select bank0
  2847  0B8B  1303               	bcf	3,6	;RP1=0, select bank0
  2848  0B8C  00A1               	movwf	isdigit@c
  2849  0B8D  01A0               	clrf	_isdigit$1090
  2850  0B8E  303A               	movlw	58
  2851  0B8F  0221               	subwf	isdigit@c,w
  2852  0B90  1803               	skipnc
  2853  0B91  2B98               	goto	l1885
  2854  0B92  3030               	movlw	48
  2855  0B93  0221               	subwf	isdigit@c,w
  2856  0B94  1C03               	skipc
  2857  0B95  2B98               	goto	l1885
  2858  0B96  01A0               	clrf	_isdigit$1090
  2859  0B97  0AA0               	incf	_isdigit$1090,f
  2860  0B98                     l1885:	
  2861  0B98  0C20               	rrf	_isdigit$1090,w
  2862  0B99  0008               	return
  2863  0B9A                     __end_of_isdigit:	
  2864                           
  2865                           	psect	text11
  2866  0C6C                     __ptext11:	
  2867 ;; *************** function ___wmul *****************
  2868 ;; Defined at:
  2869 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2870 ;; Parameters:    Size  Location     Type
  2871 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2872 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  product         2    4[BANK0 ] unsigned int 
  2875 ;; Return value:  Size  Location     Type
  2876 ;;                  2    0[BANK0 ] unsigned int 
  2877 ;; Registers used:
  2878 ;;		wreg, status,2, status,0
  2879 ;; Tracked objects:
  2880 ;;		On entry : 0/0
  2881 ;;		On exit  : 0/0
  2882 ;;		Unchanged: 0/0
  2883 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2884 ;;      Params:         0       4       0       0       0
  2885 ;;      Locals:         0       2       0       0       0
  2886 ;;      Temps:          0       0       0       0       0
  2887 ;;      Totals:         0       6       0       0       0
  2888 ;;Total ram usage:        6 bytes
  2889 ;; Hardware stack levels used:    1
  2890 ;; Hardware stack levels required when called:    2
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_atoi
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           
  2899                           ;psect for function ___wmul
  2900  0C6C                     ___wmul:	
  2901                           
  2902                           ;incstack = 0
  2903                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2904  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2905  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2906  0C6E  01A4               	clrf	___wmul@product
  2907  0C6F  01A5               	clrf	___wmul@product+1
  2908  0C70                     l1865:	
  2909  0C70  1C20               	btfss	___wmul@multiplier,0
  2910  0C71  2C78               	goto	l517
  2911  0C72  0822               	movf	___wmul@multiplicand,w
  2912  0C73  07A4               	addwf	___wmul@product,f
  2913  0C74  1803               	skipnc
  2914  0C75  0AA5               	incf	___wmul@product+1,f
  2915  0C76  0823               	movf	___wmul@multiplicand+1,w
  2916  0C77  07A5               	addwf	___wmul@product+1,f
  2917  0C78                     l517:	
  2918  0C78  3001               	movlw	1
  2919  0C79                     u1275:	
  2920  0C79  1003               	clrc
  2921  0C7A  0DA2               	rlf	___wmul@multiplicand,f
  2922  0C7B  0DA3               	rlf	___wmul@multiplicand+1,f
  2923  0C7C  3EFF               	addlw	-1
  2924  0C7D  1D03               	skipz
  2925  0C7E  2C79               	goto	u1275
  2926  0C7F  3001               	movlw	1
  2927  0C80                     u1285:	
  2928  0C80  1003               	clrc
  2929  0C81  0CA1               	rrf	___wmul@multiplier+1,f
  2930  0C82  0CA0               	rrf	___wmul@multiplier,f
  2931  0C83  3EFF               	addlw	-1
  2932  0C84  1D03               	skipz
  2933  0C85  2C80               	goto	u1285
  2934  0C86  0820               	movf	___wmul@multiplier,w
  2935  0C87  0421               	iorwf	___wmul@multiplier+1,w
  2936  0C88  1D03               	btfss	3,2
  2937  0C89  2C70               	goto	l1865
  2938  0C8A  0825               	movf	___wmul@product+1,w
  2939  0C8B  00A1               	movwf	?___wmul+1
  2940  0C8C  0824               	movf	___wmul@product,w
  2941  0C8D  00A0               	movwf	?___wmul
  2942  0C8E  0008               	return
  2943  0C8F                     __end_of___wmul:	
  2944                           
  2945                           	psect	text12
  2946  0B59                     __ptext12:	
  2947 ;; *************** function _OperationMode *****************
  2948 ;; Defined at:
  2949 ;;		line 1080 in file "../Main Card V10.0.c"
  2950 ;; Parameters:    Size  Location     Type
  2951 ;;		None
  2952 ;; Auto vars:     Size  Location     Type
  2953 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2954 ;; Return value:  Size  Location     Type
  2955 ;;                  1    wreg      unsigned char 
  2956 ;; Registers used:
  2957 ;;		wreg, status,2
  2958 ;; Tracked objects:
  2959 ;;		On entry : 0/0
  2960 ;;		On exit  : 0/0
  2961 ;;		Unchanged: 0/0
  2962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2963 ;;      Params:         0       0       0       0       0
  2964 ;;      Locals:         0       1       0       0       0
  2965 ;;      Temps:          0       1       0       0       0
  2966 ;;      Totals:         0       2       0       0       0
  2967 ;;Total ram usage:        2 bytes
  2968 ;; Hardware stack levels used:    1
  2969 ;; Hardware stack levels required when called:    2
  2970 ;; This function calls:
  2971 ;;		Nothing
  2972 ;; This function is called by:
  2973 ;;		_main
  2974 ;;		_TransmittedDataHandler
  2975 ;; This function uses a non-reentrant model
  2976 ;;
  2977                           
  2978                           
  2979                           ;psect for function _OperationMode
  2980  0B59                     _OperationMode:	
  2981                           
  2982                           ;Main Card V10.0.c: 1082: unsigned char bracketStatus;
  2983                           ;Main Card V10.0.c: 1083: bracketStatus = ((~PORTB) & 0b00000111) ;
  2984                           
  2985                           ;incstack = 0
  2986                           ; Regs used in _OperationMode: [wreg+status,2]
  2987  0B59  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0B5A  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0B5B  0906               	comf	6,w	;volatile
  2990  0B5C  3907               	andlw	7
  2991  0B5D  00A0               	movwf	??_OperationMode
  2992  0B5E  0820               	movf	??_OperationMode,w
  2993  0B5F  00A1               	movwf	OperationMode@bracketStatus
  2994                           
  2995                           ;Main Card V10.0.c: 1085: return bracketStatus;
  2996  0B60  0821               	movf	OperationMode@bracketStatus,w
  2997  0B61  0008               	return
  2998  0B62                     __end_of_OperationMode:	
  2999                           
  3000                           	psect	text13
  3001  0B7C                     __ptext13:	
  3002 ;; *************** function _ReadFIFO *****************
  3003 ;; Defined at:
  3004 ;;		line 885 in file "../Main Card V10.0.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;		None
  3007 ;; Auto vars:     Size  Location     Type
  3008 ;;  value           1    4[BANK0 ] unsigned char 
  3009 ;; Return value:  Size  Location     Type
  3010 ;;                  1    wreg      unsigned char 
  3011 ;; Registers used:
  3012 ;;		wreg, status,2, status,0, pclath, cstack
  3013 ;; Tracked objects:
  3014 ;;		On entry : 0/0
  3015 ;;		On exit  : 0/0
  3016 ;;		Unchanged: 0/0
  3017 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3018 ;;      Params:         0       0       0       0       0
  3019 ;;      Locals:         0       1       0       0       0
  3020 ;;      Temps:          0       1       0       0       0
  3021 ;;      Totals:         0       2       0       0       0
  3022 ;;Total ram usage:        2 bytes
  3023 ;; Hardware stack levels used:    1
  3024 ;; Hardware stack levels required when called:    4
  3025 ;; This function calls:
  3026 ;;		_ReadSPI
  3027 ;; This function is called by:
  3028 ;;		_TransiverReadFIFO
  3029 ;; This function uses a non-reentrant model
  3030 ;;
  3031                           
  3032                           
  3033                           ;psect for function _ReadFIFO
  3034  0B7C                     _ReadFIFO:	
  3035                           
  3036                           ;Main Card V10.0.c: 887: BYTE value;
  3037                           ;Main Card V10.0.c: 888: PORTAbits.RA5 = 0;
  3038                           
  3039                           ;incstack = 0
  3040                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  3041  0B7C  1283               	bcf	3,5	;RP0=0, select bank0
  3042  0B7D  1303               	bcf	3,6	;RP1=0, select bank0
  3043  0B7E  1285               	bcf	5,5	;volatile
  3044                           
  3045                           ;Main Card V10.0.c: 889: value = ReadSPI();
  3046  0B7F  120A  158A  2340   	fcall	_ReadSPI
  3047  0B82  1283               	bcf	3,5	;RP0=0, select bank0
  3048  0B83  1303               	bcf	3,6	;RP1=0, select bank0
  3049  0B84  00A3               	movwf	??_ReadFIFO
  3050  0B85  0823               	movf	??_ReadFIFO,w
  3051  0B86  00A4               	movwf	ReadFIFO@value
  3052                           
  3053                           ;Main Card V10.0.c: 890: PORTAbits.RA5 = 1;
  3054  0B87  1685               	bsf	5,5	;volatile
  3055                           
  3056                           ;Main Card V10.0.c: 891: return value;
  3057  0B88  0824               	movf	ReadFIFO@value,w
  3058  0B89  0008               	return
  3059  0B8A                     __end_of_ReadFIFO:	
  3060                           
  3061                           	psect	text14
  3062  042F                     __ptext14:	
  3063 ;; *************** function _TransiverInit *****************
  3064 ;; Defined at:
  3065 ;;		line 650 in file "../Main Card V10.0.c"
  3066 ;; Parameters:    Size  Location     Type
  3067 ;;		None
  3068 ;; Auto vars:     Size  Location     Type
  3069 ;;		None
  3070 ;; Return value:  Size  Location     Type
  3071 ;;                  1    wreg      void 
  3072 ;; Registers used:
  3073 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3074 ;; Tracked objects:
  3075 ;;		On entry : 0/0
  3076 ;;		On exit  : 0/0
  3077 ;;		Unchanged: 0/0
  3078 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3079 ;;      Params:         0       0       0       0       0
  3080 ;;      Locals:         0       0       0       0       0
  3081 ;;      Temps:          0       1       0       0       0
  3082 ;;      Totals:         0       1       0       0       0
  3083 ;;Total ram usage:        1 bytes
  3084 ;; Hardware stack levels used:    1
  3085 ;; Hardware stack levels required when called:    7
  3086 ;; This function calls:
  3087 ;;		_Blink
  3088 ;;		_FindChannel
  3089 ;;		_RegisterRead
  3090 ;;		_RegisterSet
  3091 ;;		_SetRFMode
  3092 ;; This function is called by:
  3093 ;;		_main
  3094 ;; This function uses a non-reentrant model
  3095 ;;
  3096                           
  3097                           
  3098                           ;psect for function _TransiverInit
  3099  042F                     _TransiverInit:	
  3100                           
  3101                           ;Main Card V10.0.c: 653: RegisterSet(0x00, 0x30);
  3102                           
  3103                           ;incstack = 0
  3104                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3105  042F  3030               	movlw	48
  3106  0430  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0431  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0432  00B5               	movwf	??_TransiverInit
  3109  0433  0835               	movf	??_TransiverInit,w
  3110  0434  00A7               	movwf	RegisterSet@value
  3111  0435  3000               	movlw	0
  3112  0436  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3113                           
  3114                           ;Main Card V10.0.c: 654: RegisterSet(0x01,(0xA8));
  3115  043B  30A8               	movlw	168
  3116  043C  1283               	bcf	3,5	;RP0=0, select bank0
  3117  043D  1303               	bcf	3,6	;RP1=0, select bank0
  3118  043E  00B5               	movwf	??_TransiverInit
  3119  043F  0835               	movf	??_TransiverInit,w
  3120  0440  00A7               	movwf	RegisterSet@value
  3121  0441  3001               	movlw	1
  3122  0442  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3123                           
  3124                           ;Main Card V10.0.c: 655: RegisterSet(0x02, 0x09);
  3125  0447  3009               	movlw	9
  3126  0448  1283               	bcf	3,5	;RP0=0, select bank0
  3127  0449  1303               	bcf	3,6	;RP1=0, select bank0
  3128  044A  00B5               	movwf	??_TransiverInit
  3129  044B  0835               	movf	??_TransiverInit,w
  3130  044C  00A7               	movwf	RegisterSet@value
  3131  044D  3002               	movlw	2
  3132  044E  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3133                           
  3134                           ;Main Card V10.0.c: 656: RegisterSet(0x03, 0x07);
  3135  0453  3007               	movlw	7
  3136  0454  1283               	bcf	3,5	;RP0=0, select bank0
  3137  0455  1303               	bcf	3,6	;RP1=0, select bank0
  3138  0456  00B5               	movwf	??_TransiverInit
  3139  0457  0835               	movf	??_TransiverInit,w
  3140  0458  00A7               	movwf	RegisterSet@value
  3141  0459  3003               	movlw	3
  3142  045A  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3143                           
  3144                           ;Main Card V10.0.c: 657: RegisterSet(0x05,(0x0A));
  3145  045F  300A               	movlw	10
  3146  0460  1283               	bcf	3,5	;RP0=0, select bank0
  3147  0461  1303               	bcf	3,6	;RP1=0, select bank0
  3148  0462  00B5               	movwf	??_TransiverInit
  3149  0463  0835               	movf	??_TransiverInit,w
  3150  0464  00A7               	movwf	RegisterSet@value
  3151  0465  3005               	movlw	5
  3152  0466  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3153                           
  3154                           ;Main Card V10.0.c: 658: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3155  046B  30B9               	movlw	185
  3156  046C  1283               	bcf	3,5	;RP0=0, select bank0
  3157  046D  1303               	bcf	3,6	;RP1=0, select bank0
  3158  046E  00B5               	movwf	??_TransiverInit
  3159  046F  0835               	movf	??_TransiverInit,w
  3160  0470  00A7               	movwf	RegisterSet@value
  3161  0471  300D               	movlw	13
  3162  0472  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3163                           
  3164                           ;Main Card V10.0.c: 659: RegisterSet(0x0E,(0x01|0x10|0x01));
  3165  0477  3011               	movlw	17
  3166  0478  1283               	bcf	3,5	;RP0=0, select bank0
  3167  0479  1303               	bcf	3,6	;RP1=0, select bank0
  3168  047A  00B5               	movwf	??_TransiverInit
  3169  047B  0835               	movf	??_TransiverInit,w
  3170  047C  00A7               	movwf	RegisterSet@value
  3171  047D  300E               	movlw	14
  3172  047E  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3173                           
  3174                           ;Main Card V10.0.c: 660: RegisterSet(0x10, 0xA3);
  3175  0483  30A3               	movlw	163
  3176  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3177  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3178  0486  00B5               	movwf	??_TransiverInit
  3179  0487  0835               	movf	??_TransiverInit,w
  3180  0488  00A7               	movwf	RegisterSet@value
  3181  0489  3010               	movlw	16
  3182  048A  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3183                           
  3184                           ;Main Card V10.0.c: 661: RegisterSet(0x12,(0x18|0x20|0x06));
  3185  048F  303E               	movlw	62
  3186  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3187  0491  1303               	bcf	3,6	;RP1=0, select bank0
  3188  0492  00B5               	movwf	??_TransiverInit
  3189  0493  0835               	movf	??_TransiverInit,w
  3190  0494  00A7               	movwf	RegisterSet@value
  3191  0495  3012               	movlw	18
  3192  0496  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3193                           
  3194                           ;Main Card V10.0.c: 662: RegisterSet(0x16,('S'));
  3195  049B  3053               	movlw	83
  3196  049C  1283               	bcf	3,5	;RP0=0, select bank0
  3197  049D  1303               	bcf	3,6	;RP1=0, select bank0
  3198  049E  00B5               	movwf	??_TransiverInit
  3199  049F  0835               	movf	??_TransiverInit,w
  3200  04A0  00A7               	movwf	RegisterSet@value
  3201  04A1  3016               	movlw	22
  3202  04A2  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3203                           
  3204                           ;Main Card V10.0.c: 663: RegisterSet(0x17,('Y'));
  3205  04A7  3059               	movlw	89
  3206  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  3207  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  3208  04AA  00B5               	movwf	??_TransiverInit
  3209  04AB  0835               	movf	??_TransiverInit,w
  3210  04AC  00A7               	movwf	RegisterSet@value
  3211  04AD  3017               	movlw	23
  3212  04AE  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3213                           
  3214                           ;Main Card V10.0.c: 664: RegisterSet(0x18,('N'));
  3215  04B3  304E               	movlw	78
  3216  04B4  1283               	bcf	3,5	;RP0=0, select bank0
  3217  04B5  1303               	bcf	3,6	;RP1=0, select bank0
  3218  04B6  00B5               	movwf	??_TransiverInit
  3219  04B7  0835               	movf	??_TransiverInit,w
  3220  04B8  00A7               	movwf	RegisterSet@value
  3221  04B9  3018               	movlw	24
  3222  04BA  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3223                           
  3224                           ;Main Card V10.0.c: 665: RegisterSet(0x19,('C'));
  3225  04BF  3043               	movlw	67
  3226  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  3227  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  3228  04C2  00B5               	movwf	??_TransiverInit
  3229  04C3  0835               	movf	??_TransiverInit,w
  3230  04C4  00A7               	movwf	RegisterSet@value
  3231  04C5  3019               	movlw	25
  3232  04C6  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3233                           
  3234                           ;Main Card V10.0.c: 666: RegisterSet(0x1A, 0x72);
  3235  04CB  3072               	movlw	114
  3236  04CC  1283               	bcf	3,5	;RP0=0, select bank0
  3237  04CD  1303               	bcf	3,6	;RP1=0, select bank0
  3238  04CE  00B5               	movwf	??_TransiverInit
  3239  04CF  0835               	movf	??_TransiverInit,w
  3240  04D0  00A7               	movwf	RegisterSet@value
  3241  04D1  301A               	movlw	26
  3242  04D2  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3243                           
  3244                           ;Main Card V10.0.c: 667: RegisterSet(0x1B, 0x3C);
  3245  04D7  303C               	movlw	60
  3246  04D8  1283               	bcf	3,5	;RP0=0, select bank0
  3247  04D9  1303               	bcf	3,6	;RP1=0, select bank0
  3248  04DA  00B5               	movwf	??_TransiverInit
  3249  04DB  0835               	movf	??_TransiverInit,w
  3250  04DC  00A7               	movwf	RegisterSet@value
  3251  04DD  301B               	movlw	27
  3252  04DE  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3253                           
  3254                           ;Main Card V10.0.c: 668: RegisterSet(0x1F, 0x80);
  3255  04E3  3080               	movlw	128
  3256  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  3257  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  3258  04E6  00B5               	movwf	??_TransiverInit
  3259  04E7  0835               	movf	??_TransiverInit,w
  3260  04E8  00A7               	movwf	RegisterSet@value
  3261  04E9  301F               	movlw	31
  3262  04EA  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3263                           
  3264                           ;Main Card V10.0.c: 669: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3265  04EF  3000               	movlw	0
  3266  04F0  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3267  04F5  3801               	iorlw	1
  3268  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  3269  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  3270  04F8  00B5               	movwf	??_TransiverInit
  3271  04F9  0835               	movf	??_TransiverInit,w
  3272  04FA  00A7               	movwf	RegisterSet@value
  3273  04FB  3000               	movlw	0
  3274  04FC  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3275                           
  3276                           ;Main Card V10.0.c: 671: if(FindChannel() == 1)
  3277  0501  120A  118A  223D  120A  118A  	fcall	_FindChannel
  3278  0506  3A01               	xorlw	1
  3279  0507  1D03               	skipz
  3280  0508  2D14               	goto	l2313
  3281                           
  3282                           ;Main Card V10.0.c: 672: Blink(1);
  3283  0509  3001               	movlw	1
  3284  050A  1283               	bcf	3,5	;RP0=0, select bank0
  3285  050B  1303               	bcf	3,6	;RP1=0, select bank0
  3286  050C  00A6               	movwf	Blink@n
  3287  050D  3000               	movlw	0
  3288  050E  00A7               	movwf	Blink@n+1
  3289  050F  120A  118A  27C0  120A  118A  	fcall	_Blink
  3290  0514                     l2313:	
  3291                           
  3292                           ;Main Card V10.0.c: 673: SetRFMode(0x00);
  3293  0514  3000               	movlw	0
  3294  0515  120A  158A  2791   	fcall	_SetRFMode
  3295  0518  0008               	return
  3296  0519                     __end_of_TransiverInit:	
  3297                           
  3298                           	psect	text15
  3299  07C0                     __ptext15:	
  3300 ;; *************** function _Blink *****************
  3301 ;; Defined at:
  3302 ;;		line 798 in file "../Main Card V10.0.c"
  3303 ;; Parameters:    Size  Location     Type
  3304 ;;  n               2    6[BANK0 ] int 
  3305 ;; Auto vars:     Size  Location     Type
  3306 ;;  i               2    9[BANK0 ] int 
  3307 ;; Return value:  Size  Location     Type
  3308 ;;                  1    wreg      void 
  3309 ;; Registers used:
  3310 ;;		wreg, status,2, status,0, pclath, cstack
  3311 ;; Tracked objects:
  3312 ;;		On entry : 0/0
  3313 ;;		On exit  : 0/0
  3314 ;;		Unchanged: 0/0
  3315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3316 ;;      Params:         0       2       0       0       0
  3317 ;;      Locals:         0       2       0       0       0
  3318 ;;      Temps:          0       1       0       0       0
  3319 ;;      Totals:         0       5       0       0       0
  3320 ;;Total ram usage:        5 bytes
  3321 ;; Hardware stack levels used:    1
  3322 ;; Hardware stack levels required when called:    3
  3323 ;; This function calls:
  3324 ;;		_DelayDs
  3325 ;; This function is called by:
  3326 ;;		_TransiverInit
  3327 ;; This function uses a non-reentrant model
  3328 ;;
  3329                           
  3330                           
  3331                           ;psect for function _Blink
  3332  07C0                     _Blink:	
  3333                           
  3334                           ;Main Card V10.0.c: 800: for(int i = 1;i<=n;i++)
  3335                           
  3336                           ;incstack = 0
  3337                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3338  07C0  3001               	movlw	1
  3339  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  3340  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  3341  07C3  00A9               	movwf	Blink@i
  3342  07C4  3000               	movlw	0
  3343  07C5  00AA               	movwf	Blink@i+1
  3344  07C6                     l2233:	
  3345  07C6  0827               	movf	Blink@n+1,w
  3346  07C7  3A80               	xorlw	128
  3347  07C8  00A8               	movwf	??_Blink
  3348  07C9  082A               	movf	Blink@i+1,w
  3349  07CA  3A80               	xorlw	128
  3350  07CB  0228               	subwf	??_Blink,w
  3351  07CC  1D03               	skipz
  3352  07CD  2FD0               	goto	u1895
  3353  07CE  0829               	movf	Blink@i,w
  3354  07CF  0226               	subwf	Blink@n,w
  3355  07D0                     u1895:	
  3356  07D0  1C03               	btfss	3,0
  3357  07D1  0008               	return
  3358                           
  3359                           ;Main Card V10.0.c: 801: {
  3360                           ;Main Card V10.0.c: 802: PORTCbits.RC1 = 1;
  3361  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  3362  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  3363  07D4  1487               	bsf	7,1	;volatile
  3364                           
  3365                           ;Main Card V10.0.c: 803: DelayDs(2);
  3366  07D5  3002               	movlw	2
  3367  07D6  00A0               	movwf	DelayDs@cnt
  3368  07D7  3000               	movlw	0
  3369  07D8  00A1               	movwf	DelayDs@cnt+1
  3370  07D9  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3371                           
  3372                           ;Main Card V10.0.c: 804: PORTCbits.RC1 = 0;
  3373  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  3374  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  3375  07E0  1087               	bcf	7,1	;volatile
  3376                           
  3377                           ;Main Card V10.0.c: 805: DelayDs(6);
  3378  07E1  3006               	movlw	6
  3379  07E2  00A0               	movwf	DelayDs@cnt
  3380  07E3  3000               	movlw	0
  3381  07E4  00A1               	movwf	DelayDs@cnt+1
  3382  07E5  120A  158A  2449  120A  118A  	fcall	_DelayDs
  3383  07EA  3001               	movlw	1
  3384  07EB  1283               	bcf	3,5	;RP0=0, select bank0
  3385  07EC  1303               	bcf	3,6	;RP1=0, select bank0
  3386  07ED  07A9               	addwf	Blink@i,f
  3387  07EE  1803               	skipnc
  3388  07EF  0AAA               	incf	Blink@i+1,f
  3389  07F0  3000               	movlw	0
  3390  07F1  07AA               	addwf	Blink@i+1,f
  3391  07F2  2FC6               	goto	l2233
  3392  07F3                     __end_of_Blink:	
  3393                           
  3394                           	psect	text16
  3395  0C13                     __ptext16:	
  3396 ;; *************** function _Mode_5 *****************
  3397 ;; Defined at:
  3398 ;;		line 456 in file "../Main Card V10.0.c"
  3399 ;; Parameters:    Size  Location     Type
  3400 ;;		None
  3401 ;; Auto vars:     Size  Location     Type
  3402 ;;		None
  3403 ;; Return value:  Size  Location     Type
  3404 ;;                  1    wreg      void 
  3405 ;; Registers used:
  3406 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3407 ;; Tracked objects:
  3408 ;;		On entry : 0/0
  3409 ;;		On exit  : 0/0
  3410 ;;		Unchanged: 0/0
  3411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3412 ;;      Params:         0       0       0       0       0
  3413 ;;      Locals:         0       0       0       0       0
  3414 ;;      Temps:          0       0       0       0       0
  3415 ;;      Totals:         0       0       0       0       0
  3416 ;;Total ram usage:        0 bytes
  3417 ;; Hardware stack levels used:    1
  3418 ;; Hardware stack levels required when called:    8
  3419 ;; This function calls:
  3420 ;;		_LightWithSensController
  3421 ;;		_TransiverToReceive
  3422 ;;		_TransmittString
  3423 ;; This function is called by:
  3424 ;;		_main
  3425 ;; This function uses a non-reentrant model
  3426 ;;
  3427                           
  3428                           
  3429                           ;psect for function _Mode_5
  3430  0C13                     _Mode_5:	
  3431                           
  3432                           ;Main Card V10.0.c: 458: if(btnPush)
  3433                           
  3434                           ;incstack = 0
  3435 ;; hardware stack exceeded
  3436                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3437  0C13  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0C14  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0C15  086E               	movf	_btnPush,w
  3440  0C16  1903               	btfsc	3,2
  3441  0C17  2C29               	goto	l2361
  3442                           
  3443                           ;Main Card V10.0.c: 459: {
  3444                           ;Main Card V10.0.c: 460: TransmittString("N2BLINK");
  3445  0C18  3071               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  3446  0C19  00B5               	movwf	TransmittString@dataString
  3447  0C1A  3080               	movlw	128
  3448  0C1B  00B6               	movwf	TransmittString@dataString+1
  3449  0C1C  120A  118A  2519  120A  158A  	fcall	_TransmittString
  3450                           
  3451                           ;Main Card V10.0.c: 461: TransiverToReceive();
  3452  0C21  120A  158A  26CF  120A  158A  	fcall	_TransiverToReceive
  3453                           
  3454                           ;Main Card V10.0.c: 462: btnPush=FALSE;
  3455  0C26  1283               	bcf	3,5	;RP0=0, select bank0
  3456  0C27  1303               	bcf	3,6	;RP1=0, select bank0
  3457  0C28  01EE               	clrf	_btnPush
  3458  0C29                     l2361:	
  3459                           
  3460                           ;Main Card V10.0.c: 463: }
  3461                           ;Main Card V10.0.c: 465: LightWithSensController();
  3462  0C29  120A  158A  262D   	fcall	_LightWithSensController
  3463  0C2C  0008               	return
  3464  0C2D                     __end_of_Mode_5:	
  3465                           
  3466                           	psect	text17
  3467  0BF9                     __ptext17:	
  3468 ;; *************** function _Mode_4 *****************
  3469 ;; Defined at:
  3470 ;;		line 441 in file "../Main Card V10.0.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;		None
  3473 ;; Auto vars:     Size  Location     Type
  3474 ;;		None
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3484 ;;      Params:         0       0       0       0       0
  3485 ;;      Locals:         0       0       0       0       0
  3486 ;;      Temps:          0       0       0       0       0
  3487 ;;      Totals:         0       0       0       0       0
  3488 ;;Total ram usage:        0 bytes
  3489 ;; Hardware stack levels used:    1
  3490 ;; Hardware stack levels required when called:    8
  3491 ;; This function calls:
  3492 ;;		_LightWithSensController
  3493 ;;		_TransiverToReceive
  3494 ;;		_TransmittString
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           
  3501                           ;psect for function _Mode_4
  3502  0BF9                     _Mode_4:	
  3503                           
  3504                           ;Main Card V10.0.c: 443: if(btnPush)
  3505                           
  3506                           ;incstack = 0
  3507 ;; hardware stack exceeded
  3508                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3509  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3510  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3511  0BFB  086E               	movf	_btnPush,w
  3512  0BFC  1903               	btfsc	3,2
  3513  0BFD  2C0F               	goto	l2353
  3514                           
  3515                           ;Main Card V10.0.c: 444: {
  3516                           ;Main Card V10.0.c: 445: TransmittString("N1BLINK");
  3517  0BFE  3069               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3518  0BFF  00B5               	movwf	TransmittString@dataString
  3519  0C00  3080               	movlw	128
  3520  0C01  00B6               	movwf	TransmittString@dataString+1
  3521  0C02  120A  118A  2519  120A  158A  	fcall	_TransmittString
  3522                           
  3523                           ;Main Card V10.0.c: 446: TransiverToReceive();
  3524  0C07  120A  158A  26CF  120A  158A  	fcall	_TransiverToReceive
  3525                           
  3526                           ;Main Card V10.0.c: 447: btnPush=FALSE;
  3527  0C0C  1283               	bcf	3,5	;RP0=0, select bank0
  3528  0C0D  1303               	bcf	3,6	;RP1=0, select bank0
  3529  0C0E  01EE               	clrf	_btnPush
  3530  0C0F                     l2353:	
  3531                           
  3532                           ;Main Card V10.0.c: 448: }
  3533                           ;Main Card V10.0.c: 450: LightWithSensController();
  3534  0C0F  120A  158A  262D   	fcall	_LightWithSensController
  3535  0C12  0008               	return
  3536  0C13                     __end_of_Mode_4:	
  3537                           
  3538                           	psect	text18
  3539  0519                     __ptext18:	
  3540 ;; *************** function _TransmittString *****************
  3541 ;; Defined at:
  3542 ;;		line 342 in file "../Main Card V10.0.c"
  3543 ;; Parameters:    Size  Location     Type
  3544 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3545 ;;		 -> STR_21(8), STR_20(8), TransmittedDataHandler@slask_718(8), TransmittedDataHandler@slask_715(8), 
  3546 ;;		 -> STR_16(4), STR_15(4), STR_13(14), STR_12(14), 
  3547 ;;		 -> TransmittedDataHandler@slask_706(8), TransmittedDataHandler@slask(8), STR_4(10), STR_2(10), 
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               2   26[BANK0 ] int 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3559 ;;      Params:         0       2       0       0       0
  3560 ;;      Locals:         0       2       0       0       0
  3561 ;;      Temps:          0       3       0       0       0
  3562 ;;      Totals:         0       7       0       0       0
  3563 ;;Total ram usage:        7 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:    7
  3566 ;; This function calls:
  3567 ;;		_FindChannel
  3568 ;;		_RegisterRead
  3569 ;;		_RegisterSet
  3570 ;;		_SetRFMode
  3571 ;;		_WriteFIFO
  3572 ;;		_timerFunction
  3573 ;; This function is called by:
  3574 ;;		_TransmittedDataHandler
  3575 ;;		_Mode_4
  3576 ;;		_Mode_5
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           
  3581                           ;psect for function _TransmittString
  3582  0519                     _TransmittString:	
  3583                           
  3584                           ;Main Card V10.0.c: 344: timerFunction(4, 5);
  3585                           
  3586                           ;incstack = 0
  3587 ;; hardware stack exceeded
  3588                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3589  0519  3004               	movlw	4
  3590  051A  1283               	bcf	3,5	;RP0=0, select bank0
  3591  051B  1303               	bcf	3,6	;RP1=0, select bank0
  3592  051C  00A0               	movwf	timerFunction@intTimerNumber
  3593  051D  3000               	movlw	0
  3594  051E  00A1               	movwf	timerFunction@intTimerNumber+1
  3595  051F  3005               	movlw	5
  3596  0520  00A2               	movwf	timerFunction@intSetSeconds
  3597  0521  3000               	movlw	0
  3598  0522  00A3               	movwf	timerFunction@intSetSeconds+1
  3599  0523  120A  158A  239A  120A  118A  	fcall	_timerFunction
  3600                           
  3601                           ;Main Card V10.0.c: 346: int i = 0;
  3602  0528  1283               	bcf	3,5	;RP0=0, select bank0
  3603  0529  1303               	bcf	3,6	;RP1=0, select bank0
  3604  052A  01BA               	clrf	TransmittString@i
  3605  052B  01BB               	clrf	TransmittString@i+1
  3606                           
  3607                           ;Main Card V10.0.c: 349: SetRFMode(0x20);
  3608  052C  3020               	movlw	32
  3609  052D  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3610                           
  3611                           ;Main Card V10.0.c: 350: _delay((unsigned long)((10)*(4000000/4000.0)));
  3612  0532  300D               	movlw	13
  3613  0533  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0534  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0535  00B8               	movwf	??_TransmittString+1
  3616  0536  30FB               	movlw	251
  3617  0537  00B7               	movwf	??_TransmittString
  3618  0538                     u2377:	
  3619  0538  0BB7               	decfsz	??_TransmittString,f
  3620  0539  2D38               	goto	u2377
  3621  053A  0BB8               	decfsz	??_TransmittString+1,f
  3622  053B  2D38               	goto	u2377
  3623                           
  3624                           ;Main Card V10.0.c: 351: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3625  053C  300E               	movlw	14
  3626  053D  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3627  0542  3802               	iorlw	2
  3628  0543  1283               	bcf	3,5	;RP0=0, select bank0
  3629  0544  1303               	bcf	3,6	;RP1=0, select bank0
  3630  0545  00B7               	movwf	??_TransmittString
  3631  0546  0837               	movf	??_TransmittString,w
  3632  0547  00A7               	movwf	RegisterSet@value
  3633  0548  300E               	movlw	14
  3634  0549  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  3635                           
  3636                           ;Main Card V10.0.c: 352: SetRFMode(0x40);
  3637  054E  3040               	movlw	64
  3638  054F  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3639  0554                     l1967:	
  3640                           ;Main Card V10.0.c: 353: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3641                           
  3642  0554  300E               	movlw	14
  3643  0555  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  3644  055A  3902               	andlw	2
  3645  055B  1D03               	btfss	3,2
  3646  055C  2D67               	goto	l1969
  3647                           
  3648                           ;Main Card V10.0.c: 354: {
  3649                           ;Main Card V10.0.c: 355: if(bTimerComplete[4])
  3650  055D  1683               	bsf	3,5	;RP0=1, select bank1
  3651  055E  1303               	bcf	3,6	;RP1=0, select bank1
  3652  055F  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3653  0560  1903               	btfsc	3,2
  3654  0561  2D54               	goto	l1967
  3655                           
  3656                           ;Main Card V10.0.c: 356: {
  3657                           ;Main Card V10.0.c: 357: FindChannel();
  3658  0562  120A  118A  223D  120A  118A  	fcall	_FindChannel
  3659  0567                     l1969:	
  3660                           ;Main Card V10.0.c: 358: break;
  3661                           
  3662                           
  3663                           ;Main Card V10.0.c: 359: }
  3664                           ;Main Card V10.0.c: 361: }
  3665                           ;Main Card V10.0.c: 362: SetRFMode(0x80);
  3666  0567  3080               	movlw	128
  3667  0568  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3668                           
  3669                           ;Main Card V10.0.c: 363: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3670  056D  30A5               	movlw	165
  3671  056E  1283               	bcf	3,5	;RP0=0, select bank0
  3672  056F  1303               	bcf	3,6	;RP1=0, select bank0
  3673  0570  00B7               	movwf	??_TransmittString
  3674  0571                     u2387:	
  3675  0571  0BB7               	decfsz	??_TransmittString,f
  3676  0572  2D71               	goto	u2387
  3677  0573  2D74               	nop2
  3678                           
  3679                           ;Main Card V10.0.c: 366: WriteFIFO('S');
  3680  0574  3053               	movlw	83
  3681  0575  120A  158A  2362  120A  118A  	fcall	_WriteFIFO
  3682                           
  3683                           ;Main Card V10.0.c: 367: WriteFIFO('Y');
  3684  057A  3059               	movlw	89
  3685  057B  120A  158A  2362  120A  118A  	fcall	_WriteFIFO
  3686                           
  3687                           ;Main Card V10.0.c: 368: WriteFIFO('N');
  3688  0580  304E               	movlw	78
  3689  0581  120A  158A  2362  120A  118A  	fcall	_WriteFIFO
  3690                           
  3691                           ;Main Card V10.0.c: 369: WriteFIFO('C');
  3692  0586  3043               	movlw	67
  3693  0587  120A  158A  2362  120A  118A  	fcall	_WriteFIFO
  3694  058C                     l1985:	
  3695                           ;Main Card V10.0.c: 372: while(dataString[i] != 0)
  3696                           
  3697  058C  1283               	bcf	3,5	;RP0=0, select bank0
  3698  058D  1303               	bcf	3,6	;RP1=0, select bank0
  3699  058E  083A               	movf	TransmittString@i,w
  3700  058F  0735               	addwf	TransmittString@dataString,w
  3701  0590  00B8               	movwf	??_TransmittString+1
  3702  0591  0836               	movf	TransmittString@dataString+1,w
  3703  0592  00B7               	movwf	??_TransmittString
  3704  0593  1803               	skipnc
  3705  0594  0AB7               	incf	??_TransmittString,f
  3706  0595  1BBA               	btfsc	TransmittString@i,7
  3707  0596  03B7               	decf	??_TransmittString,f
  3708  0597  1283               	bcf	3,5	;RP0=0, select bank0
  3709  0598  1303               	bcf	3,6	;RP1=0, select bank0
  3710  0599  0837               	movf	??_TransmittString,w
  3711  059A  00B9               	movwf	??_TransmittString+2
  3712  059B  0839               	movf	??_TransmittString+2,w
  3713  059C  00FF               	movwf	127
  3714  059D  0838               	movf	??_TransmittString+1,w
  3715  059E  0084               	movwf	4
  3716  059F  120A  118A  2600  120A  118A  	fcall	stringtab
  3717  05A4  3A00               	xorlw	0
  3718  05A5  1903               	btfsc	3,2
  3719  05A6  2DD2               	goto	l248
  3720                           
  3721                           ;Main Card V10.0.c: 373: {
  3722                           ;Main Card V10.0.c: 374: WriteFIFO(dataString[i]);
  3723  05A7  1283               	bcf	3,5	;RP0=0, select bank0
  3724  05A8  1303               	bcf	3,6	;RP1=0, select bank0
  3725  05A9  083A               	movf	TransmittString@i,w
  3726  05AA  0735               	addwf	TransmittString@dataString,w
  3727  05AB  00B8               	movwf	??_TransmittString+1
  3728  05AC  0836               	movf	TransmittString@dataString+1,w
  3729  05AD  00B7               	movwf	??_TransmittString
  3730  05AE  1803               	skipnc
  3731  05AF  0AB7               	incf	??_TransmittString,f
  3732  05B0  1BBA               	btfsc	TransmittString@i,7
  3733  05B1  03B7               	decf	??_TransmittString,f
  3734  05B2  1283               	bcf	3,5	;RP0=0, select bank0
  3735  05B3  1303               	bcf	3,6	;RP1=0, select bank0
  3736  05B4  0837               	movf	??_TransmittString,w
  3737  05B5  00B9               	movwf	??_TransmittString+2
  3738  05B6  0839               	movf	??_TransmittString+2,w
  3739  05B7  00FF               	movwf	127
  3740  05B8  0838               	movf	??_TransmittString+1,w
  3741  05B9  0084               	movwf	4
  3742  05BA  120A  118A  2600  120A  118A  	fcall	stringtab
  3743  05BF  120A  158A  2362  120A  118A  	fcall	_WriteFIFO
  3744                           
  3745                           ;Main Card V10.0.c: 375: i++;
  3746  05C4  3001               	movlw	1
  3747  05C5  1283               	bcf	3,5	;RP0=0, select bank0
  3748  05C6  1303               	bcf	3,6	;RP1=0, select bank0
  3749  05C7  07BA               	addwf	TransmittString@i,f
  3750  05C8  1803               	skipnc
  3751  05C9  0ABB               	incf	TransmittString@i+1,f
  3752  05CA  3000               	movlw	0
  3753  05CB  07BB               	addwf	TransmittString@i+1,f
  3754  05CC  2D8C               	goto	l1985
  3755  05CD                     l1987:	
  3756                           ;Main Card V10.0.c: 376: }
  3757                           ;Main Card V10.0.c: 379: while(!PORTBbits.RB4)
  3758                           
  3759                           
  3760                           ;Main Card V10.0.c: 380: {
  3761                           ;Main Card V10.0.c: 381: if(bTimerComplete[4])
  3762  05CD  1683               	bsf	3,5	;RP0=1, select bank1
  3763  05CE  1303               	bcf	3,6	;RP1=0, select bank1
  3764  05CF  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3765  05D0  1D03               	btfss	3,2
  3766  05D1  2DD5               	goto	l1991
  3767  05D2                     l248:	
  3768                           ;Main Card V10.0.c: 382: break;
  3769                           
  3770  05D2  1283               	bcf	3,5	;RP0=0, select bank0
  3771  05D3  1E06               	btfss	6,4	;volatile
  3772  05D4  2DCD               	goto	l1987
  3773  05D5                     l1991:	
  3774                           
  3775                           ;Main Card V10.0.c: 383: }
  3776                           ;Main Card V10.0.c: 384: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3777  05D5  3002               	movlw	2
  3778  05D6  1283               	bcf	3,5	;RP0=0, select bank0
  3779  05D7  1303               	bcf	3,6	;RP1=0, select bank0
  3780  05D8  00B7               	movwf	??_TransmittString
  3781  05D9                     u2397:	
  3782  05D9  0BB7               	decfsz	??_TransmittString,f
  3783  05DA  2DD9               	goto	u2397
  3784  05DB  0000               	nop
  3785                           
  3786                           ;Main Card V10.0.c: 385: SetRFMode(0x00);
  3787  05DC  3000               	movlw	0
  3788  05DD  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  3789                           
  3790                           ;Main Card V10.0.c: 386: _delay((unsigned long)((1)*(4000000/4000.0)));
  3791  05E2  30C7               	movlw	199
  3792  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  3793  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  3794  05E5  00B7               	movwf	??_TransmittString
  3795  05E6                     u2407:	
  3796  05E6  2DE7               	nop2
  3797  05E7  0BB7               	decfsz	??_TransmittString,f
  3798  05E8  2DE6               	goto	u2407
  3799  05E9  2DEA               	nop2
  3800  05EA  0008               	return
  3801  05EB                     __end_of_TransmittString:	
  3802                           
  3803                           	psect	text19
  3804  0B62                     __ptext19:	
  3805 ;; *************** function _WriteFIFO *****************
  3806 ;; Defined at:
  3807 ;;		line 912 in file "../Main Card V10.0.c"
  3808 ;; Parameters:    Size  Location     Type
  3809 ;;  Data            1    wreg     unsigned char 
  3810 ;; Auto vars:     Size  Location     Type
  3811 ;;  Data            1    3[BANK0 ] unsigned char 
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      void 
  3814 ;; Registers used:
  3815 ;;		wreg, status,2, status,0, pclath, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3821 ;;      Params:         0       0       0       0       0
  3822 ;;      Locals:         0       1       0       0       0
  3823 ;;      Temps:          0       0       0       0       0
  3824 ;;      Totals:         0       1       0       0       0
  3825 ;;Total ram usage:        1 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:    3
  3828 ;; This function calls:
  3829 ;;		_WriteSPI
  3830 ;; This function is called by:
  3831 ;;		_TransmittString
  3832 ;; This function uses a non-reentrant model
  3833 ;;
  3834                           
  3835                           
  3836                           ;psect for function _WriteFIFO
  3837  0B62                     _WriteFIFO:	
  3838                           
  3839                           ;incstack = 0
  3840                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3841                           ;WriteFIFO@Data stored from wreg
  3842  0B62  1283               	bcf	3,5	;RP0=0, select bank0
  3843  0B63  1303               	bcf	3,6	;RP1=0, select bank0
  3844  0B64  00A3               	movwf	WriteFIFO@Data
  3845                           
  3846                           ;Main Card V10.0.c: 914: PORTAbits.RA5 = 0;
  3847  0B65  1285               	bcf	5,5	;volatile
  3848                           
  3849                           ;Main Card V10.0.c: 915: WriteSPI(Data);
  3850  0B66  0823               	movf	WriteFIFO@Data,w
  3851  0B67  120A  158A  236E   	fcall	_WriteSPI
  3852                           
  3853                           ;Main Card V10.0.c: 916: PORTAbits.RA5 = 1;
  3854  0B6A  1283               	bcf	3,5	;RP0=0, select bank0
  3855  0B6B  1303               	bcf	3,6	;RP1=0, select bank0
  3856  0B6C  1685               	bsf	5,5	;volatile
  3857  0B6D  0008               	return
  3858  0B6E                     __end_of_WriteFIFO:	
  3859                           
  3860                           	psect	text20
  3861  0ECF                     __ptext20:	
  3862 ;; *************** function _TransiverToReceive *****************
  3863 ;; Defined at:
  3864 ;;		line 177 in file "../Main Card V10.0.c"
  3865 ;; Parameters:    Size  Location     Type
  3866 ;;		None
  3867 ;; Auto vars:     Size  Location     Type
  3868 ;;		None
  3869 ;; Return value:  Size  Location     Type
  3870 ;;                  1    wreg      void 
  3871 ;; Registers used:
  3872 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3873 ;; Tracked objects:
  3874 ;;		On entry : 0/0
  3875 ;;		On exit  : 0/0
  3876 ;;		Unchanged: 0/0
  3877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3878 ;;      Params:         0       0       0       0       0
  3879 ;;      Locals:         0       0       0       0       0
  3880 ;;      Temps:          0       2       0       0       0
  3881 ;;      Totals:         0       2       0       0       0
  3882 ;;Total ram usage:        2 bytes
  3883 ;; Hardware stack levels used:    1
  3884 ;; Hardware stack levels required when called:    7
  3885 ;; This function calls:
  3886 ;;		_FindChannel
  3887 ;;		_RegisterRead
  3888 ;;		_RegisterSet
  3889 ;;		_SetRFMode
  3890 ;;		_timerFunction
  3891 ;; This function is called by:
  3892 ;;		_main
  3893 ;;		_Mode_4
  3894 ;;		_Mode_5
  3895 ;; This function uses a non-reentrant model
  3896 ;;
  3897                           
  3898                           
  3899                           ;psect for function _TransiverToReceive
  3900  0ECF                     _TransiverToReceive:	
  3901                           
  3902                           ;Main Card V10.0.c: 179: timerFunction(2, 5);
  3903                           
  3904                           ;incstack = 0
  3905                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3906  0ECF  3002               	movlw	2
  3907  0ED0  1283               	bcf	3,5	;RP0=0, select bank0
  3908  0ED1  1303               	bcf	3,6	;RP1=0, select bank0
  3909  0ED2  00A0               	movwf	timerFunction@intTimerNumber
  3910  0ED3  3000               	movlw	0
  3911  0ED4  00A1               	movwf	timerFunction@intTimerNumber+1
  3912  0ED5  3005               	movlw	5
  3913  0ED6  00A2               	movwf	timerFunction@intSetSeconds
  3914  0ED7  3000               	movlw	0
  3915  0ED8  00A3               	movwf	timerFunction@intSetSeconds+1
  3916  0ED9  120A  158A  239A  120A  158A  	fcall	_timerFunction
  3917                           
  3918                           ;Main Card V10.0.c: 183: SetRFMode(0x20);
  3919  0EDE  3020               	movlw	32
  3920  0EDF  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3921                           
  3922                           ;Main Card V10.0.c: 184: _delay((unsigned long)((10)*(4000000/4000.0)));
  3923  0EE4  300D               	movlw	13
  3924  0EE5  1283               	bcf	3,5	;RP0=0, select bank0
  3925  0EE6  1303               	bcf	3,6	;RP1=0, select bank0
  3926  0EE7  00B6               	movwf	??_TransiverToReceive+1
  3927  0EE8  30FB               	movlw	251
  3928  0EE9  00B5               	movwf	??_TransiverToReceive
  3929  0EEA                     u2417:	
  3930  0EEA  0BB5               	decfsz	??_TransiverToReceive,f
  3931  0EEB  2EEA               	goto	u2417
  3932  0EEC  0BB6               	decfsz	??_TransiverToReceive+1,f
  3933  0EED  2EEA               	goto	u2417
  3934                           
  3935                           ;Main Card V10.0.c: 185: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3936  0EEE  300E               	movlw	14
  3937  0EEF  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  3938  0EF4  3802               	iorlw	2
  3939  0EF5  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0EF6  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0EF7  00B5               	movwf	??_TransiverToReceive
  3942  0EF8  0835               	movf	??_TransiverToReceive,w
  3943  0EF9  00A7               	movwf	RegisterSet@value
  3944  0EFA  300E               	movlw	14
  3945  0EFB  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  3946                           
  3947                           ;Main Card V10.0.c: 186: SetRFMode(0x40);
  3948  0F00  3040               	movlw	64
  3949  0F01  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3950  0F06                     l2077:	
  3951                           ;Main Card V10.0.c: 187: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3952                           
  3953  0F06  300E               	movlw	14
  3954  0F07  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  3955  0F0C  3902               	andlw	2
  3956  0F0D  1D03               	btfss	3,2
  3957  0F0E  2F19               	goto	l2079
  3958                           
  3959                           ;Main Card V10.0.c: 188: {
  3960                           ;Main Card V10.0.c: 189: if(bTimerComplete[2])
  3961  0F0F  1683               	bsf	3,5	;RP0=1, select bank1
  3962  0F10  1303               	bcf	3,6	;RP1=0, select bank1
  3963  0F11  082C               	movf	(_bTimerComplete^(0+128)+2),w
  3964  0F12  1903               	btfsc	3,2
  3965  0F13  2F06               	goto	l2077
  3966                           
  3967                           ;Main Card V10.0.c: 190: {
  3968                           ;Main Card V10.0.c: 191: FindChannel();
  3969  0F14  120A  118A  223D  120A  158A  	fcall	_FindChannel
  3970  0F19                     l2079:	
  3971                           ;Main Card V10.0.c: 192: break;
  3972                           
  3973                           
  3974                           ;Main Card V10.0.c: 193: }
  3975                           ;Main Card V10.0.c: 194: }
  3976                           ;Main Card V10.0.c: 196: SetRFMode(0x60);
  3977  0F19  3060               	movlw	96
  3978  0F1A  120A  158A  2791  120A  158A  	fcall	_SetRFMode
  3979                           
  3980                           ;Main Card V10.0.c: 197: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3981  0F1F  30A5               	movlw	165
  3982  0F20  1283               	bcf	3,5	;RP0=0, select bank0
  3983  0F21  1303               	bcf	3,6	;RP1=0, select bank0
  3984  0F22  00B5               	movwf	??_TransiverToReceive
  3985  0F23                     u2427:	
  3986  0F23  0BB5               	decfsz	??_TransiverToReceive,f
  3987  0F24  2F23               	goto	u2427
  3988  0F25  2F26               	nop2
  3989                           
  3990                           ;Main Card V10.0.c: 198: bTransiverModeReceive = 1;
  3991  0F26  1283               	bcf	3,5	;RP0=0, select bank0
  3992  0F27  1303               	bcf	3,6	;RP1=0, select bank0
  3993  0F28  01ED               	clrf	_bTransiverModeReceive
  3994  0F29  0AED               	incf	_bTransiverModeReceive,f
  3995  0F2A  0008               	return
  3996  0F2B                     __end_of_TransiverToReceive:	
  3997                           
  3998                           	psect	text21
  3999  023D                     __ptext21:	
  4000 ;; *************** function _FindChannel *****************
  4001 ;; Defined at:
  4002 ;;		line 695 in file "../Main Card V10.0.c"
  4003 ;; Parameters:    Size  Location     Type
  4004 ;;		None
  4005 ;; Auto vars:     Size  Location     Type
  4006 ;;  i               2   19[BANK0 ] int 
  4007 ;;  cnt             2   17[BANK0 ] int 
  4008 ;; Return value:  Size  Location     Type
  4009 ;;                  1    wreg      unsigned char 
  4010 ;; Registers used:
  4011 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4012 ;; Tracked objects:
  4013 ;;		On entry : 0/0
  4014 ;;		On exit  : 0/0
  4015 ;;		Unchanged: 0/0
  4016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4017 ;;      Params:         0       0       0       0       0
  4018 ;;      Locals:         0       4       0       0       0
  4019 ;;      Temps:          0       3       0       0       0
  4020 ;;      Totals:         0       7       0       0       0
  4021 ;;Total ram usage:        7 bytes
  4022 ;; Hardware stack levels used:    1
  4023 ;; Hardware stack levels required when called:    6
  4024 ;; This function calls:
  4025 ;;		_RegisterRead
  4026 ;;		_RegisterSet
  4027 ;;		_SetRFMode
  4028 ;; This function is called by:
  4029 ;;		_TransiverToReceive
  4030 ;;		_TransmittString
  4031 ;;		_TransiverInit
  4032 ;; This function uses a non-reentrant model
  4033 ;;
  4034                           
  4035                           
  4036                           ;psect for function _FindChannel
  4037  023D                     _FindChannel:	
  4038                           
  4039                           ;Main Card V10.0.c: 697: int cnt = 0;
  4040                           
  4041                           ;incstack = 0
  4042 ;; using string table level
  4043                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4044  023D  1283               	bcf	3,5	;RP0=0, select bank0
  4045  023E  1303               	bcf	3,6	;RP1=0, select bank0
  4046  023F  01B1               	clrf	FindChannel@cnt
  4047  0240  01B2               	clrf	FindChannel@cnt+1
  4048                           
  4049                           ;Main Card V10.0.c: 698: bChannelFound = 0;
  4050  0241  1683               	bsf	3,5	;RP0=1, select bank1
  4051  0242  1303               	bcf	3,6	;RP1=0, select bank1
  4052  0243  01B9               	clrf	_bChannelFound^(0+128)
  4053                           
  4054                           ;Main Card V10.0.c: 699: channelFound = 0;
  4055  0244  01AF               	clrf	_channelFound^(0+128)
  4056  0245  01B0               	clrf	(_channelFound+1)^(0+128)
  4057                           
  4058                           ;Main Card V10.0.c: 701: _delay((unsigned long)((1000)*(4000000/4000.0)));
  4059  0246  3006               	movlw	6
  4060  0247  1283               	bcf	3,5	;RP0=0, select bank0
  4061  0248  1303               	bcf	3,6	;RP1=0, select bank0
  4062  0249  00B0               	movwf	??_FindChannel+2
  4063  024A  3013               	movlw	19
  4064  024B  00AF               	movwf	??_FindChannel+1
  4065  024C  30AD               	movlw	173
  4066  024D  00AE               	movwf	??_FindChannel
  4067  024E                     u2437:	
  4068  024E  0BAE               	decfsz	??_FindChannel,f
  4069  024F  2A4E               	goto	u2437
  4070  0250  0BAF               	decfsz	??_FindChannel+1,f
  4071  0251  2A4E               	goto	u2437
  4072  0252  0BB0               	decfsz	??_FindChannel+2,f
  4073  0253  2A4E               	goto	u2437
  4074                           
  4075                           ;Main Card V10.0.c: 702: for (int i = 0; i < 13; i++)
  4076  0254  1283               	bcf	3,5	;RP0=0, select bank0
  4077  0255  1303               	bcf	3,6	;RP1=0, select bank0
  4078  0256  01B3               	clrf	FindChannel@i
  4079  0257  01B4               	clrf	FindChannel@i+1
  4080  0258  0834               	movf	FindChannel@i+1,w
  4081  0259  3A80               	xorlw	128
  4082  025A  00FF               	movwf	127
  4083  025B  3080               	movlw	128
  4084  025C  027F               	subwf	127,w
  4085  025D  1D03               	skipz
  4086  025E  2A61               	goto	u1205
  4087  025F  300D               	movlw	13
  4088  0260  0233               	subwf	FindChannel@i,w
  4089  0261                     u1205:	
  4090  0261  1803               	btfsc	3,0
  4091  0262  2B3D               	goto	l1835
  4092  0263                     l1811:	
  4093                           
  4094                           ;Main Card V10.0.c: 703: {
  4095                           ;Main Card V10.0.c: 704: RegisterSet(0x06,ChannelR[i]);
  4096  0263  1283               	bcf	3,5	;RP0=0, select bank0
  4097  0264  1303               	bcf	3,6	;RP1=0, select bank0
  4098  0265  0833               	movf	FindChannel@i,w
  4099  0266  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4100  0267  0084               	movwf	4
  4101  0268  120A  118A  260A  120A  118A  	fcall	stringdir
  4102  026D  00AE               	movwf	??_FindChannel
  4103  026E  082E               	movf	??_FindChannel,w
  4104  026F  00A7               	movwf	RegisterSet@value
  4105  0270  3006               	movlw	6
  4106  0271  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4107                           
  4108                           ;Main Card V10.0.c: 705: RegisterSet(0x07,ChannelP[i]);
  4109  0276  1283               	bcf	3,5	;RP0=0, select bank0
  4110  0277  1303               	bcf	3,6	;RP1=0, select bank0
  4111  0278  0833               	movf	FindChannel@i,w
  4112  0279  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4113  027A  0084               	movwf	4
  4114  027B  120A  118A  260A  120A  118A  	fcall	stringdir
  4115  0280  00AE               	movwf	??_FindChannel
  4116  0281  082E               	movf	??_FindChannel,w
  4117  0282  00A7               	movwf	RegisterSet@value
  4118  0283  3007               	movlw	7
  4119  0284  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4120                           
  4121                           ;Main Card V10.0.c: 706: RegisterSet(0x08,ChannelS[i]);
  4122  0289  1283               	bcf	3,5	;RP0=0, select bank0
  4123  028A  1303               	bcf	3,6	;RP1=0, select bank0
  4124  028B  0833               	movf	FindChannel@i,w
  4125  028C  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4126  028D  0084               	movwf	4
  4127  028E  120A  118A  260A  120A  118A  	fcall	stringdir
  4128  0293  00AE               	movwf	??_FindChannel
  4129  0294  082E               	movf	??_FindChannel,w
  4130  0295  00A7               	movwf	RegisterSet@value
  4131  0296  3008               	movlw	8
  4132  0297  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4133                           
  4134                           ;Main Card V10.0.c: 707: RegisterSet(0x09,ChannelR[i]);
  4135  029C  1283               	bcf	3,5	;RP0=0, select bank0
  4136  029D  1303               	bcf	3,6	;RP1=0, select bank0
  4137  029E  0833               	movf	FindChannel@i,w
  4138  029F  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  4139  02A0  0084               	movwf	4
  4140  02A1  120A  118A  260A  120A  118A  	fcall	stringdir
  4141  02A6  00AE               	movwf	??_FindChannel
  4142  02A7  082E               	movf	??_FindChannel,w
  4143  02A8  00A7               	movwf	RegisterSet@value
  4144  02A9  3009               	movlw	9
  4145  02AA  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4146                           
  4147                           ;Main Card V10.0.c: 708: RegisterSet(0x0A,ChannelP[i]);
  4148  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  4149  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  4150  02B1  0833               	movf	FindChannel@i,w
  4151  02B2  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  4152  02B3  0084               	movwf	4
  4153  02B4  120A  118A  260A  120A  118A  	fcall	stringdir
  4154  02B9  00AE               	movwf	??_FindChannel
  4155  02BA  082E               	movf	??_FindChannel,w
  4156  02BB  00A7               	movwf	RegisterSet@value
  4157  02BC  300A               	movlw	10
  4158  02BD  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4159                           
  4160                           ;Main Card V10.0.c: 709: RegisterSet(0x0B,ChannelS[i]);
  4161  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  4162  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  4163  02C4  0833               	movf	FindChannel@i,w
  4164  02C5  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4165  02C6  0084               	movwf	4
  4166  02C7  120A  118A  260A  120A  118A  	fcall	stringdir
  4167  02CC  00AE               	movwf	??_FindChannel
  4168  02CD  082E               	movf	??_FindChannel,w
  4169  02CE  00A7               	movwf	RegisterSet@value
  4170  02CF  300B               	movlw	11
  4171  02D0  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4172                           
  4173                           ;Main Card V10.0.c: 710: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4174  02D5  300E               	movlw	14
  4175  02D6  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  4176  02DB  3802               	iorlw	2
  4177  02DC  1283               	bcf	3,5	;RP0=0, select bank0
  4178  02DD  1303               	bcf	3,6	;RP1=0, select bank0
  4179  02DE  00AE               	movwf	??_FindChannel
  4180  02DF  082E               	movf	??_FindChannel,w
  4181  02E0  00A7               	movwf	RegisterSet@value
  4182  02E1  300E               	movlw	14
  4183  02E2  120A  158A  23DF  120A  118A  	fcall	_RegisterSet
  4184                           
  4185                           ;Main Card V10.0.c: 711: SetRFMode(0x40);
  4186  02E7  3040               	movlw	64
  4187  02E8  120A  158A  2791  120A  118A  	fcall	_SetRFMode
  4188                           
  4189                           ;Main Card V10.0.c: 712: cnt = 0;
  4190  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  4191  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  4192  02EF  01B1               	clrf	FindChannel@cnt
  4193  02F0  01B2               	clrf	FindChannel@cnt+1
  4194  02F1                     l1829:	
  4195                           ;Main Card V10.0.c: 713: while(cnt < 5)
  4196                           
  4197  02F1  1283               	bcf	3,5	;RP0=0, select bank0
  4198  02F2  1303               	bcf	3,6	;RP1=0, select bank0
  4199  02F3  0832               	movf	FindChannel@cnt+1,w
  4200  02F4  3A80               	xorlw	128
  4201  02F5  00FF               	movwf	127
  4202  02F6  3080               	movlw	128
  4203  02F7  027F               	subwf	127,w
  4204  02F8  1D03               	skipz
  4205  02F9  2AFC               	goto	u1225
  4206  02FA  3005               	movlw	5
  4207  02FB  0231               	subwf	FindChannel@cnt,w
  4208  02FC                     u1225:	
  4209  02FC  1803               	btfsc	3,0
  4210  02FD  2B2A               	goto	l1831
  4211                           
  4212                           ;Main Card V10.0.c: 714: {
  4213                           ;Main Card V10.0.c: 716: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4214  02FE  300E               	movlw	14
  4215  02FF  120A  158A  242D  120A  118A  	fcall	_RegisterRead
  4216  0304  3902               	andlw	2
  4217  0305  1903               	btfsc	3,2
  4218  0306  2B19               	goto	l1827
  4219                           
  4220                           ;Main Card V10.0.c: 717: {
  4221                           ;Main Card V10.0.c: 718: bChannelFound = 1;
  4222  0307  1683               	bsf	3,5	;RP0=1, select bank1
  4223  0308  1303               	bcf	3,6	;RP1=0, select bank1
  4224  0309  01B9               	clrf	_bChannelFound^(0+128)
  4225  030A  0AB9               	incf	_bChannelFound^(0+128),f
  4226                           
  4227                           ;Main Card V10.0.c: 719: channelFound = i;
  4228  030B  1283               	bcf	3,5	;RP0=0, select bank0
  4229  030C  1303               	bcf	3,6	;RP1=0, select bank0
  4230  030D  0834               	movf	FindChannel@i+1,w
  4231  030E  1683               	bsf	3,5	;RP0=1, select bank1
  4232  030F  1303               	bcf	3,6	;RP1=0, select bank1
  4233  0310  00B0               	movwf	(_channelFound+1)^(0+128)
  4234  0311  1283               	bcf	3,5	;RP0=0, select bank0
  4235  0312  1303               	bcf	3,6	;RP1=0, select bank0
  4236  0313  0833               	movf	FindChannel@i,w
  4237  0314  1683               	bsf	3,5	;RP0=1, select bank1
  4238  0315  1303               	bcf	3,6	;RP1=0, select bank1
  4239  0316  00AF               	movwf	_channelFound^(0+128)
  4240                           
  4241                           ;Main Card V10.0.c: 720: return 1;
  4242  0317  3001               	movlw	1
  4243  0318  0008               	return
  4244  0319                     l1827:	
  4245                           
  4246                           ;Main Card V10.0.c: 721: }
  4247                           ;Main Card V10.0.c: 722: cnt++;
  4248  0319  3001               	movlw	1
  4249  031A  1283               	bcf	3,5	;RP0=0, select bank0
  4250  031B  1303               	bcf	3,6	;RP1=0, select bank0
  4251  031C  07B1               	addwf	FindChannel@cnt,f
  4252  031D  1803               	skipnc
  4253  031E  0AB2               	incf	FindChannel@cnt+1,f
  4254  031F  3000               	movlw	0
  4255  0320  07B2               	addwf	FindChannel@cnt+1,f
  4256                           
  4257                           ;Main Card V10.0.c: 723: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4258  0321  30C7               	movlw	199
  4259  0322  1283               	bcf	3,5	;RP0=0, select bank0
  4260  0323  1303               	bcf	3,6	;RP1=0, select bank0
  4261  0324  00AE               	movwf	??_FindChannel
  4262  0325                     u2447:	
  4263  0325  2B26               	nop2
  4264  0326  0BAE               	decfsz	??_FindChannel,f
  4265  0327  2B25               	goto	u2447
  4266  0328  2B29               	nop2
  4267  0329  2AF1               	goto	l1829
  4268  032A                     l1831:	
  4269  032A  3001               	movlw	1
  4270  032B  1283               	bcf	3,5	;RP0=0, select bank0
  4271  032C  1303               	bcf	3,6	;RP1=0, select bank0
  4272  032D  07B3               	addwf	FindChannel@i,f
  4273  032E  1803               	skipnc
  4274  032F  0AB4               	incf	FindChannel@i+1,f
  4275  0330  3000               	movlw	0
  4276  0331  07B4               	addwf	FindChannel@i+1,f
  4277  0332  0834               	movf	FindChannel@i+1,w
  4278  0333  3A80               	xorlw	128
  4279  0334  00FF               	movwf	127
  4280  0335  3080               	movlw	128
  4281  0336  027F               	subwf	127,w
  4282  0337  1D03               	skipz
  4283  0338  2B3B               	goto	u1235
  4284  0339  300D               	movlw	13
  4285  033A  0233               	subwf	FindChannel@i,w
  4286  033B                     u1235:	
  4287  033B  1C03               	skipc
  4288  033C  2A63               	goto	l1811
  4289  033D                     l1835:	
  4290                           
  4291                           ;Main Card V10.0.c: 724: }
  4292                           ;Main Card V10.0.c: 727: }
  4293                           ;Main Card V10.0.c: 728: return 0;
  4294  033D  3000               	movlw	0
  4295  033E  0008               	return
  4296  033F                     __end_of_FindChannel:	
  4297                           
  4298                           	psect	text22
  4299  0F91                     __ptext22:	
  4300 ;; *************** function _SetRFMode *****************
  4301 ;; Defined at:
  4302 ;;		line 750 in file "../Main Card V10.0.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  mode            1    wreg     unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  mode            1   12[BANK0 ] unsigned char 
  4307 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4308 ;; Return value:  Size  Location     Type
  4309 ;;                  1    wreg      void 
  4310 ;; Registers used:
  4311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4312 ;; Tracked objects:
  4313 ;;		On entry : 0/0
  4314 ;;		On exit  : 0/0
  4315 ;;		Unchanged: 0/0
  4316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4317 ;;      Params:         0       0       0       0       0
  4318 ;;      Locals:         0       2       0       0       0
  4319 ;;      Temps:          0       1       0       0       0
  4320 ;;      Totals:         0       3       0       0       0
  4321 ;;Total ram usage:        3 bytes
  4322 ;; Hardware stack levels used:    1
  4323 ;; Hardware stack levels required when called:    5
  4324 ;; This function calls:
  4325 ;;		_RegisterRead
  4326 ;;		_RegisterSet
  4327 ;; This function is called by:
  4328 ;;		_TransiverToReceive
  4329 ;;		_TransiverReadFIFO
  4330 ;;		_TransmittString
  4331 ;;		_TransiverInit
  4332 ;;		_FindChannel
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           
  4337                           ;psect for function _SetRFMode
  4338  0F91                     _SetRFMode:	
  4339                           
  4340                           ;incstack = 0
  4341                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4342                           ;SetRFMode@mode stored from wreg
  4343  0F91  1283               	bcf	3,5	;RP0=0, select bank0
  4344  0F92  1303               	bcf	3,6	;RP1=0, select bank0
  4345  0F93  00AC               	movwf	SetRFMode@mode
  4346                           
  4347                           ;Main Card V10.0.c: 752: PORTAbits.RA4 = 0;
  4348  0F94  1205               	bcf	5,4	;volatile
  4349                           
  4350                           ;Main Card V10.0.c: 753: BYTE mcparam0_read;
  4351                           ;Main Card V10.0.c: 754: mcparam0_read = RegisterRead(0);
  4352  0F95  3000               	movlw	0
  4353  0F96  120A  158A  242D  120A  158A  	fcall	_RegisterRead
  4354  0F9B  1283               	bcf	3,5	;RP0=0, select bank0
  4355  0F9C  1303               	bcf	3,6	;RP1=0, select bank0
  4356  0F9D  00AB               	movwf	??_SetRFMode
  4357  0F9E  082B               	movf	??_SetRFMode,w
  4358  0F9F  00AD               	movwf	SetRFMode@mcparam0_read
  4359                           
  4360                           ;Main Card V10.0.c: 755: switch (mode) {
  4361  0FA0  2FE9               	goto	l1791
  4362  0FA1                     l1779:	
  4363                           ;Main Card V10.0.c: 756: case 0x80:
  4364                           
  4365                           
  4366                           ;Main Card V10.0.c: 757: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4367  0FA1  082D               	movf	SetRFMode@mcparam0_read,w
  4368  0FA2  391F               	andlw	31
  4369  0FA3  3880               	iorlw	128
  4370  0FA4  00AB               	movwf	??_SetRFMode
  4371  0FA5  082B               	movf	??_SetRFMode,w
  4372  0FA6  00A7               	movwf	RegisterSet@value
  4373  0FA7  3000               	movlw	0
  4374  0FA8  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4375                           
  4376                           ;Main Card V10.0.c: 759: break;
  4377  0FAD  2FFC               	goto	l335
  4378  0FAE                     l1781:	
  4379                           ;Main Card V10.0.c: 760: case 0x60:
  4380                           
  4381                           
  4382                           ;Main Card V10.0.c: 761: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4383  0FAE  1283               	bcf	3,5	;RP0=0, select bank0
  4384  0FAF  1303               	bcf	3,6	;RP1=0, select bank0
  4385  0FB0  082D               	movf	SetRFMode@mcparam0_read,w
  4386  0FB1  391F               	andlw	31
  4387  0FB2  3860               	iorlw	96
  4388  0FB3  00AB               	movwf	??_SetRFMode
  4389  0FB4  082B               	movf	??_SetRFMode,w
  4390  0FB5  00A7               	movwf	RegisterSet@value
  4391  0FB6  3000               	movlw	0
  4392  0FB7  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4393                           
  4394                           ;Main Card V10.0.c: 763: break;
  4395  0FBC  2FFC               	goto	l335
  4396  0FBD                     l1783:	
  4397                           ;Main Card V10.0.c: 764: case 0x40:
  4398                           
  4399                           
  4400                           ;Main Card V10.0.c: 765: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4401  0FBD  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0FBE  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0FBF  082D               	movf	SetRFMode@mcparam0_read,w
  4404  0FC0  391F               	andlw	31
  4405  0FC1  3840               	iorlw	64
  4406  0FC2  00AB               	movwf	??_SetRFMode
  4407  0FC3  082B               	movf	??_SetRFMode,w
  4408  0FC4  00A7               	movwf	RegisterSet@value
  4409  0FC5  3000               	movlw	0
  4410  0FC6  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4411                           
  4412                           ;Main Card V10.0.c: 767: break;
  4413  0FCB  2FFC               	goto	l335
  4414  0FCC                     l1785:	
  4415                           ;Main Card V10.0.c: 768: case 0x20:
  4416                           
  4417                           
  4418                           ;Main Card V10.0.c: 769: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4419  0FCC  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0FCD  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0FCE  082D               	movf	SetRFMode@mcparam0_read,w
  4422  0FCF  391F               	andlw	31
  4423  0FD0  3820               	iorlw	32
  4424  0FD1  00AB               	movwf	??_SetRFMode
  4425  0FD2  082B               	movf	??_SetRFMode,w
  4426  0FD3  00A7               	movwf	RegisterSet@value
  4427  0FD4  3000               	movlw	0
  4428  0FD5  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4429                           
  4430                           ;Main Card V10.0.c: 771: break;
  4431  0FDA  2FFC               	goto	l335
  4432  0FDB                     l1787:	
  4433                           ;Main Card V10.0.c: 772: case 0x00:
  4434                           
  4435                           
  4436                           ;Main Card V10.0.c: 773: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4437  0FDB  1283               	bcf	3,5	;RP0=0, select bank0
  4438  0FDC  1303               	bcf	3,6	;RP1=0, select bank0
  4439  0FDD  082D               	movf	SetRFMode@mcparam0_read,w
  4440  0FDE  391F               	andlw	31
  4441  0FDF  00AB               	movwf	??_SetRFMode
  4442  0FE0  082B               	movf	??_SetRFMode,w
  4443  0FE1  00A7               	movwf	RegisterSet@value
  4444  0FE2  3000               	movlw	0
  4445  0FE3  120A  158A  23DF  120A  158A  	fcall	_RegisterSet
  4446                           
  4447                           ;Main Card V10.0.c: 776: }
  4448                           
  4449                           ;Main Card V10.0.c: 775: break;
  4450  0FE8  2FFC               	goto	l335
  4451  0FE9                     l1791:	
  4452  0FE9  1283               	bcf	3,5	;RP0=0, select bank0
  4453  0FEA  1303               	bcf	3,6	;RP1=0, select bank0
  4454  0FEB  082C               	movf	SetRFMode@mode,w
  4455                           
  4456                           ; Switch size 1, requested type "space"
  4457                           ; Number of cases is 5, Range of values is 0 to 128
  4458                           ; switch strategies available:
  4459                           ; Name         Instructions Cycles
  4460                           ; simple_byte           16     9 (average)
  4461                           ; jumptable            260     6 (fixed)
  4462                           ;	Chosen strategy is simple_byte
  4463  0FEC  3A00               	xorlw	0	; case 0
  4464  0FED  1903               	skipnz
  4465  0FEE  2FDB               	goto	l1787
  4466  0FEF  3A20               	xorlw	32	; case 32
  4467  0FF0  1903               	skipnz
  4468  0FF1  2FCC               	goto	l1785
  4469  0FF2  3A60               	xorlw	96	; case 64
  4470  0FF3  1903               	skipnz
  4471  0FF4  2FBD               	goto	l1783
  4472  0FF5  3A20               	xorlw	32	; case 96
  4473  0FF6  1903               	skipnz
  4474  0FF7  2FAE               	goto	l1781
  4475  0FF8  3AE0               	xorlw	224	; case 128
  4476  0FF9  1903               	skipnz
  4477  0FFA  2FA1               	goto	l1779
  4478  0FFB  2FFC               	goto	l335
  4479  0FFC                     l335:	
  4480                           
  4481                           ;Main Card V10.0.c: 777: PORTAbits.RA4 = 1;
  4482  0FFC  1283               	bcf	3,5	;RP0=0, select bank0
  4483  0FFD  1303               	bcf	3,6	;RP1=0, select bank0
  4484  0FFE  1605               	bsf	5,4	;volatile
  4485  0FFF  0008               	return
  4486  1000                     __end_of_SetRFMode:	
  4487                           
  4488                           	psect	text23
  4489  0BDF                     __ptext23:	
  4490 ;; *************** function _RegisterSet *****************
  4491 ;; Defined at:
  4492 ;;		line 859 in file "../Main Card V10.0.c"
  4493 ;; Parameters:    Size  Location     Type
  4494 ;;  adress          1    wreg     unsigned char 
  4495 ;;  value           1    7[BANK0 ] unsigned char 
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;  adress          1   10[BANK0 ] unsigned char 
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      void 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4507 ;;      Params:         0       1       0       0       0
  4508 ;;      Locals:         0       1       0       0       0
  4509 ;;      Temps:          0       2       0       0       0
  4510 ;;      Totals:         0       4       0       0       0
  4511 ;;Total ram usage:        4 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    3
  4514 ;; This function calls:
  4515 ;;		_WriteSPI
  4516 ;; This function is called by:
  4517 ;;		_TransiverToReceive
  4518 ;;		_TransmittString
  4519 ;;		_TransiverInit
  4520 ;;		_FindChannel
  4521 ;;		_SetRFMode
  4522 ;; This function uses a non-reentrant model
  4523 ;;
  4524                           
  4525                           
  4526                           ;psect for function _RegisterSet
  4527  0BDF                     _RegisterSet:	
  4528                           
  4529                           ;incstack = 0
  4530                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4531                           ;RegisterSet@adress stored from wreg
  4532  0BDF  1283               	bcf	3,5	;RP0=0, select bank0
  4533  0BE0  1303               	bcf	3,6	;RP1=0, select bank0
  4534  0BE1  00AA               	movwf	RegisterSet@adress
  4535                           
  4536                           ;Main Card V10.0.c: 861: PORTAbits.RA4 = 0;
  4537  0BE2  1205               	bcf	5,4	;volatile
  4538                           
  4539                           ;Main Card V10.0.c: 862: adress = (adress<<1);
  4540  0BE3  082A               	movf	RegisterSet@adress,w
  4541  0BE4  00A8               	movwf	??_RegisterSet
  4542  0BE5  0728               	addwf	??_RegisterSet,w
  4543  0BE6  00A9               	movwf	??_RegisterSet+1
  4544  0BE7  0829               	movf	??_RegisterSet+1,w
  4545  0BE8  00AA               	movwf	RegisterSet@adress
  4546                           
  4547                           ;Main Card V10.0.c: 863: WriteSPI(adress);
  4548  0BE9  082A               	movf	RegisterSet@adress,w
  4549  0BEA  120A  158A  236E  120A  158A  	fcall	_WriteSPI
  4550                           
  4551                           ;Main Card V10.0.c: 864: WriteSPI(value);
  4552  0BEF  1283               	bcf	3,5	;RP0=0, select bank0
  4553  0BF0  1303               	bcf	3,6	;RP1=0, select bank0
  4554  0BF1  0827               	movf	RegisterSet@value,w
  4555  0BF2  120A  158A  236E   	fcall	_WriteSPI
  4556                           
  4557                           ;Main Card V10.0.c: 865: PORTAbits.RA4 = 1;
  4558  0BF5  1283               	bcf	3,5	;RP0=0, select bank0
  4559  0BF6  1303               	bcf	3,6	;RP1=0, select bank0
  4560  0BF7  1605               	bsf	5,4	;volatile
  4561  0BF8  0008               	return
  4562  0BF9                     __end_of_RegisterSet:	
  4563                           
  4564                           	psect	text24
  4565  0C2D                     __ptext24:	
  4566 ;; *************** function _RegisterRead *****************
  4567 ;; Defined at:
  4568 ;;		line 829 in file "../Main Card V10.0.c"
  4569 ;; Parameters:    Size  Location     Type
  4570 ;;  adress          1    wreg     unsigned char 
  4571 ;; Auto vars:     Size  Location     Type
  4572 ;;  adress          1    6[BANK0 ] unsigned char 
  4573 ;;  value           1    5[BANK0 ] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      unsigned char 
  4576 ;; Registers used:
  4577 ;;		wreg, status,2, status,0, pclath, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4583 ;;      Params:         0       0       0       0       0
  4584 ;;      Locals:         0       2       0       0       0
  4585 ;;      Temps:          0       2       0       0       0
  4586 ;;      Totals:         0       4       0       0       0
  4587 ;;Total ram usage:        4 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    4
  4590 ;; This function calls:
  4591 ;;		_ReadSPI
  4592 ;;		_WriteSPI
  4593 ;; This function is called by:
  4594 ;;		_TransiverToReceive
  4595 ;;		_TransmittString
  4596 ;;		_TransiverInit
  4597 ;;		_FindChannel
  4598 ;;		_SetRFMode
  4599 ;; This function uses a non-reentrant model
  4600 ;;
  4601                           
  4602                           
  4603                           ;psect for function _RegisterRead
  4604  0C2D                     _RegisterRead:	
  4605                           
  4606                           ;incstack = 0
  4607                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4608                           ;RegisterRead@adress stored from wreg
  4609  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  4610  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  4611  0C2F  00A6               	movwf	RegisterRead@adress
  4612                           
  4613                           ;Main Card V10.0.c: 831: BYTE value;
  4614                           ;Main Card V10.0.c: 832: PORTAbits.RA4 = 0;
  4615  0C30  1205               	bcf	5,4	;volatile
  4616                           
  4617                           ;Main Card V10.0.c: 833: adress = ((adress<<1)|0x40);
  4618  0C31  0826               	movf	RegisterRead@adress,w
  4619  0C32  00A3               	movwf	??_RegisterRead
  4620  0C33  0723               	addwf	??_RegisterRead,w
  4621  0C34  3840               	iorlw	64
  4622  0C35  00A4               	movwf	??_RegisterRead+1
  4623  0C36  0824               	movf	??_RegisterRead+1,w
  4624  0C37  00A6               	movwf	RegisterRead@adress
  4625                           
  4626                           ;Main Card V10.0.c: 834: WriteSPI(adress);
  4627  0C38  0826               	movf	RegisterRead@adress,w
  4628  0C39  120A  158A  236E  120A  158A  	fcall	_WriteSPI
  4629                           
  4630                           ;Main Card V10.0.c: 835: value = ReadSPI();
  4631  0C3E  120A  158A  2340   	fcall	_ReadSPI
  4632  0C41  1283               	bcf	3,5	;RP0=0, select bank0
  4633  0C42  1303               	bcf	3,6	;RP1=0, select bank0
  4634  0C43  00A3               	movwf	??_RegisterRead
  4635  0C44  0823               	movf	??_RegisterRead,w
  4636  0C45  00A5               	movwf	RegisterRead@value
  4637                           
  4638                           ;Main Card V10.0.c: 836: PORTAbits.RA4 = 1;
  4639  0C46  1605               	bsf	5,4	;volatile
  4640                           
  4641                           ;Main Card V10.0.c: 837: return value;
  4642  0C47  0825               	movf	RegisterRead@value,w
  4643  0C48  0008               	return
  4644  0C49                     __end_of_RegisterRead:	
  4645                           
  4646                           	psect	text25
  4647  0B40                     __ptext25:	
  4648 ;; *************** function _ReadSPI *****************
  4649 ;; Defined at:
  4650 ;;		line 642 in file "../Main Card V10.0.c"
  4651 ;; Parameters:    Size  Location     Type
  4652 ;;		None
  4653 ;; Auto vars:     Size  Location     Type
  4654 ;;		None
  4655 ;; Return value:  Size  Location     Type
  4656 ;;                  1    wreg      unsigned char 
  4657 ;; Registers used:
  4658 ;;		wreg, status,2, status,0, pclath, cstack
  4659 ;; Tracked objects:
  4660 ;;		On entry : 0/0
  4661 ;;		On exit  : 0/0
  4662 ;;		Unchanged: 0/0
  4663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4664 ;;      Params:         0       0       0       0       0
  4665 ;;      Locals:         0       0       0       0       0
  4666 ;;      Temps:          0       0       0       0       0
  4667 ;;      Totals:         0       0       0       0       0
  4668 ;;Total ram usage:        0 bytes
  4669 ;; Hardware stack levels used:    1
  4670 ;; Hardware stack levels required when called:    3
  4671 ;; This function calls:
  4672 ;;		_WriteSPI
  4673 ;; This function is called by:
  4674 ;;		_RegisterRead
  4675 ;;		_ReadFIFO
  4676 ;; This function uses a non-reentrant model
  4677 ;;
  4678                           
  4679                           
  4680                           ;psect for function _ReadSPI
  4681  0B40                     _ReadSPI:	
  4682                           
  4683                           ;Main Card V10.0.c: 644: WriteSPI(0x00);
  4684                           
  4685                           ;incstack = 0
  4686                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4687  0B40  3000               	movlw	0
  4688  0B41  120A  158A  236E   	fcall	_WriteSPI
  4689                           
  4690                           ;Main Card V10.0.c: 645: return SSPBUF;
  4691  0B44  1283               	bcf	3,5	;RP0=0, select bank0
  4692  0B45  1303               	bcf	3,6	;RP1=0, select bank0
  4693  0B46  0813               	movf	19,w	;volatile
  4694  0B47  0008               	return
  4695  0B48                     __end_of_ReadSPI:	
  4696                           
  4697                           	psect	text26
  4698  0B6E                     __ptext26:	
  4699 ;; *************** function _WriteSPI *****************
  4700 ;; Defined at:
  4701 ;;		line 630 in file "../Main Card V10.0.c"
  4702 ;; Parameters:    Size  Location     Type
  4703 ;;  databyte        1    wreg     unsigned char 
  4704 ;; Auto vars:     Size  Location     Type
  4705 ;;  databyte        1    2[BANK0 ] unsigned char 
  4706 ;;  buffer          1    1[BANK0 ] unsigned char 
  4707 ;; Return value:  Size  Location     Type
  4708 ;;                  1    wreg      void 
  4709 ;; Registers used:
  4710 ;;		wreg
  4711 ;; Tracked objects:
  4712 ;;		On entry : 0/0
  4713 ;;		On exit  : 0/0
  4714 ;;		Unchanged: 0/0
  4715 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4716 ;;      Params:         0       0       0       0       0
  4717 ;;      Locals:         0       2       0       0       0
  4718 ;;      Temps:          0       1       0       0       0
  4719 ;;      Totals:         0       3       0       0       0
  4720 ;;Total ram usage:        3 bytes
  4721 ;; Hardware stack levels used:    1
  4722 ;; Hardware stack levels required when called:    2
  4723 ;; This function calls:
  4724 ;;		Nothing
  4725 ;; This function is called by:
  4726 ;;		_ReadSPI
  4727 ;;		_RegisterRead
  4728 ;;		_RegisterSet
  4729 ;;		_WriteFIFO
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           
  4734                           ;psect for function _WriteSPI
  4735  0B6E                     _WriteSPI:	
  4736                           
  4737                           ;incstack = 0
  4738                           ; Regs used in _WriteSPI: [wreg]
  4739                           ;WriteSPI@databyte stored from wreg
  4740  0B6E  1283               	bcf	3,5	;RP0=0, select bank0
  4741  0B6F  1303               	bcf	3,6	;RP1=0, select bank0
  4742  0B70  00A2               	movwf	WriteSPI@databyte
  4743                           
  4744                           ;Main Card V10.0.c: 632: unsigned char buffer;
  4745                           ;Main Card V10.0.c: 633: buffer = SSPBUF;
  4746  0B71  0813               	movf	19,w	;volatile
  4747  0B72  00A0               	movwf	??_WriteSPI
  4748  0B73  0820               	movf	??_WriteSPI,w
  4749  0B74  00A1               	movwf	WriteSPI@buffer
  4750                           
  4751                           ;Main Card V10.0.c: 634: PIR1bits.SSPIF=0;
  4752  0B75  118C               	bcf	12,3	;volatile
  4753                           
  4754                           ;Main Card V10.0.c: 635: SSPBUF = databyte;
  4755  0B76  0822               	movf	WriteSPI@databyte,w
  4756  0B77  0093               	movwf	19	;volatile
  4757  0B78                     l311:	
  4758                           ;Main Card V10.0.c: 636: while(PIR1bits.SSPIF == 0);
  4759                           
  4760  0B78  1D8C               	btfss	12,3	;volatile
  4761  0B79  2B78               	goto	l311
  4762                           
  4763                           ;Main Card V10.0.c: 637: PIR1bits.SSPIF = 0;
  4764  0B7A  118C               	bcf	12,3	;volatile
  4765  0B7B  0008               	return
  4766  0B7C                     __end_of_WriteSPI:	
  4767                           
  4768                           	psect	text27
  4769  0BAC                     __ptext27:	
  4770 ;; *************** function _Mode_3 *****************
  4771 ;; Defined at:
  4772 ;;		line 428 in file "../Main Card V10.0.c"
  4773 ;; Parameters:    Size  Location     Type
  4774 ;;		None
  4775 ;; Auto vars:     Size  Location     Type
  4776 ;;		None
  4777 ;; Return value:  Size  Location     Type
  4778 ;;                  1    wreg      void 
  4779 ;; Registers used:
  4780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4781 ;; Tracked objects:
  4782 ;;		On entry : 0/0
  4783 ;;		On exit  : 0/0
  4784 ;;		Unchanged: 0/0
  4785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4786 ;;      Params:         0       0       0       0       0
  4787 ;;      Locals:         0       0       0       0       0
  4788 ;;      Temps:          0       0       0       0       0
  4789 ;;      Totals:         0       0       0       0       0
  4790 ;;Total ram usage:        0 bytes
  4791 ;; Hardware stack levels used:    1
  4792 ;; Hardware stack levels required when called:    6
  4793 ;; This function calls:
  4794 ;;		_LightWithSensController
  4795 ;; This function is called by:
  4796 ;;		_main
  4797 ;; This function uses a non-reentrant model
  4798 ;;
  4799                           
  4800                           
  4801                           ;psect for function _Mode_3
  4802  0BAC                     _Mode_3:	
  4803                           
  4804                           ;Main Card V10.0.c: 430: LightWithSensController();
  4805                           
  4806                           ;incstack = 0
  4807                           ; Regs used in _Mode_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4808  0BAC  120A  158A  262D  120A  158A  	fcall	_LightWithSensController
  4809                           
  4810                           ;Main Card V10.0.c: 431: if(bDark && PORTAbits.RA1 && intBlinkCycle == 0)
  4811  0BB1  1283               	bcf	3,5	;RP0=0, select bank0
  4812  0BB2  1303               	bcf	3,6	;RP1=0, select bank0
  4813  0BB3  086C               	movf	_bDark,w
  4814  0BB4  1903               	btfsc	3,2
  4815  0BB5  0008               	return
  4816  0BB6  1C85               	btfss	5,1	;volatile
  4817  0BB7  0008               	return
  4818  0BB8  0868               	movf	_intBlinkCycle,w
  4819  0BB9  0469               	iorwf	_intBlinkCycle+1,w
  4820  0BBA  1D03               	btfss	3,2
  4821  0BBB  0008               	return
  4822                           
  4823                           ;Main Card V10.0.c: 432: {
  4824                           ;Main Card V10.0.c: 433: intBlinkCycle = 1;
  4825  0BBC  3001               	movlw	1
  4826  0BBD  00E8               	movwf	_intBlinkCycle
  4827  0BBE  3000               	movlw	0
  4828  0BBF  00E9               	movwf	_intBlinkCycle+1
  4829                           
  4830                           ;Main Card V10.0.c: 434: intBlinkCounter = 0;
  4831  0BC0  1683               	bsf	3,5	;RP0=1, select bank1
  4832  0BC1  1303               	bcf	3,6	;RP1=0, select bank1
  4833  0BC2  01B1               	clrf	_intBlinkCounter^(0+128)
  4834  0BC3  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  4835  0BC4  0008               	return
  4836  0BC5                     __end_of_Mode_3:	
  4837                           
  4838                           	psect	text28
  4839  07F3                     __ptext28:	
  4840 ;; *************** function _Mode_2 *****************
  4841 ;; Defined at:
  4842 ;;		line 417 in file "../Main Card V10.0.c"
  4843 ;; Parameters:    Size  Location     Type
  4844 ;;		None
  4845 ;; Auto vars:     Size  Location     Type
  4846 ;;		None
  4847 ;; Return value:  Size  Location     Type
  4848 ;;                  1    wreg      void 
  4849 ;; Registers used:
  4850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4851 ;; Tracked objects:
  4852 ;;		On entry : 0/0
  4853 ;;		On exit  : 0/0
  4854 ;;		Unchanged: 0/0
  4855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4856 ;;      Params:         0       0       0       0       0
  4857 ;;      Locals:         0       0       0       0       0
  4858 ;;      Temps:          0       0       0       0       0
  4859 ;;      Totals:         0       0       0       0       0
  4860 ;;Total ram usage:        0 bytes
  4861 ;; Hardware stack levels used:    1
  4862 ;; Hardware stack levels required when called:    6
  4863 ;; This function calls:
  4864 ;;		_LightWithSensController
  4865 ;; This function is called by:
  4866 ;;		_main
  4867 ;; This function uses a non-reentrant model
  4868 ;;
  4869                           
  4870                           
  4871                           ;psect for function _Mode_2
  4872  07F3                     _Mode_2:	
  4873                           
  4874                           ;Main Card V10.0.c: 419: LightWithSensController();
  4875                           
  4876                           ;incstack = 0
  4877                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4878  07F3  120A  158A  262D  120A  118A  	fcall	_LightWithSensController
  4879                           
  4880                           ;Main Card V10.0.c: 420: if(PORTCbits.RC2)
  4881  07F8  1283               	bcf	3,5	;RP0=0, select bank0
  4882  07F9  1303               	bcf	3,6	;RP1=0, select bank0
  4883  07FA  1D07               	btfss	7,2	;volatile
  4884  07FB  2FFE               	goto	l264
  4885                           
  4886                           ;Main Card V10.0.c: 421: PORTCbits.RC1 = 1;
  4887  07FC  1487               	bsf	7,1	;volatile
  4888  07FD  0008               	return
  4889  07FE                     l264:	
  4890                           
  4891                           ;Main Card V10.0.c: 422: else
  4892                           ;Main Card V10.0.c: 423: PORTCbits.RC1 = 0;
  4893  07FE  1087               	bcf	7,1	;volatile
  4894  07FF  0008               	return
  4895  0800                     __end_of_Mode_2:	
  4896                           
  4897                           	psect	text29
  4898  0BC5                     __ptext29:	
  4899 ;; *************** function _Mode_1 *****************
  4900 ;; Defined at:
  4901 ;;		line 403 in file "../Main Card V10.0.c"
  4902 ;; Parameters:    Size  Location     Type
  4903 ;;		None
  4904 ;; Auto vars:     Size  Location     Type
  4905 ;;		None
  4906 ;; Return value:  Size  Location     Type
  4907 ;;                  1    wreg      void 
  4908 ;; Registers used:
  4909 ;;		wreg, status,2, status,0, pclath, cstack
  4910 ;; Tracked objects:
  4911 ;;		On entry : 0/0
  4912 ;;		On exit  : 0/0
  4913 ;;		Unchanged: 0/0
  4914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4915 ;;      Params:         0       0       0       0       0
  4916 ;;      Locals:         0       0       0       0       0
  4917 ;;      Temps:          0       0       0       0       0
  4918 ;;      Totals:         0       0       0       0       0
  4919 ;;Total ram usage:        0 bytes
  4920 ;; Hardware stack levels used:    1
  4921 ;; Hardware stack levels required when called:    5
  4922 ;; This function calls:
  4923 ;;		_DarknessCheck
  4924 ;; This function is called by:
  4925 ;;		_main
  4926 ;; This function uses a non-reentrant model
  4927 ;;
  4928                           
  4929                           
  4930                           ;psect for function _Mode_1
  4931  0BC5                     _Mode_1:	
  4932                           
  4933                           ;Main Card V10.0.c: 406: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4934                           
  4935                           ;incstack = 0
  4936                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4937  0BC5  301E               	movlw	30
  4938  0BC6  1283               	bcf	3,5	;RP0=0, select bank0
  4939  0BC7  1303               	bcf	3,6	;RP1=0, select bank0
  4940  0BC8  066A               	xorwf	_intSecondCounter,w
  4941  0BC9  046B               	iorwf	_intSecondCounter+1,w
  4942  0BCA  1903               	btfsc	3,2
  4943  0BCB  1907               	btfsc	7,2	;volatile
  4944  0BCC  2BD2               	goto	l2323
  4945                           
  4946                           ;Main Card V10.0.c: 407: DarknessCheck();
  4947  0BCD  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  4948  0BD2                     l2323:	
  4949                           
  4950                           ;Main Card V10.0.c: 408: if((intBlinkCycle == 1)&&(bDark == 1))
  4951  0BD2  1283               	bcf	3,5	;RP0=0, select bank0
  4952  0BD3  1303               	bcf	3,6	;RP1=0, select bank0
  4953  0BD4  0368               	decf	_intBlinkCycle,w
  4954  0BD5  0469               	iorwf	_intBlinkCycle+1,w
  4955  0BD6  1D03               	btfss	3,2
  4956  0BD7  2BDD               	goto	l259
  4957  0BD8  036C               	decf	_bDark,w
  4958  0BD9  1D03               	btfss	3,2
  4959  0BDA  2BDD               	goto	l259
  4960                           
  4961                           ;Main Card V10.0.c: 409: PORTCbits.RC2 = 1;
  4962  0BDB  1507               	bsf	7,2	;volatile
  4963  0BDC  0008               	return
  4964  0BDD                     l259:	
  4965                           
  4966                           ;Main Card V10.0.c: 410: else
  4967                           ;Main Card V10.0.c: 411: PORTCbits.RC2 = 0;
  4968  0BDD  1107               	bcf	7,2	;volatile
  4969  0BDE  0008               	return
  4970  0BDF                     __end_of_Mode_1:	
  4971                           
  4972                           	psect	text30
  4973  0B38                     __ptext30:	
  4974 ;; *************** function _Mode_0 *****************
  4975 ;; Defined at:
  4976 ;;		line 395 in file "../Main Card V10.0.c"
  4977 ;; Parameters:    Size  Location     Type
  4978 ;;		None
  4979 ;; Auto vars:     Size  Location     Type
  4980 ;;		None
  4981 ;; Return value:  Size  Location     Type
  4982 ;;                  1    wreg      void 
  4983 ;; Registers used:
  4984 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4985 ;; Tracked objects:
  4986 ;;		On entry : 0/0
  4987 ;;		On exit  : 0/0
  4988 ;;		Unchanged: 0/0
  4989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4990 ;;      Params:         0       0       0       0       0
  4991 ;;      Locals:         0       0       0       0       0
  4992 ;;      Temps:          0       0       0       0       0
  4993 ;;      Totals:         0       0       0       0       0
  4994 ;;Total ram usage:        0 bytes
  4995 ;; Hardware stack levels used:    1
  4996 ;; Hardware stack levels required when called:    6
  4997 ;; This function calls:
  4998 ;;		_LightWithSensController
  4999 ;; This function is called by:
  5000 ;;		_main
  5001 ;; This function uses a non-reentrant model
  5002 ;;
  5003                           
  5004                           
  5005                           ;psect for function _Mode_0
  5006  0B38                     _Mode_0:	
  5007                           
  5008                           ;Main Card V10.0.c: 397: LightWithSensController();
  5009                           
  5010                           ;incstack = 0
  5011                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5012  0B38  120A  158A  262D   	fcall	_LightWithSensController
  5013  0B3B  0008               	return
  5014  0B3C                     __end_of_Mode_0:	
  5015                           
  5016                           	psect	text31
  5017  0E2D                     __ptext31:	
  5018 ;; *************** function _LightWithSensController *****************
  5019 ;; Defined at:
  5020 ;;		line 472 in file "../Main Card V10.0.c"
  5021 ;; Parameters:    Size  Location     Type
  5022 ;;		None
  5023 ;; Auto vars:     Size  Location     Type
  5024 ;;		None
  5025 ;; Return value:  Size  Location     Type
  5026 ;;                  1    wreg      void 
  5027 ;; Registers used:
  5028 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5029 ;; Tracked objects:
  5030 ;;		On entry : 0/0
  5031 ;;		On exit  : 0/0
  5032 ;;		Unchanged: 0/0
  5033 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5034 ;;      Params:         0       0       0       0       0
  5035 ;;      Locals:         0       0       0       0       0
  5036 ;;      Temps:          0       0       0       0       0
  5037 ;;      Totals:         0       0       0       0       0
  5038 ;;Total ram usage:        0 bytes
  5039 ;; Hardware stack levels used:    1
  5040 ;; Hardware stack levels required when called:    5
  5041 ;; This function calls:
  5042 ;;		_DarknessCheck
  5043 ;;		_timerFunction
  5044 ;; This function is called by:
  5045 ;;		_Mode_0
  5046 ;;		_Mode_2
  5047 ;;		_Mode_3
  5048 ;;		_Mode_4
  5049 ;;		_Mode_5
  5050 ;; This function uses a non-reentrant model
  5051 ;;
  5052                           
  5053                           
  5054                           ;psect for function _LightWithSensController
  5055  0E2D                     _LightWithSensController:	
  5056                           
  5057                           ;Main Card V10.0.c: 476: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  5058                           
  5059                           ;incstack = 0
  5060                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5061  0E2D  301E               	movlw	30
  5062  0E2E  1283               	bcf	3,5	;RP0=0, select bank0
  5063  0E2F  1303               	bcf	3,6	;RP1=0, select bank0
  5064  0E30  066A               	xorwf	_intSecondCounter,w
  5065  0E31  046B               	iorwf	_intSecondCounter+1,w
  5066  0E32  1903               	btfsc	3,2
  5067  0E33  1907               	btfsc	7,2	;volatile
  5068  0E34  2E3A               	goto	l2205
  5069                           
  5070                           ;Main Card V10.0.c: 477: DarknessCheck();
  5071  0E35  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  5072  0E3A                     l2205:	
  5073                           
  5074                           ;Main Card V10.0.c: 481: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  5075  0E3A  1283               	bcf	3,5	;RP0=0, select bank0
  5076  0E3B  1303               	bcf	3,6	;RP1=0, select bank0
  5077  0E3C  036C               	decf	_bDark,w
  5078  0E3D  1903               	btfsc	3,2
  5079  0E3E  1C85               	btfss	5,1	;volatile
  5080  0E3F  2E57               	goto	l2215
  5081  0E40  1907               	btfsc	7,2	;volatile
  5082  0E41  2E57               	goto	l2215
  5083                           
  5084                           ;Main Card V10.0.c: 482: {
  5085                           ;Main Card V10.0.c: 484: PORTCbits.RC2 = 1;
  5086  0E42  1507               	bsf	7,2	;volatile
  5087                           
  5088                           ;Main Card V10.0.c: 486: timerFunction(0,intLightOnTime);
  5089  0E43  3000               	movlw	0
  5090  0E44  00A0               	movwf	timerFunction@intTimerNumber
  5091  0E45  00A1               	movwf	timerFunction@intTimerNumber+1
  5092  0E46  1683               	bsf	3,5	;RP0=1, select bank1
  5093  0E47  1303               	bcf	3,6	;RP1=0, select bank1
  5094  0E48  0859               	movf	(_intLightOnTime+1)^(0+128),w
  5095  0E49  1283               	bcf	3,5	;RP0=0, select bank0
  5096  0E4A  1303               	bcf	3,6	;RP1=0, select bank0
  5097  0E4B  00A3               	movwf	timerFunction@intSetSeconds+1
  5098  0E4C  1683               	bsf	3,5	;RP0=1, select bank1
  5099  0E4D  1303               	bcf	3,6	;RP1=0, select bank1
  5100  0E4E  0858               	movf	_intLightOnTime^(0+128),w
  5101  0E4F  1283               	bcf	3,5	;RP0=0, select bank0
  5102  0E50  1303               	bcf	3,6	;RP1=0, select bank0
  5103  0E51  00A2               	movwf	timerFunction@intSetSeconds
  5104  0E52  120A  158A  239A  120A  158A  	fcall	_timerFunction
  5105  0E57                     l2215:	
  5106                           
  5107                           ;Main Card V10.0.c: 487: }
  5108                           ;Main Card V10.0.c: 490: if(bTimerComplete[0])
  5109  0E57  1683               	bsf	3,5	;RP0=1, select bank1
  5110  0E58  1303               	bcf	3,6	;RP1=0, select bank1
  5111  0E59  082A               	movf	_bTimerComplete^(0+128),w
  5112  0E5A  1903               	btfsc	3,2
  5113  0E5B  0008               	return
  5114                           
  5115                           ;Main Card V10.0.c: 491: {
  5116                           ;Main Card V10.0.c: 492: DarknessCheck();
  5117  0E5C  120A  158A  24DC  120A  158A  	fcall	_DarknessCheck
  5118                           
  5119                           ;Main Card V10.0.c: 493: if((bDark)&&(PORTAbits.RA1))
  5120  0E61  1283               	bcf	3,5	;RP0=0, select bank0
  5121  0E62  1303               	bcf	3,6	;RP1=0, select bank0
  5122  0E63  086C               	movf	_bDark,w
  5123  0E64  1D03               	btfss	3,2
  5124  0E65  1C85               	btfss	5,1	;volatile
  5125  0E66  2E7A               	goto	l284
  5126                           
  5127                           ;Main Card V10.0.c: 494: {
  5128                           ;Main Card V10.0.c: 495: timerFunction(0,intLightOnTime);
  5129  0E67  3000               	movlw	0
  5130  0E68  00A0               	movwf	timerFunction@intTimerNumber
  5131  0E69  00A1               	movwf	timerFunction@intTimerNumber+1
  5132  0E6A  1683               	bsf	3,5	;RP0=1, select bank1
  5133  0E6B  1303               	bcf	3,6	;RP1=0, select bank1
  5134  0E6C  0859               	movf	(_intLightOnTime+1)^(0+128),w
  5135  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  5136  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  5137  0E6F  00A3               	movwf	timerFunction@intSetSeconds+1
  5138  0E70  1683               	bsf	3,5	;RP0=1, select bank1
  5139  0E71  1303               	bcf	3,6	;RP1=0, select bank1
  5140  0E72  0858               	movf	_intLightOnTime^(0+128),w
  5141  0E73  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0E74  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0E75  00A2               	movwf	timerFunction@intSetSeconds
  5144  0E76  120A  158A  239A   	fcall	_timerFunction
  5145                           
  5146                           ;Main Card V10.0.c: 496: }
  5147  0E79  0008               	return
  5148  0E7A                     l284:	
  5149                           
  5150                           ;Main Card V10.0.c: 497: else
  5151                           ;Main Card V10.0.c: 498: PORTCbits.RC2 = 0;
  5152  0E7A  1107               	bcf	7,2	;volatile
  5153  0E7B  0008               	return
  5154  0E7C                     __end_of_LightWithSensController:	
  5155                           
  5156                           	psect	text32
  5157  0B9A                     __ptext32:	
  5158 ;; *************** function _timerFunction *****************
  5159 ;; Defined at:
  5160 ;;		line 523 in file "../Main Card V10.0.c"
  5161 ;; Parameters:    Size  Location     Type
  5162 ;;  intTimerNumb    2    0[BANK0 ] int 
  5163 ;;  intSetSecond    2    2[BANK0 ] int 
  5164 ;; Auto vars:     Size  Location     Type
  5165 ;;		None
  5166 ;; Return value:  Size  Location     Type
  5167 ;;                  1    wreg      unsigned char 
  5168 ;; Registers used:
  5169 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  5170 ;; Tracked objects:
  5171 ;;		On entry : 0/0
  5172 ;;		On exit  : 0/0
  5173 ;;		Unchanged: 0/0
  5174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5175 ;;      Params:         0       4       0       0       0
  5176 ;;      Locals:         0       0       0       0       0
  5177 ;;      Temps:          0       1       0       0       0
  5178 ;;      Totals:         0       5       0       0       0
  5179 ;;Total ram usage:        5 bytes
  5180 ;; Hardware stack levels used:    1
  5181 ;; Hardware stack levels required when called:    2
  5182 ;; This function calls:
  5183 ;;		Nothing
  5184 ;; This function is called by:
  5185 ;;		_TransiverToReceive
  5186 ;;		_TransiverReadFIFO
  5187 ;;		_TransmittString
  5188 ;;		_LightWithSensController
  5189 ;; This function uses a non-reentrant model
  5190 ;;
  5191                           
  5192                           
  5193                           ;psect for function _timerFunction
  5194  0B9A                     _timerFunction:	
  5195                           
  5196                           ;Main Card V10.0.c: 525: intClockTimer[intTimerNumber] = intSetSeconds;
  5197                           
  5198                           ;incstack = 0
  5199                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5200  0B9A  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0B9B  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0B9C  0820               	movf	timerFunction@intTimerNumber,w
  5203  0B9D  00A4               	movwf	??_timerFunction
  5204  0B9E  0724               	addwf	??_timerFunction,w
  5205  0B9F  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5206  0BA0  0084               	movwf	4
  5207  0BA1  0822               	movf	timerFunction@intSetSeconds,w
  5208  0BA2  1383               	bcf	3,7	;select IRP bank1
  5209  0BA3  0080               	movwf	0
  5210  0BA4  0A84               	incf	4,f
  5211  0BA5  0823               	movf	timerFunction@intSetSeconds+1,w
  5212  0BA6  0080               	movwf	0
  5213                           
  5214                           ;Main Card V10.0.c: 526: bTimerComplete[intTimerNumber] = 0;
  5215  0BA7  0820               	movf	timerFunction@intTimerNumber,w
  5216  0BA8  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5217  0BA9  0084               	movwf	4
  5218  0BAA  0180               	clrf	0
  5219  0BAB  0008               	return
  5220  0BAC                     __end_of_timerFunction:	
  5221                           ;Main Card V10.0.c: 527: return 1;
  5222                           ;	Return value of _timerFunction is never used
  5223                           
  5224                           
  5225                           	psect	text33
  5226  0CDC                     __ptext33:	
  5227 ;; *************** function _DarknessCheck *****************
  5228 ;; Defined at:
  5229 ;;		line 1046 in file "../Main Card V10.0.c"
  5230 ;; Parameters:    Size  Location     Type
  5231 ;;		None
  5232 ;; Auto vars:     Size  Location     Type
  5233 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5234 ;; Return value:  Size  Location     Type
  5235 ;;                  1    wreg      void 
  5236 ;; Registers used:
  5237 ;;		wreg, status,2, status,0, pclath, cstack
  5238 ;; Tracked objects:
  5239 ;;		On entry : 0/0
  5240 ;;		On exit  : 0/0
  5241 ;;		Unchanged: 0/0
  5242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5243 ;;      Params:         0       0       0       0       0
  5244 ;;      Locals:         0       1       0       0       0
  5245 ;;      Temps:          0       1       0       0       0
  5246 ;;      Totals:         0       2       0       0       0
  5247 ;;Total ram usage:        2 bytes
  5248 ;; Hardware stack levels used:    1
  5249 ;; Hardware stack levels required when called:    4
  5250 ;; This function calls:
  5251 ;;		_AnalogValue
  5252 ;;		_eeprom_read
  5253 ;; This function is called by:
  5254 ;;		_TransmittedDataHandler
  5255 ;;		_Mode_1
  5256 ;;		_LightWithSensController
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function _DarknessCheck
  5262  0CDC                     _DarknessCheck:	
  5263                           
  5264                           ;Main Card V10.0.c: 1048: unsigned char darknessValue;
  5265                           ;Main Card V10.0.c: 1049: PORTCbits.RC0 = 0;
  5266                           
  5267                           ;incstack = 0
  5268                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5269  0CDC  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0CDD  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0CDE  1007               	bcf	7,0	;volatile
  5272                           
  5273                           ;Main Card V10.0.c: 1051: if(bValueFromPot == TRUE)
  5274  0CDF  036F               	decf	_bValueFromPot,w
  5275  0CE0  1D03               	btfss	3,2
  5276  0CE1  2CE9               	goto	l2003
  5277                           
  5278                           ;Main Card V10.0.c: 1052: darknessValue= AnalogValue(3);
  5279  0CE2  3003               	movlw	3
  5280  0CE3  120A  158A  24B3  120A  158A  	fcall	_AnalogValue
  5281  0CE8  2CEF               	goto	L2
  5282  0CE9                     l2003:	
  5283                           
  5284                           ;Main Card V10.0.c: 1053: else
  5285                           ;Main Card V10.0.c: 1054: darknessValue=eeprom_read(addressDarknessValue);
  5286  0CE9  087C               	movf	_addressDarknessValue,w
  5287  0CEA  120A  158A  248F  120A  158A  	fcall	_eeprom_read
  5288  0CEF                     L2:	
  5289  0CEF  1283               	bcf	3,5	;RP0=0, select bank0
  5290  0CF0  1303               	bcf	3,6	;RP1=0, select bank0
  5291  0CF1  00A8               	movwf	??_DarknessCheck
  5292  0CF2  0828               	movf	??_DarknessCheck,w
  5293  0CF3  00A9               	movwf	DarknessCheck@darknessValue
  5294                           
  5295                           ;Main Card V10.0.c: 1056: if(AnalogValue(0)>darknessValue)
  5296  0CF4  3000               	movlw	0
  5297  0CF5  120A  158A  24B3  120A  158A  	fcall	_AnalogValue
  5298  0CFA  1283               	bcf	3,5	;RP0=0, select bank0
  5299  0CFB  1303               	bcf	3,6	;RP1=0, select bank0
  5300  0CFC  0229               	subwf	DarknessCheck@darknessValue,w
  5301  0CFD  1803               	skipnc
  5302  0CFE  2D02               	goto	l2007
  5303                           
  5304                           ;Main Card V10.0.c: 1057: bDark = 1;
  5305  0CFF  01EC               	clrf	_bDark
  5306  0D00  0AEC               	incf	_bDark,f
  5307  0D01  2D03               	goto	l2009
  5308  0D02                     l2007:	
  5309                           
  5310                           ;Main Card V10.0.c: 1058: else
  5311                           ;Main Card V10.0.c: 1059: bDark = 0;
  5312  0D02  01EC               	clrf	_bDark
  5313  0D03                     l2009:	
  5314                           
  5315                           ;Main Card V10.0.c: 1060: PORTCbits.RC0 = 0;
  5316  0D03  1007               	bcf	7,0	;volatile
  5317  0D04  0008               	return
  5318  0D05                     __end_of_DarknessCheck:	
  5319                           
  5320                           	psect	text34
  5321  0C8F                     __ptext34:	
  5322 ;; *************** function _eeprom_read *****************
  5323 ;; Defined at:
  5324 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;  addr            1    wreg     unsigned char 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  addr            1    1[BANK0 ] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      unsigned char 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5338 ;;      Params:         0       0       0       0       0
  5339 ;;      Locals:         0       1       0       0       0
  5340 ;;      Temps:          0       1       0       0       0
  5341 ;;      Totals:         0       2       0       0       0
  5342 ;;Total ram usage:        2 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_TransmittedDataHandler
  5349 ;;		_DarknessCheck
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _eeprom_read
  5355  0C8F                     _eeprom_read:	
  5356                           
  5357                           ;incstack = 0
  5358                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5359                           ;eeprom_read@addr stored from wreg
  5360  0C8F  1283               	bcf	3,5	;RP0=0, select bank0
  5361  0C90  1303               	bcf	3,6	;RP1=0, select bank0
  5362  0C91  00A1               	movwf	eeprom_read@addr
  5363  0C92  2C95               	goto	l405
  5364  0C93                     u1251:	
  5365  0C93  1283               	bcf	3,5	;RP0=0, select bank0
  5366  0C94  1303               	bcf	3,6	;RP1=0, select bank0
  5367  0C95                     l405:	
  5368  0C95  0064               	clrwdt	;# 
  5369  0C96  1683               	bsf	3,5	;RP0=1, select bank3
  5370  0C97  1703               	bsf	3,6	;RP1=1, select bank3
  5371  0C98  188C               	btfsc	12,1	;volsfr
  5372  0C99  2C93               	goto	u1251
  5373  0C9A  1283               	bcf	3,5	;RP0=0, select bank0
  5374  0C9B  1303               	bcf	3,6	;RP1=0, select bank0
  5375  0C9C  0821               	movf	eeprom_read@addr,w
  5376  0C9D  1283               	bcf	3,5	;RP0=0, select bank2
  5377  0C9E  1703               	bsf	3,6	;RP1=1, select bank2
  5378  0C9F  008D               	movwf	13	;volatile
  5379  0CA0  303F               	movlw	63
  5380  0CA1  1283               	bcf	3,5	;RP0=0, select bank0
  5381  0CA2  1303               	bcf	3,6	;RP1=0, select bank0
  5382  0CA3  00A0               	movwf	??_eeprom_read
  5383  0CA4  0820               	movf	??_eeprom_read,w
  5384  0CA5  1683               	bsf	3,5	;RP0=1, select bank3
  5385  0CA6  1703               	bsf	3,6	;RP1=1, select bank3
  5386  0CA7  058C               	andwf	12,f	;volsfr
  5387  0CA8  140C               	bsf	12,0	;volsfr
  5388  0CA9  1003               	clrc
  5389  0CAA  180C               	btfsc	12,0	;volsfr
  5390  0CAB  1403               	setc
  5391  0CAC  3000               	movlw	0
  5392  0CAD  1803               	skipnc
  5393  0CAE  3001               	movlw	1
  5394  0CAF  1283               	bcf	3,5	;RP0=0, select bank2
  5395  0CB0  1703               	bsf	3,6	;RP1=1, select bank2
  5396  0CB1  080C               	movf	12,w	;volatile
  5397  0CB2  0008               	return
  5398  0CB3                     __end_of_eeprom_read:	
  5399                           
  5400                           	psect	text35
  5401  0CB3                     __ptext35:	
  5402 ;; *************** function _AnalogValue *****************
  5403 ;; Defined at:
  5404 ;;		line 1019 in file "../Main Card V10.0.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  channel         1    wreg     unsigned char 
  5407 ;; Auto vars:     Size  Location     Type
  5408 ;;  channel         1    7[BANK0 ] unsigned char 
  5409 ;; Return value:  Size  Location     Type
  5410 ;;                  1    wreg      unsigned char 
  5411 ;; Registers used:
  5412 ;;		wreg, status,2, status,0, pclath, cstack
  5413 ;; Tracked objects:
  5414 ;;		On entry : 0/0
  5415 ;;		On exit  : 0/0
  5416 ;;		Unchanged: 0/0
  5417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5418 ;;      Params:         0       0       0       0       0
  5419 ;;      Locals:         0       1       0       0       0
  5420 ;;      Temps:          0       1       0       0       0
  5421 ;;      Totals:         0       2       0       0       0
  5422 ;;Total ram usage:        2 bytes
  5423 ;; Hardware stack levels used:    1
  5424 ;; Hardware stack levels required when called:    3
  5425 ;; This function calls:
  5426 ;;		_DelayDs
  5427 ;; This function is called by:
  5428 ;;		_TransmittedDataHandler
  5429 ;;		_DarknessCheck
  5430 ;; This function uses a non-reentrant model
  5431 ;;
  5432                           
  5433                           
  5434                           ;psect for function _AnalogValue
  5435  0CB3                     _AnalogValue:	
  5436                           
  5437                           ;incstack = 0
  5438                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5439                           ;AnalogValue@channel stored from wreg
  5440  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0CB5  00A7               	movwf	AnalogValue@channel
  5443                           
  5444                           ;Main Card V10.0.c: 1021: ADCON0bits.CHS = channel;
  5445  0CB6  0827               	movf	AnalogValue@channel,w
  5446  0CB7  00A6               	movwf	??_AnalogValue
  5447  0CB8  0DA6               	rlf	??_AnalogValue,f
  5448  0CB9  0DA6               	rlf	??_AnalogValue,f
  5449  0CBA  081F               	movf	31,w	;volatile
  5450  0CBB  0626               	xorwf	??_AnalogValue,w
  5451  0CBC  39C3               	andlw	-61
  5452  0CBD  0626               	xorwf	??_AnalogValue,w
  5453  0CBE  009F               	movwf	31	;volatile
  5454                           
  5455                           ;Main Card V10.0.c: 1022: ADCON0bits.ADON = 1;
  5456  0CBF  141F               	bsf	31,0	;volatile
  5457                           
  5458                           ;Main Card V10.0.c: 1023: DelayDs(1);
  5459  0CC0  3001               	movlw	1
  5460  0CC1  00A0               	movwf	DelayDs@cnt
  5461  0CC2  3000               	movlw	0
  5462  0CC3  00A1               	movwf	DelayDs@cnt+1
  5463  0CC4  120A  158A  2449  120A  158A  	fcall	_DelayDs
  5464                           
  5465                           ;Main Card V10.0.c: 1024: ADCON0bits.GO = 1;
  5466  0CC9  1283               	bcf	3,5	;RP0=0, select bank0
  5467  0CCA  1303               	bcf	3,6	;RP1=0, select bank0
  5468  0CCB  149F               	bsf	31,1	;volatile
  5469                           
  5470                           ;Main Card V10.0.c: 1025: DelayDs(1);
  5471  0CCC  3001               	movlw	1
  5472  0CCD  00A0               	movwf	DelayDs@cnt
  5473  0CCE  3000               	movlw	0
  5474  0CCF  00A1               	movwf	DelayDs@cnt+1
  5475  0CD0  120A  158A  2449  120A  158A  	fcall	_DelayDs
  5476  0CD5                     l379:	
  5477                           ;Main Card V10.0.c: 1026: while(ADCON0bits.GO);
  5478                           
  5479  0CD5  1283               	bcf	3,5	;RP0=0, select bank0
  5480  0CD6  1303               	bcf	3,6	;RP1=0, select bank0
  5481  0CD7  189F               	btfsc	31,1	;volatile
  5482  0CD8  2CD5               	goto	l379
  5483                           
  5484                           ;Main Card V10.0.c: 1027: ADCON0bits.ADON = 0;
  5485  0CD9  101F               	bcf	31,0	;volatile
  5486                           
  5487                           ;Main Card V10.0.c: 1028: return ADRESH;
  5488  0CDA  081E               	movf	30,w	;volatile
  5489  0CDB  0008               	return
  5490  0CDC                     __end_of_AnalogValue:	
  5491                           
  5492                           	psect	text36
  5493  0C49                     __ptext36:	
  5494 ;; *************** function _DelayDs *****************
  5495 ;; Defined at:
  5496 ;;		line 621 in file "../Main Card V10.0.c"
  5497 ;; Parameters:    Size  Location     Type
  5498 ;;  cnt             2    0[BANK0 ] int 
  5499 ;; Auto vars:     Size  Location     Type
  5500 ;;  i               2    4[BANK0 ] int 
  5501 ;; Return value:  Size  Location     Type
  5502 ;;                  1    wreg      void 
  5503 ;; Registers used:
  5504 ;;		wreg, status,2
  5505 ;; Tracked objects:
  5506 ;;		On entry : 0/0
  5507 ;;		On exit  : 0/0
  5508 ;;		Unchanged: 0/0
  5509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5510 ;;      Params:         0       2       0       0       0
  5511 ;;      Locals:         0       2       0       0       0
  5512 ;;      Temps:          0       2       0       0       0
  5513 ;;      Totals:         0       6       0       0       0
  5514 ;;Total ram usage:        6 bytes
  5515 ;; Hardware stack levels used:    1
  5516 ;; Hardware stack levels required when called:    2
  5517 ;; This function calls:
  5518 ;;		Nothing
  5519 ;; This function is called by:
  5520 ;;		_TransmittedDataHandler
  5521 ;;		_Blink
  5522 ;;		_AnalogValue
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           
  5527                           ;psect for function _DelayDs
  5528  0C49                     _DelayDs:	
  5529                           
  5530                           ;Main Card V10.0.c: 622: int i;
  5531                           ;Main Card V10.0.c: 623: for(i=0;i<cnt;i++){
  5532                           
  5533                           ;incstack = 0
  5534                           ; Regs used in _DelayDs: [wreg+status,2]
  5535  0C49  1283               	bcf	3,5	;RP0=0, select bank0
  5536  0C4A  1303               	bcf	3,6	;RP1=0, select bank0
  5537  0C4B  01A4               	clrf	DelayDs@i
  5538  0C4C  01A5               	clrf	DelayDs@i+1
  5539  0C4D                     l305:	
  5540  0C4D  0825               	movf	DelayDs@i+1,w
  5541  0C4E  3A80               	xorlw	128
  5542  0C4F  00A2               	movwf	??_DelayDs
  5543  0C50  0821               	movf	DelayDs@cnt+1,w
  5544  0C51  3A80               	xorlw	128
  5545  0C52  0222               	subwf	??_DelayDs,w
  5546  0C53  1D03               	skipz
  5547  0C54  2C57               	goto	u1195
  5548  0C55  0820               	movf	DelayDs@cnt,w
  5549  0C56  0224               	subwf	DelayDs@i,w
  5550  0C57                     u1195:	
  5551  0C57  1803               	btfsc	3,0
  5552  0C58  0008               	return
  5553                           
  5554                           ;Main Card V10.0.c: 624: _delay((unsigned long)((100)*(4000000/4000.0)));
  5555  0C59  3082               	movlw	130
  5556  0C5A  1283               	bcf	3,5	;RP0=0, select bank0
  5557  0C5B  1303               	bcf	3,6	;RP1=0, select bank0
  5558  0C5C  00A3               	movwf	??_DelayDs+1
  5559  0C5D  30DD               	movlw	221
  5560  0C5E  00A2               	movwf	??_DelayDs
  5561  0C5F                     u2457:	
  5562  0C5F  0BA2               	decfsz	??_DelayDs,f
  5563  0C60  2C5F               	goto	u2457
  5564  0C61  0BA3               	decfsz	??_DelayDs+1,f
  5565  0C62  2C5F               	goto	u2457
  5566  0C63  3001               	movlw	1
  5567  0C64  1283               	bcf	3,5	;RP0=0, select bank0
  5568  0C65  1303               	bcf	3,6	;RP1=0, select bank0
  5569  0C66  07A4               	addwf	DelayDs@i,f
  5570  0C67  1803               	skipnc
  5571  0C68  0AA5               	incf	DelayDs@i+1,f
  5572  0C69  3000               	movlw	0
  5573  0C6A  07A5               	addwf	DelayDs@i+1,f
  5574  0C6B  2C4D               	goto	l305
  5575  0C6C                     __end_of_DelayDs:	
  5576                           
  5577                           	psect	text37
  5578  033F                     __ptext37:	
  5579 ;; *************** function _tc_int *****************
  5580 ;; Defined at:
  5581 ;;		line 936 in file "../Main Card V10.0.c"
  5582 ;; Parameters:    Size  Location     Type
  5583 ;;		None
  5584 ;; Auto vars:     Size  Location     Type
  5585 ;;		None
  5586 ;; Return value:  Size  Location     Type
  5587 ;;                  1    wreg      void 
  5588 ;; Registers used:
  5589 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5590 ;; Tracked objects:
  5591 ;;		On entry : 0/0
  5592 ;;		On exit  : 0/0
  5593 ;;		Unchanged: 0/0
  5594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5595 ;;      Params:         0       0       0       0       0
  5596 ;;      Locals:         0       0       0       0       0
  5597 ;;      Temps:          7       0       0       0       0
  5598 ;;      Totals:         7       0       0       0       0
  5599 ;;Total ram usage:        7 bytes
  5600 ;; Hardware stack levels used:    1
  5601 ;; Hardware stack levels required when called:    1
  5602 ;; This function calls:
  5603 ;;		_TimerCounter
  5604 ;;		i1_OperationMode
  5605 ;; This function is called by:
  5606 ;;		Interrupt level 1
  5607 ;; This function uses a non-reentrant model
  5608 ;;
  5609                           
  5610                           
  5611                           ;psect for function _tc_int
  5612  033F                     _tc_int:	
  5613                           
  5614                           ;Main Card V10.0.c: 940: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5615  033F  1A86               	btfsc	6,5	;volatile
  5616  0340  2B5A               	goto	i1l361
  5617  0341  0868               	movf	_intBlinkCycle,w
  5618  0342  0469               	iorwf	_intBlinkCycle+1,w
  5619  0343  1D03               	btfss	3,2
  5620  0344  2B5A               	goto	i1l361
  5621  0345  120A  158A  2350  120A  118A  	fcall	i1_OperationMode
  5622  034A  00F5               	movwf	??_tc_int
  5623  034B  3002               	movlw	2
  5624  034C  0275               	subwf	??_tc_int,w
  5625  034D  1803               	skipnc
  5626  034E  2B5A               	goto	i1l361
  5627                           
  5628                           ;Main Card V10.0.c: 941: intBlinkCycle = 1;
  5629  034F  3001               	movlw	1
  5630  0350  1283               	bcf	3,5	;RP0=0, select bank0
  5631  0351  1303               	bcf	3,6	;RP1=0, select bank0
  5632  0352  00E8               	movwf	_intBlinkCycle
  5633  0353  3000               	movlw	0
  5634  0354  00E9               	movwf	_intBlinkCycle+1
  5635                           
  5636                           ;Main Card V10.0.c: 942: intBlinkCounter = 0;
  5637  0355  1683               	bsf	3,5	;RP0=1, select bank1
  5638  0356  1303               	bcf	3,6	;RP1=0, select bank1
  5639  0357  01B1               	clrf	_intBlinkCounter^(0+128)
  5640  0358  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5641                           
  5642                           ;Main Card V10.0.c: 944: }else if(PORTBbits.RB5==0)
  5643  0359  2B60               	goto	i1l362
  5644  035A                     i1l361:	
  5645  035A  1283               	bcf	3,5	;RP0=0, select bank0
  5646  035B  1303               	bcf	3,6	;RP1=0, select bank0
  5647  035C  1A86               	btfsc	6,5	;volatile
  5648  035D  2B60               	goto	i1l362
  5649                           
  5650                           ;Main Card V10.0.c: 945: btnPush=TRUE;
  5651  035E  01EE               	clrf	_btnPush
  5652  035F  0AEE               	incf	_btnPush,f
  5653  0360                     i1l362:	
  5654                           
  5655                           ;Main Card V10.0.c: 947: if(TMR1IF ==1){
  5656  0360  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0361  1C0C               	btfss	12,0	;volatile
  5658  0362  2C22               	goto	L3
  5659                           
  5660                           ;Main Card V10.0.c: 948: TMR1ON = 0;
  5661  0363  1010               	bcf	16,0	;volatile
  5662                           
  5663                           ;Main Card V10.0.c: 949: TMR1H = 0x0B;
  5664  0364  300B               	movlw	11
  5665  0365  008F               	movwf	15	;volatile
  5666                           
  5667                           ;Main Card V10.0.c: 950: TMR1L = 0xDB;
  5668  0366  30DB               	movlw	219
  5669  0367  008E               	movwf	14	;volatile
  5670                           
  5671                           ;Main Card V10.0.c: 952: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5672  0368  0368               	decf	_intBlinkCycle,w
  5673  0369  0469               	iorwf	_intBlinkCycle+1,w
  5674  036A  1D03               	btfss	3,2
  5675  036B  2BB0               	goto	i1l2491
  5676  036C  1683               	bsf	3,5	;RP0=1, select bank1
  5677  036D  1303               	bcf	3,6	;RP1=0, select bank1
  5678  036E  085B               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5679  036F  00F6               	movwf	??_tc_int+1
  5680  0370  085A               	movf	_intNumberOfBlinks^(0+128),w
  5681  0371  00F5               	movwf	??_tc_int
  5682  0372  1003               	clrc
  5683  0373  0DF5               	rlf	??_tc_int,f
  5684  0374  0DF6               	rlf	??_tc_int+1,f
  5685  0375  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5686  0376  3A80               	xorlw	128
  5687  0377  00F7               	movwf	??_tc_int+2
  5688  0378  0876               	movf	??_tc_int+1,w
  5689  0379  3A80               	xorlw	128
  5690  037A  0277               	subwf	??_tc_int+2,w
  5691  037B  1D03               	skipz
  5692  037C  2B7F               	goto	u225_25
  5693  037D  0875               	movf	??_tc_int,w
  5694  037E  0231               	subwf	_intBlinkCounter^(0+128),w
  5695  037F                     u225_25:	
  5696  037F  1803               	skipnc
  5697  0380  2BB0               	goto	i1l2491
  5698                           
  5699                           ;Main Card V10.0.c: 953: intBlinkCounter++;
  5700  0381  3001               	movlw	1
  5701  0382  1683               	bsf	3,5	;RP0=1, select bank1
  5702  0383  1303               	bcf	3,6	;RP1=0, select bank1
  5703  0384  07B1               	addwf	_intBlinkCounter^(0+128),f
  5704  0385  1803               	skipnc
  5705  0386  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5706  0387  3000               	movlw	0
  5707  0388  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5708                           
  5709                           ;Main Card V10.0.c: 955: if(PORTCbits.RC1 == 0){
  5710  0389  1283               	bcf	3,5	;RP0=0, select bank0
  5711  038A  1303               	bcf	3,6	;RP1=0, select bank0
  5712  038B  1887               	btfsc	7,1	;volatile
  5713  038C  2B9E               	goto	i1l366
  5714                           
  5715                           ;Main Card V10.0.c: 957: if(OperationMode() >= 6){
  5716  038D  120A  158A  2350  120A  118A  	fcall	i1_OperationMode
  5717  0392  00F5               	movwf	??_tc_int
  5718  0393  3006               	movlw	6
  5719  0394  0275               	subwf	??_tc_int,w
  5720  0395  1C03               	skipc
  5721  0396  2B9A               	goto	i1l367
  5722                           
  5723                           ;Main Card V10.0.c: 958: PORTCbits.RC2 = 1;
  5724  0397  1283               	bcf	3,5	;RP0=0, select bank0
  5725  0398  1303               	bcf	3,6	;RP1=0, select bank0
  5726  0399  1507               	bsf	7,2	;volatile
  5727  039A                     i1l367:	
  5728                           
  5729                           ;Main Card V10.0.c: 959: }
  5730                           ;Main Card V10.0.c: 960: PORTCbits.RC1 = 1;
  5731  039A  1283               	bcf	3,5	;RP0=0, select bank0
  5732  039B  1303               	bcf	3,6	;RP1=0, select bank0
  5733  039C  1487               	bsf	7,1	;volatile
  5734                           
  5735                           ;Main Card V10.0.c: 961: }
  5736  039D  2BD0               	goto	i1l2499
  5737  039E                     i1l366:	
  5738                           
  5739                           ;Main Card V10.0.c: 962: else if(PORTCbits.RC1 == 1){
  5740  039E  1C87               	btfss	7,1	;volatile
  5741  039F  2BD0               	goto	i1l2499
  5742                           
  5743                           ;Main Card V10.0.c: 964: if(OperationMode() >= 6){
  5744  03A0  120A  158A  2350  120A  118A  	fcall	i1_OperationMode
  5745  03A5  00F5               	movwf	??_tc_int
  5746  03A6  3006               	movlw	6
  5747  03A7  0275               	subwf	??_tc_int,w
  5748  03A8  1C03               	skipc
  5749  03A9  2BAD               	goto	i1l370
  5750                           
  5751                           ;Main Card V10.0.c: 965: PORTCbits.RC2 = 1;
  5752  03AA  1283               	bcf	3,5	;RP0=0, select bank0
  5753  03AB  1303               	bcf	3,6	;RP1=0, select bank0
  5754  03AC  1507               	bsf	7,2	;volatile
  5755  03AD                     i1l370:	
  5756                           
  5757                           ;Main Card V10.0.c: 966: }
  5758                           ;Main Card V10.0.c: 967: PORTCbits.RC1 = 0;
  5759  03AD  1283               	bcf	3,5	;RP0=0, select bank0
  5760  03AE  1303               	bcf	3,6	;RP1=0, select bank0
  5761  03AF  2BCF               	goto	i1l2497
  5762  03B0                     i1l2491:	
  5763                           ;Main Card V10.0.c: 968: }
  5764                           ;Main Card V10.0.c: 969: }
  5765                           
  5766                           
  5767                           ;Main Card V10.0.c: 971: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5768  03B0  1283               	bcf	3,5	;RP0=0, select bank0
  5769  03B1  1303               	bcf	3,6	;RP1=0, select bank0
  5770  03B2  0368               	decf	_intBlinkCycle,w
  5771  03B3  0469               	iorwf	_intBlinkCycle+1,w
  5772  03B4  1D03               	btfss	3,2
  5773  03B5  2BD0               	goto	i1l2499
  5774  03B6  1683               	bsf	3,5	;RP0=1, select bank1
  5775  03B7  1303               	bcf	3,6	;RP1=0, select bank1
  5776  03B8  085B               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5777  03B9  00F6               	movwf	??_tc_int+1
  5778  03BA  085A               	movf	_intNumberOfBlinks^(0+128),w
  5779  03BB  00F5               	movwf	??_tc_int
  5780  03BC  1003               	clrc
  5781  03BD  0DF5               	rlf	??_tc_int,f
  5782  03BE  0DF6               	rlf	??_tc_int+1,f
  5783  03BF  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5784  03C0  3A80               	xorlw	128
  5785  03C1  00F7               	movwf	??_tc_int+2
  5786  03C2  0876               	movf	??_tc_int+1,w
  5787  03C3  3A80               	xorlw	128
  5788  03C4  0277               	subwf	??_tc_int+2,w
  5789  03C5  1D03               	skipz
  5790  03C6  2BC9               	goto	u231_25
  5791  03C7  0875               	movf	??_tc_int,w
  5792  03C8  0231               	subwf	_intBlinkCounter^(0+128),w
  5793  03C9                     u231_25:	
  5794  03C9  1C03               	skipc
  5795  03CA  2BD0               	goto	i1l2499
  5796                           
  5797                           ;Main Card V10.0.c: 972: intBlinkCycle = 0;
  5798  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  5799  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  5800  03CD  01E8               	clrf	_intBlinkCycle
  5801  03CE  01E9               	clrf	_intBlinkCycle+1
  5802  03CF                     i1l2497:	
  5803                           
  5804                           ;Main Card V10.0.c: 973: PORTCbits.RC1 = 0;
  5805  03CF  1087               	bcf	7,1	;volatile
  5806  03D0                     i1l2499:	
  5807                           
  5808                           ;Main Card V10.0.c: 974: }
  5809                           ;Main Card V10.0.c: 977: intHalfSecondCounter++;
  5810  03D0  3001               	movlw	1
  5811  03D1  1683               	bsf	3,5	;RP0=1, select bank1
  5812  03D2  1303               	bcf	3,6	;RP1=0, select bank1
  5813  03D3  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5814  03D4  1803               	skipnc
  5815  03D5  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5816  03D6  3000               	movlw	0
  5817  03D7  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5818                           
  5819                           ;Main Card V10.0.c: 978: if(intHalfSecondCounter>=2)
  5820  03D8  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5821  03D9  3A80               	xorlw	128
  5822  03DA  00FF               	movwf	127
  5823  03DB  3080               	movlw	128
  5824  03DC  027F               	subwf	127,w
  5825  03DD  1D03               	skipz
  5826  03DE  2BE1               	goto	u232_25
  5827  03DF  3002               	movlw	2
  5828  03E0  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5829  03E1                     u232_25:	
  5830  03E1  1C03               	skipc
  5831  03E2  2BF4               	goto	i1l2509
  5832                           
  5833                           ;Main Card V10.0.c: 979: {
  5834                           ;Main Card V10.0.c: 980: intHalfSecondCounter = 0;
  5835  03E3  1683               	bsf	3,5	;RP0=1, select bank1
  5836  03E4  1303               	bcf	3,6	;RP1=0, select bank1
  5837  03E5  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5838  03E6  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5839                           
  5840                           ;Main Card V10.0.c: 981: intSecondCounter++;
  5841  03E7  3001               	movlw	1
  5842  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  5843  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  5844  03EA  07EA               	addwf	_intSecondCounter,f
  5845  03EB  1803               	skipnc
  5846  03EC  0AEB               	incf	_intSecondCounter+1,f
  5847  03ED  3000               	movlw	0
  5848  03EE  07EB               	addwf	_intSecondCounter+1,f
  5849                           
  5850                           ;Main Card V10.0.c: 982: TimerCounter();
  5851  03EF  120A  158A  2561  120A  118A  	fcall	_TimerCounter
  5852  03F4                     i1l2509:	
  5853                           
  5854                           ;Main Card V10.0.c: 983: }
  5855                           ;Main Card V10.0.c: 984: if(intSecondCounter >=60)
  5856  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  5857  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  5858  03F6  086B               	movf	_intSecondCounter+1,w
  5859  03F7  3A80               	xorlw	128
  5860  03F8  00FF               	movwf	127
  5861  03F9  3080               	movlw	128
  5862  03FA  027F               	subwf	127,w
  5863  03FB  1D03               	skipz
  5864  03FC  2BFF               	goto	u233_25
  5865  03FD  303C               	movlw	60
  5866  03FE  026A               	subwf	_intSecondCounter,w
  5867  03FF                     u233_25:	
  5868  03FF  1C03               	skipc
  5869  0400  2C0D               	goto	i1l2515
  5870                           
  5871                           ;Main Card V10.0.c: 985: {
  5872                           ;Main Card V10.0.c: 986: intSecondCounter = 0;
  5873  0401  1283               	bcf	3,5	;RP0=0, select bank0
  5874  0402  1303               	bcf	3,6	;RP1=0, select bank0
  5875  0403  01EA               	clrf	_intSecondCounter
  5876  0404  01EB               	clrf	_intSecondCounter+1
  5877                           
  5878                           ;Main Card V10.0.c: 987: intMinuteCounter++;
  5879  0405  3001               	movlw	1
  5880  0406  1683               	bsf	3,5	;RP0=1, select bank1
  5881  0407  1303               	bcf	3,6	;RP1=0, select bank1
  5882  0408  07B7               	addwf	_intMinuteCounter^(0+128),f
  5883  0409  1803               	skipnc
  5884  040A  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5885  040B  3000               	movlw	0
  5886  040C  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5887  040D                     i1l2515:	
  5888                           
  5889                           ;Main Card V10.0.c: 988: }
  5890                           ;Main Card V10.0.c: 989: if(intMinuteCounter >= 60)
  5891  040D  1683               	bsf	3,5	;RP0=1, select bank1
  5892  040E  1303               	bcf	3,6	;RP1=0, select bank1
  5893  040F  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5894  0410  3A80               	xorlw	128
  5895  0411  00FF               	movwf	127
  5896  0412  3080               	movlw	128
  5897  0413  027F               	subwf	127,w
  5898  0414  1D03               	skipz
  5899  0415  2C18               	goto	u234_25
  5900  0416  303C               	movlw	60
  5901  0417  0237               	subwf	_intMinuteCounter^(0+128),w
  5902  0418                     u234_25:	
  5903  0418  1C03               	skipc
  5904  0419  2C1E               	goto	i1l2519
  5905                           
  5906                           ;Main Card V10.0.c: 990: {
  5907                           ;Main Card V10.0.c: 991: intMinuteCounter = 0;
  5908  041A  1683               	bsf	3,5	;RP0=1, select bank1
  5909  041B  1303               	bcf	3,6	;RP1=0, select bank1
  5910  041C  01B7               	clrf	_intMinuteCounter^(0+128)
  5911  041D  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5912  041E                     i1l2519:	
  5913                           
  5914                           ;Main Card V10.0.c: 992: }
  5915                           ;Main Card V10.0.c: 995: TMR1ON = 1;
  5916  041E  1283               	bcf	3,5	;RP0=0, select bank0
  5917  041F  1303               	bcf	3,6	;RP1=0, select bank0
  5918  0420  1410               	bsf	16,0	;volatile
  5919                           
  5920                           ;Main Card V10.0.c: 996: }
  5921                           ;Main Card V10.0.c: 997: TMR1IF = 0;
  5922  0421  100C               	bcf	12,0	;volatile
  5923  0422                     L3:	
  5924                           
  5925                           ;Main Card V10.0.c: 998: RBIF = 0;
  5926  0422  100B               	bcf	11,0	;volatile
  5927                           
  5928                           ;Main Card V10.0.c: 999: GIE = 1;
  5929  0423  178B               	bsf	11,7	;volatile
  5930                           
  5931                           ;Main Card V10.0.c: 1000: return;
  5932  0424  087B               	movf	??_tc_int+6,w
  5933  0425  00FF               	movwf	127
  5934  0426  087A               	movf	??_tc_int+5,w
  5935  0427  008A               	movwf	10
  5936  0428  0879               	movf	??_tc_int+4,w
  5937  0429  0084               	movwf	4
  5938  042A  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5939  042B  0083               	movwf	3
  5940  042C  0EFE               	swapf	126,f
  5941  042D  0E7E               	swapf	126,w
  5942  042E  0009               	retfie
  5943  042F                     __end_of_tc_int:	
  5944                           
  5945                           	psect	intentry
  5946  0004                     __pintentry:	
  5947                           ;incstack = 0
  5948 ;; hardware stack exceeded
  5949                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5950                           
  5951  0004                     interrupt_function:	
  5952  007E                     saved_w	set	btemp
  5953  0004  00FE               	movwf	btemp
  5954  0005  0E03               	swapf	3,w
  5955  0006  00F8               	movwf	??_tc_int+3
  5956  0007  0804               	movf	4,w
  5957  0008  00F9               	movwf	??_tc_int+4
  5958  0009  080A               	movf	10,w
  5959  000A  00FA               	movwf	??_tc_int+5
  5960  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5961  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5962  000D  087F               	movf	btemp+1,w
  5963  000E  00FB               	movwf	??_tc_int+6
  5964  000F  120A  118A  2B3F   	ljmp	_tc_int
  5965                           
  5966                           	psect	text38
  5967  0B50                     __ptext38:	
  5968 ;; *************** function i1_OperationMode *****************
  5969 ;; Defined at:
  5970 ;;		line 1080 in file "../Main Card V10.0.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;		None
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  OperationMod    1    1[COMMON] unsigned char 
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  1    wreg      unsigned char 
  5977 ;; Registers used:
  5978 ;;		wreg, status,2
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5984 ;;      Params:         0       0       0       0       0
  5985 ;;      Locals:         1       0       0       0       0
  5986 ;;      Temps:          1       0       0       0       0
  5987 ;;      Totals:         2       0       0       0       0
  5988 ;;Total ram usage:        2 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; This function calls:
  5991 ;;		Nothing
  5992 ;; This function is called by:
  5993 ;;		_tc_int
  5994 ;; This function uses a non-reentrant model
  5995 ;;
  5996                           
  5997                           
  5998                           ;psect for function i1_OperationMode
  5999  0B50                     i1_OperationMode:	
  6000                           
  6001                           ;Main Card V10.0.c: 1082: unsigned char bracketStatus;
  6002                           ;Main Card V10.0.c: 1083: bracketStatus = ((~PORTB) & 0b00000111) ;
  6003                           
  6004                           ;incstack = 0
  6005 ;; hardware stack exceeded
  6006                           ; Regs used in i1_OperationMode: [wreg+status,2]
  6007  0B50  1283               	bcf	3,5	;RP0=0, select bank0
  6008  0B51  1303               	bcf	3,6	;RP1=0, select bank0
  6009  0B52  0906               	comf	6,w	;volatile
  6010  0B53  3907               	andlw	7
  6011  0B54  00F0               	movwf	??i1_OperationMode
  6012  0B55  0870               	movf	??i1_OperationMode,w
  6013  0B56  00F1               	movwf	i1OperationMode@bracketStatus
  6014                           
  6015                           ;Main Card V10.0.c: 1085: return bracketStatus;
  6016  0B57  0871               	movf	i1OperationMode@bracketStatus,w
  6017  0B58  0008               	return
  6018  0B59                     __end_ofi1_OperationMode:	
  6019                           
  6020                           	psect	text39
  6021  0D61                     __ptext39:	
  6022 ;; *************** function _TimerCounter *****************
  6023 ;; Defined at:
  6024 ;;		line 545 in file "../Main Card V10.0.c"
  6025 ;; Parameters:    Size  Location     Type
  6026 ;;		None
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  i               2    3[COMMON] int 
  6029 ;; Return value:  Size  Location     Type
  6030 ;;                  1    wreg      void 
  6031 ;; Registers used:
  6032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  6033 ;; Tracked objects:
  6034 ;;		On entry : 0/0
  6035 ;;		On exit  : 0/0
  6036 ;;		Unchanged: 0/0
  6037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6038 ;;      Params:         0       0       0       0       0
  6039 ;;      Locals:         2       0       0       0       0
  6040 ;;      Temps:          3       0       0       0       0
  6041 ;;      Totals:         5       0       0       0       0
  6042 ;;Total ram usage:        5 bytes
  6043 ;; Hardware stack levels used:    1
  6044 ;; This function calls:
  6045 ;;		Nothing
  6046 ;; This function is called by:
  6047 ;;		_tc_int
  6048 ;; This function uses a non-reentrant model
  6049 ;;
  6050                           
  6051                           
  6052                           ;psect for function _TimerCounter
  6053  0D61                     _TimerCounter:	
  6054                           
  6055                           ;Main Card V10.0.c: 547: for (int i = 0; i < 5; i++)
  6056                           
  6057                           ;incstack = 0
  6058 ;; hardware stack exceeded
  6059                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  6060  0D61  01F3               	clrf	TimerCounter@i
  6061  0D62  01F4               	clrf	TimerCounter@i+1
  6062  0D63                     L4:	
  6063  0D63  0874               	movf	TimerCounter@i+1,w
  6064  0D64  3A80               	xorlw	128
  6065  0D65  00FF               	movwf	127
  6066  0D66  3080               	movlw	128
  6067  0D67  027F               	subwf	127,w
  6068  0D68  1D03               	skipz
  6069  0D69  2D6C               	goto	u206_25
  6070  0D6A  3005               	movlw	5
  6071  0D6B  0273               	subwf	TimerCounter@i,w
  6072  0D6C                     u206_25:	
  6073  0D6C  1803               	btfsc	3,0
  6074  0D6D  0008               	return
  6075                           
  6076                           ;Main Card V10.0.c: 548: {
  6077                           ;Main Card V10.0.c: 549: if(intClockTimer[i]>0)
  6078  0D6E  0873               	movf	TimerCounter@i,w
  6079  0D6F  00F0               	movwf	??_TimerCounter
  6080  0D70  0770               	addwf	??_TimerCounter,w
  6081  0D71  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6082  0D72  0084               	movwf	4
  6083  0D73  1383               	bcf	3,7	;select IRP bank1
  6084  0D74  0800               	movf	0,w
  6085  0D75  00F1               	movwf	??_TimerCounter+1
  6086  0D76  0A84               	incf	4,f
  6087  0D77  0800               	movf	0,w
  6088  0D78  00F2               	movwf	??_TimerCounter+2
  6089  0D79  0872               	movf	??_TimerCounter+2,w
  6090  0D7A  3A80               	xorlw	128
  6091  0D7B  00FF               	movwf	127
  6092  0D7C  3080               	movlw	128
  6093  0D7D  027F               	subwf	127,w
  6094  0D7E  1D03               	skipz
  6095  0D7F  2D82               	goto	u207_25
  6096  0D80  3001               	movlw	1
  6097  0D81  0271               	subwf	??_TimerCounter+1,w
  6098  0D82                     u207_25:	
  6099  0D82  1C03               	skipc
  6100  0D83  2D96               	goto	i1l2405
  6101                           
  6102                           ;Main Card V10.0.c: 550: intClockTimer[i]--;
  6103  0D84  0873               	movf	TimerCounter@i,w
  6104  0D85  00F0               	movwf	??_TimerCounter
  6105  0D86  0770               	addwf	??_TimerCounter,w
  6106  0D87  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  6107  0D88  0084               	movwf	4
  6108  0D89  30FF               	movlw	255
  6109  0D8A  1383               	bcf	3,7	;select IRP bank1
  6110  0D8B  0780               	addwf	0,f
  6111  0D8C  0F84               	incfsz	4,f
  6112  0D8D  0800               	movf	0,w
  6113  0D8E  1803               	skipnc
  6114  0D8F  0A00               	incf	0,w
  6115  0D90  00FF               	movwf	127
  6116  0D91  30FF               	movlw	255
  6117  0D92  077F               	addwf	127,w
  6118  0D93  0080               	movwf	0
  6119  0D94  0384               	decf	4,f
  6120  0D95  2D9C               	goto	i1l2407
  6121  0D96                     i1l2405:	
  6122                           
  6123                           ;Main Card V10.0.c: 551: else
  6124                           ;Main Card V10.0.c: 552: bTimerComplete[i] = 1;
  6125  0D96  0873               	movf	TimerCounter@i,w
  6126  0D97  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  6127  0D98  0084               	movwf	4
  6128  0D99  1383               	bcf	3,7	;select IRP bank1
  6129  0D9A  0180               	clrf	0
  6130  0D9B  0A80               	incf	0,f
  6131  0D9C                     i1l2407:	
  6132  0D9C  3001               	movlw	1
  6133  0D9D  07F3               	addwf	TimerCounter@i,f
  6134  0D9E  1803               	skipnc
  6135  0D9F  0AF4               	incf	TimerCounter@i+1,f
  6136  0DA0  3000               	movlw	0
  6137  0DA1  07F4               	addwf	TimerCounter@i+1,f
  6138  0DA2  2D63               	goto	L4
  6139  0DA3                     __end_of_TimerCounter:	
  6140  007E                     btemp	set	126	;btemp
  6141  007E                     wtemp0	set	126


Data Sizes:
    Strings     136
    Constant    39
    Data        5
    BSS         105
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      60
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_19(CODE[6]), STR_18(CODE[5]), STR_17(CODE[8]), STR_14(CODE[7]), 
		 -> STR_11(CODE[9]), STR_10(CODE[7]), STR_9(CODE[8]), STR_8(CODE[7]), 
		 -> STR_7(CODE[7]), STR_6(CODE[10]), STR_5(CODE[10]), STR_3(CODE[8]), 
		 -> STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_21(CODE[8]), STR_20(CODE[8]), TransmittedDataHandler@slask_718(BANK0[8]), TransmittedDataHandler@slask_715(BANK0[8]), 
		 -> STR_16(CODE[4]), STR_15(CODE[4]), STR_13(CODE[14]), STR_12(CODE[14]), 
		 -> TransmittedDataHandler@slask_706(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), STR_4(CODE[10]), STR_2(CODE[10]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _TransiverToReceive->_FindChannel
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   87389
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_3
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   18618
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15453
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1993
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0    9911
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     668
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   22133
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   22133
            _LightWithSensController
                 _TransiverToReceive
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10852
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_3                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     626
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1332
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1332
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     626
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     580
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     558
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_3
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransiverToReceive
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      3C       7       75.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      C2      12        0.0%
ABS                  0      0      C2       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Thu May 11 19:29:11 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006D                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l311 0B78                               l232 01E5  
                             l305 0C4D                               l405 0C95                               l335 0FFC  
                             l175 06D6                               l264 07FE                               l248 05D2  
                             l259 0BDD                               l427 0D34                               l284 0E7A  
                             l517 0C78                               l379 0CD5                               l299 0E99  
                             l921 0DA6                               l909 05EE                               _GIE 005F  
           __end_of_DarknessCheck 0D05                               fsr0 0004                               indf 0000  
             __end_of_FindChannel 033F    __end_of_TransmittedDataHandler 023D                   ??_timerFunction 0024  
                    __CFG_LVP$OFF 0000                              l2003 0CE9                              l2013 0759  
                            l2007 0D02                              l2031 0778                              l2015 0752  
                            l2009 0D03                              l2041 07BB                              l2033 077C  
                            l2025 0772                              l2017 075E                              l2105 007F  
                            l2035 07AA                              l2131 00EE                              l2123 00CC  
                            l2115 00AA                              l2205 0E3A                              l2215 0E57  
                            l2233 07C6                              l2313 0514                              l2153 015C  
                            l2323 0BD2                              l2147 013A                              l2139 0114  
                            l2077 0F06                              l2079 0F19                              l2183 01E8  
                            l2175 01C5                              l2167 019F                              l2159 017E  
                            l2353 0C0F                              l2361 0C29                              l2177 01CF  
                            l2169 01A9                              l2441 071E                              l2433 0704  
                            l2425 06EA                              l1811 0263                              l2189 020A  
                            l2381 0F60                              l2453 0742                              l2445 072B  
                            l2437 0711                              l2429 06F7                              l1831 032A  
                            l1911 0DE4                              l1921 05F7                              l1905 0DC5  
                            l2385 0F74                              l2449 0738                              l1827 0319  
                            l1835 033D                              l1781 0FAE                              l1829 02F1  
                            l1909 0DDB                              l1941 0E09                              l2389 0F7D  
                            l1783 0FBD                              l1791 0FE9                              l1935 0DEB  
                            l1943 0E22                              l1785 0FCC                              l1865 0C70  
                            l1787 0FDB                              l1779 0FA1                              l1947 0E2B  
                            l1885 0B98                              l1893 0D0C                              l1991 05D5  
                            l1967 0554                              l1895 0D1B                              l1985 058C  
                            l1969 0567                              l1987 05CD       __size_of_TransiverToReceive 005C  
                            STR_1 0678                              STR_2 0653                              STR_3 0680  
                            STR_4 065D                              STR_5 0653                              STR_6 065D  
                            STR_7 06A5                              STR_8 0697                              STR_9 0688  
                            u1205 0261                              u1225 02FC                              u2025 0F50  
                            u1251 0C93                              u1235 033B                              u1195 0C57  
                            u1275 0C79                              u1285 0C80                              u2407 05E6  
                            u2417 0EEA                              u2427 0F23                              u2437 024E  
                            u2357 06DE                              u2447 0325                              u2367 0F83  
                            u2457 0C5F                              u2377 0538                              u2387 0571  
                            u2397 05D9                              u1895 07D0                              _RBIF 0058  
                            _WREN 0C62                    ??_eeprom_write 0021                              _atoi 074F  
                            _main 06BF                              _init 0E7C                              btemp 007E  
                            start 0012                     __CFG_IESO$OFF 0000                   __end_of_DelayDs 0C6C  
                TransmittString@i 003A  __size_of_LightWithSensController 004F                   __end_of_ReadSPI 0B48  
                           ?_atoi 0026                             ?_main 0070                             ?_init 0070  
                           _EEADR 010D                             STR_10 069E                             STR_11 0667  
                           STR_20 0678                             STR_12 0645                             STR_21 0680  
                           STR_13 0637                             STR_14 0690                             STR_15 06BB  
                           STR_16 06B7                             STR_17 0670                     __CFG_WDTE$OFF 0000  
                           STR_18 06B2                             STR_19 06AC                             _CARRY 0018  
                           _ANSEL 0188             __end_of_OperationMode 0B62                             _T1CON 0010  
                           i1l361 035A                             i1l370 03AD                             i1l362 0360  
                           i1l366 039E                             i1l367 039A                             _TMR1H 000F  
                           _TMR1L 000E                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _SSPIE 0463                             _Blink 07C0  
                           _bDark 006C                    __CFG_FCMEN$OFF 0000                   __end_of_isdigit 0B9A  
                     _AnalogValue 0CB3                             atoi@a 002B                             atoi@s 002D  
                  __CFG_BOREN$OFF 0000                             pclath 000A                   ??_TransiverInit 0035  
                           status 0003                     _intBlinkCycle 0068                             wtemp0 007E  
                  WriteSPI@buffer 0021                  __end_of_ChannelP 061D                  __end_of_ChannelR 062A  
                __end_of_ChannelS 0637                   __end_of_strncmp 0DE7                    __CFG_MCLRE$OFF 0000  
                   _intClockTimer 00A0                 _intNumberOfBlinks 00DA                   __initialization 0015  
                    __end_of_atoi 07C0                      __end_of_main 074F                      __end_of_init 0ECF  
                __end_of_ReadFIFO 0B8A                     ReadFIFO@value 0024                       _FindChannel 023D  
                   ??_RegisterSet 0028                            ??_atoi 0028                            ??_main 0065  
                          ??_init 0020                            ?_Blink 0026                            _ADRESH 001E  
                          _EEDATA 010C                            _EECON1 018C                            _EECON2 018D  
                          _ANSELH 0189                  __end_of_WriteSPI 0B7C                            i1l2405 0D96  
                          i1l2407 0D9C                            i1l2515 040D                            i1l2509 03F4  
                          i1l2519 041E                            i1l2491 03B0                            i1l2497 03CF  
                          i1l2499 03D0                            u206_25 0D6C                            u207_25 0D82  
                          u231_25 03C9                            u232_25 03E1                            u233_25 03FF  
                          u225_25 037F                            u234_25 0418                         ??_DelayDs 0022  
                          Blink@i 0029                            Blink@n 0026                            _TMR1IF 0060  
                          _TMR1ON 0080      i1OperationMode@bracketStatus 0071                            _SSPBUF 0013  
                       ??_ReadSPI 0023                            _Mode_0 0B38                            _Mode_1 0BC5  
                          _Mode_2 07F3                            _Mode_3 0BAC                            _Mode_4 0BF9  
                          _Mode_5 0C13                __size_of_SetRFMode 006F              __size_of_eeprom_read 0024  
                          ___wmul 0C6C                            _tc_int 033F              __end_of_eeprom_write 0D61  
                          _strchr 05EB                            _strlen 0D05                            _strstr 0DE7  
                       ??_isdigit 0020                            saved_w 007E               __end_of_RegisterSet 0BF9  
                   ?_RegisterRead 0070                RegisterRead@adress 0026       TransmittedDataHandler@slask 003D  
     TransmittedDataHandler@value 005D                         ??_strncmp 002B                __size_of_WriteFIFO 000C  
         __end_of__initialization 0050                   eeprom_read@addr 0021           _LightWithSensController 0E2D  
                   _bChannelFound 00B9                     __end_of_Blink 07F3                    __pcstackCOMMON 0070  
                    __pidataBANK0 0003                      __pidataBANK1 0B3C                      _channelFound 00AF  
                  _OPTION_REGbits 0081                           ??_Blink 0028                 __end_of_SetRFMode 1000  
               eeprom_write@value 0020                    ??_RegisterRead 0023                        __pbssBANK0 0068  
                      __pbssBANK1 00A0                        __pbssBANK3 0190          __size_ofi1_OperationMode 0009  
                       ?_ReadFIFO 0070        timerFunction@intSetSeconds 0022                AnalogValue@channel 0027  
                         ?_Mode_0 0070                           ?_Mode_1 0070                           ?_Mode_2 0070  
                         ?_Mode_3 0070                           ?_Mode_4 0070                           ?_Mode_5 0070  
        __size_of_TransmittString 00D2                        __pmaintext 06BF                           ?___wmul 0020  
                      __pintentry 0004                           ?_tc_int 0070                         ?_WriteSPI 0070  
               __end_of_WriteFIFO 0B6E                           ?_strchr 0020                           ?_strlen 0020  
                     _RegisterSet 0BDF                           ?_strstr 002E                     ?_TimerCounter 0070  
      __end_of_TransiverToReceive 0F2B             __end_of_timerFunction 0BAC                      ?_AnalogValue 0070  
                  _intLightOnTime 00D8                        __stringtab 0600                        ??_ReadFIFO 0023  
                         _DelayDs 0C49         ??_LightWithSensController 002A                           _ReadSPI 0B40  
          __size_of_DarknessCheck 0029                   __size_of_Mode_0 0004                   __size_of_Mode_1 001A  
                 __size_of_Mode_2 000D                   __size_of_Mode_3 0019                   __size_of_Mode_4 001A  
                 __size_of_Mode_5 001A        OperationMode@bracketStatus 0021             __size_of_eeprom_write 0030  
                 __size_of___wmul 0023                      ?_FindChannel 0070                         _ANSELbits 0188  
                      ??_WriteSPI 0020                   __size_of_tc_int 00F0                           __ptext1 0E7C  
                         __ptext2 0F2B                           __ptext3 0054                           __ptext4 0DE7  
                         __ptext5 0DA3                           __ptext6 0D05                           __ptext7 05EB  
                         __ptext8 0D31                           __ptext9 074F                           _btnPush 006E  
                 __size_of_strchr 0015                   __size_of_strlen 002C                         _T1CONbits 0010  
                 __size_of_strstr 0046                           _isdigit 0B8A                    ??_TimerCounter 0070  
                         clrloop0 0B49                           _strncmp 0DA3              end_of_initialization 0050  
                    _eeprom_write 0D31             __end_of_TransiverInit 0519            __size_of_OperationMode 0009  
               ??i1_OperationMode 0070                  WriteSPI@databyte 0022              __end_of_RegisterRead 0C49  
                   WriteFIFO@Data 0023          ??_TransmittedDataHandler 003C                           strlen@s 0026  
                 _intBlinkCounter 00B1                 ??_TransmittString 0037                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                     _DarknessCheck 0CDC  
                   ??_eeprom_read 0020                    __end_of_Mode_0 0B3C                    __end_of_Mode_1 0BDF  
                  __end_of_Mode_2 0800                    __end_of_Mode_3 0BC5                    __end_of_Mode_4 0C13  
                  __end_of_Mode_5 0C2D                    __end_of___wmul 0C8F                    __end_of_tc_int 042F  
                  ?_DarknessCheck 0070                     _OperationMode 0B59                    __end_of_strchr 0600  
                  __end_of_strlen 0D31                    __end_of_strstr 0E2D               start_initialization 0015  
           _intDarkCheckIntervall 00B3        DarknessCheck@darknessValue 0029                         _SetRFMode 0F91  
            __size_of_AnalogValue 0029                 __size_of_ReadFIFO 000E          __CFG_FOSC$INTRC_NOCLKOUT 0000  
                        ??_Mode_0 002A                          ??_Mode_1 002A                          ??_Mode_2 002A  
                        ??_Mode_3 002A                          ??_Mode_4 003C                          ??_Mode_5 003C  
            __end_of_TimerCounter 0DA3                          ??___wmul 0024               __end_of_eeprom_read 0CB3  
                   TimerCounter@i 0073                       __pdataBANK0 006F                       __pdataBANK1 00D8  
                        ??_tc_int 0075   __size_of_TransmittedDataHandler 01E9                      ?_RegisterSet 0027  
                        ??_strchr 0022                          ??_strlen 0022                          ??_strstr 002F  
                  ?_OperationMode 0070              __size_of_FindChannel 0102         TransmittString@dataString 0035  
               RegisterRead@value 0025                 __size_of_WriteSPI 000E                       __pbssCOMMON 007C  
                       ___latbits 0002                         _WriteFIFO 0B62                     __pcstackBANK0 0020  
                    _ReceivedData 0190            SetRFMode@mcparam0_read 002D                      _isdigit$1090 0020  
                      ?_SetRFMode 0070                  eeprom_write@addr 0022                          ?_DelayDs 0020  
               RegisterSet@adress 002A                          ?_ReadSPI 0070             __size_of_RegisterRead 001C  
              _TransiverToReceive 0ECF               ?_TransiverToReceive 0070                   ??_DarknessCheck 0028  
                       __pstrings 0600                          ?_isdigit 0070       timerFunction@intTimerNumber 0020  
                  __size_of_Blink 0033                        ?_WriteFIFO 0070                   i1_OperationMode 0B50  
            ??_TransiverToReceive 0035                      _RegisterRead 0C2D                          ?_strncmp 0028  
          _TransmittedDataHandler 0054                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                          DelayDs@i 0024                      FindChannel@i 0033  
                       clear_ram0 0B48                       _eeprom_read 0C8F                          _PIE1bits 008C  
                 _TransmittString 0519                          _PIR1bits 000C            __size_of_timerFunction 0012  
                 ??_OperationMode 0020                     SetRFMode@mode 002C                        _ADCON0bits 001F  
                     __stringbase 060F                        _ADCON1bits 009F                 ___wmul@multiplier 0020  
                        _WPUBbits 0095                          _ChannelP 0610                          _ChannelR 061D  
                        _ChannelS 062A          ?_LightWithSensController 0070                       ??_SetRFMode 002B  
                        _ReadFIFO 0B7C             __size_of_TimerCounter 0042                  __size_of_DelayDs 0023  
                __size_of_ReadSPI 0008                    _bTimerComplete 00AA                  _intMinuteCounter 00B7  
               _TransiverReadFIFO 0F2B                          _WriteSPI 0B6E                __end_of__stringtab 0610  
                _intSecondCounter 006A                ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0B59  
          __size_of_TransiverInit 00EA              __size_of_RegisterSet 001A                  RegisterSet@value 0027  
                     ??_WriteFIFO 0023                  __size_of_isdigit 0010                      _TimerCounter 0D61  
                        __ptext10 0B8A                          __ptext11 0C6C                          __ptext20 0ECF  
                        __ptext12 0B59                          __ptext21 023D                          __ptext13 0B7C  
                        __ptext30 0B38                          __ptext22 0F91                          __ptext14 042F  
                        __ptext31 0E2D                          __ptext23 0BDF                          __ptext15 07C0  
                        __ptext32 0B9A                          __ptext24 0C2D                          __ptext16 0C13  
                        __ptext33 0CDC                          __ptext25 0B40                          __ptext17 0BF9  
                        __ptext34 0C8F                          __ptext26 0B6E                          __ptext18 0519  
                        __ptext35 0CB3                          __ptext27 0BAC                          __ptext19 0B62  
                        __ptext36 0C49                          __ptext28 07F3                          __ptext37 033F  
                        __ptext29 0BC5                          __ptext38 0B50                          __ptext39 0D61  
             ??_TransiverReadFIFO 005F                     _timerFunction 0B9A           __end_of_TransmittString 05EB  
 TransmittedDataHandler@slask_706 0045   TransmittedDataHandler@slask_715 004D   TransmittedDataHandler@slask_718 0055  
                __size_of_strncmp 0044                     __size_of_atoi 0071                     __size_of_main 0090  
                   __size_of_init 0053                        strncmp@len 0029                     _bValueFromPot 006F  
       __end_of_TransiverReadFIFO 0F91                          atoi@sign 002A                        DelayDs@cnt 0020  
                  FindChannel@cnt 0031   __end_of_LightWithSensController 0E7C              _intHalfSecondCounter 00B5  
                      _INTCONbits 000B                TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063  
                        isdigit@c 0021                    ?_timerFunction 0020                     ??_AnalogValue 0026  
               _TransmittedString 00BA                          intlevel1 0000                         strchr@chr 0020  
                       strchr@ptr 0022                     _TransiverInit 042F                         strncmp@s1 002D  
                       strncmp@s2 0028                         stringcode 060A                        _OSCCONbits 008F  
                   ??_FindChannel 002E                  ?i1_OperationMode 0070                          strlen@cp 0027  
                        stringdir 060A                          stringtab 0600           ?_TransmittedDataHandler 0070  
                        strstr@s1 0032                          strstr@s2 002E                  ?_TransmittString 0035  
                   ?_eeprom_write 0020                    ?_TransiverInit 0070                      ?_eeprom_read 0070  
             __end_of_AnalogValue 0CDC                        _SSPCONbits 0014              _addressDarknessValue 007C  
