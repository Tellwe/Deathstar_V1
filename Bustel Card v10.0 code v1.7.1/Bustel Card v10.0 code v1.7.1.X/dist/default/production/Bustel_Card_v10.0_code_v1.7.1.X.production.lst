

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Sun Mar 26 12:51:17 2017

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	text37,local,class=CODE,merge=1,delta=2
    55                           	psect	intentry,global,class=CODE,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	psect	text39,local,class=CODE,merge=1,delta=2
    58                           	dabs	1,0x7E,2
    59  0000                     
    60                           ; Version 1.40
    61                           ; Generated 01/12/2016 GMT
    62                           ; 
    63                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC16F886 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94  0000                     	;# 
    95  0001                     	;# 
    96  0002                     	;# 
    97  0003                     	;# 
    98  0004                     	;# 
    99  0005                     	;# 
   100  0006                     	;# 
   101  0007                     	;# 
   102  0009                     	;# 
   103  000A                     	;# 
   104  000B                     	;# 
   105  000C                     	;# 
   106  000D                     	;# 
   107  000E                     	;# 
   108  000E                     	;# 
   109  000F                     	;# 
   110  0010                     	;# 
   111  0011                     	;# 
   112  0012                     	;# 
   113  0013                     	;# 
   114  0014                     	;# 
   115  0015                     	;# 
   116  0015                     	;# 
   117  0016                     	;# 
   118  0017                     	;# 
   119  0018                     	;# 
   120  0019                     	;# 
   121  001A                     	;# 
   122  001B                     	;# 
   123  001B                     	;# 
   124  001C                     	;# 
   125  001D                     	;# 
   126  001E                     	;# 
   127  001F                     	;# 
   128  0081                     	;# 
   129  0085                     	;# 
   130  0086                     	;# 
   131  0087                     	;# 
   132  0089                     	;# 
   133  008C                     	;# 
   134  008D                     	;# 
   135  008E                     	;# 
   136  008F                     	;# 
   137  0090                     	;# 
   138  0091                     	;# 
   139  0092                     	;# 
   140  0093                     	;# 
   141  0093                     	;# 
   142  0093                     	;# 
   143  0094                     	;# 
   144  0095                     	;# 
   145  0096                     	;# 
   146  0097                     	;# 
   147  0098                     	;# 
   148  0099                     	;# 
   149  009A                     	;# 
   150  009B                     	;# 
   151  009C                     	;# 
   152  009D                     	;# 
   153  009E                     	;# 
   154  009F                     	;# 
   155  0105                     	;# 
   156  0107                     	;# 
   157  0108                     	;# 
   158  0109                     	;# 
   159  010C                     	;# 
   160  010C                     	;# 
   161  010D                     	;# 
   162  010E                     	;# 
   163  010F                     	;# 
   164  0185                     	;# 
   165  0187                     	;# 
   166  0188                     	;# 
   167  0189                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170                           
   171                           	psect	idataBANK0
   172  0003                     __pidataBANK0:	
   173                           
   174                           ;initializer for _bValueFromPot
   175  0003  3401               	retlw	1
   176                           
   177                           	psect	idataBANK1
   178  0BF8                     __pidataBANK1:	
   179                           
   180                           ;initializer for _intNumberOfBlinks
   181  0BF8  3458               	retlw	88
   182  0BF9  3402               	retlw	2
   183                           
   184                           	psect	strings
   185  0600                     __pstrings:	
   186  0600                     stringtab:	
   187  0600                     __stringtab:	
   188                           
   189                           ;	String table - string pointers are 1 byte each
   190  0600  1BFF               	btfsc	btemp+1,7
   191  0601  2E0A               	ljmp	stringcode
   192  0602  1383               	bcf	3,7
   193  0603  187F               	btfsc	btemp+1,0
   194  0604  1783               	bsf	3,7
   195  0605  0800               	movf	0,w
   196  0606  0A84               	incf	4,f
   197  0607  1903               	skipnz
   198  0608  0AFF               	incf	btemp+1,f
   199  0609  0008               	return
   200  060A                     stringcode:	
   201  060A                     stringdir:	
   202  060A  3006               	movlw	high stringdir
   203  060B  008A               	movwf	10
   204  060C  0804               	movf	4,w
   205  060D  0A84               	incf	4,f
   206  060E  0782               	addwf	2,f
   207  060F                     __stringbase:	
   208  060F  3400               	retlw	0
   209  0610                     __end_of__stringtab:	
   210  0610                     _ChannelP:	
   211  0610  343F               	retlw	63
   212  0611  3447               	retlw	71
   213  0612  344F               	retlw	79
   214  0613  3457               	retlw	87
   215  0614  345F               	retlw	95
   216  0615  3477               	retlw	119
   217  0616  347E               	retlw	126
   218  0617  347F               	retlw	127
   219  0618  3486               	retlw	134
   220  0619  3487               	retlw	135
   221  061A  3437               	retlw	55
   222  061B  3467               	retlw	103
   223  061C  346F               	retlw	111
   224  061D                     __end_of_ChannelP:	
   225  061D                     _ChannelR:	
   226  061D  344F               	retlw	79
   227  061E  3459               	retlw	89
   228  061F  3463               	retlw	99
   229  0620  346D               	retlw	109
   230  0621  3477               	retlw	119
   231  0622  3495               	retlw	149
   232  0623  349F               	retlw	159
   233  0624  349F               	retlw	159
   234  0625  34A9               	retlw	169
   235  0626  34A9               	retlw	169
   236  0627  3445               	retlw	69
   237  0628  3481               	retlw	129
   238  0629  348B               	retlw	139
   239  062A                     __end_of_ChannelR:	
   240  062A                     _ChannelS:	
   241  062A  3418               	retlw	24
   242  062B  341B               	retlw	27
   243  062C  341E               	retlw	30
   244  062D  3421               	retlw	33
   245  062E  3424               	retlw	36
   246  062F  342D               	retlw	45
   247  0630  347B               	retlw	123
   248  0631  3430               	retlw	48
   249  0632  347E               	retlw	126
   250  0633  3433               	retlw	51
   251  0634  3415               	retlw	21
   252  0635  3427               	retlw	39
   253  0636  342A               	retlw	42
   254  0637                     __end_of_ChannelS:	
   255  001F                     _ADCON0bits	set	31
   256  001E                     _ADRESH	set	30
   257  000B                     _INTCONbits	set	11
   258  000C                     _PIR1bits	set	12
   259  0005                     _PORTA	set	5
   260  0005                     _PORTAbits	set	5
   261  0006                     _PORTB	set	6
   262  0006                     _PORTBbits	set	6
   263  0007                     _PORTC	set	7
   264  0007                     _PORTCbits	set	7
   265  0013                     _SSPBUF	set	19
   266  0014                     _SSPCONbits	set	20
   267  0010                     _T1CON	set	16
   268  0010                     _T1CONbits	set	16
   269  000F                     _TMR1H	set	15
   270  000E                     _TMR1L	set	14
   271  0018                     _CARRY	set	24
   272  005F                     _GIE	set	95
   273  0058                     _RBIF	set	88
   274  0060                     _TMR1IF	set	96
   275  0080                     _TMR1ON	set	128
   276  009F                     _ADCON1bits	set	159
   277  0096                     _IOCBbits	set	150
   278  0081                     _OPTION_REGbits	set	129
   279  008F                     _OSCCONbits	set	143
   280  008C                     _PIE1bits	set	140
   281  0094                     _SSPSTATbits	set	148
   282  0085                     _TRISA	set	133
   283  0086                     _TRISB	set	134
   284  0087                     _TRISC	set	135
   285  0095                     _WPUBbits	set	149
   286  0463                     _SSPIE	set	1123
   287  010D                     _EEADR	set	269
   288  010C                     _EEDATA	set	268
   289  0188                     _ANSEL	set	392
   290  0189                     _ANSELH	set	393
   291  0188                     _ANSELbits	set	392
   292  018C                     _EECON1	set	396
   293  018D                     _EECON2	set	397
   294  0C60                     _RD	set	3168
   295  0C61                     _WR	set	3169
   296  0C62                     _WREN	set	3170
   297  0637                     STR_9:	
   298  0637  344E               	retlw	78	;'N'
   299  0638  346F               	retlw	111	;'o'
   300  0639  3474               	retlw	116	;'t'
   301  063A  3420               	retlw	32	;' '
   302  063B  3444               	retlw	68	;'D'
   303  063C  3461               	retlw	97	;'a'
   304  063D  3472               	retlw	114	;'r'
   305  063E  346B               	retlw	107	;'k'
   306  063F  3420               	retlw	32	;' '
   307  0640  3420               	retlw	32	;' '
   308  0641  3420               	retlw	32	;' '
   309  0642  3420               	retlw	32	;' '
   310  0643  3420               	retlw	32	;' '
   311  0644  3400               	retlw	0
   312  0645                     STR_8:	
   313  0645  3449               	retlw	73	;'I'
   314  0646  3474               	retlw	116	;'t'
   315  0647  3427               	retlw	39	;'''
   316  0648  3473               	retlw	115	;'s'
   317  0649  3420               	retlw	32	;' '
   318  064A  3444               	retlw	68	;'D'
   319  064B  3461               	retlw	97	;'a'
   320  064C  3472               	retlw	114	;'r'
   321  064D  346B               	retlw	107	;'k'
   322  064E  3420               	retlw	32	;' '
   323  064F  3420               	retlw	32	;' '
   324  0650  3420               	retlw	32	;' '
   325  0651  3420               	retlw	32	;' '
   326  0652  3400               	retlw	0
   327  0653                     STR_7:	
   328  0653  3444               	retlw	68	;'D'
   329  0654  3441               	retlw	65	;'A'
   330  0655  3452               	retlw	82	;'R'
   331  0656  344B               	retlw	75	;'K'
   332  0657  3443               	retlw	67	;'C'
   333  0658  3441               	retlw	65	;'A'
   334  0659  344C               	retlw	76	;'L'
   335  065A  3443               	retlw	67	;'C'
   336  065B  3400               	retlw	0
   337  065C                     STR_13:	
   338  065C  3443               	retlw	67	;'C'
   339  065D  3448               	retlw	72	;'H'
   340  065E  3453               	retlw	83	;'S'
   341  065F  3454               	retlw	84	;'T'
   342  0660  3441               	retlw	65	;'A'
   343  0661  3454               	retlw	84	;'T'
   344  0662  3445               	retlw	69	;'E'
   345  0663  3400               	retlw	0
   346  0664                     STR_1:	
   347  0664  344E               	retlw	78	;'N'
   348  0665  3431               	retlw	49	;'1'
   349  0666  3442               	retlw	66	;'B'
   350  0667  344C               	retlw	76	;'L'
   351  0668  3449               	retlw	73	;'I'
   352  0669  344E               	retlw	78	;'N'
   353  066A  344B               	retlw	75	;'K'
   354  066B  3400               	retlw	0
   355  066C                     STR_2:	
   356  066C  344E               	retlw	78	;'N'
   357  066D  3432               	retlw	50	;'2'
   358  066E  3442               	retlw	66	;'B'
   359  066F  344C               	retlw	76	;'L'
   360  0670  3449               	retlw	73	;'I'
   361  0671  344E               	retlw	78	;'N'
   362  0672  344B               	retlw	75	;'K'
   363  0673  3400               	retlw	0
   364  0674                     STR_5:	
   365  0674  3453               	retlw	83	;'S'
   366  0675  3445               	retlw	69	;'E'
   367  0676  344E               	retlw	78	;'N'
   368  0677  3453               	retlw	83	;'S'
   369  0678  3456               	retlw	86	;'V'
   370  0679  3441               	retlw	65	;'A'
   371  067A  344C               	retlw	76	;'L'
   372  067B  3400               	retlw	0
   373  067C                     STR_10:	
   374  067C  3453               	retlw	83	;'S'
   375  067D  3454               	retlw	84	;'T'
   376  067E  3441               	retlw	65	;'A'
   377  067F  3454               	retlw	84	;'T'
   378  0680  3445               	retlw	69	;'E'
   379  0681  343F               	retlw	63	;'?'
   380  0682  3400               	retlw	0
   381  0683                     STR_4:	
   382  0683  3446               	retlw	70	;'F'
   383  0684  344C               	retlw	76	;'L'
   384  0685  3441               	retlw	65	;'A'
   385  0686  3453               	retlw	83	;'S'
   386  0687  3448               	retlw	72	;'H'
   387  0688  3442               	retlw	66	;'B'
   388  0689  3400               	retlw	0
   389  068A                     STR_6:	
   390  068A  3450               	retlw	80	;'P'
   391  068B  344F               	retlw	79	;'O'
   392  068C  3454               	retlw	84	;'T'
   393  068D  3456               	retlw	86	;'V'
   394  068E  3441               	retlw	65	;'A'
   395  068F  344C               	retlw	76	;'L'
   396  0690  3400               	retlw	0
   397  0691                     STR_3:	
   398  0691  3446               	retlw	70	;'F'
   399  0692  344C               	retlw	76	;'L'
   400  0693  3441               	retlw	65	;'A'
   401  0694  3453               	retlw	83	;'S'
   402  0695  3448               	retlw	72	;'H'
   403  0696  344C               	retlw	76	;'L'
   404  0697  3400               	retlw	0
   405  0698                     STR_15:	
   406  0698  3453               	retlw	83	;'S'
   407  0699  3445               	retlw	69	;'E'
   408  069A  3454               	retlw	84	;'T'
   409  069B  3444               	retlw	68	;'D'
   410  069C  3456               	retlw	86	;'V'
   411  069D  3400               	retlw	0
   412  069E                     STR_14:	
   413  069E  3452               	retlw	82	;'R'
   414  069F  344D               	retlw	77	;'M'
   415  06A0  3444               	retlw	68	;'D'
   416  06A1  3456               	retlw	86	;'V'
   417  06A2  3400               	retlw	0
   418  06A3                     STR_12:	
   419  06A3  3450               	retlw	80	;'P'
   420  06A4  3449               	retlw	73	;'I'
   421  06A5  3443               	retlw	67	;'C'
   422  06A6  3400               	retlw	0
   423  06A7                     STR_11:	
   424  06A7  3450               	retlw	80	;'P'
   425  06A8  346F               	retlw	111	;'o'
   426  06A9  3474               	retlw	116	;'t'
   427  06AA  3400               	retlw	0
   428  0664                     
   429                           ; #config settings
   430  0000                     
   431                           	psect	cinit
   432  0015                     start_initialization:	
   433  0015                     __initialization:	
   434                           
   435                           ; Initialize objects allocated to BANK1
   436  0015  1683               	bsf	3,5	;RP0=1, select bank1
   437  0016  1303               	bcf	3,6	;RP1=0, select bank1
   438  0017  120A  158A  23F8  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   439  001C  00D7               	movwf	__pdataBANK1& (0+127)
   440  001D  120A  158A  23F9  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   441  0022  00D8               	movwf	(__pdataBANK1+1)& (0+127)
   442                           
   443                           ; Initialize objects allocated to BANK0
   444  0023  1283               	bcf	3,5	;RP0=0, select bank0
   445  0024  1303               	bcf	3,6	;RP1=0, select bank0
   446  0025  120A  118A  2003  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   447  002A  00EF               	movwf	__pdataBANK0& (0+127)
   448                           
   449                           ; Clear objects allocated to BANK3
   450  002B  1783               	bsf	3,7	;select IRP bank2
   451  002C  3090               	movlw	low __pbssBANK3
   452  002D  0084               	movwf	4
   453  002E  30B8               	movlw	low (__pbssBANK3+40)
   454  002F  120A  158A  2406  120A  118A  	fcall	clear_ram0
   455                           
   456                           ; Clear objects allocated to BANK1
   457  0034  1383               	bcf	3,7	;select IRP bank0
   458  0035  30A0               	movlw	low __pbssBANK1
   459  0036  0084               	movwf	4
   460  0037  30D7               	movlw	low (__pbssBANK1+55)
   461  0038  120A  158A  2406   	fcall	clear_ram0
   462                           
   463                           ; Clear objects allocated to BANK0
   464  003B  01E8               	clrf	__pbssBANK0& (0+127)
   465  003C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   466  003D  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   467  003E  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   468  003F  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   469  0040  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   470  0041  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   471                           
   472                           ; Clear objects allocated to COMMON
   473  0042  01FC               	clrf	__pbssCOMMON& (0+127)
   474  0043  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   475  0044                     end_of_initialization:	
   476                           ;End of C runtime variable initialization code
   477                           
   478  0044                     __end_of__initialization:	
   479  0044  0183               	clrf	3
   480  0045  120A  118A  2EAB   	ljmp	_main	;jump to C main() function
   481                           
   482                           	psect	bssCOMMON
   483  007C                     __pbssCOMMON:	
   484  007C                     _addressDarknessValue:	
   485  007C                     	ds	2
   486                           
   487                           	psect	bssBANK0
   488  0068                     __pbssBANK0:	
   489  0068                     _intBlinkCycle:	
   490  0068                     	ds	2
   491  006A                     _intSecondCounter:	
   492  006A                     	ds	2
   493  006C                     _bChannelFound:	
   494  006C                     	ds	1
   495  006D                     _bDark:	
   496  006D                     	ds	1
   497  006E                     _bTransiverModeReceive:	
   498  006E                     	ds	1
   499                           
   500                           	psect	dataBANK0
   501  006F                     __pdataBANK0:	
   502  006F                     _bValueFromPot:	
   503  006F                     	ds	1
   504                           
   505                           	psect	bssBANK1
   506  00A0                     __pbssBANK1:	
   507  00A0                     _intClockTimer:	
   508  00A0                     	ds	10
   509  00AA                     _bTimerComplete:	
   510  00AA                     	ds	5
   511  00AF                     _channelFound:	
   512  00AF                     	ds	2
   513  00B1                     _intBlinkCounter:	
   514  00B1                     	ds	2
   515  00B3                     _intDarkCheckIntervall:	
   516  00B3                     	ds	2
   517  00B5                     _intHalfSecondCounter:	
   518  00B5                     	ds	2
   519  00B7                     _intMinuteCounter:	
   520  00B7                     	ds	2
   521  00B9                     _TransmittedString:	
   522  00B9                     	ds	30
   523                           
   524                           	psect	dataBANK1
   525  00D7                     __pdataBANK1:	
   526  00D7                     _intNumberOfBlinks:	
   527  00D7                     	ds	2
   528                           
   529                           	psect	bssBANK3
   530  0190                     __pbssBANK3:	
   531  0190                     _ReceivedData:	
   532  0190                     	ds	40
   533                           
   534                           	psect	clrtext
   535  0C06                     clear_ram0:	
   536                           ;	Called with FSR containing the base address, and
   537                           ;	W with the last address+1
   538                           
   539  0C06  0064               	clrwdt	;clear the watchdog before getting into this loop
   540  0C07                     clrloop0:	
   541  0C07  0180               	clrf	0	;clear RAM location pointed to by FSR
   542  0C08  0A84               	incf	4,f	;increment pointer
   543  0C09  0604               	xorwf	4,w	;XOR with final address
   544  0C0A  1903               	btfsc	3,2	;have we reached the end yet?
   545  0C0B  3400               	retlw	0	;all done for this memory range, return
   546  0C0C  0604               	xorwf	4,w	;XOR again to restore value
   547  0C0D  2C07               	goto	clrloop0	;do the next byte
   548                           
   549                           	psect	cstackCOMMON
   550  0070                     __pcstackCOMMON:	
   551  0070                     ?_isdigit:	
   552  0070                     ?_init:	
   553                           ; 1 bit 
   554                           
   555  0070                     ?_TransiverInit:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_OperationMode:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_Mode_0:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Mode_1:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_Mode_2:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_Mode_3:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_Mode_4:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_Mode_5:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_TransiverToReceive:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ?_TransiverReadFIFO:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_SetRFMode:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_RegisterRead:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_FindChannel:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?_ReadFIFO:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ?_TransmittedDataHandler:	
   598                           ; 1 bytes @ 0x0
   599                           
   600  0070                     ?_AnalogValue:	
   601                           ; 1 bytes @ 0x0
   602                           
   603  0070                     ?_DarknessCheck:	
   604                           ; 1 bytes @ 0x0
   605                           
   606  0070                     ?_eeprom_read:	
   607                           ; 1 bytes @ 0x0
   608                           
   609  0070                     ?_WriteFIFO:	
   610                           ; 1 bytes @ 0x0
   611                           
   612  0070                     ?_LightWithSensController:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0070                     ?_main:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0070                     ?_TimerCounter:	
   619                           ; 1 bytes @ 0x0
   620                           
   621  0070                     ??_TimerCounter:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_WriteSPI:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_ReadSPI:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_tc_int:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?i1_OperationMode:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ??i1_OperationMode:	
   637                           ; 1 bytes @ 0x0
   638                           
   639                           
   640                           ; 1 bytes @ 0x0
   641  0070                     	ds	1
   642  0071                     i1OperationMode@bracketStatus:	
   643                           
   644                           ; 1 bytes @ 0x1
   645  0071                     	ds	2
   646  0073                     TimerCounter@i:	
   647                           
   648                           ; 2 bytes @ 0x3
   649  0073                     	ds	2
   650  0075                     ??_tc_int:	
   651                           
   652                           ; 1 bytes @ 0x5
   653  0075                     	ds	7
   654                           
   655                           	psect	cstackBANK0
   656  0020                     __pcstackBANK0:	
   657  0020                     ??_init:	
   658  0020                     ??_OperationMode:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0020                     ?_timerFunction:	
   662                           ; 1 bytes @ 0x0
   663                           
   664  0020                     ?_DelayDs:	
   665                           ; 1 bytes @ 0x0
   666                           
   667  0020                     ??_eeprom_read:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0020                     ?_eeprom_write:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0020                     ??_isdigit:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0020                     ?_strchr:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0020                     ??_WriteSPI:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0020                     ?_strlen:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0020                     ?___wmul:	
   686                           ; 2 bytes @ 0x0
   687                           
   688  0020                     eeprom_write@value:	
   689                           ; 2 bytes @ 0x0
   690                           
   691  0020                     _isdigit$1084:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0020                     timerFunction@intTimerNumber:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0020                     DelayDs@cnt:	
   698                           ; 2 bytes @ 0x0
   699                           
   700  0020                     ___wmul@multiplier:	
   701                           ; 2 bytes @ 0x0
   702                           
   703  0020                     strchr@chr:	
   704                           ; 2 bytes @ 0x0
   705                           
   706                           
   707                           ; 2 bytes @ 0x0
   708  0020                     	ds	1
   709  0021                     ??_eeprom_write:	
   710  0021                     WriteSPI@buffer:	
   711                           ; 1 bytes @ 0x1
   712                           
   713  0021                     OperationMode@bracketStatus:	
   714                           ; 1 bytes @ 0x1
   715                           
   716  0021                     eeprom_read@addr:	
   717                           ; 1 bytes @ 0x1
   718                           
   719  0021                     isdigit@c:	
   720                           ; 1 bytes @ 0x1
   721                           
   722                           
   723                           ; 1 bytes @ 0x1
   724  0021                     	ds	1
   725  0022                     ??_DelayDs:	
   726  0022                     ??_strlen:	
   727                           ; 1 bytes @ 0x2
   728                           
   729  0022                     ??_strchr:	
   730                           ; 1 bytes @ 0x2
   731                           
   732  0022                     WriteSPI@databyte:	
   733                           ; 1 bytes @ 0x2
   734                           
   735  0022                     eeprom_write@addr:	
   736                           ; 1 bytes @ 0x2
   737                           
   738  0022                     strchr@ptr:	
   739                           ; 1 bytes @ 0x2
   740                           
   741  0022                     timerFunction@intSetSeconds:	
   742                           ; 1 bytes @ 0x2
   743                           
   744  0022                     ___wmul@multiplicand:	
   745                           ; 2 bytes @ 0x2
   746                           
   747                           
   748                           ; 2 bytes @ 0x2
   749  0022                     	ds	1
   750  0023                     ??_RegisterRead:	
   751  0023                     ??_ReadFIFO:	
   752                           ; 1 bytes @ 0x3
   753                           
   754  0023                     ??_WriteFIFO:	
   755                           ; 1 bytes @ 0x3
   756                           
   757  0023                     ??_ReadSPI:	
   758                           ; 1 bytes @ 0x3
   759                           
   760  0023                     WriteFIFO@Data:	
   761                           ; 1 bytes @ 0x3
   762                           
   763                           
   764                           ; 1 bytes @ 0x3
   765  0023                     	ds	1
   766  0024                     ??_timerFunction:	
   767  0024                     ??___wmul:	
   768                           ; 1 bytes @ 0x4
   769                           
   770  0024                     ReadFIFO@value:	
   771                           ; 1 bytes @ 0x4
   772                           
   773  0024                     DelayDs@i:	
   774                           ; 1 bytes @ 0x4
   775                           
   776  0024                     ___wmul@product:	
   777                           ; 2 bytes @ 0x4
   778                           
   779                           
   780                           ; 2 bytes @ 0x4
   781  0024                     	ds	1
   782  0025                     RegisterRead@value:	
   783                           
   784                           ; 1 bytes @ 0x5
   785  0025                     	ds	1
   786  0026                     ??_AnalogValue:	
   787  0026                     ?_Blink:	
   788                           ; 1 bytes @ 0x6
   789                           
   790  0026                     ?_atoi:	
   791                           ; 1 bytes @ 0x6
   792                           
   793  0026                     RegisterRead@adress:	
   794                           ; 2 bytes @ 0x6
   795                           
   796  0026                     strlen@s:	
   797                           ; 1 bytes @ 0x6
   798                           
   799  0026                     Blink@n:	
   800                           ; 1 bytes @ 0x6
   801                           
   802                           
   803                           ; 2 bytes @ 0x6
   804  0026                     	ds	1
   805  0027                     ?_RegisterSet:	
   806  0027                     RegisterSet@value:	
   807                           ; 1 bytes @ 0x7
   808                           
   809  0027                     AnalogValue@channel:	
   810                           ; 1 bytes @ 0x7
   811                           
   812  0027                     strlen@cp:	
   813                           ; 1 bytes @ 0x7
   814                           
   815                           
   816                           ; 1 bytes @ 0x7
   817  0027                     	ds	1
   818  0028                     ??_RegisterSet:	
   819  0028                     ??_DarknessCheck:	
   820                           ; 1 bytes @ 0x8
   821                           
   822  0028                     ??_atoi:	
   823                           ; 1 bytes @ 0x8
   824                           
   825  0028                     ??_Blink:	
   826                           ; 1 bytes @ 0x8
   827                           
   828  0028                     ?_strncmp:	
   829                           ; 1 bytes @ 0x8
   830                           
   831  0028                     strncmp@s2:	
   832                           ; 2 bytes @ 0x8
   833                           
   834                           
   835                           ; 1 bytes @ 0x8
   836  0028                     	ds	1
   837  0029                     DarknessCheck@darknessValue:	
   838  0029                     Blink@i:	
   839                           ; 1 bytes @ 0x9
   840                           
   841  0029                     strncmp@len:	
   842                           ; 2 bytes @ 0x9
   843                           
   844                           
   845                           ; 2 bytes @ 0x9
   846  0029                     	ds	1
   847  002A                     ??_Mode_0:	
   848  002A                     ??_Mode_1:	
   849                           ; 1 bytes @ 0xA
   850                           
   851  002A                     ??_Mode_2:	
   852                           ; 1 bytes @ 0xA
   853                           
   854  002A                     ??_Mode_3:	
   855                           ; 1 bytes @ 0xA
   856                           
   857  002A                     ??_LightWithSensController:	
   858                           ; 1 bytes @ 0xA
   859                           
   860  002A                     RegisterSet@adress:	
   861                           ; 1 bytes @ 0xA
   862                           
   863  002A                     atoi@sign:	
   864                           ; 1 bytes @ 0xA
   865                           
   866                           
   867                           ; 1 bytes @ 0xA
   868  002A                     	ds	1
   869  002B                     ??_SetRFMode:	
   870  002B                     ??_strncmp:	
   871                           ; 1 bytes @ 0xB
   872                           
   873  002B                     atoi@a:	
   874                           ; 1 bytes @ 0xB
   875                           
   876                           
   877                           ; 2 bytes @ 0xB
   878  002B                     	ds	1
   879  002C                     SetRFMode@mode:	
   880                           
   881                           ; 1 bytes @ 0xC
   882  002C                     	ds	1
   883  002D                     SetRFMode@mcparam0_read:	
   884  002D                     atoi@s:	
   885                           ; 1 bytes @ 0xD
   886                           
   887  002D                     strncmp@s1:	
   888                           ; 1 bytes @ 0xD
   889                           
   890                           
   891                           ; 1 bytes @ 0xD
   892  002D                     	ds	1
   893  002E                     ??_FindChannel:	
   894  002E                     ?_strstr:	
   895                           ; 1 bytes @ 0xE
   896                           
   897  002E                     strstr@s2:	
   898                           ; 1 bytes @ 0xE
   899                           
   900                           
   901                           ; 1 bytes @ 0xE
   902  002E                     	ds	1
   903  002F                     ??_strstr:	
   904                           
   905                           ; 1 bytes @ 0xF
   906  002F                     	ds	2
   907  0031                     FindChannel@cnt:	
   908                           
   909                           ; 2 bytes @ 0x11
   910  0031                     	ds	1
   911  0032                     strstr@s1:	
   912                           
   913                           ; 1 bytes @ 0x12
   914  0032                     	ds	1
   915  0033                     FindChannel@i:	
   916                           
   917                           ; 2 bytes @ 0x13
   918  0033                     	ds	2
   919  0035                     ??_TransiverInit:	
   920  0035                     ??_TransiverToReceive:	
   921                           ; 1 bytes @ 0x15
   922                           
   923  0035                     ?_TransmittString:	
   924                           ; 1 bytes @ 0x15
   925                           
   926  0035                     TransmittString@dataString:	
   927                           ; 1 bytes @ 0x15
   928                           
   929                           
   930                           ; 2 bytes @ 0x15
   931  0035                     	ds	2
   932  0037                     ??_TransmittString:	
   933                           
   934                           ; 1 bytes @ 0x17
   935  0037                     	ds	3
   936  003A                     TransmittString@i:	
   937                           
   938                           ; 2 bytes @ 0x1A
   939  003A                     	ds	2
   940  003C                     ??_Mode_4:	
   941  003C                     ??_Mode_5:	
   942                           ; 1 bytes @ 0x1C
   943                           
   944  003C                     ??_TransmittedDataHandler:	
   945                           ; 1 bytes @ 0x1C
   946                           
   947                           
   948                           ; 1 bytes @ 0x1C
   949  003C                     	ds	1
   950  003D                     TransmittedDataHandler@slask:	
   951                           
   952                           ; 8 bytes @ 0x1D
   953  003D                     	ds	8
   954  0045                     TransmittedDataHandler@slask_700:	
   955                           
   956                           ; 8 bytes @ 0x25
   957  0045                     	ds	8
   958  004D                     TransmittedDataHandler@slask_709:	
   959                           
   960                           ; 8 bytes @ 0x2D
   961  004D                     	ds	8
   962  0055                     TransmittedDataHandler@slask_712:	
   963                           
   964                           ; 8 bytes @ 0x35
   965  0055                     	ds	8
   966  005D                     TransmittedDataHandler@value:	
   967                           
   968                           ; 2 bytes @ 0x3D
   969  005D                     	ds	2
   970  005F                     ??_TransiverReadFIFO:	
   971                           
   972                           ; 1 bytes @ 0x3F
   973  005F                     	ds	2
   974  0061                     TransiverReadFIFO@i:	
   975                           
   976                           ; 2 bytes @ 0x41
   977  0061                     	ds	2
   978  0063                     TransiverReadFIFO@j:	
   979                           
   980                           ; 2 bytes @ 0x43
   981  0063                     	ds	2
   982  0065                     ??_main:	
   983                           
   984                           ; 1 bytes @ 0x45
   985  0065                     	ds	3
   986                           
   987                           	psect	maintext
   988  06AB                     __pmaintext:	
   989 ;;
   990 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   991 ;;
   992 ;; *************** function _main *****************
   993 ;; Defined at:
   994 ;;		line 119 in file "../Main Card V10.0.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;		None
   997 ;; Auto vars:     Size  Location     Type
   998 ;;		None
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1003 ;; Tracked objects:
  1004 ;;		On entry : B00/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         0       0       0       0       0
  1010 ;;      Temps:          0       3       0       0       0
  1011 ;;      Totals:         0       3       0       0       0
  1012 ;;Total ram usage:        3 bytes
  1013 ;; Hardware stack levels required when called:   10
  1014 ;; This function calls:
  1015 ;;		_Mode_0
  1016 ;;		_Mode_1
  1017 ;;		_Mode_2
  1018 ;;		_Mode_3
  1019 ;;		_Mode_4
  1020 ;;		_Mode_5
  1021 ;;		_OperationMode
  1022 ;;		_TransiverInit
  1023 ;;		_TransiverReadFIFO
  1024 ;;		_TransiverToReceive
  1025 ;;		_init
  1026 ;; This function is called by:
  1027 ;;		Startup code after reset
  1028 ;; This function uses a non-reentrant model
  1029 ;;
  1030                           
  1031                           
  1032                           ;psect for function _main
  1033  06AB                     _main:	
  1034                           
  1035                           ;Main Card V10.0.c: 122: init();
  1036                           
  1037                           ;incstack = 0
  1038 ;; hardware stack exceeded
  1039                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1040  06AB  120A  158A  2751  120A  118A  	fcall	_init
  1041                           
  1042                           ;Main Card V10.0.c: 124: _delay((unsigned long)((800)*(4000000/4000.0)));
  1043  06B0  3005               	movlw	5
  1044  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1045  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1046  06B3  00E7               	movwf	??_main+2
  1047  06B4  300F               	movlw	15
  1048  06B5  00E6               	movwf	??_main+1
  1049  06B6  30F0               	movlw	240
  1050  06B7  00E5               	movwf	??_main
  1051  06B8                     u2197:	
  1052  06B8  0BE5               	decfsz	??_main,f
  1053  06B9  2EB8               	goto	u2197
  1054  06BA  0BE6               	decfsz	??_main+1,f
  1055  06BB  2EB8               	goto	u2197
  1056  06BC  0BE7               	decfsz	??_main+2,f
  1057  06BD  2EB8               	goto	u2197
  1058  06BE  0000               	nop
  1059                           
  1060                           ;Main Card V10.0.c: 125: TransiverInit();
  1061  06BF  120A  118A  22ED  120A  118A  	fcall	_TransiverInit
  1062  06C4                     l2364:	
  1063                           ;Main Card V10.0.c: 127: while(1)
  1064                           
  1065                           
  1066                           ;Main Card V10.0.c: 128: {
  1067                           ;Main Card V10.0.c: 129: if(OperationMode() == 0)
  1068  06C4  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1069  06C9  3A00               	xorlw	0
  1070  06CA  1D03               	skipz
  1071  06CB  2ED1               	goto	l2368
  1072                           
  1073                           ;Main Card V10.0.c: 130: {
  1074                           ;Main Card V10.0.c: 131: Mode_0();
  1075  06CC  120A  158A  23FA  120A  118A  	fcall	_Mode_0
  1076  06D1                     l2368:	
  1077                           
  1078                           ;Main Card V10.0.c: 132: }
  1079                           ;Main Card V10.0.c: 133: if(OperationMode() == 1)
  1080  06D1  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1081  06D6  3A01               	xorlw	1
  1082  06D7  1D03               	skipz
  1083  06D8  2EDE               	goto	l2372
  1084                           
  1085                           ;Main Card V10.0.c: 134: {
  1086                           ;Main Card V10.0.c: 135: Mode_1();
  1087  06D9  120A  158A  24C7  120A  118A  	fcall	_Mode_1
  1088  06DE                     l2372:	
  1089                           
  1090                           ;Main Card V10.0.c: 136: }
  1091                           ;Main Card V10.0.c: 138: if(OperationMode() == 2)
  1092  06DE  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1093  06E3  3A02               	xorlw	2
  1094  06E4  1D03               	skipz
  1095  06E5  2EEB               	goto	l2376
  1096                           
  1097                           ;Main Card V10.0.c: 139: {
  1098                           ;Main Card V10.0.c: 140: Mode_2();
  1099  06E6  120A  158A  242C  120A  118A  	fcall	_Mode_2
  1100  06EB                     l2376:	
  1101                           
  1102                           ;Main Card V10.0.c: 141: }
  1103                           ;Main Card V10.0.c: 142: if(OperationMode() == 3)
  1104  06EB  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1105  06F0  3A03               	xorlw	3
  1106  06F1  1D03               	skipz
  1107  06F2  2EF8               	goto	l2380
  1108                           
  1109                           ;Main Card V10.0.c: 143: {
  1110                           ;Main Card V10.0.c: 144: Mode_3();
  1111  06F3  120A  158A  24AE  120A  118A  	fcall	_Mode_3
  1112  06F8                     l2380:	
  1113                           
  1114                           ;Main Card V10.0.c: 145: }
  1115                           ;Main Card V10.0.c: 147: if(OperationMode() == 4)
  1116  06F8  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1117  06FD  3A04               	xorlw	4
  1118  06FE  1D03               	skipz
  1119  06FF  2F05               	goto	l2384
  1120                           
  1121                           ;Main Card V10.0.c: 148: {
  1122                           ;Main Card V10.0.c: 149: Mode_4();
  1123  0700  120A  158A  2465  120A  118A  	fcall	_Mode_4
  1124  0705                     l2384:	
  1125                           
  1126                           ;Main Card V10.0.c: 150: }
  1127                           ;Main Card V10.0.c: 152: if(OperationMode() == 5)
  1128  0705  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1129  070A  3A05               	xorlw	5
  1130  070B  1D03               	skipz
  1131  070C  2F12               	goto	l2388
  1132                           
  1133                           ;Main Card V10.0.c: 153: {
  1134                           ;Main Card V10.0.c: 154: Mode_5();
  1135  070D  120A  158A  2476  120A  118A  	fcall	_Mode_5
  1136  0712                     l2388:	
  1137                           
  1138                           ;Main Card V10.0.c: 155: }
  1139                           ;Main Card V10.0.c: 159: if(!bTransiverModeReceive)
  1140  0712  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0713  1303               	bcf	3,6	;RP1=0, select bank0
  1142  0714  086E               	movf	_bTransiverModeReceive,w
  1143  0715  1D03               	btfss	3,2
  1144  0716  2F1C               	goto	l2392
  1145                           
  1146                           ;Main Card V10.0.c: 160: TransiverToReceive();
  1147  0717  120A  158A  27A4  120A  118A  	fcall	_TransiverToReceive
  1148  071C                     l2392:	
  1149                           
  1150                           ;Main Card V10.0.c: 161: if(PORTBbits.RB4 && bTransiverModeReceive)
  1151  071C  1283               	bcf	3,5	;RP0=0, select bank0
  1152  071D  1303               	bcf	3,6	;RP1=0, select bank0
  1153  071E  1E06               	btfss	6,4	;volatile
  1154  071F  2EC4               	goto	l2364
  1155  0720  086E               	movf	_bTransiverModeReceive,w
  1156  0721  1903               	btfsc	3,2
  1157  0722  2EC4               	goto	l2364
  1158                           
  1159                           ;Main Card V10.0.c: 162: TransiverReadFIFO();
  1160  0723  120A  118A  279A  120A  118A  	fcall	_TransiverReadFIFO
  1161  0728  2EC4               	goto	l2364
  1162  0729                     __end_of_main:	
  1163                           
  1164                           	psect	text1
  1165  0F51                     __ptext1:	
  1166 ;; *************** function _init *****************
  1167 ;; Defined at:
  1168 ;;		line 532 in file "../Main Card V10.0.c"
  1169 ;; Parameters:    Size  Location     Type
  1170 ;;		None
  1171 ;; Auto vars:     Size  Location     Type
  1172 ;;		None
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, status,2, status,0
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1182 ;;      Params:         0       0       0       0       0
  1183 ;;      Locals:         0       0       0       0       0
  1184 ;;      Temps:          0       0       0       0       0
  1185 ;;      Totals:         0       0       0       0       0
  1186 ;;Total ram usage:        0 bytes
  1187 ;; Hardware stack levels used:    1
  1188 ;; Hardware stack levels required when called:    2
  1189 ;; This function calls:
  1190 ;;		Nothing
  1191 ;; This function is called by:
  1192 ;;		_main
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           
  1197                           ;psect for function _init
  1198  0F51                     _init:	
  1199                           
  1200                           ;Main Card V10.0.c: 535: OSCCONbits.IRCF2 = 1;
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _init: [wreg+status,2+status,0]
  1204  0F51  1683               	bsf	3,5	;RP0=1, select bank1
  1205  0F52  1303               	bcf	3,6	;RP1=0, select bank1
  1206  0F53  170F               	bsf	15,6	;volatile
  1207                           
  1208                           ;Main Card V10.0.c: 536: OSCCONbits.IRCF1 = 1;
  1209  0F54  168F               	bsf	15,5	;volatile
  1210                           
  1211                           ;Main Card V10.0.c: 537: OSCCONbits.IRCF0 = 0;
  1212  0F55  120F               	bcf	15,4	;volatile
  1213                           
  1214                           ;Main Card V10.0.c: 538: OSCCONbits.SCS = 1;
  1215  0F56  140F               	bsf	15,0	;volatile
  1216                           
  1217                           ;Main Card V10.0.c: 541: PORTA = 0x00;
  1218  0F57  1283               	bcf	3,5	;RP0=0, select bank0
  1219  0F58  1303               	bcf	3,6	;RP1=0, select bank0
  1220  0F59  0185               	clrf	5	;volatile
  1221                           
  1222                           ;Main Card V10.0.c: 542: PORTB = 0x00;
  1223  0F5A  0186               	clrf	6	;volatile
  1224                           
  1225                           ;Main Card V10.0.c: 543: PORTC = 0x00;
  1226  0F5B  0187               	clrf	7	;volatile
  1227                           
  1228                           ;Main Card V10.0.c: 544: TRISA = 0b00001011;
  1229  0F5C  300B               	movlw	11
  1230  0F5D  1683               	bsf	3,5	;RP0=1, select bank1
  1231  0F5E  1303               	bcf	3,6	;RP1=0, select bank1
  1232  0F5F  0085               	movwf	5	;volatile
  1233                           
  1234                           ;Main Card V10.0.c: 545: TRISB = 0b00111111;
  1235  0F60  303F               	movlw	63
  1236  0F61  0086               	movwf	6	;volatile
  1237                           
  1238                           ;Main Card V10.0.c: 546: TRISC = 0b00010000;
  1239  0F62  3010               	movlw	16
  1240  0F63  0087               	movwf	7	;volatile
  1241                           
  1242                           ;Main Card V10.0.c: 547: ANSEL = 0b00000000;
  1243  0F64  1683               	bsf	3,5	;RP0=1, select bank3
  1244  0F65  1703               	bsf	3,6	;RP1=1, select bank3
  1245  0F66  0188               	clrf	8	;volatile
  1246                           
  1247                           ;Main Card V10.0.c: 548: ANSELH = 0b00000000;
  1248  0F67  0189               	clrf	9	;volatile
  1249                           
  1250                           ;Main Card V10.0.c: 549: ANSELbits.ANS0 = 1;
  1251  0F68  1408               	bsf	8,0	;volatile
  1252                           
  1253                           ;Main Card V10.0.c: 550: ANSELbits.ANS3 = 1;
  1254  0F69  1588               	bsf	8,3	;volatile
  1255                           
  1256                           ;Main Card V10.0.c: 551: OPTION_REGbits.nRBPU = 0;
  1257  0F6A  1683               	bsf	3,5	;RP0=1, select bank1
  1258  0F6B  1303               	bcf	3,6	;RP1=0, select bank1
  1259  0F6C  1381               	bcf	1,7	;volatile
  1260                           
  1261                           ;Main Card V10.0.c: 552: WPUBbits.WPUB5 = 0;
  1262  0F6D  1295               	bcf	21,5	;volatile
  1263  0F6E                     l290:	
  1264                           ;Main Card V10.0.c: 553: while(!PORTBbits.RB5);
  1265                           
  1266  0F6E  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0F6F  1E86               	btfss	6,5	;volatile
  1268  0F70  2F6E               	goto	l290
  1269                           
  1270                           ;Main Card V10.0.c: 556: SSPCONbits.SSPM=0x00;
  1271  0F71  30F0               	movlw	-16
  1272  0F72  0594               	andwf	20,f	;volatile
  1273                           
  1274                           ;Main Card V10.0.c: 557: SSPCONbits.CKP=0;
  1275  0F73  1214               	bcf	20,4	;volatile
  1276                           
  1277                           ;Main Card V10.0.c: 558: SSPSTATbits.CKE=1;
  1278  0F74  1683               	bsf	3,5	;RP0=1, select bank1
  1279  0F75  1303               	bcf	3,6	;RP1=0, select bank1
  1280  0F76  1714               	bsf	20,6	;volatile
  1281                           
  1282                           ;Main Card V10.0.c: 559: SSPSTATbits.SMP=0;
  1283  0F77  1394               	bcf	20,7	;volatile
  1284                           
  1285                           ;Main Card V10.0.c: 560: SSPCONbits.SSPEN=0x01;
  1286  0F78  1283               	bcf	3,5	;RP0=0, select bank0
  1287  0F79  1303               	bcf	3,6	;RP1=0, select bank0
  1288  0F7A  1694               	bsf	20,5	;volatile
  1289                           
  1290                           ;Main Card V10.0.c: 561: SSPIE = 0;
  1291  0F7B  1683               	bsf	3,5	;RP0=1, select bank1
  1292  0F7C  1303               	bcf	3,6	;RP1=0, select bank1
  1293  0F7D  118C               	bcf	12,3	;volatile
  1294                           
  1295                           ;Main Card V10.0.c: 564: PORTAbits.RA5 = 1;
  1296  0F7E  1283               	bcf	3,5	;RP0=0, select bank0
  1297  0F7F  1303               	bcf	3,6	;RP1=0, select bank0
  1298  0F80  1685               	bsf	5,5	;volatile
  1299                           
  1300                           ;Main Card V10.0.c: 565: PORTAbits.RA4 = 1;
  1301  0F81  1605               	bsf	5,4	;volatile
  1302                           
  1303                           ;Main Card V10.0.c: 568: INTCONbits.RBIE = 1;
  1304  0F82  158B               	bsf	11,3	;volatile
  1305                           
  1306                           ;Main Card V10.0.c: 569: INTCONbits.PEIE = 1;
  1307  0F83  170B               	bsf	11,6	;volatile
  1308                           
  1309                           ;Main Card V10.0.c: 570: PIE1bits.TMR1IE = 1;
  1310  0F84  1683               	bsf	3,5	;RP0=1, select bank1
  1311  0F85  1303               	bcf	3,6	;RP1=0, select bank1
  1312  0F86  140C               	bsf	12,0	;volatile
  1313                           
  1314                           ;Main Card V10.0.c: 571: INTCONbits.GIE = 1;
  1315  0F87  178B               	bsf	11,7	;volatile
  1316                           
  1317                           ;Main Card V10.0.c: 572: IOCBbits.IOCB5 = 1;
  1318  0F88  1696               	bsf	22,5	;volatile
  1319                           
  1320                           ;Main Card V10.0.c: 575: T1CON = 0b00110000;
  1321  0F89  3030               	movlw	48
  1322  0F8A  1283               	bcf	3,5	;RP0=0, select bank0
  1323  0F8B  1303               	bcf	3,6	;RP1=0, select bank0
  1324  0F8C  0090               	movwf	16	;volatile
  1325                           
  1326                           ;Main Card V10.0.c: 576: TMR1H = 0x0B;
  1327  0F8D  300B               	movlw	11
  1328  0F8E  008F               	movwf	15	;volatile
  1329                           
  1330                           ;Main Card V10.0.c: 577: TMR1L = 0xDB;
  1331  0F8F  30DB               	movlw	219
  1332  0F90  008E               	movwf	14	;volatile
  1333                           
  1334                           ;Main Card V10.0.c: 578: T1CONbits.TMR1ON = 1;
  1335  0F91  1410               	bsf	16,0	;volatile
  1336                           
  1337                           ;Main Card V10.0.c: 581: ADCON0bits.ADCS0 = 0;
  1338  0F92  131F               	bcf	31,6	;volatile
  1339                           
  1340                           ;Main Card V10.0.c: 582: ADCON0bits.ADCS1 = 0;
  1341  0F93  139F               	bcf	31,7	;volatile
  1342                           
  1343                           ;Main Card V10.0.c: 583: ADCON1bits.ADFM = 0;
  1344  0F94  1683               	bsf	3,5	;RP0=1, select bank1
  1345  0F95  1303               	bcf	3,6	;RP1=0, select bank1
  1346  0F96  139F               	bcf	31,7	;volatile
  1347                           
  1348                           ;Main Card V10.0.c: 584: ADCON1bits.VCFG1 = 0;
  1349  0F97  129F               	bcf	31,5	;volatile
  1350                           
  1351                           ;Main Card V10.0.c: 585: ADCON1bits.VCFG0 = 0;
  1352  0F98  121F               	bcf	31,4	;volatile
  1353                           
  1354                           ;Main Card V10.0.c: 588: intSecondCounter = 0;
  1355  0F99  1283               	bcf	3,5	;RP0=0, select bank0
  1356  0F9A  1303               	bcf	3,6	;RP1=0, select bank0
  1357  0F9B  01EA               	clrf	_intSecondCounter
  1358  0F9C  01EB               	clrf	_intSecondCounter+1
  1359                           
  1360                           ;Main Card V10.0.c: 589: intHalfSecondCounter = 0;
  1361  0F9D  1683               	bsf	3,5	;RP0=1, select bank1
  1362  0F9E  1303               	bcf	3,6	;RP1=0, select bank1
  1363  0F9F  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1364  0FA0  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1365                           
  1366                           ;Main Card V10.0.c: 590: intMinuteCounter = 0;
  1367  0FA1  01B7               	clrf	_intMinuteCounter^(0+128)
  1368  0FA2  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1369  0FA3  0008               	return
  1370  0FA4                     __end_of_init:	
  1371                           
  1372                           	psect	text2
  1373  0FA4                     __ptext2:	
  1374 ;; *************** function _TransiverToReceive *****************
  1375 ;; Defined at:
  1376 ;;		line 171 in file "../Main Card V10.0.c"
  1377 ;; Parameters:    Size  Location     Type
  1378 ;;		None
  1379 ;; Auto vars:     Size  Location     Type
  1380 ;;		None
  1381 ;; Return value:  Size  Location     Type
  1382 ;;                  1    wreg      void 
  1383 ;; Registers used:
  1384 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1385 ;; Tracked objects:
  1386 ;;		On entry : 0/0
  1387 ;;		On exit  : 0/0
  1388 ;;		Unchanged: 0/0
  1389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1390 ;;      Params:         0       0       0       0       0
  1391 ;;      Locals:         0       0       0       0       0
  1392 ;;      Temps:          0       2       0       0       0
  1393 ;;      Totals:         0       2       0       0       0
  1394 ;;Total ram usage:        2 bytes
  1395 ;; Hardware stack levels used:    1
  1396 ;; Hardware stack levels required when called:    7
  1397 ;; This function calls:
  1398 ;;		_FindChannel
  1399 ;;		_RegisterRead
  1400 ;;		_RegisterSet
  1401 ;;		_SetRFMode
  1402 ;;		_timerFunction
  1403 ;; This function is called by:
  1404 ;;		_main
  1405 ;; This function uses a non-reentrant model
  1406 ;;
  1407                           
  1408                           
  1409                           ;psect for function _TransiverToReceive
  1410  0FA4                     _TransiverToReceive:	
  1411                           
  1412                           ;Main Card V10.0.c: 173: timerFunction(2, 5);
  1413                           
  1414                           ;incstack = 0
  1415                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1416  0FA4  3002               	movlw	2
  1417  0FA5  1283               	bcf	3,5	;RP0=0, select bank0
  1418  0FA6  1303               	bcf	3,6	;RP1=0, select bank0
  1419  0FA7  00A0               	movwf	timerFunction@intTimerNumber
  1420  0FA8  3000               	movlw	0
  1421  0FA9  00A1               	movwf	timerFunction@intTimerNumber+1
  1422  0FAA  3005               	movlw	5
  1423  0FAB  00A2               	movwf	timerFunction@intSetSeconds
  1424  0FAC  3000               	movlw	0
  1425  0FAD  00A3               	movwf	timerFunction@intSetSeconds+1
  1426  0FAE  120A  158A  2487  120A  158A  	fcall	_timerFunction
  1427                           
  1428                           ;Main Card V10.0.c: 177: SetRFMode(0x20);
  1429  0FB3  3020               	movlw	32
  1430  0FB4  120A  118A  2575  120A  158A  	fcall	_SetRFMode
  1431                           
  1432                           ;Main Card V10.0.c: 178: _delay((unsigned long)((10)*(4000000/4000.0)));
  1433  0FB9  300D               	movlw	13
  1434  0FBA  1283               	bcf	3,5	;RP0=0, select bank0
  1435  0FBB  1303               	bcf	3,6	;RP1=0, select bank0
  1436  0FBC  00B6               	movwf	??_TransiverToReceive+1
  1437  0FBD  30FB               	movlw	251
  1438  0FBE  00B5               	movwf	??_TransiverToReceive
  1439  0FBF                     u2207:	
  1440  0FBF  0BB5               	decfsz	??_TransiverToReceive,f
  1441  0FC0  2FBF               	goto	u2207
  1442  0FC1  0BB6               	decfsz	??_TransiverToReceive+1,f
  1443  0FC2  2FBF               	goto	u2207
  1444                           
  1445                           ;Main Card V10.0.c: 179: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1446  0FC3  300E               	movlw	14
  1447  0FC4  120A  118A  25E4  120A  158A  	fcall	_RegisterRead
  1448  0FC9  3802               	iorlw	2
  1449  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  1450  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  1451  0FCC  00B5               	movwf	??_TransiverToReceive
  1452  0FCD  0835               	movf	??_TransiverToReceive,w
  1453  0FCE  00A7               	movwf	RegisterSet@value
  1454  0FCF  300E               	movlw	14
  1455  0FD0  120A  158A  24E1  120A  158A  	fcall	_RegisterSet
  1456                           
  1457                           ;Main Card V10.0.c: 180: SetRFMode(0x40);
  1458  0FD5  3040               	movlw	64
  1459  0FD6  120A  118A  2575  120A  158A  	fcall	_SetRFMode
  1460  0FDB                     l2296:	
  1461                           ;Main Card V10.0.c: 181: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1462                           
  1463  0FDB  300E               	movlw	14
  1464  0FDC  120A  118A  25E4  120A  158A  	fcall	_RegisterRead
  1465  0FE1  3902               	andlw	2
  1466  0FE2  1D03               	btfss	3,2
  1467  0FE3  2FEE               	goto	l2298
  1468                           
  1469                           ;Main Card V10.0.c: 182: {
  1470                           ;Main Card V10.0.c: 183: if(bTimerComplete[2])
  1471  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  1472  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  1473  0FE6  082C               	movf	(_bTimerComplete^(0+128)+2),w
  1474  0FE7  1903               	btfsc	3,2
  1475  0FE8  2FDB               	goto	l2296
  1476                           
  1477                           ;Main Card V10.0.c: 184: {
  1478                           ;Main Card V10.0.c: 185: FindChannel();
  1479  0FE9  120A  118A  21ED  120A  158A  	fcall	_FindChannel
  1480  0FEE                     l2298:	
  1481                           ;Main Card V10.0.c: 186: break;
  1482                           
  1483                           
  1484                           ;Main Card V10.0.c: 187: }
  1485                           ;Main Card V10.0.c: 188: }
  1486                           ;Main Card V10.0.c: 190: SetRFMode(0x60);
  1487  0FEE  3060               	movlw	96
  1488  0FEF  120A  118A  2575  120A  158A  	fcall	_SetRFMode
  1489                           
  1490                           ;Main Card V10.0.c: 191: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1491  0FF4  30A5               	movlw	165
  1492  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  1493  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  1494  0FF7  00B5               	movwf	??_TransiverToReceive
  1495  0FF8                     u2217:	
  1496  0FF8  0BB5               	decfsz	??_TransiverToReceive,f
  1497  0FF9  2FF8               	goto	u2217
  1498  0FFA  2FFB               	nop2
  1499                           
  1500                           ;Main Card V10.0.c: 192: bTransiverModeReceive = 1;
  1501  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  1502  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  1503  0FFD  01EE               	clrf	_bTransiverModeReceive
  1504  0FFE  0AEE               	incf	_bTransiverModeReceive,f
  1505  0FFF  0008               	return
  1506  1000                     __end_of_TransiverToReceive:	
  1507                           
  1508                           	psect	text3
  1509  079A                     __ptext3:	
  1510 ;; *************** function _TransiverReadFIFO *****************
  1511 ;; Defined at:
  1512 ;;		line 197 in file "../Main Card V10.0.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  j               2   67[BANK0 ] int 
  1517 ;;  i               2   65[BANK0 ] int 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  1    wreg      void 
  1520 ;; Registers used:
  1521 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1527 ;;      Params:         0       0       0       0       0
  1528 ;;      Locals:         0       4       0       0       0
  1529 ;;      Temps:          0       2       0       0       0
  1530 ;;      Totals:         0       6       0       0       0
  1531 ;;Total ram usage:        6 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    9
  1534 ;; This function calls:
  1535 ;;		_ReadFIFO
  1536 ;;		_SetRFMode
  1537 ;;		_TransmittedDataHandler
  1538 ;;		_timerFunction
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _TransiverReadFIFO
  1546  079A                     _TransiverReadFIFO:	
  1547                           
  1548                           ;Main Card V10.0.c: 199: timerFunction(3, 5);
  1549                           
  1550                           ;incstack = 0
  1551 ;; hardware stack exceeded
  1552                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1553  079A  3003               	movlw	3
  1554  079B  1283               	bcf	3,5	;RP0=0, select bank0
  1555  079C  1303               	bcf	3,6	;RP1=0, select bank0
  1556  079D  00A0               	movwf	timerFunction@intTimerNumber
  1557  079E  3000               	movlw	0
  1558  079F  00A1               	movwf	timerFunction@intTimerNumber+1
  1559  07A0  3005               	movlw	5
  1560  07A1  00A2               	movwf	timerFunction@intSetSeconds
  1561  07A2  3000               	movlw	0
  1562  07A3  00A3               	movwf	timerFunction@intSetSeconds+1
  1563  07A4  120A  158A  2487  120A  118A  	fcall	_timerFunction
  1564                           
  1565                           ;Main Card V10.0.c: 201: SetRFMode(0x20);
  1566  07A9  3020               	movlw	32
  1567  07AA  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  1568                           
  1569                           ;Main Card V10.0.c: 202: bTransiverModeReceive = 0;
  1570  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1571  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1572  07B1  01EE               	clrf	_bTransiverModeReceive
  1573                           
  1574                           ;Main Card V10.0.c: 203: int i = 0;
  1575  07B2  01E1               	clrf	TransiverReadFIFO@i
  1576  07B3  01E2               	clrf	TransiverReadFIFO@i+1
  1577                           
  1578                           ;Main Card V10.0.c: 204: for (int j = 0; j < 30; ++j)
  1579  07B4  01E3               	clrf	TransiverReadFIFO@j
  1580  07B5  01E4               	clrf	TransiverReadFIFO@j+1
  1581  07B6                     L1:	
  1582  07B6  0864               	movf	TransiverReadFIFO@j+1,w
  1583  07B7  3A80               	xorlw	128
  1584  07B8  00FF               	movwf	127
  1585  07B9  3080               	movlw	128
  1586  07BA  027F               	subwf	127,w
  1587  07BB  1D03               	skipz
  1588  07BC  2FBF               	goto	u1905
  1589  07BD  301E               	movlw	30
  1590  07BE  0263               	subwf	TransiverReadFIFO@j,w
  1591  07BF                     u1905:	
  1592  07BF  1803               	btfsc	3,0
  1593  07C0  2FE3               	goto	l2326
  1594                           
  1595                           ;Main Card V10.0.c: 205: {
  1596                           ;Main Card V10.0.c: 206: TransmittedString[j] = 0;
  1597  07C1  1283               	bcf	3,5	;RP0=0, select bank0
  1598  07C2  1303               	bcf	3,6	;RP1=0, select bank0
  1599  07C3  0863               	movf	TransiverReadFIFO@j,w
  1600  07C4  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1601  07C5  0084               	movwf	4
  1602  07C6  1383               	bcf	3,7	;select IRP bank1
  1603  07C7  0180               	clrf	0
  1604  07C8  3001               	movlw	1
  1605  07C9  07E3               	addwf	TransiverReadFIFO@j,f
  1606  07CA  1803               	skipnc
  1607  07CB  0AE4               	incf	TransiverReadFIFO@j+1,f
  1608  07CC  3000               	movlw	0
  1609  07CD  07E4               	addwf	TransiverReadFIFO@j+1,f
  1610  07CE  2FB6               	goto	L1
  1611  07CF                     l2322:	
  1612                           ;Main Card V10.0.c: 207: }
  1613                           ;Main Card V10.0.c: 208: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1614                           
  1615                           
  1616                           ;Main Card V10.0.c: 209: {
  1617                           ;Main Card V10.0.c: 210: TransmittedString[i] = ReadFIFO();
  1618  07CF  120A  158A  2447  120A  118A  	fcall	_ReadFIFO
  1619  07D4  1283               	bcf	3,5	;RP0=0, select bank0
  1620  07D5  1303               	bcf	3,6	;RP1=0, select bank0
  1621  07D6  00DF               	movwf	??_TransiverReadFIFO
  1622  07D7  0861               	movf	TransiverReadFIFO@i,w
  1623  07D8  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1624  07D9  0084               	movwf	4
  1625  07DA  085F               	movf	??_TransiverReadFIFO,w
  1626  07DB  1383               	bcf	3,7	;select IRP bank1
  1627  07DC  0080               	movwf	0
  1628                           
  1629                           ;Main Card V10.0.c: 211: i++;
  1630  07DD  3001               	movlw	1
  1631  07DE  07E1               	addwf	TransiverReadFIFO@i,f
  1632  07DF  1803               	skipnc
  1633  07E0  0AE2               	incf	TransiverReadFIFO@i+1,f
  1634  07E1  3000               	movlw	0
  1635  07E2  07E2               	addwf	TransiverReadFIFO@i+1,f
  1636  07E3                     l2326:	
  1637  07E3  1283               	bcf	3,5	;RP0=0, select bank0
  1638  07E4  1303               	bcf	3,6	;RP1=0, select bank0
  1639  07E5  1D86               	btfss	6,3	;volatile
  1640  07E6  2FEC               	goto	l2330
  1641  07E7  1683               	bsf	3,5	;RP0=1, select bank1
  1642  07E8  1303               	bcf	3,6	;RP1=0, select bank1
  1643  07E9  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1644  07EA  1903               	btfsc	3,2
  1645  07EB  2FCF               	goto	l2322
  1646  07EC                     l2330:	
  1647                           
  1648                           ;Main Card V10.0.c: 212: }
  1649                           ;Main Card V10.0.c: 214: _delay((unsigned long)((10)*(4000000/4000.0)));
  1650  07EC  300D               	movlw	13
  1651  07ED  1283               	bcf	3,5	;RP0=0, select bank0
  1652  07EE  1303               	bcf	3,6	;RP1=0, select bank0
  1653  07EF  00E0               	movwf	??_TransiverReadFIFO+1
  1654  07F0  30FB               	movlw	251
  1655  07F1  00DF               	movwf	??_TransiverReadFIFO
  1656  07F2                     u2227:	
  1657  07F2  0BDF               	decfsz	??_TransiverReadFIFO,f
  1658  07F3  2FF2               	goto	u2227
  1659  07F4  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1660  07F5  2FF2               	goto	u2227
  1661                           
  1662                           ;Main Card V10.0.c: 215: SetRFMode(0x00);
  1663  07F6  3000               	movlw	0
  1664  07F7  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  1665                           
  1666                           ;Main Card V10.0.c: 216: TransmittedDataHandler();
  1667  07FC  120A  118A  2048   	fcall	_TransmittedDataHandler
  1668  07FF  0008               	return
  1669  0800                     __end_of_TransiverReadFIFO:	
  1670                           
  1671                           	psect	text4
  1672  0048                     __ptext4:	
  1673 ;; *************** function _TransmittedDataHandler *****************
  1674 ;; Defined at:
  1675 ;;		line 218 in file "../Main Card V10.0.c"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;		None
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1680 ;;  value           2   61[BANK0 ] int 
  1681 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1682 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1683 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1684 ;; Return value:  Size  Location     Type
  1685 ;;                  1    wreg      void 
  1686 ;; Registers used:
  1687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1688 ;; Tracked objects:
  1689 ;;		On entry : 0/0
  1690 ;;		On exit  : 0/0
  1691 ;;		Unchanged: 0/0
  1692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1693 ;;      Params:         0       0       0       0       0
  1694 ;;      Locals:         0      34       0       0       0
  1695 ;;      Temps:          0       1       0       0       0
  1696 ;;      Totals:         0      35       0       0       0
  1697 ;;Total ram usage:       35 bytes
  1698 ;; Hardware stack levels used:    1
  1699 ;; Hardware stack levels required when called:    8
  1700 ;; This function calls:
  1701 ;;		_AnalogValue
  1702 ;;		_DarknessCheck
  1703 ;;		_DelayDs
  1704 ;;		_OperationMode
  1705 ;;		_TransmittString
  1706 ;;		_atoi
  1707 ;;		_eeprom_read
  1708 ;;		_eeprom_write
  1709 ;;		_strstr
  1710 ;; This function is called by:
  1711 ;;		_TransiverReadFIFO
  1712 ;; This function uses a non-reentrant model
  1713 ;;
  1714                           
  1715                           
  1716                           ;psect for function _TransmittedDataHandler
  1717  0048                     _TransmittedDataHandler:	
  1718                           
  1719                           ;Main Card V10.0.c: 221: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1720                           
  1721                           ;incstack = 0
  1722 ;; hardware stack exceeded
  1723                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1724  0048  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1725  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1726  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1727  004B  00BC               	movwf	??_TransmittedDataHandler
  1728  004C  083C               	movf	??_TransmittedDataHandler,w
  1729  004D  00AE               	movwf	strstr@s2
  1730  004E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1731  004F  120A  158A  270B  120A  118A  	fcall	_strstr
  1732  0054  3A00               	xorlw	0
  1733  0055  1903               	skipnz
  1734  0056  2873               	goto	l2046
  1735  0057  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1736  005C  3A06               	xorlw	6
  1737  005D  1D03               	skipz
  1738  005E  2873               	goto	l2046
  1739                           
  1740                           ;Main Card V10.0.c: 222: {
  1741                           ;Main Card V10.0.c: 223: intBlinkCycle = 1;
  1742  005F  3001               	movlw	1
  1743  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1744  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1745  0062  00E8               	movwf	_intBlinkCycle
  1746  0063  3000               	movlw	0
  1747  0064  00E9               	movwf	_intBlinkCycle+1
  1748                           
  1749                           ;Main Card V10.0.c: 224: intBlinkCounter = 0;
  1750  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1751  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1752  0067  01B1               	clrf	_intBlinkCounter^(0+128)
  1753  0068  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1754                           
  1755                           ;Main Card V10.0.c: 225: DelayDs(100);
  1756  0069  3064               	movlw	100
  1757  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1758  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1759  006C  00A0               	movwf	DelayDs@cnt
  1760  006D  3000               	movlw	0
  1761  006E  00A1               	movwf	DelayDs@cnt+1
  1762  006F  120A  158A  24FB   	fcall	_DelayDs
  1763                           
  1764                           ;Main Card V10.0.c: 226: }
  1765  0072  0008               	return
  1766  0073                     l2046:	
  1767                           
  1768                           ;Main Card V10.0.c: 227: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1769  0073  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1770  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1771  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1772  0076  00BC               	movwf	??_TransmittedDataHandler
  1773  0077  083C               	movf	??_TransmittedDataHandler,w
  1774  0078  00AE               	movwf	strstr@s2
  1775  0079  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1776  007A  120A  158A  270B  120A  118A  	fcall	_strstr
  1777  007F  3A00               	xorlw	0
  1778  0080  1903               	skipnz
  1779  0081  289E               	goto	l2056
  1780  0082  120A  158A  2417  120A  118A  	fcall	_OperationMode
  1781  0087  3A07               	xorlw	7
  1782  0088  1D03               	skipz
  1783  0089  289E               	goto	l2056
  1784                           
  1785                           ;Main Card V10.0.c: 228: {
  1786                           ;Main Card V10.0.c: 229: intBlinkCycle = 1;
  1787  008A  3001               	movlw	1
  1788  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1789  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1790  008D  00E8               	movwf	_intBlinkCycle
  1791  008E  3000               	movlw	0
  1792  008F  00E9               	movwf	_intBlinkCycle+1
  1793                           
  1794                           ;Main Card V10.0.c: 230: intBlinkCounter = 0;
  1795  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1796  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1797  0092  01B1               	clrf	_intBlinkCounter^(0+128)
  1798  0093  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1799                           
  1800                           ;Main Card V10.0.c: 231: DelayDs(100);
  1801  0094  3064               	movlw	100
  1802  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1803  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1804  0097  00A0               	movwf	DelayDs@cnt
  1805  0098  3000               	movlw	0
  1806  0099  00A1               	movwf	DelayDs@cnt+1
  1807  009A  120A  158A  24FB   	fcall	_DelayDs
  1808                           
  1809                           ;Main Card V10.0.c: 232: }
  1810  009D  0008               	return
  1811  009E                     l2056:	
  1812                           
  1813                           ;Main Card V10.0.c: 233: else if((strstr(TransmittedString,"FLASHL")))
  1814  009E  3082               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1815  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1816  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1817  00A1  00BC               	movwf	??_TransmittedDataHandler
  1818  00A2  083C               	movf	??_TransmittedDataHandler,w
  1819  00A3  00AE               	movwf	strstr@s2
  1820  00A4  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1821  00A5  120A  158A  270B  120A  118A  	fcall	_strstr
  1822  00AA  3A00               	xorlw	0
  1823  00AB  1903               	skipnz
  1824  00AC  28C4               	goto	l2064
  1825                           
  1826                           ;Main Card V10.0.c: 234: {
  1827                           ;Main Card V10.0.c: 235: PORTCbits.RC2 = 1;
  1828  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1829  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1830  00AF  1507               	bsf	7,2	;volatile
  1831                           
  1832                           ;Main Card V10.0.c: 236: DelayDs(10);
  1833  00B0  300A               	movlw	10
  1834  00B1  00A0               	movwf	DelayDs@cnt
  1835  00B2  3000               	movlw	0
  1836  00B3  00A1               	movwf	DelayDs@cnt+1
  1837  00B4  120A  158A  24FB  120A  118A  	fcall	_DelayDs
  1838                           
  1839                           ;Main Card V10.0.c: 237: PORTCbits.RC2 = 0;
  1840  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1841  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1842  00BB  1107               	bcf	7,2	;volatile
  1843                           
  1844                           ;Main Card V10.0.c: 238: DelayDs(5);
  1845  00BC  3005               	movlw	5
  1846  00BD  00A0               	movwf	DelayDs@cnt
  1847  00BE  3000               	movlw	0
  1848  00BF  00A1               	movwf	DelayDs@cnt+1
  1849  00C0  120A  158A  24FB   	fcall	_DelayDs
  1850                           
  1851                           ;Main Card V10.0.c: 239: }
  1852  00C3  0008               	return
  1853  00C4                     l2064:	
  1854                           
  1855                           ;Main Card V10.0.c: 240: else if((strstr(TransmittedString,"FLASHB")))
  1856  00C4  3074               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1857  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1858  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1859  00C7  00BC               	movwf	??_TransmittedDataHandler
  1860  00C8  083C               	movf	??_TransmittedDataHandler,w
  1861  00C9  00AE               	movwf	strstr@s2
  1862  00CA  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1863  00CB  120A  158A  270B  120A  118A  	fcall	_strstr
  1864  00D0  3A00               	xorlw	0
  1865  00D1  1903               	skipnz
  1866  00D2  28EA               	goto	l2072
  1867                           
  1868                           ;Main Card V10.0.c: 241: {
  1869                           ;Main Card V10.0.c: 242: PORTCbits.RC1 = 1;
  1870  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1871  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1872  00D5  1487               	bsf	7,1	;volatile
  1873                           
  1874                           ;Main Card V10.0.c: 243: DelayDs(10);
  1875  00D6  300A               	movlw	10
  1876  00D7  00A0               	movwf	DelayDs@cnt
  1877  00D8  3000               	movlw	0
  1878  00D9  00A1               	movwf	DelayDs@cnt+1
  1879  00DA  120A  158A  24FB  120A  118A  	fcall	_DelayDs
  1880                           
  1881                           ;Main Card V10.0.c: 244: PORTCbits.RC1 = 0;
  1882  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1883  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1884  00E1  1087               	bcf	7,1	;volatile
  1885                           
  1886                           ;Main Card V10.0.c: 245: DelayDs(5);
  1887  00E2  3005               	movlw	5
  1888  00E3  00A0               	movwf	DelayDs@cnt
  1889  00E4  3000               	movlw	0
  1890  00E5  00A1               	movwf	DelayDs@cnt+1
  1891  00E6  120A  158A  24FB   	fcall	_DelayDs
  1892                           
  1893                           ;Main Card V10.0.c: 246: }
  1894  00E9  0008               	return
  1895  00EA                     l2072:	
  1896                           
  1897                           ;Main Card V10.0.c: 247: else if((strstr(TransmittedString,"SENSVAL")))
  1898  00EA  3065               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1899  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1900  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1901  00ED  00BC               	movwf	??_TransmittedDataHandler
  1902  00EE  083C               	movf	??_TransmittedDataHandler,w
  1903  00EF  00AE               	movwf	strstr@s2
  1904  00F0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1905  00F1  120A  158A  270B  120A  118A  	fcall	_strstr
  1906  00F6  3A00               	xorlw	0
  1907  00F7  1903               	skipnz
  1908  00F8  290C               	goto	l2078
  1909                           
  1910                           ;Main Card V10.0.c: 248: {
  1911                           ;Main Card V10.0.c: 249: unsigned char slask[8];
  1912                           ;Main Card V10.0.c: 250: slask[0] = AnalogValue(0);
  1913  00F9  3000               	movlw	0
  1914  00FA  120A  158A  2565  120A  118A  	fcall	_AnalogValue
  1915  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1916  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1917  0101  00BC               	movwf	??_TransmittedDataHandler
  1918  0102  083C               	movf	??_TransmittedDataHandler,w
  1919  0103  00BD               	movwf	TransmittedDataHandler@slask
  1920                           
  1921                           ;Main Card V10.0.c: 251: TransmittString(slask);
  1922  0104  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1923  0105  00B5               	movwf	TransmittString@dataString
  1924  0106  3000               	movlw	0
  1925  0107  00B6               	movwf	TransmittString@dataString+1
  1926  0108  120A  118A  23D7   	fcall	_TransmittString
  1927                           
  1928                           ;Main Card V10.0.c: 252: }
  1929  010B  0008               	return
  1930  010C                     l2078:	
  1931                           
  1932                           ;Main Card V10.0.c: 253: else if((strstr(TransmittedString,"POTVAL")))
  1933  010C  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1934  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1935  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1936  010F  00BC               	movwf	??_TransmittedDataHandler
  1937  0110  083C               	movf	??_TransmittedDataHandler,w
  1938  0111  00AE               	movwf	strstr@s2
  1939  0112  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1940  0113  120A  158A  270B  120A  118A  	fcall	_strstr
  1941  0118  3A00               	xorlw	0
  1942  0119  1903               	skipnz
  1943  011A  292E               	goto	l2084
  1944                           
  1945                           ;Main Card V10.0.c: 254: {
  1946                           ;Main Card V10.0.c: 255: unsigned char slask[8];
  1947                           ;Main Card V10.0.c: 256: slask[0] = AnalogValue(3);
  1948  011B  3003               	movlw	3
  1949  011C  120A  158A  2565  120A  118A  	fcall	_AnalogValue
  1950  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1951  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1952  0123  00BC               	movwf	??_TransmittedDataHandler
  1953  0124  083C               	movf	??_TransmittedDataHandler,w
  1954  0125  00C5               	movwf	TransmittedDataHandler@slask_700
  1955                           
  1956                           ;Main Card V10.0.c: 257: TransmittString(slask);
  1957  0126  3045               	movlw	(low (TransmittedDataHandler@slask_700| 0))& (0+255)
  1958  0127  00B5               	movwf	TransmittString@dataString
  1959  0128  3000               	movlw	0
  1960  0129  00B6               	movwf	TransmittString@dataString+1
  1961  012A  120A  118A  23D7   	fcall	_TransmittString
  1962                           
  1963                           ;Main Card V10.0.c: 258: }
  1964  012D  0008               	return
  1965  012E                     l2084:	
  1966                           
  1967                           ;Main Card V10.0.c: 259: else if((strstr(TransmittedString,"DARKCALC")))
  1968  012E  3044               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1969  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1970  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1971  0131  00BC               	movwf	??_TransmittedDataHandler
  1972  0132  083C               	movf	??_TransmittedDataHandler,w
  1973  0133  00AE               	movwf	strstr@s2
  1974  0134  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1975  0135  120A  158A  270B  120A  118A  	fcall	_strstr
  1976  013A  3A00               	xorlw	0
  1977  013B  1903               	skipnz
  1978  013C  2959               	goto	l2094
  1979                           
  1980                           ;Main Card V10.0.c: 260: {
  1981                           ;Main Card V10.0.c: 261: DarknessCheck();
  1982  013D  120A  158A  258E  120A  118A  	fcall	_DarknessCheck
  1983                           
  1984                           ;Main Card V10.0.c: 262: if(bDark)
  1985  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1986  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1987  0144  086D               	movf	_bDark,w
  1988  0145  1903               	btfsc	3,2
  1989  0146  294F               	goto	l2092
  1990                           
  1991                           ;Main Card V10.0.c: 263: TransmittString("It's Dark    ");
  1992  0147  3036               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1993  0148  00B5               	movwf	TransmittString@dataString
  1994  0149  3080               	movlw	128
  1995  014A  00B6               	movwf	TransmittString@dataString+1
  1996  014B  120A  118A  23D7   	fcall	_TransmittString
  1997  014E  0008               	return
  1998  014F                     l2092:	
  1999                           
  2000                           ;Main Card V10.0.c: 264: else
  2001                           ;Main Card V10.0.c: 265: TransmittString("Not Dark     ");
  2002  014F  3028               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  2003  0150  1283               	bcf	3,5	;RP0=0, select bank0
  2004  0151  1303               	bcf	3,6	;RP1=0, select bank0
  2005  0152  00B5               	movwf	TransmittString@dataString
  2006  0153  3080               	movlw	128
  2007  0154  00B6               	movwf	TransmittString@dataString+1
  2008  0155  120A  118A  23D7   	fcall	_TransmittString
  2009                           
  2010                           ;Main Card V10.0.c: 266: }
  2011  0158  0008               	return
  2012  0159                     l2094:	
  2013                           
  2014                           ;Main Card V10.0.c: 267: else if((strstr(TransmittedString,"STATE?")))
  2015  0159  306D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  2016  015A  1283               	bcf	3,5	;RP0=0, select bank0
  2017  015B  1303               	bcf	3,6	;RP1=0, select bank0
  2018  015C  00BC               	movwf	??_TransmittedDataHandler
  2019  015D  083C               	movf	??_TransmittedDataHandler,w
  2020  015E  00AE               	movwf	strstr@s2
  2021  015F  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2022  0160  120A  158A  270B  120A  118A  	fcall	_strstr
  2023  0165  3A00               	xorlw	0
  2024  0166  1903               	skipnz
  2025  0167  297F               	goto	l2102
  2026                           
  2027                           ;Main Card V10.0.c: 268: {
  2028                           ;Main Card V10.0.c: 269: if(bValueFromPot == TRUE)
  2029  0168  1283               	bcf	3,5	;RP0=0, select bank0
  2030  0169  1303               	bcf	3,6	;RP1=0, select bank0
  2031  016A  036F               	decf	_bValueFromPot,w
  2032  016B  1D03               	btfss	3,2
  2033  016C  2975               	goto	l2100
  2034                           
  2035                           ;Main Card V10.0.c: 270: TransmittString("Pot");
  2036  016D  3098               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  2037  016E  00B5               	movwf	TransmittString@dataString
  2038  016F  3080               	movlw	128
  2039  0170  00B6               	movwf	TransmittString@dataString+1
  2040  0171  120A  118A  23D7   	fcall	_TransmittString
  2041  0174  0008               	return
  2042  0175                     l2100:	
  2043                           
  2044                           ;Main Card V10.0.c: 271: else
  2045                           ;Main Card V10.0.c: 272: TransmittString("PIC");
  2046  0175  3094               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  2047  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2048  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2049  0178  00B5               	movwf	TransmittString@dataString
  2050  0179  3080               	movlw	128
  2051  017A  00B6               	movwf	TransmittString@dataString+1
  2052  017B  120A  118A  23D7   	fcall	_TransmittString
  2053                           
  2054                           ;Main Card V10.0.c: 274: }
  2055  017E  0008               	return
  2056  017F                     l2102:	
  2057                           
  2058                           ;Main Card V10.0.c: 275: else if((strstr(TransmittedString,"CHSTATE")))
  2059  017F  304D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2060  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2061  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2062  0182  00BC               	movwf	??_TransmittedDataHandler
  2063  0183  083C               	movf	??_TransmittedDataHandler,w
  2064  0184  00AE               	movwf	strstr@s2
  2065  0185  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2066  0186  120A  158A  270B  120A  118A  	fcall	_strstr
  2067  018B  3A00               	xorlw	0
  2068  018C  1903               	skipnz
  2069  018D  2998               	goto	l2108
  2070                           
  2071                           ;Main Card V10.0.c: 276: {
  2072                           ;Main Card V10.0.c: 277: if(bValueFromPot== TRUE)
  2073  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2074  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2075  0190  036F               	decf	_bValueFromPot,w
  2076  0191  1D03               	btfss	3,2
  2077  0192  2995               	goto	l223
  2078                           
  2079                           ;Main Card V10.0.c: 278: bValueFromPot= FALSE;
  2080  0193  01EF               	clrf	_bValueFromPot
  2081  0194  0008               	return
  2082  0195                     l223:	
  2083                           
  2084                           ;Main Card V10.0.c: 279: else
  2085                           ;Main Card V10.0.c: 280: bValueFromPot=TRUE;
  2086  0195  01EF               	clrf	_bValueFromPot
  2087  0196  0AEF               	incf	_bValueFromPot,f
  2088                           
  2089                           ;Main Card V10.0.c: 281: }
  2090  0197  0008               	return
  2091  0198                     l2108:	
  2092                           
  2093                           ;Main Card V10.0.c: 283: else if((strstr(TransmittedString,"RMDV")))
  2094  0198  308F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2095  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2096  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2097  019B  00BC               	movwf	??_TransmittedDataHandler
  2098  019C  083C               	movf	??_TransmittedDataHandler,w
  2099  019D  00AE               	movwf	strstr@s2
  2100  019E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2101  019F  120A  158A  270B  120A  118A  	fcall	_strstr
  2102  01A4  3A00               	xorlw	0
  2103  01A5  1903               	skipnz
  2104  01A6  29BA               	goto	l2114
  2105                           
  2106                           ;Main Card V10.0.c: 284: {
  2107                           ;Main Card V10.0.c: 285: unsigned char slask[8];
  2108                           ;Main Card V10.0.c: 286: slask[0] = eeprom_read(addressDarknessValue);
  2109  01A7  087C               	movf	_addressDarknessValue,w
  2110  01A8  120A  158A  2541  120A  118A  	fcall	_eeprom_read
  2111  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2112  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2113  01AF  00BC               	movwf	??_TransmittedDataHandler
  2114  01B0  083C               	movf	??_TransmittedDataHandler,w
  2115  01B1  00CD               	movwf	TransmittedDataHandler@slask_709
  2116                           
  2117                           ;Main Card V10.0.c: 287: TransmittString(slask);
  2118  01B2  304D               	movlw	(low (TransmittedDataHandler@slask_709| 0))& (0+255)
  2119  01B3  00B5               	movwf	TransmittString@dataString
  2120  01B4  3000               	movlw	0
  2121  01B5  00B6               	movwf	TransmittString@dataString+1
  2122  01B6  120A  118A  23D7   	fcall	_TransmittString
  2123                           
  2124                           ;Main Card V10.0.c: 289: }
  2125  01B9  0008               	return
  2126  01BA                     l2114:	
  2127                           
  2128                           ;Main Card V10.0.c: 291: else if((strstr(TransmittedString,"SETDV")))
  2129  01BA  3089               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2130  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2131  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2132  01BD  00BC               	movwf	??_TransmittedDataHandler
  2133  01BE  083C               	movf	??_TransmittedDataHandler,w
  2134  01BF  00AE               	movwf	strstr@s2
  2135  01C0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2136  01C1  120A  158A  270B  120A  118A  	fcall	_strstr
  2137  01C6  3A00               	xorlw	0
  2138  01C7  1903               	skipnz
  2139  01C8  0008               	return
  2140                           
  2141                           ;Main Card V10.0.c: 292: {
  2142                           ;Main Card V10.0.c: 294: int value;
  2143                           ;Main Card V10.0.c: 295: unsigned char slask[8];
  2144                           ;Main Card V10.0.c: 296: value = atoi(&TransmittedString[6]);
  2145  01C9  30BF               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2146  01CA  120A  118A  2729  120A  118A  	fcall	_atoi
  2147  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2148  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2149  01D1  0827               	movf	?_atoi+1,w
  2150  01D2  00DE               	movwf	TransmittedDataHandler@value+1
  2151  01D3  0826               	movf	?_atoi,w
  2152  01D4  00DD               	movwf	TransmittedDataHandler@value
  2153                           
  2154                           ;Main Card V10.0.c: 297: slask[0] = (unsigned char)value;
  2155  01D5  085D               	movf	TransmittedDataHandler@value,w
  2156  01D6  00BC               	movwf	??_TransmittedDataHandler
  2157  01D7  083C               	movf	??_TransmittedDataHandler,w
  2158  01D8  00D5               	movwf	TransmittedDataHandler@slask_712
  2159                           
  2160                           ;Main Card V10.0.c: 298: TransmittString(slask);
  2161  01D9  3055               	movlw	(low (TransmittedDataHandler@slask_712| 0))& (0+255)
  2162  01DA  00B5               	movwf	TransmittString@dataString
  2163  01DB  3000               	movlw	0
  2164  01DC  00B6               	movwf	TransmittString@dataString+1
  2165  01DD  120A  118A  23D7  120A  118A  	fcall	_TransmittString
  2166                           
  2167                           ;Main Card V10.0.c: 299: eeprom_write(addressDarknessValue,(unsigned char)value);
  2168  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2169  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2170  01E4  085D               	movf	TransmittedDataHandler@value,w
  2171  01E5  00BC               	movwf	??_TransmittedDataHandler
  2172  01E6  083C               	movf	??_TransmittedDataHandler,w
  2173  01E7  00A0               	movwf	eeprom_write@value
  2174  01E8  087C               	movf	_addressDarknessValue,w
  2175  01E9  120A  158A  25E3   	fcall	_eeprom_write
  2176  01EC  0008               	return
  2177  01ED                     __end_of_TransmittedDataHandler:	
  2178                           
  2179                           	psect	text5
  2180  0F0B                     __ptext5:	
  2181 ;; *************** function _strstr *****************
  2182 ;; Defined at:
  2183 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strstr.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;  s1              1    wreg     PTR const unsigned char 
  2186 ;;		 -> NULL(0), TransmittedString(30), 
  2187 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2188 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2189 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2190 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2191 ;; Auto vars:     Size  Location     Type
  2192 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2193 ;;		 -> NULL(0), TransmittedString(30), 
  2194 ;; Return value:  Size  Location     Type
  2195 ;;                  1    wreg      PTR unsigned char 
  2196 ;; Registers used:
  2197 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2198 ;; Tracked objects:
  2199 ;;		On entry : 0/0
  2200 ;;		On exit  : 0/0
  2201 ;;		Unchanged: 0/0
  2202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2203 ;;      Params:         0       1       0       0       0
  2204 ;;      Locals:         0       1       0       0       0
  2205 ;;      Temps:          0       3       0       0       0
  2206 ;;      Totals:         0       5       0       0       0
  2207 ;;Total ram usage:        5 bytes
  2208 ;; Hardware stack levels used:    1
  2209 ;; Hardware stack levels required when called:    3
  2210 ;; This function calls:
  2211 ;;		_strchr
  2212 ;;		_strlen
  2213 ;;		_strncmp
  2214 ;; This function is called by:
  2215 ;;		_TransmittedDataHandler
  2216 ;; This function uses a non-reentrant model
  2217 ;;
  2218                           
  2219                           
  2220                           ;psect for function _strstr
  2221  0F0B                     _strstr:	
  2222                           
  2223                           ;incstack = 0
  2224                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2225                           ;strstr@s1 stored from wreg
  2226  0F0B  1283               	bcf	3,5	;RP0=0, select bank0
  2227  0F0C  1303               	bcf	3,6	;RP1=0, select bank0
  2228  0F0D  00B2               	movwf	strstr@s1
  2229  0F0E  2F46               	goto	l1904
  2230  0F0F                     l1896:	
  2231  0F0F  082E               	movf	strstr@s2,w
  2232  0F10  00AF               	movwf	??_strstr
  2233  0F11  082F               	movf	??_strstr,w
  2234  0F12  00A8               	movwf	strncmp@s2
  2235  0F13  082E               	movf	strstr@s2,w
  2236  0F14  120A  158A  25B7  120A  158A  	fcall	_strlen
  2237  0F19  1283               	bcf	3,5	;RP0=0, select bank0
  2238  0F1A  1303               	bcf	3,6	;RP1=0, select bank0
  2239  0F1B  0821               	movf	?_strlen+1,w
  2240  0F1C  00AA               	movwf	strncmp@len+1
  2241  0F1D  0820               	movf	?_strlen,w
  2242  0F1E  00A9               	movwf	strncmp@len
  2243  0F1F  0832               	movf	strstr@s1,w
  2244  0F20  120A  158A  26C7  120A  158A  	fcall	_strncmp
  2245  0F25  1283               	bcf	3,5	;RP0=0, select bank0
  2246  0F26  1303               	bcf	3,6	;RP1=0, select bank0
  2247  0F27  0828               	movf	?_strncmp,w
  2248  0F28  0429               	iorwf	?_strncmp+1,w
  2249  0F29  1D03               	btfss	3,2
  2250  0F2A  2F2D               	goto	l1902
  2251  0F2B  0832               	movf	strstr@s1,w
  2252  0F2C  0008               	return
  2253  0F2D                     l1902:	
  2254  0F2D  082E               	movf	strstr@s2,w
  2255  0F2E  0084               	movwf	4
  2256  0F2F  120A  118A  260A  120A  158A  	fcall	stringdir
  2257  0F34  00AF               	movwf	??_strstr
  2258  0F35  01B0               	clrf	??_strstr+1
  2259  0F36  082F               	movf	??_strstr,w
  2260  0F37  00A0               	movwf	strchr@chr
  2261  0F38  0830               	movf	??_strstr+1,w
  2262  0F39  00A1               	movwf	strchr@chr+1
  2263  0F3A  0832               	movf	strstr@s1,w
  2264  0F3B  3E01               	addlw	1
  2265  0F3C  120A  158A  2499  120A  158A  	fcall	_strchr
  2266  0F41  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0F42  1303               	bcf	3,6	;RP1=0, select bank0
  2268  0F43  00B1               	movwf	??_strstr+2
  2269  0F44  0831               	movf	??_strstr+2,w
  2270  0F45  00B2               	movwf	strstr@s1
  2271  0F46                     l1904:	
  2272  0F46  0832               	movf	strstr@s1,w
  2273  0F47  1903               	btfsc	3,2
  2274  0F48  2F4F               	goto	l1908
  2275  0F49  0832               	movf	strstr@s1,w
  2276  0F4A  0084               	movwf	4
  2277  0F4B  1383               	bcf	3,7	;select IRP bank0
  2278  0F4C  0800               	movf	0,w
  2279  0F4D  1D03               	btfss	3,2
  2280  0F4E  2F0F               	goto	l1896
  2281  0F4F                     l1908:	
  2282  0F4F  3000               	movlw	0
  2283  0F50  0008               	return
  2284  0F51                     __end_of_strstr:	
  2285                           
  2286                           	psect	text6
  2287  0EC7                     __ptext6:	
  2288 ;; *************** function _strncmp *****************
  2289 ;; Defined at:
  2290 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strncmp.c"
  2291 ;; Parameters:    Size  Location     Type
  2292 ;;  s1              1    wreg     PTR const unsigned char 
  2293 ;;		 -> NULL(0), TransmittedString(30), 
  2294 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2295 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2296 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2297 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2298 ;;  len             2    9[BANK0 ] unsigned int 
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2301 ;;		 -> NULL(0), TransmittedString(30), 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  2    8[BANK0 ] int 
  2304 ;; Registers used:
  2305 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       3       0       0       0
  2312 ;;      Locals:         0       1       0       0       0
  2313 ;;      Temps:          0       2       0       0       0
  2314 ;;      Totals:         0       6       0       0       0
  2315 ;;Total ram usage:        6 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; Hardware stack levels required when called:    2
  2318 ;; This function calls:
  2319 ;;		Nothing
  2320 ;; This function is called by:
  2321 ;;		_strstr
  2322 ;; This function uses a non-reentrant model
  2323 ;;
  2324                           
  2325                           
  2326                           ;psect for function _strncmp
  2327  0EC7                     _strncmp:	
  2328                           
  2329                           ;incstack = 0
  2330                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2331                           ;strncmp@s1 stored from wreg
  2332  0EC7  1283               	bcf	3,5	;RP0=0, select bank0
  2333  0EC8  1303               	bcf	3,6	;RP1=0, select bank0
  2334  0EC9  00AD               	movwf	strncmp@s1
  2335  0ECA                     l908:	
  2336  0ECA  3001               	movlw	1
  2337  0ECB  02A9               	subwf	strncmp@len,f
  2338  0ECC  3000               	movlw	0
  2339  0ECD  1C03               	skipc
  2340  0ECE  03AA               	decf	strncmp@len+1,f
  2341  0ECF  02AA               	subwf	strncmp@len+1,f
  2342  0ED0  0A29               	incf	strncmp@len,w
  2343  0ED1  1903               	btfsc	3,2
  2344  0ED2  0A2A               	incf	strncmp@len+1,w
  2345  0ED3  1903               	btfsc	3,2
  2346  0ED4  2F08               	goto	l1872
  2347  0ED5  082D               	movf	strncmp@s1,w
  2348  0ED6  0084               	movwf	4
  2349  0ED7  1383               	bcf	3,7	;select IRP bank0
  2350  0ED8  0800               	movf	0,w
  2351  0ED9  1903               	btfsc	3,2
  2352  0EDA  2EE9               	goto	l1866
  2353  0EDB  0828               	movf	strncmp@s2,w
  2354  0EDC  0084               	movwf	4
  2355  0EDD  120A  118A  260A  120A  158A  	fcall	stringdir
  2356  0EE2  00AB               	movwf	??_strncmp
  2357  0EE3  082D               	movf	strncmp@s1,w
  2358  0EE4  0084               	movwf	4
  2359  0EE5  0800               	movf	0,w
  2360  0EE6  062B               	xorwf	??_strncmp,w
  2361  0EE7  1903               	skipnz
  2362  0EE8  2EFF               	goto	l1870
  2363  0EE9                     l1866:	
  2364  0EE9  0828               	movf	strncmp@s2,w
  2365  0EEA  0084               	movwf	4
  2366  0EEB  120A  118A  260A   	fcall	stringdir
  2367  0EEE  00AB               	movwf	??_strncmp
  2368  0EEF  01AC               	clrf	??_strncmp+1
  2369  0EF0  09AB               	comf	??_strncmp,f
  2370  0EF1  09AC               	comf	??_strncmp+1,f
  2371  0EF2  0AAB               	incf	??_strncmp,f
  2372  0EF3  1903               	skipnz
  2373  0EF4  0AAC               	incf	??_strncmp+1,f
  2374  0EF5  082D               	movf	strncmp@s1,w
  2375  0EF6  0084               	movwf	4
  2376  0EF7  0800               	movf	0,w
  2377  0EF8  072B               	addwf	??_strncmp,w
  2378  0EF9  00A8               	movwf	?_strncmp
  2379  0EFA  082C               	movf	??_strncmp+1,w
  2380  0EFB  1803               	skipnc
  2381  0EFC  0A2C               	incf	??_strncmp+1,w
  2382  0EFD  00A9               	movwf	?_strncmp+1
  2383  0EFE  0008               	return
  2384  0EFF                     l1870:	
  2385  0EFF  3001               	movlw	1
  2386  0F00  00AB               	movwf	??_strncmp
  2387  0F01  082B               	movf	??_strncmp,w
  2388  0F02  07AD               	addwf	strncmp@s1,f
  2389  0F03  3001               	movlw	1
  2390  0F04  00AB               	movwf	??_strncmp
  2391  0F05  082B               	movf	??_strncmp,w
  2392  0F06  07A8               	addwf	strncmp@s2,f
  2393  0F07  2ECA               	goto	l908
  2394  0F08                     l1872:	
  2395  0F08  01A8               	clrf	?_strncmp
  2396  0F09  01A9               	clrf	?_strncmp+1
  2397  0F0A  0008               	return
  2398  0F0B                     __end_of_strncmp:	
  2399                           
  2400                           	psect	text7
  2401  0DB7                     __ptext7:	
  2402 ;; *************** function _strlen *****************
  2403 ;; Defined at:
  2404 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strlen.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;  s               1    wreg     PTR const unsigned char 
  2407 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2408 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2409 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2412 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2413 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2414 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2415 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2416 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2417 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2418 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  2    0[BANK0 ] unsigned int 
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       2       0       0       0
  2429 ;;      Locals:         0       2       0       0       0
  2430 ;;      Temps:          0       4       0       0       0
  2431 ;;      Totals:         0       8       0       0       0
  2432 ;;Total ram usage:        8 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    2
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_strstr
  2439 ;; This function uses a non-reentrant model
  2440 ;;
  2441                           
  2442                           
  2443                           ;psect for function _strlen
  2444  0DB7                     _strlen:	
  2445                           
  2446                           ;incstack = 0
  2447                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2448                           ;strlen@s stored from wreg
  2449  0DB7  1283               	bcf	3,5	;RP0=0, select bank0
  2450  0DB8  1303               	bcf	3,6	;RP1=0, select bank0
  2451  0DB9  00A6               	movwf	strlen@s
  2452  0DBA  0826               	movf	strlen@s,w
  2453  0DBB  00A2               	movwf	??_strlen
  2454  0DBC  0822               	movf	??_strlen,w
  2455  0DBD  00A7               	movwf	strlen@cp
  2456  0DBE                     l1854:	
  2457  0DBE  0827               	movf	strlen@cp,w
  2458  0DBF  0084               	movwf	4
  2459  0DC0  120A  118A  260A  120A  158A  	fcall	stringdir
  2460  0DC5  3A00               	xorlw	0
  2461  0DC6  1903               	btfsc	3,2
  2462  0DC7  2DCD               	goto	l1856
  2463  0DC8  3001               	movlw	1
  2464  0DC9  00A2               	movwf	??_strlen
  2465  0DCA  0822               	movf	??_strlen,w
  2466  0DCB  07A7               	addwf	strlen@cp,f
  2467  0DCC  2DBE               	goto	l1854
  2468  0DCD                     l1856:	
  2469  0DCD  0826               	movf	strlen@s,w
  2470  0DCE  00A2               	movwf	??_strlen
  2471  0DCF  3080               	movlw	128
  2472  0DD0  00A3               	movwf	??_strlen+1
  2473  0DD1  09A2               	comf	??_strlen,f
  2474  0DD2  09A3               	comf	??_strlen+1,f
  2475  0DD3  0AA2               	incf	??_strlen,f
  2476  0DD4  1903               	skipnz
  2477  0DD5  0AA3               	incf	??_strlen+1,f
  2478  0DD6  0827               	movf	strlen@cp,w
  2479  0DD7  00A4               	movwf	??_strlen+2
  2480  0DD8  3080               	movlw	128
  2481  0DD9  00A5               	movwf	??_strlen+3
  2482  0DDA  0822               	movf	??_strlen,w
  2483  0DDB  0724               	addwf	??_strlen+2,w
  2484  0DDC  00A0               	movwf	?_strlen
  2485  0DDD  0823               	movf	??_strlen+1,w
  2486  0DDE  1803               	skipnc
  2487  0DDF  0A23               	incf	??_strlen+1,w
  2488  0DE0  0725               	addwf	??_strlen+3,w
  2489  0DE1  00A1               	movwf	?_strlen+1
  2490  0DE2  0008               	return
  2491  0DE3                     __end_of_strlen:	
  2492                           
  2493                           	psect	text8
  2494  0C99                     __ptext8:	
  2495 ;; *************** function _strchr *****************
  2496 ;; Defined at:
  2497 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\strchr.c"
  2498 ;; Parameters:    Size  Location     Type
  2499 ;;  ptr             1    wreg     PTR const unsigned char 
  2500 ;;		 -> NULL(0), TransmittedString(30), 
  2501 ;;  chr             2    0[BANK0 ] int 
  2502 ;; Auto vars:     Size  Location     Type
  2503 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2504 ;;		 -> NULL(0), TransmittedString(30), 
  2505 ;; Return value:  Size  Location     Type
  2506 ;;                  1    wreg      PTR unsigned char 
  2507 ;; Registers used:
  2508 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2509 ;; Tracked objects:
  2510 ;;		On entry : 0/0
  2511 ;;		On exit  : 0/0
  2512 ;;		Unchanged: 0/0
  2513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2514 ;;      Params:         0       2       0       0       0
  2515 ;;      Locals:         0       1       0       0       0
  2516 ;;      Temps:          0       0       0       0       0
  2517 ;;      Totals:         0       3       0       0       0
  2518 ;;Total ram usage:        3 bytes
  2519 ;; Hardware stack levels used:    1
  2520 ;; Hardware stack levels required when called:    2
  2521 ;; This function calls:
  2522 ;;		Nothing
  2523 ;; This function is called by:
  2524 ;;		_strstr
  2525 ;; This function uses a non-reentrant model
  2526 ;;
  2527                           
  2528                           
  2529                           ;psect for function _strchr
  2530  0C99                     _strchr:	
  2531                           
  2532                           ;incstack = 0
  2533                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2534                           ;strchr@ptr stored from wreg
  2535  0C99  1283               	bcf	3,5	;RP0=0, select bank0
  2536  0C9A  1303               	bcf	3,6	;RP1=0, select bank0
  2537  0C9B  00A2               	movwf	strchr@ptr
  2538  0C9C                     l896:	
  2539  0C9C  0822               	movf	strchr@ptr,w
  2540  0C9D  0084               	movwf	4
  2541  0C9E  1383               	bcf	3,7	;select IRP bank0
  2542  0C9F  0800               	movf	0,w
  2543  0CA0  0620               	xorwf	strchr@chr,w
  2544  0CA1  1D03               	skipz
  2545  0CA2  2CA5               	goto	l1882
  2546  0CA3  0822               	movf	strchr@ptr,w
  2547  0CA4  0008               	return
  2548  0CA5                     l1882:	
  2549  0CA5  0822               	movf	strchr@ptr,w
  2550  0CA6  0084               	movwf	4
  2551  0CA7  3001               	movlw	1
  2552  0CA8  07A2               	addwf	strchr@ptr,f
  2553  0CA9  0800               	movf	0,w
  2554  0CAA  1D03               	btfss	3,2
  2555  0CAB  2C9C               	goto	l896
  2556  0CAC  3000               	movlw	0
  2557  0CAD  0008               	return
  2558  0CAE                     __end_of_strchr:	
  2559                           
  2560                           	psect	text9
  2561  0DE3                     __ptext9:	
  2562 ;; *************** function _eeprom_write *****************
  2563 ;; Defined at:
  2564 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eewrite.c"
  2565 ;; Parameters:    Size  Location     Type
  2566 ;;  addr            1    wreg     unsigned char 
  2567 ;;  value           1    0[BANK0 ] unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  addr            1    2[BANK0 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;                  1    wreg      void 
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0
  2574 ;; Tracked objects:
  2575 ;;		On entry : 0/0
  2576 ;;		On exit  : 0/0
  2577 ;;		Unchanged: 0/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2579 ;;      Params:         0       1       0       0       0
  2580 ;;      Locals:         0       1       0       0       0
  2581 ;;      Temps:          0       1       0       0       0
  2582 ;;      Totals:         0       3       0       0       0
  2583 ;;Total ram usage:        3 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:    2
  2586 ;; This function calls:
  2587 ;;		Nothing
  2588 ;; This function is called by:
  2589 ;;		_TransmittedDataHandler
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _eeprom_write
  2595  0DE3                     _eeprom_write:	
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2599                           ;eeprom_write@addr stored from wreg
  2600  0DE3  1283               	bcf	3,5	;RP0=0, select bank0
  2601  0DE4  1303               	bcf	3,6	;RP1=0, select bank0
  2602  0DE5  00A2               	movwf	eeprom_write@addr
  2603  0DE6                     l414:	
  2604  0DE6  1683               	bsf	3,5	;RP0=1, select bank3
  2605  0DE7  1703               	bsf	3,6	;RP1=1, select bank3
  2606  0DE8  188C               	btfsc	12,1	;volsfr
  2607  0DE9  2DE6               	goto	l414
  2608  0DEA  1283               	bcf	3,5	;RP0=0, select bank0
  2609  0DEB  1303               	bcf	3,6	;RP1=0, select bank0
  2610  0DEC  0822               	movf	eeprom_write@addr,w
  2611  0DED  1283               	bcf	3,5	;RP0=0, select bank2
  2612  0DEE  1703               	bsf	3,6	;RP1=1, select bank2
  2613  0DEF  008D               	movwf	13	;volatile
  2614  0DF0  1283               	bcf	3,5	;RP0=0, select bank0
  2615  0DF1  1303               	bcf	3,6	;RP1=0, select bank0
  2616  0DF2  0820               	movf	eeprom_write@value,w
  2617  0DF3  1283               	bcf	3,5	;RP0=0, select bank2
  2618  0DF4  1703               	bsf	3,6	;RP1=1, select bank2
  2619  0DF5  008C               	movwf	12	;volatile
  2620  0DF6  303F               	movlw	63
  2621  0DF7  1283               	bcf	3,5	;RP0=0, select bank0
  2622  0DF8  1303               	bcf	3,6	;RP1=0, select bank0
  2623  0DF9  00A1               	movwf	??_eeprom_write
  2624  0DFA  0821               	movf	??_eeprom_write,w
  2625  0DFB  1683               	bsf	3,5	;RP0=1, select bank3
  2626  0DFC  1703               	bsf	3,6	;RP1=1, select bank3
  2627  0DFD  058C               	andwf	12,f	;volsfr
  2628  0DFE  1283               	bcf	3,5	;RP0=0, select bank0
  2629  0DFF  1303               	bcf	3,6	;RP1=0, select bank0
  2630  0E00  1003               	bcf	3,0	;volatile
  2631  0E01  1B8B               	btfsc	11,7	;volatile
  2632  0E02  1403               	bsf	3,0	;volatile
  2633  0E03  138B               	bcf	11,7	;volatile
  2634  0E04  1683               	bsf	3,5	;RP0=1, select bank3
  2635  0E05  1703               	bsf	3,6	;RP1=1, select bank3
  2636  0E06  150C               	bsf	12,2	;volsfr
  2637  0E07  3055               	movlw	85
  2638  0E08  008D               	movwf	13	;volsfr
  2639  0E09  30AA               	movlw	170
  2640  0E0A  008D               	movwf	13	;volsfr
  2641  0E0B  148C               	bsf	12,1	;volsfr
  2642  0E0C  110C               	bcf	12,2	;volsfr
  2643  0E0D  1283               	bcf	3,5	;RP0=0, select bank0
  2644  0E0E  1303               	bcf	3,6	;RP1=0, select bank0
  2645  0E0F  1C03               	btfss	3,0	;volatile
  2646  0E10  0008               	return
  2647  0E11  178B               	bsf	11,7	;volatile
  2648  0E12  0008               	return
  2649  0E13                     __end_of_eeprom_write:	
  2650                           
  2651                           	psect	text10
  2652  0729                     __ptext10:	
  2653 ;; *************** function _atoi *****************
  2654 ;; Defined at:
  2655 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\atoi.c"
  2656 ;; Parameters:    Size  Location     Type
  2657 ;;  s               1    wreg     PTR const unsigned char 
  2658 ;;		 -> TransmittedString(30), 
  2659 ;; Auto vars:     Size  Location     Type
  2660 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2661 ;;		 -> TransmittedString(30), 
  2662 ;;  a               2   11[BANK0 ] int 
  2663 ;;  sign            1   10[BANK0 ] unsigned char 
  2664 ;; Return value:  Size  Location     Type
  2665 ;;                  2    6[BANK0 ] int 
  2666 ;; Registers used:
  2667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2668 ;; Tracked objects:
  2669 ;;		On entry : 0/0
  2670 ;;		On exit  : 0/0
  2671 ;;		Unchanged: 0/0
  2672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2673 ;;      Params:         0       2       0       0       0
  2674 ;;      Locals:         0       4       0       0       0
  2675 ;;      Temps:          0       2       0       0       0
  2676 ;;      Totals:         0       8       0       0       0
  2677 ;;Total ram usage:        8 bytes
  2678 ;; Hardware stack levels used:    1
  2679 ;; Hardware stack levels required when called:    3
  2680 ;; This function calls:
  2681 ;;		___wmul
  2682 ;;		_isdigit
  2683 ;; This function is called by:
  2684 ;;		_TransmittedDataHandler
  2685 ;; This function uses a non-reentrant model
  2686 ;;
  2687                           
  2688                           
  2689                           ;psect for function _atoi
  2690  0729                     _atoi:	
  2691                           
  2692                           ;incstack = 0
  2693                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2694                           ;atoi@s stored from wreg
  2695  0729  1283               	bcf	3,5	;RP0=0, select bank0
  2696  072A  1303               	bcf	3,6	;RP1=0, select bank0
  2697  072B  00AD               	movwf	atoi@s
  2698  072C                     l1976:	
  2699  072C  082D               	movf	atoi@s,w
  2700  072D  0084               	movwf	4
  2701  072E  3020               	movlw	32
  2702  072F  1383               	bcf	3,7	;select IRP bank0
  2703  0730  0600               	xorwf	0,w
  2704  0731  1D03               	btfss	3,2
  2705  0732  2F38               	goto	l1978
  2706  0733                     l1974:	
  2707  0733  3001               	movlw	1
  2708  0734  00A8               	movwf	??_atoi
  2709  0735  0828               	movf	??_atoi,w
  2710  0736  07AD               	addwf	atoi@s,f
  2711  0737  2F2C               	goto	l1976
  2712  0738                     l1978:	
  2713  0738  082D               	movf	atoi@s,w
  2714  0739  0084               	movwf	4
  2715  073A  3009               	movlw	9
  2716  073B  0600               	xorwf	0,w
  2717  073C  1903               	btfsc	3,2
  2718  073D  2F33               	goto	l1974
  2719  073E  01AB               	clrf	atoi@a
  2720  073F  01AC               	clrf	atoi@a+1
  2721  0740  01AA               	clrf	atoi@sign
  2722  0741  082D               	movf	atoi@s,w
  2723  0742  0084               	movwf	4
  2724  0743  302D               	movlw	45
  2725  0744  0600               	xorwf	0,w
  2726  0745  1D03               	btfss	3,2
  2727  0746  2F4C               	goto	l1986
  2728  0747  3001               	movlw	1
  2729  0748  00A8               	movwf	??_atoi
  2730  0749  0828               	movf	??_atoi,w
  2731  074A  07AA               	addwf	atoi@sign,f
  2732  074B  2F52               	goto	l1992
  2733  074C                     l1986:	
  2734  074C  082D               	movf	atoi@s,w
  2735  074D  0084               	movwf	4
  2736  074E  302B               	movlw	43
  2737  074F  0600               	xorwf	0,w
  2738  0750  1D03               	btfss	3,2
  2739  0751  2F56               	goto	l1994
  2740  0752                     l1992:	
  2741  0752  3001               	movlw	1
  2742  0753  00A8               	movwf	??_atoi
  2743  0754  0828               	movf	??_atoi,w
  2744  0755  07AD               	addwf	atoi@s,f
  2745  0756                     l1994:	
  2746  0756  082D               	movf	atoi@s,w
  2747  0757  0084               	movwf	4
  2748  0758  0800               	movf	0,w
  2749  0759  120A  158A  2455  120A  118A  	fcall	_isdigit
  2750  075E  1C03               	btfss	3,0
  2751  075F  2F84               	goto	l1996
  2752  0760  1283               	bcf	3,5	;RP0=0, select bank0
  2753  0761  1303               	bcf	3,6	;RP1=0, select bank0
  2754  0762  082C               	movf	atoi@a+1,w
  2755  0763  00A1               	movwf	___wmul@multiplier+1
  2756  0764  082B               	movf	atoi@a,w
  2757  0765  00A0               	movwf	___wmul@multiplier
  2758  0766  300A               	movlw	10
  2759  0767  00A2               	movwf	___wmul@multiplicand
  2760  0768  3000               	movlw	0
  2761  0769  00A3               	movwf	___wmul@multiplicand+1
  2762  076A  120A  158A  251E  120A  118A  	fcall	___wmul
  2763  076F  1283               	bcf	3,5	;RP0=0, select bank0
  2764  0770  1303               	bcf	3,6	;RP1=0, select bank0
  2765  0771  082D               	movf	atoi@s,w
  2766  0772  0084               	movwf	4
  2767  0773  1383               	bcf	3,7	;select IRP bank0
  2768  0774  0800               	movf	0,w
  2769  0775  0720               	addwf	?___wmul,w
  2770  0776  00A8               	movwf	??_atoi
  2771  0777  0821               	movf	?___wmul+1,w
  2772  0778  1803               	skipnc
  2773  0779  0A21               	incf	?___wmul+1,w
  2774  077A  00A9               	movwf	??_atoi+1
  2775  077B  0828               	movf	??_atoi,w
  2776  077C  3ED0               	addlw	208
  2777  077D  00AB               	movwf	atoi@a
  2778  077E  0829               	movf	??_atoi+1,w
  2779  077F  1803               	skipnc
  2780  0780  3E01               	addlw	1
  2781  0781  3EFF               	addlw	255
  2782  0782  00AC               	movwf	atoi@a+1
  2783  0783  2F52               	goto	l1992
  2784  0784                     l1996:	
  2785  0784  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0785  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0786  082A               	movf	atoi@sign,w
  2788  0787  1903               	btfsc	3,2
  2789  0788  2F95               	goto	l2002
  2790  0789  092B               	comf	atoi@a,w
  2791  078A  00A8               	movwf	??_atoi
  2792  078B  092C               	comf	atoi@a+1,w
  2793  078C  00A9               	movwf	??_atoi+1
  2794  078D  0AA8               	incf	??_atoi,f
  2795  078E  1903               	skipnz
  2796  078F  0AA9               	incf	??_atoi+1,f
  2797  0790  0828               	movf	??_atoi,w
  2798  0791  00A6               	movwf	?_atoi
  2799  0792  0829               	movf	??_atoi+1,w
  2800  0793  00A7               	movwf	?_atoi+1
  2801  0794  0008               	return
  2802  0795                     l2002:	
  2803  0795  082C               	movf	atoi@a+1,w
  2804  0796  00A7               	movwf	?_atoi+1
  2805  0797  082B               	movf	atoi@a,w
  2806  0798  00A6               	movwf	?_atoi
  2807  0799  0008               	return
  2808  079A                     __end_of_atoi:	
  2809                           
  2810                           	psect	text11
  2811  0C55                     __ptext11:	
  2812 ;; *************** function _isdigit *****************
  2813 ;; Defined at:
  2814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\isdigit.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  c               1    wreg     unsigned char 
  2817 ;; Auto vars:     Size  Location     Type
  2818 ;;  c               1    1[BANK0 ] unsigned char 
  2819 ;; Return value:  Size  Location     Type
  2820 ;;		None               void
  2821 ;; Registers used:
  2822 ;;		wreg, status,2, status,0
  2823 ;; Tracked objects:
  2824 ;;		On entry : 0/0
  2825 ;;		On exit  : 0/0
  2826 ;;		Unchanged: 0/0
  2827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2828 ;;      Params:         0       0       0       0       0
  2829 ;;      Locals:         0       2       0       0       0
  2830 ;;      Temps:          0       0       0       0       0
  2831 ;;      Totals:         0       2       0       0       0
  2832 ;;Total ram usage:        2 bytes
  2833 ;; Hardware stack levels used:    1
  2834 ;; Hardware stack levels required when called:    2
  2835 ;; This function calls:
  2836 ;;		Nothing
  2837 ;; This function is called by:
  2838 ;;		_atoi
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           
  2843                           ;psect for function _isdigit
  2844  0C55                     _isdigit:	
  2845                           
  2846                           ;incstack = 0
  2847                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2848                           ;isdigit@c stored from wreg
  2849  0C55  1283               	bcf	3,5	;RP0=0, select bank0
  2850  0C56  1303               	bcf	3,6	;RP1=0, select bank0
  2851  0C57  00A1               	movwf	isdigit@c
  2852  0C58  01A0               	clrf	_isdigit$1084
  2853  0C59  303A               	movlw	58
  2854  0C5A  0221               	subwf	isdigit@c,w
  2855  0C5B  1803               	skipnc
  2856  0C5C  2C63               	goto	l1846
  2857  0C5D  3030               	movlw	48
  2858  0C5E  0221               	subwf	isdigit@c,w
  2859  0C5F  1C03               	skipc
  2860  0C60  2C63               	goto	l1846
  2861  0C61  01A0               	clrf	_isdigit$1084
  2862  0C62  0AA0               	incf	_isdigit$1084,f
  2863  0C63                     l1846:	
  2864  0C63  0C20               	rrf	_isdigit$1084,w
  2865  0C64  0008               	return
  2866  0C65                     __end_of_isdigit:	
  2867                           
  2868                           	psect	text12
  2869  0D1E                     __ptext12:	
  2870 ;; *************** function ___wmul *****************
  2871 ;; Defined at:
  2872 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul16.c"
  2873 ;; Parameters:    Size  Location     Type
  2874 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2875 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2876 ;; Auto vars:     Size  Location     Type
  2877 ;;  product         2    4[BANK0 ] unsigned int 
  2878 ;; Return value:  Size  Location     Type
  2879 ;;                  2    0[BANK0 ] unsigned int 
  2880 ;; Registers used:
  2881 ;;		wreg, status,2, status,0
  2882 ;; Tracked objects:
  2883 ;;		On entry : 0/0
  2884 ;;		On exit  : 0/0
  2885 ;;		Unchanged: 0/0
  2886 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2887 ;;      Params:         0       4       0       0       0
  2888 ;;      Locals:         0       2       0       0       0
  2889 ;;      Temps:          0       0       0       0       0
  2890 ;;      Totals:         0       6       0       0       0
  2891 ;;Total ram usage:        6 bytes
  2892 ;; Hardware stack levels used:    1
  2893 ;; Hardware stack levels required when called:    2
  2894 ;; This function calls:
  2895 ;;		Nothing
  2896 ;; This function is called by:
  2897 ;;		_atoi
  2898 ;; This function uses a non-reentrant model
  2899 ;;
  2900                           
  2901                           
  2902                           ;psect for function ___wmul
  2903  0D1E                     ___wmul:	
  2904                           
  2905                           ;incstack = 0
  2906                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2907  0D1E  1283               	bcf	3,5	;RP0=0, select bank0
  2908  0D1F  1303               	bcf	3,6	;RP1=0, select bank0
  2909  0D20  01A4               	clrf	___wmul@product
  2910  0D21  01A5               	clrf	___wmul@product+1
  2911  0D22                     l1826:	
  2912  0D22  1C20               	btfss	___wmul@multiplier,0
  2913  0D23  2D2A               	goto	l504
  2914  0D24  0822               	movf	___wmul@multiplicand,w
  2915  0D25  07A4               	addwf	___wmul@product,f
  2916  0D26  1803               	skipnc
  2917  0D27  0AA5               	incf	___wmul@product+1,f
  2918  0D28  0823               	movf	___wmul@multiplicand+1,w
  2919  0D29  07A5               	addwf	___wmul@product+1,f
  2920  0D2A                     l504:	
  2921  0D2A  3001               	movlw	1
  2922  0D2B                     u1195:	
  2923  0D2B  1003               	clrc
  2924  0D2C  0DA2               	rlf	___wmul@multiplicand,f
  2925  0D2D  0DA3               	rlf	___wmul@multiplicand+1,f
  2926  0D2E  3EFF               	addlw	-1
  2927  0D2F  1D03               	skipz
  2928  0D30  2D2B               	goto	u1195
  2929  0D31  3001               	movlw	1
  2930  0D32                     u1205:	
  2931  0D32  1003               	clrc
  2932  0D33  0CA1               	rrf	___wmul@multiplier+1,f
  2933  0D34  0CA0               	rrf	___wmul@multiplier,f
  2934  0D35  3EFF               	addlw	-1
  2935  0D36  1D03               	skipz
  2936  0D37  2D32               	goto	u1205
  2937  0D38  0820               	movf	___wmul@multiplier,w
  2938  0D39  0421               	iorwf	___wmul@multiplier+1,w
  2939  0D3A  1D03               	btfss	3,2
  2940  0D3B  2D22               	goto	l1826
  2941  0D3C  0825               	movf	___wmul@product+1,w
  2942  0D3D  00A1               	movwf	?___wmul+1
  2943  0D3E  0824               	movf	___wmul@product,w
  2944  0D3F  00A0               	movwf	?___wmul
  2945  0D40  0008               	return
  2946  0D41                     __end_of___wmul:	
  2947                           
  2948                           	psect	text13
  2949  0C17                     __ptext13:	
  2950 ;; *************** function _OperationMode *****************
  2951 ;; Defined at:
  2952 ;;		line 1042 in file "../Main Card V10.0.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       1       0       0       0
  2968 ;;      Temps:          0       1       0       0       0
  2969 ;;      Totals:         0       2       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    2
  2973 ;; This function calls:
  2974 ;;		Nothing
  2975 ;; This function is called by:
  2976 ;;		_main
  2977 ;;		_TransmittedDataHandler
  2978 ;; This function uses a non-reentrant model
  2979 ;;
  2980                           
  2981                           
  2982                           ;psect for function _OperationMode
  2983  0C17                     _OperationMode:	
  2984                           
  2985                           ;Main Card V10.0.c: 1044: unsigned char bracketStatus;
  2986                           ;Main Card V10.0.c: 1045: bracketStatus = ((~PORTB) & 0b00000111) ;
  2987                           
  2988                           ;incstack = 0
  2989                           ; Regs used in _OperationMode: [wreg+status,2]
  2990  0C17  1283               	bcf	3,5	;RP0=0, select bank0
  2991  0C18  1303               	bcf	3,6	;RP1=0, select bank0
  2992  0C19  0906               	comf	6,w	;volatile
  2993  0C1A  3907               	andlw	7
  2994  0C1B  00A0               	movwf	??_OperationMode
  2995  0C1C  0820               	movf	??_OperationMode,w
  2996  0C1D  00A1               	movwf	OperationMode@bracketStatus
  2997                           
  2998                           ;Main Card V10.0.c: 1047: return bracketStatus;
  2999  0C1E  0821               	movf	OperationMode@bracketStatus,w
  3000  0C1F  0008               	return
  3001  0C20                     __end_of_OperationMode:	
  3002                           
  3003                           	psect	text14
  3004  0C47                     __ptext14:	
  3005 ;; *************** function _ReadFIFO *****************
  3006 ;; Defined at:
  3007 ;;		line 859 in file "../Main Card V10.0.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;  value           1    4[BANK0 ] unsigned char 
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      unsigned char 
  3014 ;; Registers used:
  3015 ;;		wreg, status,2, status,0, pclath, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3021 ;;      Params:         0       0       0       0       0
  3022 ;;      Locals:         0       1       0       0       0
  3023 ;;      Temps:          0       1       0       0       0
  3024 ;;      Totals:         0       2       0       0       0
  3025 ;;Total ram usage:        2 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    4
  3028 ;; This function calls:
  3029 ;;		_ReadSPI
  3030 ;; This function is called by:
  3031 ;;		_TransiverReadFIFO
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           
  3036                           ;psect for function _ReadFIFO
  3037  0C47                     _ReadFIFO:	
  3038                           
  3039                           ;Main Card V10.0.c: 861: BYTE value;
  3040                           ;Main Card V10.0.c: 862: PORTAbits.RA5 = 0;
  3041                           
  3042                           ;incstack = 0
  3043                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  3044  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3045  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3046  0C49  1285               	bcf	5,5	;volatile
  3047                           
  3048                           ;Main Card V10.0.c: 863: value = ReadSPI();
  3049  0C4A  120A  158A  23FE   	fcall	_ReadSPI
  3050  0C4D  1283               	bcf	3,5	;RP0=0, select bank0
  3051  0C4E  1303               	bcf	3,6	;RP1=0, select bank0
  3052  0C4F  00A3               	movwf	??_ReadFIFO
  3053  0C50  0823               	movf	??_ReadFIFO,w
  3054  0C51  00A4               	movwf	ReadFIFO@value
  3055                           
  3056                           ;Main Card V10.0.c: 864: PORTAbits.RA5 = 1;
  3057  0C52  1685               	bsf	5,5	;volatile
  3058                           
  3059                           ;Main Card V10.0.c: 865: return value;
  3060  0C53  0824               	movf	ReadFIFO@value,w
  3061  0C54  0008               	return
  3062  0C55                     __end_of_ReadFIFO:	
  3063                           
  3064                           	psect	text15
  3065  02ED                     __ptext15:	
  3066 ;; *************** function _TransiverInit *****************
  3067 ;; Defined at:
  3068 ;;		line 624 in file "../Main Card V10.0.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3082 ;;      Params:         0       0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0
  3084 ;;      Temps:          0       1       0       0       0
  3085 ;;      Totals:         0       1       0       0       0
  3086 ;;Total ram usage:        1 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    7
  3089 ;; This function calls:
  3090 ;;		_Blink
  3091 ;;		_FindChannel
  3092 ;;		_RegisterRead
  3093 ;;		_RegisterSet
  3094 ;;		_SetRFMode
  3095 ;; This function is called by:
  3096 ;;		_main
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           
  3101                           ;psect for function _TransiverInit
  3102  02ED                     _TransiverInit:	
  3103                           
  3104                           ;Main Card V10.0.c: 627: RegisterSet(0x00, 0x30);
  3105                           
  3106                           ;incstack = 0
  3107                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3108  02ED  3030               	movlw	48
  3109  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3110  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3111  02F0  00B5               	movwf	??_TransiverInit
  3112  02F1  0835               	movf	??_TransiverInit,w
  3113  02F2  00A7               	movwf	RegisterSet@value
  3114  02F3  3000               	movlw	0
  3115  02F4  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3116                           
  3117                           ;Main Card V10.0.c: 628: RegisterSet(0x01,(0xA8));
  3118  02F9  30A8               	movlw	168
  3119  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3120  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3121  02FC  00B5               	movwf	??_TransiverInit
  3122  02FD  0835               	movf	??_TransiverInit,w
  3123  02FE  00A7               	movwf	RegisterSet@value
  3124  02FF  3001               	movlw	1
  3125  0300  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3126                           
  3127                           ;Main Card V10.0.c: 629: RegisterSet(0x02, 0x09);
  3128  0305  3009               	movlw	9
  3129  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3130  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3131  0308  00B5               	movwf	??_TransiverInit
  3132  0309  0835               	movf	??_TransiverInit,w
  3133  030A  00A7               	movwf	RegisterSet@value
  3134  030B  3002               	movlw	2
  3135  030C  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3136                           
  3137                           ;Main Card V10.0.c: 630: RegisterSet(0x03, 0x07);
  3138  0311  3007               	movlw	7
  3139  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3140  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3141  0314  00B5               	movwf	??_TransiverInit
  3142  0315  0835               	movf	??_TransiverInit,w
  3143  0316  00A7               	movwf	RegisterSet@value
  3144  0317  3003               	movlw	3
  3145  0318  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3146                           
  3147                           ;Main Card V10.0.c: 631: RegisterSet(0x05,(0x0A));
  3148  031D  300A               	movlw	10
  3149  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3150  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3151  0320  00B5               	movwf	??_TransiverInit
  3152  0321  0835               	movf	??_TransiverInit,w
  3153  0322  00A7               	movwf	RegisterSet@value
  3154  0323  3005               	movlw	5
  3155  0324  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3156                           
  3157                           ;Main Card V10.0.c: 632: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3158  0329  30B9               	movlw	185
  3159  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3160  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3161  032C  00B5               	movwf	??_TransiverInit
  3162  032D  0835               	movf	??_TransiverInit,w
  3163  032E  00A7               	movwf	RegisterSet@value
  3164  032F  300D               	movlw	13
  3165  0330  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3166                           
  3167                           ;Main Card V10.0.c: 633: RegisterSet(0x0E,(0x01|0x10|0x01));
  3168  0335  3011               	movlw	17
  3169  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0338  00B5               	movwf	??_TransiverInit
  3172  0339  0835               	movf	??_TransiverInit,w
  3173  033A  00A7               	movwf	RegisterSet@value
  3174  033B  300E               	movlw	14
  3175  033C  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3176                           
  3177                           ;Main Card V10.0.c: 634: RegisterSet(0x10, 0xA3);
  3178  0341  30A3               	movlw	163
  3179  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0344  00B5               	movwf	??_TransiverInit
  3182  0345  0835               	movf	??_TransiverInit,w
  3183  0346  00A7               	movwf	RegisterSet@value
  3184  0347  3010               	movlw	16
  3185  0348  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3186                           
  3187                           ;Main Card V10.0.c: 635: RegisterSet(0x12,(0x18|0x20|0x06));
  3188  034D  303E               	movlw	62
  3189  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3190  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0350  00B5               	movwf	??_TransiverInit
  3192  0351  0835               	movf	??_TransiverInit,w
  3193  0352  00A7               	movwf	RegisterSet@value
  3194  0353  3012               	movlw	18
  3195  0354  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3196                           
  3197                           ;Main Card V10.0.c: 636: RegisterSet(0x16,('S'));
  3198  0359  3053               	movlw	83
  3199  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3200  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3201  035C  00B5               	movwf	??_TransiverInit
  3202  035D  0835               	movf	??_TransiverInit,w
  3203  035E  00A7               	movwf	RegisterSet@value
  3204  035F  3016               	movlw	22
  3205  0360  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3206                           
  3207                           ;Main Card V10.0.c: 637: RegisterSet(0x17,('Y'));
  3208  0365  3059               	movlw	89
  3209  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3210  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3211  0368  00B5               	movwf	??_TransiverInit
  3212  0369  0835               	movf	??_TransiverInit,w
  3213  036A  00A7               	movwf	RegisterSet@value
  3214  036B  3017               	movlw	23
  3215  036C  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3216                           
  3217                           ;Main Card V10.0.c: 638: RegisterSet(0x18,('N'));
  3218  0371  304E               	movlw	78
  3219  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3220  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3221  0374  00B5               	movwf	??_TransiverInit
  3222  0375  0835               	movf	??_TransiverInit,w
  3223  0376  00A7               	movwf	RegisterSet@value
  3224  0377  3018               	movlw	24
  3225  0378  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3226                           
  3227                           ;Main Card V10.0.c: 639: RegisterSet(0x19,('C'));
  3228  037D  3043               	movlw	67
  3229  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3230  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3231  0380  00B5               	movwf	??_TransiverInit
  3232  0381  0835               	movf	??_TransiverInit,w
  3233  0382  00A7               	movwf	RegisterSet@value
  3234  0383  3019               	movlw	25
  3235  0384  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3236                           
  3237                           ;Main Card V10.0.c: 640: RegisterSet(0x1A, 0x72);
  3238  0389  3072               	movlw	114
  3239  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3240  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3241  038C  00B5               	movwf	??_TransiverInit
  3242  038D  0835               	movf	??_TransiverInit,w
  3243  038E  00A7               	movwf	RegisterSet@value
  3244  038F  301A               	movlw	26
  3245  0390  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3246                           
  3247                           ;Main Card V10.0.c: 641: RegisterSet(0x1B, 0x3C);
  3248  0395  303C               	movlw	60
  3249  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3250  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3251  0398  00B5               	movwf	??_TransiverInit
  3252  0399  0835               	movf	??_TransiverInit,w
  3253  039A  00A7               	movwf	RegisterSet@value
  3254  039B  301B               	movlw	27
  3255  039C  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3256                           
  3257                           ;Main Card V10.0.c: 642: RegisterSet(0x1F, 0x80);
  3258  03A1  3080               	movlw	128
  3259  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3260  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3261  03A4  00B5               	movwf	??_TransiverInit
  3262  03A5  0835               	movf	??_TransiverInit,w
  3263  03A6  00A7               	movwf	RegisterSet@value
  3264  03A7  301F               	movlw	31
  3265  03A8  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3266                           
  3267                           ;Main Card V10.0.c: 643: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3268  03AD  3000               	movlw	0
  3269  03AE  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  3270  03B3  3801               	iorlw	1
  3271  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3272  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3273  03B6  00B5               	movwf	??_TransiverInit
  3274  03B7  0835               	movf	??_TransiverInit,w
  3275  03B8  00A7               	movwf	RegisterSet@value
  3276  03B9  3000               	movlw	0
  3277  03BA  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3278                           
  3279                           ;Main Card V10.0.c: 645: if(FindChannel() == 1)
  3280  03BF  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3281  03C4  3A01               	xorlw	1
  3282  03C5  1D03               	skipz
  3283  03C6  2BD2               	goto	l2238
  3284                           
  3285                           ;Main Card V10.0.c: 646: Blink(1);
  3286  03C7  3001               	movlw	1
  3287  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3288  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3289  03CA  00A6               	movwf	Blink@n
  3290  03CB  3000               	movlw	0
  3291  03CC  00A7               	movwf	Blink@n+1
  3292  03CD  120A  158A  2613  120A  118A  	fcall	_Blink
  3293  03D2                     l2238:	
  3294                           
  3295                           ;Main Card V10.0.c: 647: SetRFMode(0x00);
  3296  03D2  3000               	movlw	0
  3297  03D3  120A  118A  2575   	fcall	_SetRFMode
  3298  03D6  0008               	return
  3299  03D7                     __end_of_TransiverInit:	
  3300                           
  3301                           	psect	text16
  3302  0E13                     __ptext16:	
  3303 ;; *************** function _Blink *****************
  3304 ;; Defined at:
  3305 ;;		line 772 in file "../Main Card V10.0.c"
  3306 ;; Parameters:    Size  Location     Type
  3307 ;;  n               2    6[BANK0 ] int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  i               2    9[BANK0 ] int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  1    wreg      void 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, pclath, cstack
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3319 ;;      Params:         0       2       0       0       0
  3320 ;;      Locals:         0       2       0       0       0
  3321 ;;      Temps:          0       1       0       0       0
  3322 ;;      Totals:         0       5       0       0       0
  3323 ;;Total ram usage:        5 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    3
  3326 ;; This function calls:
  3327 ;;		_DelayDs
  3328 ;; This function is called by:
  3329 ;;		_TransiverInit
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           
  3334                           ;psect for function _Blink
  3335  0E13                     _Blink:	
  3336                           
  3337                           ;Main Card V10.0.c: 774: for(int i = 1;i<=n;i++)
  3338                           
  3339                           ;incstack = 0
  3340                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3341  0E13  3001               	movlw	1
  3342  0E14  1283               	bcf	3,5	;RP0=0, select bank0
  3343  0E15  1303               	bcf	3,6	;RP1=0, select bank0
  3344  0E16  00A9               	movwf	Blink@i
  3345  0E17  3000               	movlw	0
  3346  0E18  00AA               	movwf	Blink@i+1
  3347  0E19                     l2158:	
  3348  0E19  0827               	movf	Blink@n+1,w
  3349  0E1A  3A80               	xorlw	128
  3350  0E1B  00A8               	movwf	??_Blink
  3351  0E1C  082A               	movf	Blink@i+1,w
  3352  0E1D  3A80               	xorlw	128
  3353  0E1E  0228               	subwf	??_Blink,w
  3354  0E1F  1D03               	skipz
  3355  0E20  2E23               	goto	u1755
  3356  0E21  0829               	movf	Blink@i,w
  3357  0E22  0226               	subwf	Blink@n,w
  3358  0E23                     u1755:	
  3359  0E23  1C03               	btfss	3,0
  3360  0E24  0008               	return
  3361                           
  3362                           ;Main Card V10.0.c: 775: {
  3363                           ;Main Card V10.0.c: 776: PORTCbits.RC1 = 1;
  3364  0E25  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0E26  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0E27  1487               	bsf	7,1	;volatile
  3367                           
  3368                           ;Main Card V10.0.c: 777: DelayDs(2);
  3369  0E28  3002               	movlw	2
  3370  0E29  00A0               	movwf	DelayDs@cnt
  3371  0E2A  3000               	movlw	0
  3372  0E2B  00A1               	movwf	DelayDs@cnt+1
  3373  0E2C  120A  158A  24FB  120A  158A  	fcall	_DelayDs
  3374                           
  3375                           ;Main Card V10.0.c: 778: PORTCbits.RC1 = 0;
  3376  0E31  1283               	bcf	3,5	;RP0=0, select bank0
  3377  0E32  1303               	bcf	3,6	;RP1=0, select bank0
  3378  0E33  1087               	bcf	7,1	;volatile
  3379                           
  3380                           ;Main Card V10.0.c: 779: DelayDs(6);
  3381  0E34  3006               	movlw	6
  3382  0E35  00A0               	movwf	DelayDs@cnt
  3383  0E36  3000               	movlw	0
  3384  0E37  00A1               	movwf	DelayDs@cnt+1
  3385  0E38  120A  158A  24FB  120A  158A  	fcall	_DelayDs
  3386  0E3D  3001               	movlw	1
  3387  0E3E  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0E3F  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0E40  07A9               	addwf	Blink@i,f
  3390  0E41  1803               	skipnc
  3391  0E42  0AAA               	incf	Blink@i+1,f
  3392  0E43  3000               	movlw	0
  3393  0E44  07AA               	addwf	Blink@i+1,f
  3394  0E45  2E19               	goto	l2158
  3395  0E46                     __end_of_Blink:	
  3396                           
  3397                           	psect	text17
  3398  0C76                     __ptext17:	
  3399 ;; *************** function _Mode_5 *****************
  3400 ;; Defined at:
  3401 ;;		line 433 in file "../Main Card V10.0.c"
  3402 ;; Parameters:    Size  Location     Type
  3403 ;;		None
  3404 ;; Auto vars:     Size  Location     Type
  3405 ;;		None
  3406 ;; Return value:  Size  Location     Type
  3407 ;;                  1    wreg      void 
  3408 ;; Registers used:
  3409 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3410 ;; Tracked objects:
  3411 ;;		On entry : 0/0
  3412 ;;		On exit  : 0/0
  3413 ;;		Unchanged: 0/0
  3414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3415 ;;      Params:         0       0       0       0       0
  3416 ;;      Locals:         0       0       0       0       0
  3417 ;;      Temps:          0       0       0       0       0
  3418 ;;      Totals:         0       0       0       0       0
  3419 ;;Total ram usage:        0 bytes
  3420 ;; Hardware stack levels used:    1
  3421 ;; Hardware stack levels required when called:    8
  3422 ;; This function calls:
  3423 ;;		_LightWithSensController
  3424 ;;		_TransmittString
  3425 ;; This function is called by:
  3426 ;;		_main
  3427 ;; This function uses a non-reentrant model
  3428 ;;
  3429                           
  3430                           
  3431                           ;psect for function _Mode_5
  3432  0C76                     _Mode_5:	
  3433                           
  3434                           ;Main Card V10.0.c: 435: if(!PORTBbits.RB5)
  3435                           
  3436                           ;incstack = 0
  3437 ;; hardware stack exceeded
  3438                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3439  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  3440  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  3441  0C78  1A86               	btfsc	6,5	;volatile
  3442  0C79  2C83               	goto	l2282
  3443                           
  3444                           ;Main Card V10.0.c: 436: {
  3445                           ;Main Card V10.0.c: 437: TransmittString("N2BLINK");
  3446  0C7A  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3447  0C7B  00B5               	movwf	TransmittString@dataString
  3448  0C7C  3080               	movlw	128
  3449  0C7D  00B6               	movwf	TransmittString@dataString+1
  3450  0C7E  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3451  0C83                     l2282:	
  3452                           
  3453                           ;Main Card V10.0.c: 438: }
  3454                           ;Main Card V10.0.c: 439: LightWithSensController();
  3455  0C83  120A  158A  2646   	fcall	_LightWithSensController
  3456  0C86  0008               	return
  3457  0C87                     __end_of_Mode_5:	
  3458                           
  3459                           	psect	text18
  3460  0C65                     __ptext18:	
  3461 ;; *************** function _Mode_4 *****************
  3462 ;; Defined at:
  3463 ;;		line 421 in file "../Main Card V10.0.c"
  3464 ;; Parameters:    Size  Location     Type
  3465 ;;		None
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;		None
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  1    wreg      void 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3477 ;;      Params:         0       0       0       0       0
  3478 ;;      Locals:         0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0
  3480 ;;      Totals:         0       0       0       0       0
  3481 ;;Total ram usage:        0 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    8
  3484 ;; This function calls:
  3485 ;;		_LightWithSensController
  3486 ;;		_TransmittString
  3487 ;; This function is called by:
  3488 ;;		_main
  3489 ;; This function uses a non-reentrant model
  3490 ;;
  3491                           
  3492                           
  3493                           ;psect for function _Mode_4
  3494  0C65                     _Mode_4:	
  3495                           
  3496                           ;Main Card V10.0.c: 423: if(!PORTBbits.RB5)
  3497                           
  3498                           ;incstack = 0
  3499 ;; hardware stack exceeded
  3500                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3501  0C65  1283               	bcf	3,5	;RP0=0, select bank0
  3502  0C66  1303               	bcf	3,6	;RP1=0, select bank0
  3503  0C67  1A86               	btfsc	6,5	;volatile
  3504  0C68  2C72               	goto	l2276
  3505                           
  3506                           ;Main Card V10.0.c: 424: {
  3507                           ;Main Card V10.0.c: 425: TransmittString("N1BLINK");
  3508  0C69  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3509  0C6A  00B5               	movwf	TransmittString@dataString
  3510  0C6B  3080               	movlw	128
  3511  0C6C  00B6               	movwf	TransmittString@dataString+1
  3512  0C6D  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3513  0C72                     l2276:	
  3514                           
  3515                           ;Main Card V10.0.c: 426: }
  3516                           ;Main Card V10.0.c: 427: LightWithSensController();
  3517  0C72  120A  158A  2646   	fcall	_LightWithSensController
  3518  0C75  0008               	return
  3519  0C76                     __end_of_Mode_4:	
  3520                           
  3521                           	psect	text19
  3522  03D7                     __ptext19:	
  3523 ;; *************** function _TransmittString *****************
  3524 ;; Defined at:
  3525 ;;		line 322 in file "../Main Card V10.0.c"
  3526 ;; Parameters:    Size  Location     Type
  3527 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3528 ;;		 -> STR_17(8), STR_16(8), TransmittedDataHandler@slask_712(8), TransmittedDataHandler@slask_709(8), 
  3529 ;;		 -> STR_12(4), STR_11(4), STR_9(14), STR_8(14), 
  3530 ;;		 -> TransmittedDataHandler@slask_700(8), TransmittedDataHandler@slask(8), 
  3531 ;; Auto vars:     Size  Location     Type
  3532 ;;  i               2   26[BANK0 ] int 
  3533 ;; Return value:  Size  Location     Type
  3534 ;;                  1    wreg      void 
  3535 ;; Registers used:
  3536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3537 ;; Tracked objects:
  3538 ;;		On entry : 0/0
  3539 ;;		On exit  : 0/0
  3540 ;;		Unchanged: 0/0
  3541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3542 ;;      Params:         0       2       0       0       0
  3543 ;;      Locals:         0       2       0       0       0
  3544 ;;      Temps:          0       3       0       0       0
  3545 ;;      Totals:         0       7       0       0       0
  3546 ;;Total ram usage:        7 bytes
  3547 ;; Hardware stack levels used:    1
  3548 ;; Hardware stack levels required when called:    7
  3549 ;; This function calls:
  3550 ;;		_FindChannel
  3551 ;;		_RegisterRead
  3552 ;;		_RegisterSet
  3553 ;;		_SetRFMode
  3554 ;;		_WriteFIFO
  3555 ;;		_timerFunction
  3556 ;; This function is called by:
  3557 ;;		_TransmittedDataHandler
  3558 ;;		_Mode_4
  3559 ;;		_Mode_5
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           
  3564                           ;psect for function _TransmittString
  3565  03D7                     _TransmittString:	
  3566                           
  3567                           ;Main Card V10.0.c: 324: timerFunction(4, 5);
  3568                           
  3569                           ;incstack = 0
  3570 ;; hardware stack exceeded
  3571                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3572  03D7  3004               	movlw	4
  3573  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3574  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3575  03DA  00A0               	movwf	timerFunction@intTimerNumber
  3576  03DB  3000               	movlw	0
  3577  03DC  00A1               	movwf	timerFunction@intTimerNumber+1
  3578  03DD  3005               	movlw	5
  3579  03DE  00A2               	movwf	timerFunction@intSetSeconds
  3580  03DF  3000               	movlw	0
  3581  03E0  00A3               	movwf	timerFunction@intSetSeconds+1
  3582  03E1  120A  158A  2487  120A  118A  	fcall	_timerFunction
  3583                           
  3584                           ;Main Card V10.0.c: 326: int i = 0;
  3585  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3586  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3587  03E8  01BA               	clrf	TransmittString@i
  3588  03E9  01BB               	clrf	TransmittString@i+1
  3589                           
  3590                           ;Main Card V10.0.c: 329: SetRFMode(0x20);
  3591  03EA  3020               	movlw	32
  3592  03EB  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  3593                           
  3594                           ;Main Card V10.0.c: 330: _delay((unsigned long)((10)*(4000000/4000.0)));
  3595  03F0  300D               	movlw	13
  3596  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3597  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3598  03F3  00B8               	movwf	??_TransmittString+1
  3599  03F4  30FB               	movlw	251
  3600  03F5  00B7               	movwf	??_TransmittString
  3601  03F6                     u2237:	
  3602  03F6  0BB7               	decfsz	??_TransmittString,f
  3603  03F7  2BF6               	goto	u2237
  3604  03F8  0BB8               	decfsz	??_TransmittString+1,f
  3605  03F9  2BF6               	goto	u2237
  3606                           
  3607                           ;Main Card V10.0.c: 331: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3608  03FA  300E               	movlw	14
  3609  03FB  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  3610  0400  3802               	iorlw	2
  3611  0401  1283               	bcf	3,5	;RP0=0, select bank0
  3612  0402  1303               	bcf	3,6	;RP1=0, select bank0
  3613  0403  00B7               	movwf	??_TransmittString
  3614  0404  0837               	movf	??_TransmittString,w
  3615  0405  00A7               	movwf	RegisterSet@value
  3616  0406  300E               	movlw	14
  3617  0407  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3618                           
  3619                           ;Main Card V10.0.c: 332: SetRFMode(0x40);
  3620  040C  3040               	movlw	64
  3621  040D  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  3622  0412                     l1928:	
  3623                           ;Main Card V10.0.c: 333: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3624                           
  3625  0412  300E               	movlw	14
  3626  0413  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  3627  0418  3902               	andlw	2
  3628  0419  1D03               	btfss	3,2
  3629  041A  2C25               	goto	l1930
  3630                           
  3631                           ;Main Card V10.0.c: 334: {
  3632                           ;Main Card V10.0.c: 335: if(bTimerComplete[4])
  3633  041B  1683               	bsf	3,5	;RP0=1, select bank1
  3634  041C  1303               	bcf	3,6	;RP1=0, select bank1
  3635  041D  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3636  041E  1903               	btfsc	3,2
  3637  041F  2C12               	goto	l1928
  3638                           
  3639                           ;Main Card V10.0.c: 336: {
  3640                           ;Main Card V10.0.c: 337: FindChannel();
  3641  0420  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3642  0425                     l1930:	
  3643                           ;Main Card V10.0.c: 338: break;
  3644                           
  3645                           
  3646                           ;Main Card V10.0.c: 339: }
  3647                           ;Main Card V10.0.c: 341: }
  3648                           ;Main Card V10.0.c: 342: SetRFMode(0x80);
  3649  0425  3080               	movlw	128
  3650  0426  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  3651                           
  3652                           ;Main Card V10.0.c: 343: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3653  042B  30A5               	movlw	165
  3654  042C  1283               	bcf	3,5	;RP0=0, select bank0
  3655  042D  1303               	bcf	3,6	;RP1=0, select bank0
  3656  042E  00B7               	movwf	??_TransmittString
  3657  042F                     u2247:	
  3658  042F  0BB7               	decfsz	??_TransmittString,f
  3659  0430  2C2F               	goto	u2247
  3660  0431  2C32               	nop2
  3661                           
  3662                           ;Main Card V10.0.c: 346: WriteFIFO('S');
  3663  0432  3053               	movlw	83
  3664  0433  120A  158A  2420  120A  118A  	fcall	_WriteFIFO
  3665                           
  3666                           ;Main Card V10.0.c: 347: WriteFIFO('Y');
  3667  0438  3059               	movlw	89
  3668  0439  120A  158A  2420  120A  118A  	fcall	_WriteFIFO
  3669                           
  3670                           ;Main Card V10.0.c: 348: WriteFIFO('N');
  3671  043E  304E               	movlw	78
  3672  043F  120A  158A  2420  120A  118A  	fcall	_WriteFIFO
  3673                           
  3674                           ;Main Card V10.0.c: 349: WriteFIFO('C');
  3675  0444  3043               	movlw	67
  3676  0445  120A  158A  2420  120A  118A  	fcall	_WriteFIFO
  3677  044A                     l1946:	
  3678                           ;Main Card V10.0.c: 352: while(dataString[i] != 0)
  3679                           
  3680  044A  1283               	bcf	3,5	;RP0=0, select bank0
  3681  044B  1303               	bcf	3,6	;RP1=0, select bank0
  3682  044C  083A               	movf	TransmittString@i,w
  3683  044D  0735               	addwf	TransmittString@dataString,w
  3684  044E  00B8               	movwf	??_TransmittString+1
  3685  044F  0836               	movf	TransmittString@dataString+1,w
  3686  0450  00B7               	movwf	??_TransmittString
  3687  0451  1803               	skipnc
  3688  0452  0AB7               	incf	??_TransmittString,f
  3689  0453  1BBA               	btfsc	TransmittString@i,7
  3690  0454  03B7               	decf	??_TransmittString,f
  3691  0455  1283               	bcf	3,5	;RP0=0, select bank0
  3692  0456  1303               	bcf	3,6	;RP1=0, select bank0
  3693  0457  0837               	movf	??_TransmittString,w
  3694  0458  00B9               	movwf	??_TransmittString+2
  3695  0459  0839               	movf	??_TransmittString+2,w
  3696  045A  00FF               	movwf	127
  3697  045B  0838               	movf	??_TransmittString+1,w
  3698  045C  0084               	movwf	4
  3699  045D  120A  118A  2600  120A  118A  	fcall	stringtab
  3700  0462  3A00               	xorlw	0
  3701  0463  1903               	btfsc	3,2
  3702  0464  2C90               	goto	l239
  3703                           
  3704                           ;Main Card V10.0.c: 353: {
  3705                           ;Main Card V10.0.c: 354: WriteFIFO(dataString[i]);
  3706  0465  1283               	bcf	3,5	;RP0=0, select bank0
  3707  0466  1303               	bcf	3,6	;RP1=0, select bank0
  3708  0467  083A               	movf	TransmittString@i,w
  3709  0468  0735               	addwf	TransmittString@dataString,w
  3710  0469  00B8               	movwf	??_TransmittString+1
  3711  046A  0836               	movf	TransmittString@dataString+1,w
  3712  046B  00B7               	movwf	??_TransmittString
  3713  046C  1803               	skipnc
  3714  046D  0AB7               	incf	??_TransmittString,f
  3715  046E  1BBA               	btfsc	TransmittString@i,7
  3716  046F  03B7               	decf	??_TransmittString,f
  3717  0470  1283               	bcf	3,5	;RP0=0, select bank0
  3718  0471  1303               	bcf	3,6	;RP1=0, select bank0
  3719  0472  0837               	movf	??_TransmittString,w
  3720  0473  00B9               	movwf	??_TransmittString+2
  3721  0474  0839               	movf	??_TransmittString+2,w
  3722  0475  00FF               	movwf	127
  3723  0476  0838               	movf	??_TransmittString+1,w
  3724  0477  0084               	movwf	4
  3725  0478  120A  118A  2600  120A  118A  	fcall	stringtab
  3726  047D  120A  158A  2420  120A  118A  	fcall	_WriteFIFO
  3727                           
  3728                           ;Main Card V10.0.c: 355: i++;
  3729  0482  3001               	movlw	1
  3730  0483  1283               	bcf	3,5	;RP0=0, select bank0
  3731  0484  1303               	bcf	3,6	;RP1=0, select bank0
  3732  0485  07BA               	addwf	TransmittString@i,f
  3733  0486  1803               	skipnc
  3734  0487  0ABB               	incf	TransmittString@i+1,f
  3735  0488  3000               	movlw	0
  3736  0489  07BB               	addwf	TransmittString@i+1,f
  3737  048A  2C4A               	goto	l1946
  3738  048B                     l1948:	
  3739                           ;Main Card V10.0.c: 356: }
  3740                           ;Main Card V10.0.c: 359: while(!PORTBbits.RB4)
  3741                           
  3742                           
  3743                           ;Main Card V10.0.c: 360: {
  3744                           ;Main Card V10.0.c: 361: if(bTimerComplete[4])
  3745  048B  1683               	bsf	3,5	;RP0=1, select bank1
  3746  048C  1303               	bcf	3,6	;RP1=0, select bank1
  3747  048D  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3748  048E  1D03               	btfss	3,2
  3749  048F  2C93               	goto	l1952
  3750  0490                     l239:	
  3751                           ;Main Card V10.0.c: 362: break;
  3752                           
  3753  0490  1283               	bcf	3,5	;RP0=0, select bank0
  3754  0491  1E06               	btfss	6,4	;volatile
  3755  0492  2C8B               	goto	l1948
  3756  0493                     l1952:	
  3757                           
  3758                           ;Main Card V10.0.c: 363: }
  3759                           ;Main Card V10.0.c: 364: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3760  0493  3002               	movlw	2
  3761  0494  1283               	bcf	3,5	;RP0=0, select bank0
  3762  0495  1303               	bcf	3,6	;RP1=0, select bank0
  3763  0496  00B7               	movwf	??_TransmittString
  3764  0497                     u2257:	
  3765  0497  0BB7               	decfsz	??_TransmittString,f
  3766  0498  2C97               	goto	u2257
  3767  0499  0000               	nop
  3768                           
  3769                           ;Main Card V10.0.c: 365: SetRFMode(0x00);
  3770  049A  3000               	movlw	0
  3771  049B  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  3772                           
  3773                           ;Main Card V10.0.c: 366: _delay((unsigned long)((1)*(4000000/4000.0)));
  3774  04A0  30C7               	movlw	199
  3775  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  3776  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  3777  04A3  00B7               	movwf	??_TransmittString
  3778  04A4                     u2267:	
  3779  04A4  2CA5               	nop2
  3780  04A5  0BB7               	decfsz	??_TransmittString,f
  3781  04A6  2CA4               	goto	u2267
  3782  04A7  2CA8               	nop2
  3783  04A8  0008               	return
  3784  04A9                     __end_of_TransmittString:	
  3785                           
  3786                           	psect	text20
  3787  0C20                     __ptext20:	
  3788 ;; *************** function _WriteFIFO *****************
  3789 ;; Defined at:
  3790 ;;		line 886 in file "../Main Card V10.0.c"
  3791 ;; Parameters:    Size  Location     Type
  3792 ;;  Data            1    wreg     unsigned char 
  3793 ;; Auto vars:     Size  Location     Type
  3794 ;;  Data            1    3[BANK0 ] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  1    wreg      void 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0, pclath, cstack
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       0       0       0       0
  3805 ;;      Locals:         0       1       0       0       0
  3806 ;;      Temps:          0       0       0       0       0
  3807 ;;      Totals:         0       1       0       0       0
  3808 ;;Total ram usage:        1 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    3
  3811 ;; This function calls:
  3812 ;;		_WriteSPI
  3813 ;; This function is called by:
  3814 ;;		_TransmittString
  3815 ;; This function uses a non-reentrant model
  3816 ;;
  3817                           
  3818                           
  3819                           ;psect for function _WriteFIFO
  3820  0C20                     _WriteFIFO:	
  3821                           
  3822                           ;incstack = 0
  3823                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3824                           ;WriteFIFO@Data stored from wreg
  3825  0C20  1283               	bcf	3,5	;RP0=0, select bank0
  3826  0C21  1303               	bcf	3,6	;RP1=0, select bank0
  3827  0C22  00A3               	movwf	WriteFIFO@Data
  3828                           
  3829                           ;Main Card V10.0.c: 888: PORTAbits.RA5 = 0;
  3830  0C23  1285               	bcf	5,5	;volatile
  3831                           
  3832                           ;Main Card V10.0.c: 889: WriteSPI(Data);
  3833  0C24  0823               	movf	WriteFIFO@Data,w
  3834  0C25  120A  158A  2439   	fcall	_WriteSPI
  3835                           
  3836                           ;Main Card V10.0.c: 890: PORTAbits.RA5 = 1;
  3837  0C28  1283               	bcf	3,5	;RP0=0, select bank0
  3838  0C29  1303               	bcf	3,6	;RP1=0, select bank0
  3839  0C2A  1685               	bsf	5,5	;volatile
  3840  0C2B  0008               	return
  3841  0C2C                     __end_of_WriteFIFO:	
  3842                           
  3843                           	psect	text21
  3844  01ED                     __ptext21:	
  3845 ;; *************** function _FindChannel *****************
  3846 ;; Defined at:
  3847 ;;		line 669 in file "../Main Card V10.0.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;  i               2   19[BANK0 ] int 
  3852 ;;  cnt             2   17[BANK0 ] int 
  3853 ;; Return value:  Size  Location     Type
  3854 ;;                  1    wreg      unsigned char 
  3855 ;; Registers used:
  3856 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3857 ;; Tracked objects:
  3858 ;;		On entry : 0/0
  3859 ;;		On exit  : 0/0
  3860 ;;		Unchanged: 0/0
  3861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3862 ;;      Params:         0       0       0       0       0
  3863 ;;      Locals:         0       4       0       0       0
  3864 ;;      Temps:          0       3       0       0       0
  3865 ;;      Totals:         0       7       0       0       0
  3866 ;;Total ram usage:        7 bytes
  3867 ;; Hardware stack levels used:    1
  3868 ;; Hardware stack levels required when called:    6
  3869 ;; This function calls:
  3870 ;;		_RegisterRead
  3871 ;;		_RegisterSet
  3872 ;;		_SetRFMode
  3873 ;; This function is called by:
  3874 ;;		_TransiverToReceive
  3875 ;;		_TransmittString
  3876 ;;		_TransiverInit
  3877 ;; This function uses a non-reentrant model
  3878 ;;
  3879                           
  3880                           
  3881                           ;psect for function _FindChannel
  3882  01ED                     _FindChannel:	
  3883                           
  3884                           ;Main Card V10.0.c: 671: int cnt = 0;
  3885                           
  3886                           ;incstack = 0
  3887 ;; using string table level
  3888                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3889  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3890  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3891  01EF  01B1               	clrf	FindChannel@cnt
  3892  01F0  01B2               	clrf	FindChannel@cnt+1
  3893                           
  3894                           ;Main Card V10.0.c: 672: bChannelFound = 0;
  3895  01F1  01EC               	clrf	_bChannelFound
  3896                           
  3897                           ;Main Card V10.0.c: 673: channelFound = 0;
  3898  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  3899  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  3900  01F4  01AF               	clrf	_channelFound^(0+128)
  3901  01F5  01B0               	clrf	(_channelFound+1)^(0+128)
  3902                           
  3903                           ;Main Card V10.0.c: 675: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3904  01F6  3006               	movlw	6
  3905  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3906  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3907  01F9  00B0               	movwf	??_FindChannel+2
  3908  01FA  3013               	movlw	19
  3909  01FB  00AF               	movwf	??_FindChannel+1
  3910  01FC  30AD               	movlw	173
  3911  01FD  00AE               	movwf	??_FindChannel
  3912  01FE                     u2277:	
  3913  01FE  0BAE               	decfsz	??_FindChannel,f
  3914  01FF  29FE               	goto	u2277
  3915  0200  0BAF               	decfsz	??_FindChannel+1,f
  3916  0201  29FE               	goto	u2277
  3917  0202  0BB0               	decfsz	??_FindChannel+2,f
  3918  0203  29FE               	goto	u2277
  3919                           
  3920                           ;Main Card V10.0.c: 676: for (int i = 0; i < 13; i++)
  3921  0204  1283               	bcf	3,5	;RP0=0, select bank0
  3922  0205  1303               	bcf	3,6	;RP1=0, select bank0
  3923  0206  01B3               	clrf	FindChannel@i
  3924  0207  01B4               	clrf	FindChannel@i+1
  3925  0208  0834               	movf	FindChannel@i+1,w
  3926  0209  3A80               	xorlw	128
  3927  020A  00FF               	movwf	127
  3928  020B  3080               	movlw	128
  3929  020C  027F               	subwf	127,w
  3930  020D  1D03               	skipz
  3931  020E  2A11               	goto	u1125
  3932  020F  300D               	movlw	13
  3933  0210  0233               	subwf	FindChannel@i,w
  3934  0211                     u1125:	
  3935  0211  1803               	btfsc	3,0
  3936  0212  2AEB               	goto	l1796
  3937  0213                     l1772:	
  3938                           
  3939                           ;Main Card V10.0.c: 677: {
  3940                           ;Main Card V10.0.c: 678: RegisterSet(0x06,ChannelR[i]);
  3941  0213  1283               	bcf	3,5	;RP0=0, select bank0
  3942  0214  1303               	bcf	3,6	;RP1=0, select bank0
  3943  0215  0833               	movf	FindChannel@i,w
  3944  0216  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3945  0217  0084               	movwf	4
  3946  0218  120A  118A  260A  120A  118A  	fcall	stringdir
  3947  021D  00AE               	movwf	??_FindChannel
  3948  021E  082E               	movf	??_FindChannel,w
  3949  021F  00A7               	movwf	RegisterSet@value
  3950  0220  3006               	movlw	6
  3951  0221  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3952                           
  3953                           ;Main Card V10.0.c: 679: RegisterSet(0x07,ChannelP[i]);
  3954  0226  1283               	bcf	3,5	;RP0=0, select bank0
  3955  0227  1303               	bcf	3,6	;RP1=0, select bank0
  3956  0228  0833               	movf	FindChannel@i,w
  3957  0229  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3958  022A  0084               	movwf	4
  3959  022B  120A  118A  260A  120A  118A  	fcall	stringdir
  3960  0230  00AE               	movwf	??_FindChannel
  3961  0231  082E               	movf	??_FindChannel,w
  3962  0232  00A7               	movwf	RegisterSet@value
  3963  0233  3007               	movlw	7
  3964  0234  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3965                           
  3966                           ;Main Card V10.0.c: 680: RegisterSet(0x08,ChannelS[i]);
  3967  0239  1283               	bcf	3,5	;RP0=0, select bank0
  3968  023A  1303               	bcf	3,6	;RP1=0, select bank0
  3969  023B  0833               	movf	FindChannel@i,w
  3970  023C  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  3971  023D  0084               	movwf	4
  3972  023E  120A  118A  260A  120A  118A  	fcall	stringdir
  3973  0243  00AE               	movwf	??_FindChannel
  3974  0244  082E               	movf	??_FindChannel,w
  3975  0245  00A7               	movwf	RegisterSet@value
  3976  0246  3008               	movlw	8
  3977  0247  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3978                           
  3979                           ;Main Card V10.0.c: 681: RegisterSet(0x09,ChannelR[i]);
  3980  024C  1283               	bcf	3,5	;RP0=0, select bank0
  3981  024D  1303               	bcf	3,6	;RP1=0, select bank0
  3982  024E  0833               	movf	FindChannel@i,w
  3983  024F  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3984  0250  0084               	movwf	4
  3985  0251  120A  118A  260A  120A  118A  	fcall	stringdir
  3986  0256  00AE               	movwf	??_FindChannel
  3987  0257  082E               	movf	??_FindChannel,w
  3988  0258  00A7               	movwf	RegisterSet@value
  3989  0259  3009               	movlw	9
  3990  025A  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  3991                           
  3992                           ;Main Card V10.0.c: 682: RegisterSet(0x0A,ChannelP[i]);
  3993  025F  1283               	bcf	3,5	;RP0=0, select bank0
  3994  0260  1303               	bcf	3,6	;RP1=0, select bank0
  3995  0261  0833               	movf	FindChannel@i,w
  3996  0262  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3997  0263  0084               	movwf	4
  3998  0264  120A  118A  260A  120A  118A  	fcall	stringdir
  3999  0269  00AE               	movwf	??_FindChannel
  4000  026A  082E               	movf	??_FindChannel,w
  4001  026B  00A7               	movwf	RegisterSet@value
  4002  026C  300A               	movlw	10
  4003  026D  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4004                           
  4005                           ;Main Card V10.0.c: 683: RegisterSet(0x0B,ChannelS[i]);
  4006  0272  1283               	bcf	3,5	;RP0=0, select bank0
  4007  0273  1303               	bcf	3,6	;RP1=0, select bank0
  4008  0274  0833               	movf	FindChannel@i,w
  4009  0275  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  4010  0276  0084               	movwf	4
  4011  0277  120A  118A  260A  120A  118A  	fcall	stringdir
  4012  027C  00AE               	movwf	??_FindChannel
  4013  027D  082E               	movf	??_FindChannel,w
  4014  027E  00A7               	movwf	RegisterSet@value
  4015  027F  300B               	movlw	11
  4016  0280  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4017                           
  4018                           ;Main Card V10.0.c: 684: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  4019  0285  300E               	movlw	14
  4020  0286  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  4021  028B  3802               	iorlw	2
  4022  028C  1283               	bcf	3,5	;RP0=0, select bank0
  4023  028D  1303               	bcf	3,6	;RP1=0, select bank0
  4024  028E  00AE               	movwf	??_FindChannel
  4025  028F  082E               	movf	??_FindChannel,w
  4026  0290  00A7               	movwf	RegisterSet@value
  4027  0291  300E               	movlw	14
  4028  0292  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4029                           
  4030                           ;Main Card V10.0.c: 685: SetRFMode(0x40);
  4031  0297  3040               	movlw	64
  4032  0298  120A  118A  2575  120A  118A  	fcall	_SetRFMode
  4033                           
  4034                           ;Main Card V10.0.c: 686: cnt = 0;
  4035  029D  1283               	bcf	3,5	;RP0=0, select bank0
  4036  029E  1303               	bcf	3,6	;RP1=0, select bank0
  4037  029F  01B1               	clrf	FindChannel@cnt
  4038  02A0  01B2               	clrf	FindChannel@cnt+1
  4039  02A1                     l1790:	
  4040                           ;Main Card V10.0.c: 687: while(cnt < 5)
  4041                           
  4042  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  4043  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  4044  02A3  0832               	movf	FindChannel@cnt+1,w
  4045  02A4  3A80               	xorlw	128
  4046  02A5  00FF               	movwf	127
  4047  02A6  3080               	movlw	128
  4048  02A7  027F               	subwf	127,w
  4049  02A8  1D03               	skipz
  4050  02A9  2AAC               	goto	u1145
  4051  02AA  3005               	movlw	5
  4052  02AB  0231               	subwf	FindChannel@cnt,w
  4053  02AC                     u1145:	
  4054  02AC  1803               	btfsc	3,0
  4055  02AD  2AD8               	goto	l1792
  4056                           
  4057                           ;Main Card V10.0.c: 688: {
  4058                           ;Main Card V10.0.c: 690: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4059  02AE  300E               	movlw	14
  4060  02AF  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  4061  02B4  3902               	andlw	2
  4062  02B5  1903               	btfsc	3,2
  4063  02B6  2AC7               	goto	l1788
  4064                           
  4065                           ;Main Card V10.0.c: 691: {
  4066                           ;Main Card V10.0.c: 692: bChannelFound = 1;
  4067  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  4068  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  4069  02B9  01EC               	clrf	_bChannelFound
  4070  02BA  0AEC               	incf	_bChannelFound,f
  4071                           
  4072                           ;Main Card V10.0.c: 693: channelFound = i;
  4073  02BB  0834               	movf	FindChannel@i+1,w
  4074  02BC  1683               	bsf	3,5	;RP0=1, select bank1
  4075  02BD  1303               	bcf	3,6	;RP1=0, select bank1
  4076  02BE  00B0               	movwf	(_channelFound+1)^(0+128)
  4077  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  4078  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  4079  02C1  0833               	movf	FindChannel@i,w
  4080  02C2  1683               	bsf	3,5	;RP0=1, select bank1
  4081  02C3  1303               	bcf	3,6	;RP1=0, select bank1
  4082  02C4  00AF               	movwf	_channelFound^(0+128)
  4083                           
  4084                           ;Main Card V10.0.c: 694: return 1;
  4085  02C5  3001               	movlw	1
  4086  02C6  0008               	return
  4087  02C7                     l1788:	
  4088                           
  4089                           ;Main Card V10.0.c: 695: }
  4090                           ;Main Card V10.0.c: 696: cnt++;
  4091  02C7  3001               	movlw	1
  4092  02C8  1283               	bcf	3,5	;RP0=0, select bank0
  4093  02C9  1303               	bcf	3,6	;RP1=0, select bank0
  4094  02CA  07B1               	addwf	FindChannel@cnt,f
  4095  02CB  1803               	skipnc
  4096  02CC  0AB2               	incf	FindChannel@cnt+1,f
  4097  02CD  3000               	movlw	0
  4098  02CE  07B2               	addwf	FindChannel@cnt+1,f
  4099                           
  4100                           ;Main Card V10.0.c: 697: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4101  02CF  30C7               	movlw	199
  4102  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  4103  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  4104  02D2  00AE               	movwf	??_FindChannel
  4105  02D3                     u2287:	
  4106  02D3  2AD4               	nop2
  4107  02D4  0BAE               	decfsz	??_FindChannel,f
  4108  02D5  2AD3               	goto	u2287
  4109  02D6  2AD7               	nop2
  4110  02D7  2AA1               	goto	l1790
  4111  02D8                     l1792:	
  4112  02D8  3001               	movlw	1
  4113  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4114  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4115  02DB  07B3               	addwf	FindChannel@i,f
  4116  02DC  1803               	skipnc
  4117  02DD  0AB4               	incf	FindChannel@i+1,f
  4118  02DE  3000               	movlw	0
  4119  02DF  07B4               	addwf	FindChannel@i+1,f
  4120  02E0  0834               	movf	FindChannel@i+1,w
  4121  02E1  3A80               	xorlw	128
  4122  02E2  00FF               	movwf	127
  4123  02E3  3080               	movlw	128
  4124  02E4  027F               	subwf	127,w
  4125  02E5  1D03               	skipz
  4126  02E6  2AE9               	goto	u1155
  4127  02E7  300D               	movlw	13
  4128  02E8  0233               	subwf	FindChannel@i,w
  4129  02E9                     u1155:	
  4130  02E9  1C03               	skipc
  4131  02EA  2A13               	goto	l1772
  4132  02EB                     l1796:	
  4133                           
  4134                           ;Main Card V10.0.c: 698: }
  4135                           ;Main Card V10.0.c: 701: }
  4136                           ;Main Card V10.0.c: 702: return 0;
  4137  02EB  3000               	movlw	0
  4138  02EC  0008               	return
  4139  02ED                     __end_of_FindChannel:	
  4140                           
  4141                           	psect	text22
  4142  0575                     __ptext22:	
  4143 ;; *************** function _SetRFMode *****************
  4144 ;; Defined at:
  4145 ;;		line 724 in file "../Main Card V10.0.c"
  4146 ;; Parameters:    Size  Location     Type
  4147 ;;  mode            1    wreg     unsigned char 
  4148 ;; Auto vars:     Size  Location     Type
  4149 ;;  mode            1   12[BANK0 ] unsigned char 
  4150 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4151 ;; Return value:  Size  Location     Type
  4152 ;;                  1    wreg      void 
  4153 ;; Registers used:
  4154 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4155 ;; Tracked objects:
  4156 ;;		On entry : 0/0
  4157 ;;		On exit  : 0/0
  4158 ;;		Unchanged: 0/0
  4159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4160 ;;      Params:         0       0       0       0       0
  4161 ;;      Locals:         0       2       0       0       0
  4162 ;;      Temps:          0       1       0       0       0
  4163 ;;      Totals:         0       3       0       0       0
  4164 ;;Total ram usage:        3 bytes
  4165 ;; Hardware stack levels used:    1
  4166 ;; Hardware stack levels required when called:    5
  4167 ;; This function calls:
  4168 ;;		_RegisterRead
  4169 ;;		_RegisterSet
  4170 ;; This function is called by:
  4171 ;;		_TransiverToReceive
  4172 ;;		_TransiverReadFIFO
  4173 ;;		_TransmittString
  4174 ;;		_TransiverInit
  4175 ;;		_FindChannel
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           
  4180                           ;psect for function _SetRFMode
  4181  0575                     _SetRFMode:	
  4182                           
  4183                           ;incstack = 0
  4184                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4185                           ;SetRFMode@mode stored from wreg
  4186  0575  1283               	bcf	3,5	;RP0=0, select bank0
  4187  0576  1303               	bcf	3,6	;RP1=0, select bank0
  4188  0577  00AC               	movwf	SetRFMode@mode
  4189                           
  4190                           ;Main Card V10.0.c: 726: PORTAbits.RA4 = 0;
  4191  0578  1205               	bcf	5,4	;volatile
  4192                           
  4193                           ;Main Card V10.0.c: 727: BYTE mcparam0_read;
  4194                           ;Main Card V10.0.c: 728: mcparam0_read = RegisterRead(0);
  4195  0579  3000               	movlw	0
  4196  057A  120A  118A  25E4  120A  118A  	fcall	_RegisterRead
  4197  057F  1283               	bcf	3,5	;RP0=0, select bank0
  4198  0580  1303               	bcf	3,6	;RP1=0, select bank0
  4199  0581  00AB               	movwf	??_SetRFMode
  4200  0582  082B               	movf	??_SetRFMode,w
  4201  0583  00AD               	movwf	SetRFMode@mcparam0_read
  4202                           
  4203                           ;Main Card V10.0.c: 729: switch (mode) {
  4204  0584  2DCD               	goto	l1752
  4205  0585                     l1740:	
  4206                           ;Main Card V10.0.c: 730: case 0x80:
  4207                           
  4208                           
  4209                           ;Main Card V10.0.c: 731: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4210  0585  082D               	movf	SetRFMode@mcparam0_read,w
  4211  0586  391F               	andlw	31
  4212  0587  3880               	iorlw	128
  4213  0588  00AB               	movwf	??_SetRFMode
  4214  0589  082B               	movf	??_SetRFMode,w
  4215  058A  00A7               	movwf	RegisterSet@value
  4216  058B  3000               	movlw	0
  4217  058C  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4218                           
  4219                           ;Main Card V10.0.c: 733: break;
  4220  0591  2DE0               	goto	l326
  4221  0592                     l1742:	
  4222                           ;Main Card V10.0.c: 734: case 0x60:
  4223                           
  4224                           
  4225                           ;Main Card V10.0.c: 735: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4226  0592  1283               	bcf	3,5	;RP0=0, select bank0
  4227  0593  1303               	bcf	3,6	;RP1=0, select bank0
  4228  0594  082D               	movf	SetRFMode@mcparam0_read,w
  4229  0595  391F               	andlw	31
  4230  0596  3860               	iorlw	96
  4231  0597  00AB               	movwf	??_SetRFMode
  4232  0598  082B               	movf	??_SetRFMode,w
  4233  0599  00A7               	movwf	RegisterSet@value
  4234  059A  3000               	movlw	0
  4235  059B  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4236                           
  4237                           ;Main Card V10.0.c: 737: break;
  4238  05A0  2DE0               	goto	l326
  4239  05A1                     l1744:	
  4240                           ;Main Card V10.0.c: 738: case 0x40:
  4241                           
  4242                           
  4243                           ;Main Card V10.0.c: 739: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4244  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  4245  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  4246  05A3  082D               	movf	SetRFMode@mcparam0_read,w
  4247  05A4  391F               	andlw	31
  4248  05A5  3840               	iorlw	64
  4249  05A6  00AB               	movwf	??_SetRFMode
  4250  05A7  082B               	movf	??_SetRFMode,w
  4251  05A8  00A7               	movwf	RegisterSet@value
  4252  05A9  3000               	movlw	0
  4253  05AA  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4254                           
  4255                           ;Main Card V10.0.c: 741: break;
  4256  05AF  2DE0               	goto	l326
  4257  05B0                     l1746:	
  4258                           ;Main Card V10.0.c: 742: case 0x20:
  4259                           
  4260                           
  4261                           ;Main Card V10.0.c: 743: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4262  05B0  1283               	bcf	3,5	;RP0=0, select bank0
  4263  05B1  1303               	bcf	3,6	;RP1=0, select bank0
  4264  05B2  082D               	movf	SetRFMode@mcparam0_read,w
  4265  05B3  391F               	andlw	31
  4266  05B4  3820               	iorlw	32
  4267  05B5  00AB               	movwf	??_SetRFMode
  4268  05B6  082B               	movf	??_SetRFMode,w
  4269  05B7  00A7               	movwf	RegisterSet@value
  4270  05B8  3000               	movlw	0
  4271  05B9  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4272                           
  4273                           ;Main Card V10.0.c: 745: break;
  4274  05BE  2DE0               	goto	l326
  4275  05BF                     l1748:	
  4276                           ;Main Card V10.0.c: 746: case 0x00:
  4277                           
  4278                           
  4279                           ;Main Card V10.0.c: 747: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4280  05BF  1283               	bcf	3,5	;RP0=0, select bank0
  4281  05C0  1303               	bcf	3,6	;RP1=0, select bank0
  4282  05C1  082D               	movf	SetRFMode@mcparam0_read,w
  4283  05C2  391F               	andlw	31
  4284  05C3  00AB               	movwf	??_SetRFMode
  4285  05C4  082B               	movf	??_SetRFMode,w
  4286  05C5  00A7               	movwf	RegisterSet@value
  4287  05C6  3000               	movlw	0
  4288  05C7  120A  158A  24E1  120A  118A  	fcall	_RegisterSet
  4289                           
  4290                           ;Main Card V10.0.c: 750: }
  4291                           
  4292                           ;Main Card V10.0.c: 749: break;
  4293  05CC  2DE0               	goto	l326
  4294  05CD                     l1752:	
  4295  05CD  1283               	bcf	3,5	;RP0=0, select bank0
  4296  05CE  1303               	bcf	3,6	;RP1=0, select bank0
  4297  05CF  082C               	movf	SetRFMode@mode,w
  4298                           
  4299                           ; Switch size 1, requested type "space"
  4300                           ; Number of cases is 5, Range of values is 0 to 128
  4301                           ; switch strategies available:
  4302                           ; Name         Instructions Cycles
  4303                           ; simple_byte           16     9 (average)
  4304                           ; jumptable            260     6 (fixed)
  4305                           ;	Chosen strategy is simple_byte
  4306  05D0  3A00               	xorlw	0	; case 0
  4307  05D1  1903               	skipnz
  4308  05D2  2DBF               	goto	l1748
  4309  05D3  3A20               	xorlw	32	; case 32
  4310  05D4  1903               	skipnz
  4311  05D5  2DB0               	goto	l1746
  4312  05D6  3A60               	xorlw	96	; case 64
  4313  05D7  1903               	skipnz
  4314  05D8  2DA1               	goto	l1744
  4315  05D9  3A20               	xorlw	32	; case 96
  4316  05DA  1903               	skipnz
  4317  05DB  2D92               	goto	l1742
  4318  05DC  3AE0               	xorlw	224	; case 128
  4319  05DD  1903               	skipnz
  4320  05DE  2D85               	goto	l1740
  4321  05DF  2DE0               	goto	l326
  4322  05E0                     l326:	
  4323                           
  4324                           ;Main Card V10.0.c: 751: PORTAbits.RA4 = 1;
  4325  05E0  1283               	bcf	3,5	;RP0=0, select bank0
  4326  05E1  1303               	bcf	3,6	;RP1=0, select bank0
  4327  05E2  1605               	bsf	5,4	;volatile
  4328  05E3  0008               	return
  4329  05E4                     __end_of_SetRFMode:	
  4330                           
  4331                           	psect	text23
  4332  0CE1                     __ptext23:	
  4333 ;; *************** function _RegisterSet *****************
  4334 ;; Defined at:
  4335 ;;		line 833 in file "../Main Card V10.0.c"
  4336 ;; Parameters:    Size  Location     Type
  4337 ;;  adress          1    wreg     unsigned char 
  4338 ;;  value           1    7[BANK0 ] unsigned char 
  4339 ;; Auto vars:     Size  Location     Type
  4340 ;;  adress          1   10[BANK0 ] unsigned char 
  4341 ;; Return value:  Size  Location     Type
  4342 ;;                  1    wreg      void 
  4343 ;; Registers used:
  4344 ;;		wreg, status,2, status,0, pclath, cstack
  4345 ;; Tracked objects:
  4346 ;;		On entry : 0/0
  4347 ;;		On exit  : 0/0
  4348 ;;		Unchanged: 0/0
  4349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4350 ;;      Params:         0       1       0       0       0
  4351 ;;      Locals:         0       1       0       0       0
  4352 ;;      Temps:          0       2       0       0       0
  4353 ;;      Totals:         0       4       0       0       0
  4354 ;;Total ram usage:        4 bytes
  4355 ;; Hardware stack levels used:    1
  4356 ;; Hardware stack levels required when called:    3
  4357 ;; This function calls:
  4358 ;;		_WriteSPI
  4359 ;; This function is called by:
  4360 ;;		_TransiverToReceive
  4361 ;;		_TransmittString
  4362 ;;		_TransiverInit
  4363 ;;		_FindChannel
  4364 ;;		_SetRFMode
  4365 ;; This function uses a non-reentrant model
  4366 ;;
  4367                           
  4368                           
  4369                           ;psect for function _RegisterSet
  4370  0CE1                     _RegisterSet:	
  4371                           
  4372                           ;incstack = 0
  4373                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4374                           ;RegisterSet@adress stored from wreg
  4375  0CE1  1283               	bcf	3,5	;RP0=0, select bank0
  4376  0CE2  1303               	bcf	3,6	;RP1=0, select bank0
  4377  0CE3  00AA               	movwf	RegisterSet@adress
  4378                           
  4379                           ;Main Card V10.0.c: 835: PORTAbits.RA4 = 0;
  4380  0CE4  1205               	bcf	5,4	;volatile
  4381                           
  4382                           ;Main Card V10.0.c: 836: adress = (adress<<1);
  4383  0CE5  082A               	movf	RegisterSet@adress,w
  4384  0CE6  00A8               	movwf	??_RegisterSet
  4385  0CE7  0728               	addwf	??_RegisterSet,w
  4386  0CE8  00A9               	movwf	??_RegisterSet+1
  4387  0CE9  0829               	movf	??_RegisterSet+1,w
  4388  0CEA  00AA               	movwf	RegisterSet@adress
  4389                           
  4390                           ;Main Card V10.0.c: 837: WriteSPI(adress);
  4391  0CEB  082A               	movf	RegisterSet@adress,w
  4392  0CEC  120A  158A  2439  120A  158A  	fcall	_WriteSPI
  4393                           
  4394                           ;Main Card V10.0.c: 838: WriteSPI(value);
  4395  0CF1  1283               	bcf	3,5	;RP0=0, select bank0
  4396  0CF2  1303               	bcf	3,6	;RP1=0, select bank0
  4397  0CF3  0827               	movf	RegisterSet@value,w
  4398  0CF4  120A  158A  2439   	fcall	_WriteSPI
  4399                           
  4400                           ;Main Card V10.0.c: 839: PORTAbits.RA4 = 1;
  4401  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  4402  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  4403  0CF9  1605               	bsf	5,4	;volatile
  4404  0CFA  0008               	return
  4405  0CFB                     __end_of_RegisterSet:	
  4406                           
  4407                           	psect	text24
  4408  05E4                     __ptext24:	
  4409 ;; *************** function _RegisterRead *****************
  4410 ;; Defined at:
  4411 ;;		line 803 in file "../Main Card V10.0.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  adress          1    wreg     unsigned char 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  adress          1    6[BANK0 ] unsigned char 
  4416 ;;  value           1    5[BANK0 ] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      unsigned char 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         0       0       0       0       0
  4427 ;;      Locals:         0       2       0       0       0
  4428 ;;      Temps:          0       2       0       0       0
  4429 ;;      Totals:         0       4       0       0       0
  4430 ;;Total ram usage:        4 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    4
  4433 ;; This function calls:
  4434 ;;		_ReadSPI
  4435 ;;		_WriteSPI
  4436 ;; This function is called by:
  4437 ;;		_TransiverToReceive
  4438 ;;		_TransmittString
  4439 ;;		_TransiverInit
  4440 ;;		_FindChannel
  4441 ;;		_SetRFMode
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           
  4446                           ;psect for function _RegisterRead
  4447  05E4                     _RegisterRead:	
  4448                           
  4449                           ;incstack = 0
  4450                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4451                           ;RegisterRead@adress stored from wreg
  4452  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  4453  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  4454  05E6  00A6               	movwf	RegisterRead@adress
  4455                           
  4456                           ;Main Card V10.0.c: 805: BYTE value;
  4457                           ;Main Card V10.0.c: 806: PORTAbits.RA4 = 0;
  4458  05E7  1205               	bcf	5,4	;volatile
  4459                           
  4460                           ;Main Card V10.0.c: 807: adress = ((adress<<1)|0x40);
  4461  05E8  0826               	movf	RegisterRead@adress,w
  4462  05E9  00A3               	movwf	??_RegisterRead
  4463  05EA  0723               	addwf	??_RegisterRead,w
  4464  05EB  3840               	iorlw	64
  4465  05EC  00A4               	movwf	??_RegisterRead+1
  4466  05ED  0824               	movf	??_RegisterRead+1,w
  4467  05EE  00A6               	movwf	RegisterRead@adress
  4468                           
  4469                           ;Main Card V10.0.c: 808: WriteSPI(adress);
  4470  05EF  0826               	movf	RegisterRead@adress,w
  4471  05F0  120A  158A  2439  120A  118A  	fcall	_WriteSPI
  4472                           
  4473                           ;Main Card V10.0.c: 809: value = ReadSPI();
  4474  05F5  120A  158A  23FE   	fcall	_ReadSPI
  4475  05F8  1283               	bcf	3,5	;RP0=0, select bank0
  4476  05F9  1303               	bcf	3,6	;RP1=0, select bank0
  4477  05FA  00A3               	movwf	??_RegisterRead
  4478  05FB  0823               	movf	??_RegisterRead,w
  4479  05FC  00A5               	movwf	RegisterRead@value
  4480                           
  4481                           ;Main Card V10.0.c: 810: PORTAbits.RA4 = 1;
  4482  05FD  1605               	bsf	5,4	;volatile
  4483                           
  4484                           ;Main Card V10.0.c: 811: return value;
  4485  05FE  0825               	movf	RegisterRead@value,w
  4486  05FF  0008               	return
  4487  0600                     __end_of_RegisterRead:	
  4488                           
  4489                           	psect	text25
  4490  0BFE                     __ptext25:	
  4491 ;; *************** function _ReadSPI *****************
  4492 ;; Defined at:
  4493 ;;		line 616 in file "../Main Card V10.0.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;		None
  4496 ;; Auto vars:     Size  Location     Type
  4497 ;;		None
  4498 ;; Return value:  Size  Location     Type
  4499 ;;                  1    wreg      unsigned char 
  4500 ;; Registers used:
  4501 ;;		wreg, status,2, status,0, pclath, cstack
  4502 ;; Tracked objects:
  4503 ;;		On entry : 0/0
  4504 ;;		On exit  : 0/0
  4505 ;;		Unchanged: 0/0
  4506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4507 ;;      Params:         0       0       0       0       0
  4508 ;;      Locals:         0       0       0       0       0
  4509 ;;      Temps:          0       0       0       0       0
  4510 ;;      Totals:         0       0       0       0       0
  4511 ;;Total ram usage:        0 bytes
  4512 ;; Hardware stack levels used:    1
  4513 ;; Hardware stack levels required when called:    3
  4514 ;; This function calls:
  4515 ;;		_WriteSPI
  4516 ;; This function is called by:
  4517 ;;		_RegisterRead
  4518 ;;		_ReadFIFO
  4519 ;; This function uses a non-reentrant model
  4520 ;;
  4521                           
  4522                           
  4523                           ;psect for function _ReadSPI
  4524  0BFE                     _ReadSPI:	
  4525                           
  4526                           ;Main Card V10.0.c: 618: WriteSPI(0x00);
  4527                           
  4528                           ;incstack = 0
  4529                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4530  0BFE  3000               	movlw	0
  4531  0BFF  120A  158A  2439   	fcall	_WriteSPI
  4532                           
  4533                           ;Main Card V10.0.c: 619: return SSPBUF;
  4534  0C02  1283               	bcf	3,5	;RP0=0, select bank0
  4535  0C03  1303               	bcf	3,6	;RP1=0, select bank0
  4536  0C04  0813               	movf	19,w	;volatile
  4537  0C05  0008               	return
  4538  0C06                     __end_of_ReadSPI:	
  4539                           
  4540                           	psect	text26
  4541  0C39                     __ptext26:	
  4542 ;; *************** function _WriteSPI *****************
  4543 ;; Defined at:
  4544 ;;		line 604 in file "../Main Card V10.0.c"
  4545 ;; Parameters:    Size  Location     Type
  4546 ;;  databyte        1    wreg     unsigned char 
  4547 ;; Auto vars:     Size  Location     Type
  4548 ;;  databyte        1    2[BANK0 ] unsigned char 
  4549 ;;  buffer          1    1[BANK0 ] unsigned char 
  4550 ;; Return value:  Size  Location     Type
  4551 ;;                  1    wreg      void 
  4552 ;; Registers used:
  4553 ;;		wreg
  4554 ;; Tracked objects:
  4555 ;;		On entry : 0/0
  4556 ;;		On exit  : 0/0
  4557 ;;		Unchanged: 0/0
  4558 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4559 ;;      Params:         0       0       0       0       0
  4560 ;;      Locals:         0       2       0       0       0
  4561 ;;      Temps:          0       1       0       0       0
  4562 ;;      Totals:         0       3       0       0       0
  4563 ;;Total ram usage:        3 bytes
  4564 ;; Hardware stack levels used:    1
  4565 ;; Hardware stack levels required when called:    2
  4566 ;; This function calls:
  4567 ;;		Nothing
  4568 ;; This function is called by:
  4569 ;;		_ReadSPI
  4570 ;;		_RegisterRead
  4571 ;;		_RegisterSet
  4572 ;;		_WriteFIFO
  4573 ;; This function uses a non-reentrant model
  4574 ;;
  4575                           
  4576                           
  4577                           ;psect for function _WriteSPI
  4578  0C39                     _WriteSPI:	
  4579                           
  4580                           ;incstack = 0
  4581                           ; Regs used in _WriteSPI: [wreg]
  4582                           ;WriteSPI@databyte stored from wreg
  4583  0C39  1283               	bcf	3,5	;RP0=0, select bank0
  4584  0C3A  1303               	bcf	3,6	;RP1=0, select bank0
  4585  0C3B  00A2               	movwf	WriteSPI@databyte
  4586                           
  4587                           ;Main Card V10.0.c: 606: unsigned char buffer;
  4588                           ;Main Card V10.0.c: 607: buffer = SSPBUF;
  4589  0C3C  0813               	movf	19,w	;volatile
  4590  0C3D  00A0               	movwf	??_WriteSPI
  4591  0C3E  0820               	movf	??_WriteSPI,w
  4592  0C3F  00A1               	movwf	WriteSPI@buffer
  4593                           
  4594                           ;Main Card V10.0.c: 608: PIR1bits.SSPIF=0;
  4595  0C40  118C               	bcf	12,3	;volatile
  4596                           
  4597                           ;Main Card V10.0.c: 609: SSPBUF = databyte;
  4598  0C41  0822               	movf	WriteSPI@databyte,w
  4599  0C42  0093               	movwf	19	;volatile
  4600  0C43                     l302:	
  4601                           ;Main Card V10.0.c: 610: while(PIR1bits.SSPIF == 0);
  4602                           
  4603  0C43  1D8C               	btfss	12,3	;volatile
  4604  0C44  2C43               	goto	l302
  4605                           
  4606                           ;Main Card V10.0.c: 611: PIR1bits.SSPIF = 0;
  4607  0C45  118C               	bcf	12,3	;volatile
  4608  0C46  0008               	return
  4609  0C47                     __end_of_WriteSPI:	
  4610                           
  4611                           	psect	text27
  4612  0CAE                     __ptext27:	
  4613 ;; *************** function _Mode_3 *****************
  4614 ;; Defined at:
  4615 ;;		line 408 in file "../Main Card V10.0.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    6
  4636 ;; This function calls:
  4637 ;;		_LightWithSensController
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           
  4644                           ;psect for function _Mode_3
  4645  0CAE                     _Mode_3:	
  4646                           
  4647                           ;Main Card V10.0.c: 410: LightWithSensController();
  4648                           
  4649                           ;incstack = 0
  4650                           ; Regs used in _Mode_3: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4651  0CAE  120A  158A  2646  120A  158A  	fcall	_LightWithSensController
  4652                           
  4653                           ;Main Card V10.0.c: 411: if(bDark && PORTAbits.RA1 && intBlinkCycle == 0)
  4654  0CB3  1283               	bcf	3,5	;RP0=0, select bank0
  4655  0CB4  1303               	bcf	3,6	;RP1=0, select bank0
  4656  0CB5  086D               	movf	_bDark,w
  4657  0CB6  1903               	btfsc	3,2
  4658  0CB7  0008               	return
  4659  0CB8  1C85               	btfss	5,1	;volatile
  4660  0CB9  0008               	return
  4661  0CBA  0868               	movf	_intBlinkCycle,w
  4662  0CBB  0469               	iorwf	_intBlinkCycle+1,w
  4663  0CBC  1D03               	btfss	3,2
  4664  0CBD  0008               	return
  4665                           
  4666                           ;Main Card V10.0.c: 412: {
  4667                           ;Main Card V10.0.c: 413: intBlinkCycle = 1;
  4668  0CBE  3001               	movlw	1
  4669  0CBF  00E8               	movwf	_intBlinkCycle
  4670  0CC0  3000               	movlw	0
  4671  0CC1  00E9               	movwf	_intBlinkCycle+1
  4672                           
  4673                           ;Main Card V10.0.c: 414: intBlinkCounter = 0;
  4674  0CC2  1683               	bsf	3,5	;RP0=1, select bank1
  4675  0CC3  1303               	bcf	3,6	;RP1=0, select bank1
  4676  0CC4  01B1               	clrf	_intBlinkCounter^(0+128)
  4677  0CC5  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  4678  0CC6  0008               	return
  4679  0CC7                     __end_of_Mode_3:	
  4680                           
  4681                           	psect	text28
  4682  0C2C                     __ptext28:	
  4683 ;; *************** function _Mode_2 *****************
  4684 ;; Defined at:
  4685 ;;		line 397 in file "../Main Card V10.0.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;		None
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      void 
  4692 ;; Registers used:
  4693 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4699 ;;      Params:         0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0
  4702 ;;      Totals:         0       0       0       0       0
  4703 ;;Total ram usage:        0 bytes
  4704 ;; Hardware stack levels used:    1
  4705 ;; Hardware stack levels required when called:    6
  4706 ;; This function calls:
  4707 ;;		_LightWithSensController
  4708 ;; This function is called by:
  4709 ;;		_main
  4710 ;; This function uses a non-reentrant model
  4711 ;;
  4712                           
  4713                           
  4714                           ;psect for function _Mode_2
  4715  0C2C                     _Mode_2:	
  4716                           
  4717                           ;Main Card V10.0.c: 399: LightWithSensController();
  4718                           
  4719                           ;incstack = 0
  4720                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4721  0C2C  120A  158A  2646  120A  158A  	fcall	_LightWithSensController
  4722                           
  4723                           ;Main Card V10.0.c: 400: if(PORTCbits.RC2)
  4724  0C31  1283               	bcf	3,5	;RP0=0, select bank0
  4725  0C32  1303               	bcf	3,6	;RP1=0, select bank0
  4726  0C33  1D07               	btfss	7,2	;volatile
  4727  0C34  2C37               	goto	l255
  4728                           
  4729                           ;Main Card V10.0.c: 401: PORTCbits.RC1 = 1;
  4730  0C35  1487               	bsf	7,1	;volatile
  4731  0C36  0008               	return
  4732  0C37                     l255:	
  4733                           
  4734                           ;Main Card V10.0.c: 402: else
  4735                           ;Main Card V10.0.c: 403: PORTCbits.RC1 = 0;
  4736  0C37  1087               	bcf	7,1	;volatile
  4737  0C38  0008               	return
  4738  0C39                     __end_of_Mode_2:	
  4739                           
  4740                           	psect	text29
  4741  0CC7                     __ptext29:	
  4742 ;; *************** function _Mode_1 *****************
  4743 ;; Defined at:
  4744 ;;		line 383 in file "../Main Card V10.0.c"
  4745 ;; Parameters:    Size  Location     Type
  4746 ;;		None
  4747 ;; Auto vars:     Size  Location     Type
  4748 ;;		None
  4749 ;; Return value:  Size  Location     Type
  4750 ;;                  1    wreg      void 
  4751 ;; Registers used:
  4752 ;;		wreg, status,2, status,0, pclath, cstack
  4753 ;; Tracked objects:
  4754 ;;		On entry : 0/0
  4755 ;;		On exit  : 0/0
  4756 ;;		Unchanged: 0/0
  4757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4758 ;;      Params:         0       0       0       0       0
  4759 ;;      Locals:         0       0       0       0       0
  4760 ;;      Temps:          0       0       0       0       0
  4761 ;;      Totals:         0       0       0       0       0
  4762 ;;Total ram usage:        0 bytes
  4763 ;; Hardware stack levels used:    1
  4764 ;; Hardware stack levels required when called:    5
  4765 ;; This function calls:
  4766 ;;		_DarknessCheck
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;; This function uses a non-reentrant model
  4770 ;;
  4771                           
  4772                           
  4773                           ;psect for function _Mode_1
  4774  0CC7                     _Mode_1:	
  4775                           
  4776                           ;Main Card V10.0.c: 386: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4777                           
  4778                           ;incstack = 0
  4779                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4780  0CC7  301E               	movlw	30
  4781  0CC8  1283               	bcf	3,5	;RP0=0, select bank0
  4782  0CC9  1303               	bcf	3,6	;RP1=0, select bank0
  4783  0CCA  066A               	xorwf	_intSecondCounter,w
  4784  0CCB  046B               	iorwf	_intSecondCounter+1,w
  4785  0CCC  1903               	btfsc	3,2
  4786  0CCD  1907               	btfsc	7,2	;volatile
  4787  0CCE  2CD4               	goto	l2248
  4788                           
  4789                           ;Main Card V10.0.c: 387: DarknessCheck();
  4790  0CCF  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4791  0CD4                     l2248:	
  4792                           
  4793                           ;Main Card V10.0.c: 388: if((intBlinkCycle == 1)&&(bDark == 1))
  4794  0CD4  1283               	bcf	3,5	;RP0=0, select bank0
  4795  0CD5  1303               	bcf	3,6	;RP1=0, select bank0
  4796  0CD6  0368               	decf	_intBlinkCycle,w
  4797  0CD7  0469               	iorwf	_intBlinkCycle+1,w
  4798  0CD8  1D03               	btfss	3,2
  4799  0CD9  2CDF               	goto	l250
  4800  0CDA  036D               	decf	_bDark,w
  4801  0CDB  1D03               	btfss	3,2
  4802  0CDC  2CDF               	goto	l250
  4803                           
  4804                           ;Main Card V10.0.c: 389: PORTCbits.RC2 = 1;
  4805  0CDD  1507               	bsf	7,2	;volatile
  4806  0CDE  0008               	return
  4807  0CDF                     l250:	
  4808                           
  4809                           ;Main Card V10.0.c: 390: else
  4810                           ;Main Card V10.0.c: 391: PORTCbits.RC2 = 0;
  4811  0CDF  1107               	bcf	7,2	;volatile
  4812  0CE0  0008               	return
  4813  0CE1                     __end_of_Mode_1:	
  4814                           
  4815                           	psect	text30
  4816  0BFA                     __ptext30:	
  4817 ;; *************** function _Mode_0 *****************
  4818 ;; Defined at:
  4819 ;;		line 375 in file "../Main Card V10.0.c"
  4820 ;; Parameters:    Size  Location     Type
  4821 ;;		None
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;		None
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  1    wreg      void 
  4826 ;; Registers used:
  4827 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         0       0       0       0       0
  4834 ;;      Locals:         0       0       0       0       0
  4835 ;;      Temps:          0       0       0       0       0
  4836 ;;      Totals:         0       0       0       0       0
  4837 ;;Total ram usage:        0 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; Hardware stack levels required when called:    6
  4840 ;; This function calls:
  4841 ;;		_LightWithSensController
  4842 ;; This function is called by:
  4843 ;;		_main
  4844 ;; This function uses a non-reentrant model
  4845 ;;
  4846                           
  4847                           
  4848                           ;psect for function _Mode_0
  4849  0BFA                     _Mode_0:	
  4850                           
  4851                           ;Main Card V10.0.c: 377: LightWithSensController();
  4852                           
  4853                           ;incstack = 0
  4854                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4855  0BFA  120A  158A  2646   	fcall	_LightWithSensController
  4856  0BFD  0008               	return
  4857  0BFE                     __end_of_Mode_0:	
  4858                           
  4859                           	psect	text31
  4860  0E46                     __ptext31:	
  4861 ;; *************** function _LightWithSensController *****************
  4862 ;; Defined at:
  4863 ;;		line 446 in file "../Main Card V10.0.c"
  4864 ;; Parameters:    Size  Location     Type
  4865 ;;		None
  4866 ;; Auto vars:     Size  Location     Type
  4867 ;;		None
  4868 ;; Return value:  Size  Location     Type
  4869 ;;                  1    wreg      void 
  4870 ;; Registers used:
  4871 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4872 ;; Tracked objects:
  4873 ;;		On entry : 0/0
  4874 ;;		On exit  : 0/0
  4875 ;;		Unchanged: 0/0
  4876 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4877 ;;      Params:         0       0       0       0       0
  4878 ;;      Locals:         0       0       0       0       0
  4879 ;;      Temps:          0       0       0       0       0
  4880 ;;      Totals:         0       0       0       0       0
  4881 ;;Total ram usage:        0 bytes
  4882 ;; Hardware stack levels used:    1
  4883 ;; Hardware stack levels required when called:    5
  4884 ;; This function calls:
  4885 ;;		_DarknessCheck
  4886 ;;		_timerFunction
  4887 ;; This function is called by:
  4888 ;;		_Mode_0
  4889 ;;		_Mode_2
  4890 ;;		_Mode_3
  4891 ;;		_Mode_4
  4892 ;;		_Mode_5
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function _LightWithSensController
  4898  0E46                     _LightWithSensController:	
  4899                           
  4900                           ;Main Card V10.0.c: 450: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4901                           
  4902                           ;incstack = 0
  4903                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4904  0E46  301E               	movlw	30
  4905  0E47  1283               	bcf	3,5	;RP0=0, select bank0
  4906  0E48  1303               	bcf	3,6	;RP1=0, select bank0
  4907  0E49  066A               	xorwf	_intSecondCounter,w
  4908  0E4A  046B               	iorwf	_intSecondCounter+1,w
  4909  0E4B  1903               	btfsc	3,2
  4910  0E4C  1907               	btfsc	7,2	;volatile
  4911  0E4D  2E53               	goto	l2130
  4912                           
  4913                           ;Main Card V10.0.c: 451: DarknessCheck();
  4914  0E4E  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4915  0E53                     l2130:	
  4916                           
  4917                           ;Main Card V10.0.c: 455: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  4918  0E53  1283               	bcf	3,5	;RP0=0, select bank0
  4919  0E54  1303               	bcf	3,6	;RP1=0, select bank0
  4920  0E55  036D               	decf	_bDark,w
  4921  0E56  1903               	btfsc	3,2
  4922  0E57  1C85               	btfss	5,1	;volatile
  4923  0E58  2E68               	goto	l2140
  4924  0E59  1907               	btfsc	7,2	;volatile
  4925  0E5A  2E68               	goto	l2140
  4926                           
  4927                           ;Main Card V10.0.c: 456: {
  4928                           ;Main Card V10.0.c: 458: PORTCbits.RC2 = 1;
  4929  0E5B  1507               	bsf	7,2	;volatile
  4930                           
  4931                           ;Main Card V10.0.c: 460: timerFunction(0,120);
  4932  0E5C  3000               	movlw	0
  4933  0E5D  00A0               	movwf	timerFunction@intTimerNumber
  4934  0E5E  00A1               	movwf	timerFunction@intTimerNumber+1
  4935  0E5F  3078               	movlw	120
  4936  0E60  00A2               	movwf	timerFunction@intSetSeconds
  4937  0E61  3000               	movlw	0
  4938  0E62  00A3               	movwf	timerFunction@intSetSeconds+1
  4939  0E63  120A  158A  2487  120A  158A  	fcall	_timerFunction
  4940  0E68                     l2140:	
  4941                           
  4942                           ;Main Card V10.0.c: 461: }
  4943                           ;Main Card V10.0.c: 464: if(bTimerComplete[0])
  4944  0E68  1683               	bsf	3,5	;RP0=1, select bank1
  4945  0E69  1303               	bcf	3,6	;RP1=0, select bank1
  4946  0E6A  082A               	movf	_bTimerComplete^(0+128),w
  4947  0E6B  1903               	btfsc	3,2
  4948  0E6C  0008               	return
  4949                           
  4950                           ;Main Card V10.0.c: 465: {
  4951                           ;Main Card V10.0.c: 466: DarknessCheck();
  4952  0E6D  120A  158A  258E  120A  158A  	fcall	_DarknessCheck
  4953                           
  4954                           ;Main Card V10.0.c: 467: if((bDark)&&(PORTAbits.RA1))
  4955  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  4956  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  4957  0E74  086D               	movf	_bDark,w
  4958  0E75  1D03               	btfss	3,2
  4959  0E76  1C85               	btfss	5,1	;volatile
  4960  0E77  2E83               	goto	l275
  4961                           
  4962                           ;Main Card V10.0.c: 468: {
  4963                           ;Main Card V10.0.c: 469: timerFunction(0,120);
  4964  0E78  3000               	movlw	0
  4965  0E79  00A0               	movwf	timerFunction@intTimerNumber
  4966  0E7A  00A1               	movwf	timerFunction@intTimerNumber+1
  4967  0E7B  3078               	movlw	120
  4968  0E7C  00A2               	movwf	timerFunction@intSetSeconds
  4969  0E7D  3000               	movlw	0
  4970  0E7E  00A3               	movwf	timerFunction@intSetSeconds+1
  4971  0E7F  120A  158A  2487   	fcall	_timerFunction
  4972                           
  4973                           ;Main Card V10.0.c: 470: }
  4974  0E82  0008               	return
  4975  0E83                     l275:	
  4976                           
  4977                           ;Main Card V10.0.c: 471: else
  4978                           ;Main Card V10.0.c: 472: PORTCbits.RC2 = 0;
  4979  0E83  1107               	bcf	7,2	;volatile
  4980  0E84  0008               	return
  4981  0E85                     __end_of_LightWithSensController:	
  4982                           
  4983                           	psect	text32
  4984  0C87                     __ptext32:	
  4985 ;; *************** function _timerFunction *****************
  4986 ;; Defined at:
  4987 ;;		line 497 in file "../Main Card V10.0.c"
  4988 ;; Parameters:    Size  Location     Type
  4989 ;;  intTimerNumb    2    0[BANK0 ] int 
  4990 ;;  intSetSecond    2    2[BANK0 ] int 
  4991 ;; Auto vars:     Size  Location     Type
  4992 ;;		None
  4993 ;; Return value:  Size  Location     Type
  4994 ;;                  1    wreg      unsigned char 
  4995 ;; Registers used:
  4996 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4997 ;; Tracked objects:
  4998 ;;		On entry : 0/0
  4999 ;;		On exit  : 0/0
  5000 ;;		Unchanged: 0/0
  5001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5002 ;;      Params:         0       4       0       0       0
  5003 ;;      Locals:         0       0       0       0       0
  5004 ;;      Temps:          0       1       0       0       0
  5005 ;;      Totals:         0       5       0       0       0
  5006 ;;Total ram usage:        5 bytes
  5007 ;; Hardware stack levels used:    1
  5008 ;; Hardware stack levels required when called:    2
  5009 ;; This function calls:
  5010 ;;		Nothing
  5011 ;; This function is called by:
  5012 ;;		_TransiverToReceive
  5013 ;;		_TransiverReadFIFO
  5014 ;;		_TransmittString
  5015 ;;		_LightWithSensController
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           
  5020                           ;psect for function _timerFunction
  5021  0C87                     _timerFunction:	
  5022                           
  5023                           ;Main Card V10.0.c: 499: intClockTimer[intTimerNumber] = intSetSeconds;
  5024                           
  5025                           ;incstack = 0
  5026                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  5027  0C87  1283               	bcf	3,5	;RP0=0, select bank0
  5028  0C88  1303               	bcf	3,6	;RP1=0, select bank0
  5029  0C89  0820               	movf	timerFunction@intTimerNumber,w
  5030  0C8A  00A4               	movwf	??_timerFunction
  5031  0C8B  0724               	addwf	??_timerFunction,w
  5032  0C8C  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5033  0C8D  0084               	movwf	4
  5034  0C8E  0822               	movf	timerFunction@intSetSeconds,w
  5035  0C8F  1383               	bcf	3,7	;select IRP bank1
  5036  0C90  0080               	movwf	0
  5037  0C91  0A84               	incf	4,f
  5038  0C92  0823               	movf	timerFunction@intSetSeconds+1,w
  5039  0C93  0080               	movwf	0
  5040                           
  5041                           ;Main Card V10.0.c: 500: bTimerComplete[intTimerNumber] = 0;
  5042  0C94  0820               	movf	timerFunction@intTimerNumber,w
  5043  0C95  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5044  0C96  0084               	movwf	4
  5045  0C97  0180               	clrf	0
  5046  0C98  0008               	return
  5047  0C99                     __end_of_timerFunction:	
  5048                           ;Main Card V10.0.c: 501: return 1;
  5049                           ;	Return value of _timerFunction is never used
  5050                           
  5051                           
  5052                           	psect	text33
  5053  0D8E                     __ptext33:	
  5054 ;; *************** function _DarknessCheck *****************
  5055 ;; Defined at:
  5056 ;;		line 1008 in file "../Main Card V10.0.c"
  5057 ;; Parameters:    Size  Location     Type
  5058 ;;		None
  5059 ;; Auto vars:     Size  Location     Type
  5060 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  5061 ;; Return value:  Size  Location     Type
  5062 ;;                  1    wreg      void 
  5063 ;; Registers used:
  5064 ;;		wreg, status,2, status,0, pclath, cstack
  5065 ;; Tracked objects:
  5066 ;;		On entry : 0/0
  5067 ;;		On exit  : 0/0
  5068 ;;		Unchanged: 0/0
  5069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5070 ;;      Params:         0       0       0       0       0
  5071 ;;      Locals:         0       1       0       0       0
  5072 ;;      Temps:          0       1       0       0       0
  5073 ;;      Totals:         0       2       0       0       0
  5074 ;;Total ram usage:        2 bytes
  5075 ;; Hardware stack levels used:    1
  5076 ;; Hardware stack levels required when called:    4
  5077 ;; This function calls:
  5078 ;;		_AnalogValue
  5079 ;;		_eeprom_read
  5080 ;; This function is called by:
  5081 ;;		_TransmittedDataHandler
  5082 ;;		_Mode_1
  5083 ;;		_LightWithSensController
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           
  5088                           ;psect for function _DarknessCheck
  5089  0D8E                     _DarknessCheck:	
  5090                           
  5091                           ;Main Card V10.0.c: 1010: unsigned char darknessValue;
  5092                           ;Main Card V10.0.c: 1011: PORTCbits.RC0 = 0;
  5093                           
  5094                           ;incstack = 0
  5095                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  5096  0D8E  1283               	bcf	3,5	;RP0=0, select bank0
  5097  0D8F  1303               	bcf	3,6	;RP1=0, select bank0
  5098  0D90  1007               	bcf	7,0	;volatile
  5099                           
  5100                           ;Main Card V10.0.c: 1013: if(bValueFromPot == TRUE)
  5101  0D91  036F               	decf	_bValueFromPot,w
  5102  0D92  1D03               	btfss	3,2
  5103  0D93  2D9B               	goto	l1964
  5104                           
  5105                           ;Main Card V10.0.c: 1014: darknessValue= AnalogValue(3);
  5106  0D94  3003               	movlw	3
  5107  0D95  120A  158A  2565  120A  158A  	fcall	_AnalogValue
  5108  0D9A  2DA1               	goto	L2
  5109  0D9B                     l1964:	
  5110                           
  5111                           ;Main Card V10.0.c: 1015: else
  5112                           ;Main Card V10.0.c: 1016: darknessValue=eeprom_read(addressDarknessValue);
  5113  0D9B  087C               	movf	_addressDarknessValue,w
  5114  0D9C  120A  158A  2541  120A  158A  	fcall	_eeprom_read
  5115  0DA1                     L2:	
  5116  0DA1  1283               	bcf	3,5	;RP0=0, select bank0
  5117  0DA2  1303               	bcf	3,6	;RP1=0, select bank0
  5118  0DA3  00A8               	movwf	??_DarknessCheck
  5119  0DA4  0828               	movf	??_DarknessCheck,w
  5120  0DA5  00A9               	movwf	DarknessCheck@darknessValue
  5121                           
  5122                           ;Main Card V10.0.c: 1018: if(AnalogValue(0)>darknessValue)
  5123  0DA6  3000               	movlw	0
  5124  0DA7  120A  158A  2565  120A  158A  	fcall	_AnalogValue
  5125  0DAC  1283               	bcf	3,5	;RP0=0, select bank0
  5126  0DAD  1303               	bcf	3,6	;RP1=0, select bank0
  5127  0DAE  0229               	subwf	DarknessCheck@darknessValue,w
  5128  0DAF  1803               	skipnc
  5129  0DB0  2DB4               	goto	l1968
  5130                           
  5131                           ;Main Card V10.0.c: 1019: bDark = 1;
  5132  0DB1  01ED               	clrf	_bDark
  5133  0DB2  0AED               	incf	_bDark,f
  5134  0DB3  2DB5               	goto	l1970
  5135  0DB4                     l1968:	
  5136                           
  5137                           ;Main Card V10.0.c: 1020: else
  5138                           ;Main Card V10.0.c: 1021: bDark = 0;
  5139  0DB4  01ED               	clrf	_bDark
  5140  0DB5                     l1970:	
  5141                           
  5142                           ;Main Card V10.0.c: 1022: PORTCbits.RC0 = 0;
  5143  0DB5  1007               	bcf	7,0	;volatile
  5144  0DB6  0008               	return
  5145  0DB7                     __end_of_DarknessCheck:	
  5146                           
  5147                           	psect	text34
  5148  0D41                     __ptext34:	
  5149 ;; *************** function _eeprom_read *****************
  5150 ;; Defined at:
  5151 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\pic\eeread.c"
  5152 ;; Parameters:    Size  Location     Type
  5153 ;;  addr            1    wreg     unsigned char 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  addr            1    1[BANK0 ] unsigned char 
  5156 ;; Return value:  Size  Location     Type
  5157 ;;                  1    wreg      unsigned char 
  5158 ;; Registers used:
  5159 ;;		wreg, status,2, status,0
  5160 ;; Tracked objects:
  5161 ;;		On entry : 0/0
  5162 ;;		On exit  : 0/0
  5163 ;;		Unchanged: 0/0
  5164 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5165 ;;      Params:         0       0       0       0       0
  5166 ;;      Locals:         0       1       0       0       0
  5167 ;;      Temps:          0       1       0       0       0
  5168 ;;      Totals:         0       2       0       0       0
  5169 ;;Total ram usage:        2 bytes
  5170 ;; Hardware stack levels used:    1
  5171 ;; Hardware stack levels required when called:    2
  5172 ;; This function calls:
  5173 ;;		Nothing
  5174 ;; This function is called by:
  5175 ;;		_TransmittedDataHandler
  5176 ;;		_DarknessCheck
  5177 ;; This function uses a non-reentrant model
  5178 ;;
  5179                           
  5180                           
  5181                           ;psect for function _eeprom_read
  5182  0D41                     _eeprom_read:	
  5183                           
  5184                           ;incstack = 0
  5185                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5186                           ;eeprom_read@addr stored from wreg
  5187  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5188  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5189  0D43  00A1               	movwf	eeprom_read@addr
  5190  0D44  2D47               	goto	l392
  5191  0D45                     u1171:	
  5192  0D45  1283               	bcf	3,5	;RP0=0, select bank0
  5193  0D46  1303               	bcf	3,6	;RP1=0, select bank0
  5194  0D47                     l392:	
  5195  0D47  0064               	clrwdt	;# 
  5196  0D48  1683               	bsf	3,5	;RP0=1, select bank3
  5197  0D49  1703               	bsf	3,6	;RP1=1, select bank3
  5198  0D4A  188C               	btfsc	12,1	;volsfr
  5199  0D4B  2D45               	goto	u1171
  5200  0D4C  1283               	bcf	3,5	;RP0=0, select bank0
  5201  0D4D  1303               	bcf	3,6	;RP1=0, select bank0
  5202  0D4E  0821               	movf	eeprom_read@addr,w
  5203  0D4F  1283               	bcf	3,5	;RP0=0, select bank2
  5204  0D50  1703               	bsf	3,6	;RP1=1, select bank2
  5205  0D51  008D               	movwf	13	;volatile
  5206  0D52  303F               	movlw	63
  5207  0D53  1283               	bcf	3,5	;RP0=0, select bank0
  5208  0D54  1303               	bcf	3,6	;RP1=0, select bank0
  5209  0D55  00A0               	movwf	??_eeprom_read
  5210  0D56  0820               	movf	??_eeprom_read,w
  5211  0D57  1683               	bsf	3,5	;RP0=1, select bank3
  5212  0D58  1703               	bsf	3,6	;RP1=1, select bank3
  5213  0D59  058C               	andwf	12,f	;volsfr
  5214  0D5A  140C               	bsf	12,0	;volsfr
  5215  0D5B  1003               	clrc
  5216  0D5C  180C               	btfsc	12,0	;volsfr
  5217  0D5D  1403               	setc
  5218  0D5E  3000               	movlw	0
  5219  0D5F  1803               	skipnc
  5220  0D60  3001               	movlw	1
  5221  0D61  1283               	bcf	3,5	;RP0=0, select bank2
  5222  0D62  1703               	bsf	3,6	;RP1=1, select bank2
  5223  0D63  080C               	movf	12,w	;volatile
  5224  0D64  0008               	return
  5225  0D65                     __end_of_eeprom_read:	
  5226                           
  5227                           	psect	text35
  5228  0D65                     __ptext35:	
  5229 ;; *************** function _AnalogValue *****************
  5230 ;; Defined at:
  5231 ;;		line 981 in file "../Main Card V10.0.c"
  5232 ;; Parameters:    Size  Location     Type
  5233 ;;  channel         1    wreg     unsigned char 
  5234 ;; Auto vars:     Size  Location     Type
  5235 ;;  channel         1    7[BANK0 ] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  1    wreg      unsigned char 
  5238 ;; Registers used:
  5239 ;;		wreg, status,2, status,0, pclath, cstack
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5245 ;;      Params:         0       0       0       0       0
  5246 ;;      Locals:         0       1       0       0       0
  5247 ;;      Temps:          0       1       0       0       0
  5248 ;;      Totals:         0       2       0       0       0
  5249 ;;Total ram usage:        2 bytes
  5250 ;; Hardware stack levels used:    1
  5251 ;; Hardware stack levels required when called:    3
  5252 ;; This function calls:
  5253 ;;		_DelayDs
  5254 ;; This function is called by:
  5255 ;;		_TransmittedDataHandler
  5256 ;;		_DarknessCheck
  5257 ;; This function uses a non-reentrant model
  5258 ;;
  5259                           
  5260                           
  5261                           ;psect for function _AnalogValue
  5262  0D65                     _AnalogValue:	
  5263                           
  5264                           ;incstack = 0
  5265                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5266                           ;AnalogValue@channel stored from wreg
  5267  0D65  1283               	bcf	3,5	;RP0=0, select bank0
  5268  0D66  1303               	bcf	3,6	;RP1=0, select bank0
  5269  0D67  00A7               	movwf	AnalogValue@channel
  5270                           
  5271                           ;Main Card V10.0.c: 983: ADCON0bits.CHS = channel;
  5272  0D68  0827               	movf	AnalogValue@channel,w
  5273  0D69  00A6               	movwf	??_AnalogValue
  5274  0D6A  0DA6               	rlf	??_AnalogValue,f
  5275  0D6B  0DA6               	rlf	??_AnalogValue,f
  5276  0D6C  081F               	movf	31,w	;volatile
  5277  0D6D  0626               	xorwf	??_AnalogValue,w
  5278  0D6E  39C3               	andlw	-61
  5279  0D6F  0626               	xorwf	??_AnalogValue,w
  5280  0D70  009F               	movwf	31	;volatile
  5281                           
  5282                           ;Main Card V10.0.c: 984: ADCON0bits.ADON = 1;
  5283  0D71  141F               	bsf	31,0	;volatile
  5284                           
  5285                           ;Main Card V10.0.c: 985: DelayDs(1);
  5286  0D72  3001               	movlw	1
  5287  0D73  00A0               	movwf	DelayDs@cnt
  5288  0D74  3000               	movlw	0
  5289  0D75  00A1               	movwf	DelayDs@cnt+1
  5290  0D76  120A  158A  24FB  120A  158A  	fcall	_DelayDs
  5291                           
  5292                           ;Main Card V10.0.c: 986: ADCON0bits.GO = 1;
  5293  0D7B  1283               	bcf	3,5	;RP0=0, select bank0
  5294  0D7C  1303               	bcf	3,6	;RP1=0, select bank0
  5295  0D7D  149F               	bsf	31,1	;volatile
  5296                           
  5297                           ;Main Card V10.0.c: 987: DelayDs(1);
  5298  0D7E  3001               	movlw	1
  5299  0D7F  00A0               	movwf	DelayDs@cnt
  5300  0D80  3000               	movlw	0
  5301  0D81  00A1               	movwf	DelayDs@cnt+1
  5302  0D82  120A  158A  24FB  120A  158A  	fcall	_DelayDs
  5303  0D87                     l366:	
  5304                           ;Main Card V10.0.c: 988: while(ADCON0bits.GO);
  5305                           
  5306  0D87  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0D88  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0D89  189F               	btfsc	31,1	;volatile
  5309  0D8A  2D87               	goto	l366
  5310                           
  5311                           ;Main Card V10.0.c: 989: ADCON0bits.ADON = 0;
  5312  0D8B  101F               	bcf	31,0	;volatile
  5313                           
  5314                           ;Main Card V10.0.c: 990: return ADRESH;
  5315  0D8C  081E               	movf	30,w	;volatile
  5316  0D8D  0008               	return
  5317  0D8E                     __end_of_AnalogValue:	
  5318                           
  5319                           	psect	text36
  5320  0CFB                     __ptext36:	
  5321 ;; *************** function _DelayDs *****************
  5322 ;; Defined at:
  5323 ;;		line 595 in file "../Main Card V10.0.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  cnt             2    0[BANK0 ] int 
  5326 ;; Auto vars:     Size  Location     Type
  5327 ;;  i               2    4[BANK0 ] int 
  5328 ;; Return value:  Size  Location     Type
  5329 ;;                  1    wreg      void 
  5330 ;; Registers used:
  5331 ;;		wreg, status,2
  5332 ;; Tracked objects:
  5333 ;;		On entry : 0/0
  5334 ;;		On exit  : 0/0
  5335 ;;		Unchanged: 0/0
  5336 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5337 ;;      Params:         0       2       0       0       0
  5338 ;;      Locals:         0       2       0       0       0
  5339 ;;      Temps:          0       2       0       0       0
  5340 ;;      Totals:         0       6       0       0       0
  5341 ;;Total ram usage:        6 bytes
  5342 ;; Hardware stack levels used:    1
  5343 ;; Hardware stack levels required when called:    2
  5344 ;; This function calls:
  5345 ;;		Nothing
  5346 ;; This function is called by:
  5347 ;;		_TransmittedDataHandler
  5348 ;;		_Blink
  5349 ;;		_AnalogValue
  5350 ;; This function uses a non-reentrant model
  5351 ;;
  5352                           
  5353                           
  5354                           ;psect for function _DelayDs
  5355  0CFB                     _DelayDs:	
  5356                           
  5357                           ;Main Card V10.0.c: 596: int i;
  5358                           ;Main Card V10.0.c: 597: for(i=0;i<cnt;i++){
  5359                           
  5360                           ;incstack = 0
  5361                           ; Regs used in _DelayDs: [wreg+status,2]
  5362  0CFB  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0CFC  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0CFD  01A4               	clrf	DelayDs@i
  5365  0CFE  01A5               	clrf	DelayDs@i+1
  5366  0CFF                     l296:	
  5367  0CFF  0825               	movf	DelayDs@i+1,w
  5368  0D00  3A80               	xorlw	128
  5369  0D01  00A2               	movwf	??_DelayDs
  5370  0D02  0821               	movf	DelayDs@cnt+1,w
  5371  0D03  3A80               	xorlw	128
  5372  0D04  0222               	subwf	??_DelayDs,w
  5373  0D05  1D03               	skipz
  5374  0D06  2D09               	goto	u1115
  5375  0D07  0820               	movf	DelayDs@cnt,w
  5376  0D08  0224               	subwf	DelayDs@i,w
  5377  0D09                     u1115:	
  5378  0D09  1803               	btfsc	3,0
  5379  0D0A  0008               	return
  5380                           
  5381                           ;Main Card V10.0.c: 598: _delay((unsigned long)((100)*(4000000/4000.0)));
  5382  0D0B  3082               	movlw	130
  5383  0D0C  1283               	bcf	3,5	;RP0=0, select bank0
  5384  0D0D  1303               	bcf	3,6	;RP1=0, select bank0
  5385  0D0E  00A3               	movwf	??_DelayDs+1
  5386  0D0F  30DD               	movlw	221
  5387  0D10  00A2               	movwf	??_DelayDs
  5388  0D11                     u2297:	
  5389  0D11  0BA2               	decfsz	??_DelayDs,f
  5390  0D12  2D11               	goto	u2297
  5391  0D13  0BA3               	decfsz	??_DelayDs+1,f
  5392  0D14  2D11               	goto	u2297
  5393  0D15  3001               	movlw	1
  5394  0D16  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0D17  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0D18  07A4               	addwf	DelayDs@i,f
  5397  0D19  1803               	skipnc
  5398  0D1A  0AA5               	incf	DelayDs@i+1,f
  5399  0D1B  3000               	movlw	0
  5400  0D1C  07A5               	addwf	DelayDs@i+1,f
  5401  0D1D  2CFF               	goto	l296
  5402  0D1E                     __end_of_DelayDs:	
  5403                           
  5404                           	psect	text37
  5405  04A9                     __ptext37:	
  5406 ;; *************** function _tc_int *****************
  5407 ;; Defined at:
  5408 ;;		line 910 in file "../Main Card V10.0.c"
  5409 ;; Parameters:    Size  Location     Type
  5410 ;;		None
  5411 ;; Auto vars:     Size  Location     Type
  5412 ;;		None
  5413 ;; Return value:  Size  Location     Type
  5414 ;;                  1    wreg      void 
  5415 ;; Registers used:
  5416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5417 ;; Tracked objects:
  5418 ;;		On entry : 0/0
  5419 ;;		On exit  : 0/0
  5420 ;;		Unchanged: 0/0
  5421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5422 ;;      Params:         0       0       0       0       0
  5423 ;;      Locals:         0       0       0       0       0
  5424 ;;      Temps:          7       0       0       0       0
  5425 ;;      Totals:         7       0       0       0       0
  5426 ;;Total ram usage:        7 bytes
  5427 ;; Hardware stack levels used:    1
  5428 ;; Hardware stack levels required when called:    1
  5429 ;; This function calls:
  5430 ;;		_TimerCounter
  5431 ;;		i1_OperationMode
  5432 ;; This function is called by:
  5433 ;;		Interrupt level 1
  5434 ;; This function uses a non-reentrant model
  5435 ;;
  5436                           
  5437                           
  5438                           ;psect for function _tc_int
  5439  04A9                     _tc_int:	
  5440                           
  5441                           ;Main Card V10.0.c: 914: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5442  04A9  1A86               	btfsc	6,5	;volatile
  5443  04AA  2CC3               	goto	i1l2408
  5444  04AB  0868               	movf	_intBlinkCycle,w
  5445  04AC  0469               	iorwf	_intBlinkCycle+1,w
  5446  04AD  1D03               	btfss	3,2
  5447  04AE  2CC3               	goto	i1l2408
  5448  04AF  120A  158A  240E  120A  118A  	fcall	i1_OperationMode
  5449  04B4  00F5               	movwf	??_tc_int
  5450  04B5  3002               	movlw	2
  5451  04B6  0275               	subwf	??_tc_int,w
  5452  04B7  1803               	skipnc
  5453  04B8  2CC3               	goto	i1l2408
  5454                           
  5455                           ;Main Card V10.0.c: 915: intBlinkCycle = 1;
  5456  04B9  3001               	movlw	1
  5457  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5458  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5459  04BC  00E8               	movwf	_intBlinkCycle
  5460  04BD  3000               	movlw	0
  5461  04BE  00E9               	movwf	_intBlinkCycle+1
  5462                           
  5463                           ;Main Card V10.0.c: 916: intBlinkCounter = 0;
  5464  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  5465  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  5466  04C1  01B1               	clrf	_intBlinkCounter^(0+128)
  5467  04C2  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5468  04C3                     i1l2408:	
  5469                           
  5470                           ;Main Card V10.0.c: 918: }
  5471                           ;Main Card V10.0.c: 919: if(TMR1IF ==1){
  5472  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5473  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5474  04C5  1C0C               	btfss	12,0	;volatile
  5475  04C6  2D68               	goto	L3
  5476                           
  5477                           ;Main Card V10.0.c: 920: TMR1ON = 0;
  5478  04C7  1010               	bcf	16,0	;volatile
  5479                           
  5480                           ;Main Card V10.0.c: 921: TMR1H = 0x0B;
  5481  04C8  300B               	movlw	11
  5482  04C9  008F               	movwf	15	;volatile
  5483                           
  5484                           ;Main Card V10.0.c: 922: TMR1L = 0xDB;
  5485  04CA  30DB               	movlw	219
  5486  04CB  008E               	movwf	14	;volatile
  5487                           
  5488                           ;Main Card V10.0.c: 924: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5489  04CC  0368               	decf	_intBlinkCycle,w
  5490  04CD  0469               	iorwf	_intBlinkCycle+1,w
  5491  04CE  1D03               	btfss	3,2
  5492  04CF  2CF6               	goto	i1l2426
  5493  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  5494  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  5495  04D2  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5496  04D3  00F6               	movwf	??_tc_int+1
  5497  04D4  0857               	movf	_intNumberOfBlinks^(0+128),w
  5498  04D5  00F5               	movwf	??_tc_int
  5499  04D6  1003               	clrc
  5500  04D7  0DF5               	rlf	??_tc_int,f
  5501  04D8  0DF6               	rlf	??_tc_int+1,f
  5502  04D9  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5503  04DA  3A80               	xorlw	128
  5504  04DB  00F7               	movwf	??_tc_int+2
  5505  04DC  0876               	movf	??_tc_int+1,w
  5506  04DD  3A80               	xorlw	128
  5507  04DE  0277               	subwf	??_tc_int+2,w
  5508  04DF  1D03               	skipz
  5509  04E0  2CE3               	goto	u211_25
  5510  04E1  0875               	movf	??_tc_int,w
  5511  04E2  0231               	subwf	_intBlinkCounter^(0+128),w
  5512  04E3                     u211_25:	
  5513  04E3  1803               	skipnc
  5514  04E4  2CF6               	goto	i1l2426
  5515                           
  5516                           ;Main Card V10.0.c: 925: intBlinkCounter++;
  5517  04E5  3001               	movlw	1
  5518  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  5519  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  5520  04E8  07B1               	addwf	_intBlinkCounter^(0+128),f
  5521  04E9  1803               	skipnc
  5522  04EA  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5523  04EB  3000               	movlw	0
  5524  04EC  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5525                           
  5526                           ;Main Card V10.0.c: 927: if(PORTCbits.RC1 == 0)
  5527  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  5528  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  5529  04EF  1887               	btfsc	7,1	;volatile
  5530  04F0  2CF3               	goto	i1l355
  5531                           
  5532                           ;Main Card V10.0.c: 928: PORTCbits.RC1 = 1;
  5533  04F1  1487               	bsf	7,1	;volatile
  5534  04F2  2D16               	goto	i1l2434
  5535  04F3                     i1l355:	
  5536                           
  5537                           ;Main Card V10.0.c: 929: else if(PORTCbits.RC1 == 1)
  5538  04F3  1C87               	btfss	7,1	;volatile
  5539  04F4  2D16               	goto	i1l2434
  5540  04F5  2D15               	goto	i1l2432
  5541  04F6                     i1l2426:	
  5542                           ;Main Card V10.0.c: 931: }
  5543                           
  5544                           ;Main Card V10.0.c: 930: PORTCbits.RC1 = 0;
  5545                           
  5546                           
  5547                           ;Main Card V10.0.c: 933: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5548  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  5549  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  5550  04F8  0368               	decf	_intBlinkCycle,w
  5551  04F9  0469               	iorwf	_intBlinkCycle+1,w
  5552  04FA  1D03               	btfss	3,2
  5553  04FB  2D16               	goto	i1l2434
  5554  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  5555  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  5556  04FE  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5557  04FF  00F6               	movwf	??_tc_int+1
  5558  0500  0857               	movf	_intNumberOfBlinks^(0+128),w
  5559  0501  00F5               	movwf	??_tc_int
  5560  0502  1003               	clrc
  5561  0503  0DF5               	rlf	??_tc_int,f
  5562  0504  0DF6               	rlf	??_tc_int+1,f
  5563  0505  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5564  0506  3A80               	xorlw	128
  5565  0507  00F7               	movwf	??_tc_int+2
  5566  0508  0876               	movf	??_tc_int+1,w
  5567  0509  3A80               	xorlw	128
  5568  050A  0277               	subwf	??_tc_int+2,w
  5569  050B  1D03               	skipz
  5570  050C  2D0F               	goto	u215_25
  5571  050D  0875               	movf	??_tc_int,w
  5572  050E  0231               	subwf	_intBlinkCounter^(0+128),w
  5573  050F                     u215_25:	
  5574  050F  1C03               	skipc
  5575  0510  2D16               	goto	i1l2434
  5576                           
  5577                           ;Main Card V10.0.c: 934: intBlinkCycle = 0;
  5578  0511  1283               	bcf	3,5	;RP0=0, select bank0
  5579  0512  1303               	bcf	3,6	;RP1=0, select bank0
  5580  0513  01E8               	clrf	_intBlinkCycle
  5581  0514  01E9               	clrf	_intBlinkCycle+1
  5582  0515                     i1l2432:	
  5583                           
  5584                           ;Main Card V10.0.c: 935: PORTCbits.RC1 = 0;
  5585  0515  1087               	bcf	7,1	;volatile
  5586  0516                     i1l2434:	
  5587                           
  5588                           ;Main Card V10.0.c: 936: }
  5589                           ;Main Card V10.0.c: 939: intHalfSecondCounter++;
  5590  0516  3001               	movlw	1
  5591  0517  1683               	bsf	3,5	;RP0=1, select bank1
  5592  0518  1303               	bcf	3,6	;RP1=0, select bank1
  5593  0519  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5594  051A  1803               	skipnc
  5595  051B  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5596  051C  3000               	movlw	0
  5597  051D  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5598                           
  5599                           ;Main Card V10.0.c: 940: if(intHalfSecondCounter>=2)
  5600  051E  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5601  051F  3A80               	xorlw	128
  5602  0520  00FF               	movwf	127
  5603  0521  3080               	movlw	128
  5604  0522  027F               	subwf	127,w
  5605  0523  1D03               	skipz
  5606  0524  2D27               	goto	u216_25
  5607  0525  3002               	movlw	2
  5608  0526  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5609  0527                     u216_25:	
  5610  0527  1C03               	skipc
  5611  0528  2D3A               	goto	i1l2444
  5612                           
  5613                           ;Main Card V10.0.c: 941: {
  5614                           ;Main Card V10.0.c: 942: intHalfSecondCounter = 0;
  5615  0529  1683               	bsf	3,5	;RP0=1, select bank1
  5616  052A  1303               	bcf	3,6	;RP1=0, select bank1
  5617  052B  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5618  052C  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5619                           
  5620                           ;Main Card V10.0.c: 943: intSecondCounter++;
  5621  052D  3001               	movlw	1
  5622  052E  1283               	bcf	3,5	;RP0=0, select bank0
  5623  052F  1303               	bcf	3,6	;RP1=0, select bank0
  5624  0530  07EA               	addwf	_intSecondCounter,f
  5625  0531  1803               	skipnc
  5626  0532  0AEB               	incf	_intSecondCounter+1,f
  5627  0533  3000               	movlw	0
  5628  0534  07EB               	addwf	_intSecondCounter+1,f
  5629                           
  5630                           ;Main Card V10.0.c: 944: TimerCounter();
  5631  0535  120A  158A  2685  120A  118A  	fcall	_TimerCounter
  5632  053A                     i1l2444:	
  5633                           
  5634                           ;Main Card V10.0.c: 945: }
  5635                           ;Main Card V10.0.c: 946: if(intSecondCounter >=60)
  5636  053A  1283               	bcf	3,5	;RP0=0, select bank0
  5637  053B  1303               	bcf	3,6	;RP1=0, select bank0
  5638  053C  086B               	movf	_intSecondCounter+1,w
  5639  053D  3A80               	xorlw	128
  5640  053E  00FF               	movwf	127
  5641  053F  3080               	movlw	128
  5642  0540  027F               	subwf	127,w
  5643  0541  1D03               	skipz
  5644  0542  2D45               	goto	u217_25
  5645  0543  303C               	movlw	60
  5646  0544  026A               	subwf	_intSecondCounter,w
  5647  0545                     u217_25:	
  5648  0545  1C03               	skipc
  5649  0546  2D53               	goto	i1l2450
  5650                           
  5651                           ;Main Card V10.0.c: 947: {
  5652                           ;Main Card V10.0.c: 948: intSecondCounter = 0;
  5653  0547  1283               	bcf	3,5	;RP0=0, select bank0
  5654  0548  1303               	bcf	3,6	;RP1=0, select bank0
  5655  0549  01EA               	clrf	_intSecondCounter
  5656  054A  01EB               	clrf	_intSecondCounter+1
  5657                           
  5658                           ;Main Card V10.0.c: 949: intMinuteCounter++;
  5659  054B  3001               	movlw	1
  5660  054C  1683               	bsf	3,5	;RP0=1, select bank1
  5661  054D  1303               	bcf	3,6	;RP1=0, select bank1
  5662  054E  07B7               	addwf	_intMinuteCounter^(0+128),f
  5663  054F  1803               	skipnc
  5664  0550  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5665  0551  3000               	movlw	0
  5666  0552  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5667  0553                     i1l2450:	
  5668                           
  5669                           ;Main Card V10.0.c: 950: }
  5670                           ;Main Card V10.0.c: 951: if(intMinuteCounter >= 60)
  5671  0553  1683               	bsf	3,5	;RP0=1, select bank1
  5672  0554  1303               	bcf	3,6	;RP1=0, select bank1
  5673  0555  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5674  0556  3A80               	xorlw	128
  5675  0557  00FF               	movwf	127
  5676  0558  3080               	movlw	128
  5677  0559  027F               	subwf	127,w
  5678  055A  1D03               	skipz
  5679  055B  2D5E               	goto	u218_25
  5680  055C  303C               	movlw	60
  5681  055D  0237               	subwf	_intMinuteCounter^(0+128),w
  5682  055E                     u218_25:	
  5683  055E  1C03               	skipc
  5684  055F  2D64               	goto	i1l2454
  5685                           
  5686                           ;Main Card V10.0.c: 952: {
  5687                           ;Main Card V10.0.c: 953: intMinuteCounter = 0;
  5688  0560  1683               	bsf	3,5	;RP0=1, select bank1
  5689  0561  1303               	bcf	3,6	;RP1=0, select bank1
  5690  0562  01B7               	clrf	_intMinuteCounter^(0+128)
  5691  0563  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5692  0564                     i1l2454:	
  5693                           
  5694                           ;Main Card V10.0.c: 954: }
  5695                           ;Main Card V10.0.c: 957: TMR1ON = 1;
  5696  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5697  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5698  0566  1410               	bsf	16,0	;volatile
  5699                           
  5700                           ;Main Card V10.0.c: 958: }
  5701                           ;Main Card V10.0.c: 959: TMR1IF = 0;
  5702  0567  100C               	bcf	12,0	;volatile
  5703  0568                     L3:	
  5704                           
  5705                           ;Main Card V10.0.c: 960: RBIF = 0;
  5706  0568  100B               	bcf	11,0	;volatile
  5707                           
  5708                           ;Main Card V10.0.c: 961: GIE = 1;
  5709  0569  178B               	bsf	11,7	;volatile
  5710                           
  5711                           ;Main Card V10.0.c: 962: return;
  5712  056A  087B               	movf	??_tc_int+6,w
  5713  056B  00FF               	movwf	127
  5714  056C  087A               	movf	??_tc_int+5,w
  5715  056D  008A               	movwf	10
  5716  056E  0879               	movf	??_tc_int+4,w
  5717  056F  0084               	movwf	4
  5718  0570  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5719  0571  0083               	movwf	3
  5720  0572  0EFE               	swapf	126,f
  5721  0573  0E7E               	swapf	126,w
  5722  0574  0009               	retfie
  5723  0575                     __end_of_tc_int:	
  5724                           
  5725                           	psect	intentry
  5726  0004                     __pintentry:	
  5727                           ;incstack = 0
  5728 ;; hardware stack exceeded
  5729                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5730                           
  5731  0004                     interrupt_function:	
  5732  007E                     saved_w	set	btemp
  5733  0004  00FE               	movwf	btemp
  5734  0005  0E03               	swapf	3,w
  5735  0006  00F8               	movwf	??_tc_int+3
  5736  0007  0804               	movf	4,w
  5737  0008  00F9               	movwf	??_tc_int+4
  5738  0009  080A               	movf	10,w
  5739  000A  00FA               	movwf	??_tc_int+5
  5740  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5741  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5742  000D  087F               	movf	btemp+1,w
  5743  000E  00FB               	movwf	??_tc_int+6
  5744  000F  120A  118A  2CA9   	ljmp	_tc_int
  5745                           
  5746                           	psect	text38
  5747  0C0E                     __ptext38:	
  5748 ;; *************** function i1_OperationMode *****************
  5749 ;; Defined at:
  5750 ;;		line 1042 in file "../Main Card V10.0.c"
  5751 ;; Parameters:    Size  Location     Type
  5752 ;;		None
  5753 ;; Auto vars:     Size  Location     Type
  5754 ;;  OperationMod    1    1[COMMON] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  1    wreg      unsigned char 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5764 ;;      Params:         0       0       0       0       0
  5765 ;;      Locals:         1       0       0       0       0
  5766 ;;      Temps:          1       0       0       0       0
  5767 ;;      Totals:         2       0       0       0       0
  5768 ;;Total ram usage:        2 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_tc_int
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           
  5778                           ;psect for function i1_OperationMode
  5779  0C0E                     i1_OperationMode:	
  5780                           
  5781                           ;Main Card V10.0.c: 1044: unsigned char bracketStatus;
  5782                           ;Main Card V10.0.c: 1045: bracketStatus = ((~PORTB) & 0b00000111) ;
  5783                           
  5784                           ;incstack = 0
  5785 ;; hardware stack exceeded
  5786                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5787  0C0E  1283               	bcf	3,5	;RP0=0, select bank0
  5788  0C0F  1303               	bcf	3,6	;RP1=0, select bank0
  5789  0C10  0906               	comf	6,w	;volatile
  5790  0C11  3907               	andlw	7
  5791  0C12  00F0               	movwf	??i1_OperationMode
  5792  0C13  0870               	movf	??i1_OperationMode,w
  5793  0C14  00F1               	movwf	i1OperationMode@bracketStatus
  5794                           
  5795                           ;Main Card V10.0.c: 1047: return bracketStatus;
  5796  0C15  0871               	movf	i1OperationMode@bracketStatus,w
  5797  0C16  0008               	return
  5798  0C17                     __end_ofi1_OperationMode:	
  5799                           
  5800                           	psect	text39
  5801  0E85                     __ptext39:	
  5802 ;; *************** function _TimerCounter *****************
  5803 ;; Defined at:
  5804 ;;		line 519 in file "../Main Card V10.0.c"
  5805 ;; Parameters:    Size  Location     Type
  5806 ;;		None
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  i               2    3[COMMON] int 
  5809 ;; Return value:  Size  Location     Type
  5810 ;;                  1    wreg      void 
  5811 ;; Registers used:
  5812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5813 ;; Tracked objects:
  5814 ;;		On entry : 0/0
  5815 ;;		On exit  : 0/0
  5816 ;;		Unchanged: 0/0
  5817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5818 ;;      Params:         0       0       0       0       0
  5819 ;;      Locals:         2       0       0       0       0
  5820 ;;      Temps:          3       0       0       0       0
  5821 ;;      Totals:         5       0       0       0       0
  5822 ;;Total ram usage:        5 bytes
  5823 ;; Hardware stack levels used:    1
  5824 ;; This function calls:
  5825 ;;		Nothing
  5826 ;; This function is called by:
  5827 ;;		_tc_int
  5828 ;; This function uses a non-reentrant model
  5829 ;;
  5830                           
  5831                           
  5832                           ;psect for function _TimerCounter
  5833  0E85                     _TimerCounter:	
  5834                           
  5835                           ;Main Card V10.0.c: 521: for (int i = 0; i < 5; i++)
  5836                           
  5837                           ;incstack = 0
  5838 ;; hardware stack exceeded
  5839                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5840  0E85  01F3               	clrf	TimerCounter@i
  5841  0E86  01F4               	clrf	TimerCounter@i+1
  5842  0E87                     L4:	
  5843  0E87  0874               	movf	TimerCounter@i+1,w
  5844  0E88  3A80               	xorlw	128
  5845  0E89  00FF               	movwf	127
  5846  0E8A  3080               	movlw	128
  5847  0E8B  027F               	subwf	127,w
  5848  0E8C  1D03               	skipz
  5849  0E8D  2E90               	goto	u194_25
  5850  0E8E  3005               	movlw	5
  5851  0E8F  0273               	subwf	TimerCounter@i,w
  5852  0E90                     u194_25:	
  5853  0E90  1803               	btfsc	3,0
  5854  0E91  0008               	return
  5855                           
  5856                           ;Main Card V10.0.c: 522: {
  5857                           ;Main Card V10.0.c: 523: if(intClockTimer[i]>0)
  5858  0E92  0873               	movf	TimerCounter@i,w
  5859  0E93  00F0               	movwf	??_TimerCounter
  5860  0E94  0770               	addwf	??_TimerCounter,w
  5861  0E95  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5862  0E96  0084               	movwf	4
  5863  0E97  1383               	bcf	3,7	;select IRP bank1
  5864  0E98  0800               	movf	0,w
  5865  0E99  00F1               	movwf	??_TimerCounter+1
  5866  0E9A  0A84               	incf	4,f
  5867  0E9B  0800               	movf	0,w
  5868  0E9C  00F2               	movwf	??_TimerCounter+2
  5869  0E9D  0872               	movf	??_TimerCounter+2,w
  5870  0E9E  3A80               	xorlw	128
  5871  0E9F  00FF               	movwf	127
  5872  0EA0  3080               	movlw	128
  5873  0EA1  027F               	subwf	127,w
  5874  0EA2  1D03               	skipz
  5875  0EA3  2EA6               	goto	u195_25
  5876  0EA4  3001               	movlw	1
  5877  0EA5  0271               	subwf	??_TimerCounter+1,w
  5878  0EA6                     u195_25:	
  5879  0EA6  1C03               	skipc
  5880  0EA7  2EBA               	goto	i1l2346
  5881                           
  5882                           ;Main Card V10.0.c: 524: intClockTimer[i]--;
  5883  0EA8  0873               	movf	TimerCounter@i,w
  5884  0EA9  00F0               	movwf	??_TimerCounter
  5885  0EAA  0770               	addwf	??_TimerCounter,w
  5886  0EAB  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5887  0EAC  0084               	movwf	4
  5888  0EAD  30FF               	movlw	255
  5889  0EAE  1383               	bcf	3,7	;select IRP bank1
  5890  0EAF  0780               	addwf	0,f
  5891  0EB0  0F84               	incfsz	4,f
  5892  0EB1  0800               	movf	0,w
  5893  0EB2  1803               	skipnc
  5894  0EB3  0A00               	incf	0,w
  5895  0EB4  00FF               	movwf	127
  5896  0EB5  30FF               	movlw	255
  5897  0EB6  077F               	addwf	127,w
  5898  0EB7  0080               	movwf	0
  5899  0EB8  0384               	decf	4,f
  5900  0EB9  2EC0               	goto	i1l2348
  5901  0EBA                     i1l2346:	
  5902                           
  5903                           ;Main Card V10.0.c: 525: else
  5904                           ;Main Card V10.0.c: 526: bTimerComplete[i] = 1;
  5905  0EBA  0873               	movf	TimerCounter@i,w
  5906  0EBB  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5907  0EBC  0084               	movwf	4
  5908  0EBD  1383               	bcf	3,7	;select IRP bank1
  5909  0EBE  0180               	clrf	0
  5910  0EBF  0A80               	incf	0,f
  5911  0EC0                     i1l2348:	
  5912  0EC0  3001               	movlw	1
  5913  0EC1  07F3               	addwf	TimerCounter@i,f
  5914  0EC2  1803               	skipnc
  5915  0EC3  0AF4               	incf	TimerCounter@i+1,f
  5916  0EC4  3000               	movlw	0
  5917  0EC5  07F4               	addwf	TimerCounter@i+1,f
  5918  0EC6  2E87               	goto	L4
  5919  0EC7                     __end_of_TimerCounter:	
  5920  007E                     btemp	set	126	;btemp
  5921  007E                     wtemp0	set	126


Data Sizes:
    Strings     116
    Constant    39
    Data        3
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      57
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[8]), STR_16(CODE[8]), TransmittedDataHandler@slask_712(BANK0[8]), TransmittedDataHandler@slask_709(BANK0[8]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_9(CODE[14]), STR_8(CODE[14]), 
		 -> TransmittedDataHandler@slask_700(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   68199
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_3
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   18686
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15521
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1805
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   10039
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     796
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10724
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_3                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     754
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1460
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     754
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     708
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     686
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_3
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      39       7       71.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Sun Mar 26 12:51:17 2017

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006E                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l302 0C43                               l223 0195  
                             l250 0CDF                               l326 05E0                               l414 0DE6  
                             l255 0C37                               l239 0490                               l504 0D2A  
                             l290 0F6E                               l275 0E83                               l366 0D87  
                             l296 0CFF                               l392 0D47                               l908 0ECA  
                             l896 0C9C                               _GIE 005F             __end_of_DarknessCheck 0DB7  
                             fsr0 0004                               indf 0000               __end_of_FindChannel 02ED  
  __end_of_TransmittedDataHandler 01ED                   ??_timerFunction 0024                      __CFG_LVP$OFF 0000  
                            l2002 0795                              l2100 0175                              l2102 017F  
                            l2130 0E53                              l2114 01BA                              l2140 0E68  
                            l2108 0198                              l2046 0073                              l2072 00EA  
                            l2064 00C4                              l2056 009E                              l2330 07EC  
                            l2322 07CF                              l2092 014F                              l2084 012E  
                            l2158 0E19                              l2238 03D2                              l2094 0159  
                            l2078 010C                              l2326 07E3                              l2248 0CD4  
                            l2282 0C83                              l1740 0585                              l2276 0C72  
                            l2380 06F8                              l2372 06DE                              l2364 06C4  
                            l1742 0592                              l1902 0F2D                              l1744 05A1  
                            l1752 05CD                              l1904 0F46                              l2296 0FDB  
                            l2392 071C                              l2384 0705                              l2376 06EB  
                            l2368 06D1                              l1746 05B0                              l1930 0425  
                            l1826 0D22                              l2298 0FEE                              l1748 05BF  
                            l1772 0213                              l1908 0F4F                              l2388 0712  
                            l1790 02A1                              l1846 0C63                              l1854 0DBE  
                            l1870 0EFF                              l1792 02D8                              l1952 0493  
                            l1928 0412                              l1856 0DCD                              l1872 0F08  
                            l1970 0DB5                              l1946 044A                              l1882 0CA5  
                            l1866 0EE9                              l1964 0D9B                              l1788 02C7  
                            l1796 02EB                              l1948 048B                              l1974 0733  
                            l1968 0DB4                              l1992 0752                              l1976 072C  
                            l1896 0F0F                              l1994 0756                              l1986 074C  
                            l1978 0738                              l1996 0784       __size_of_TransiverToReceive 005C  
                            STR_1 0664                              STR_2 066C                              STR_3 0691  
                            STR_4 0683                              STR_5 0674                              STR_6 068A  
                            STR_7 0653                              STR_8 0645                              STR_9 0637  
                            u1115 0D09                              u1125 0211                              u1205 0D32  
                            u1145 02AC                              u1171 0D45                              u1155 02E9  
                            u2207 0FBF                              u2217 0FF8                              u1195 0D2B  
                            u2227 07F2                              u2237 03F6                              u2247 042F  
                            u2257 0497                              u2267 04A4                              u2277 01FE  
                            u2197 06B8                              u2287 02D3                              u2297 0D11  
                            u1905 07BF                              u1755 0E23                              _RBIF 0058  
                            _WREN 0C62                    ??_eeprom_write 0021                              _atoi 0729  
                            _main 06AB                              _init 0F51                              btemp 007E  
                            start 0012                     __CFG_IESO$OFF 0000                   __end_of_DelayDs 0D1E  
                TransmittString@i 003A  __size_of_LightWithSensController 003F                   __end_of_ReadSPI 0C06  
                           ?_atoi 0026                             ?_main 0070                             ?_init 0070  
                           _EEADR 010D                             STR_10 067C                             STR_11 06A7  
                           STR_12 06A3                             STR_13 065C                             STR_14 069E  
                           STR_15 0698                             STR_16 0664                             STR_17 066C  
                   __CFG_WDTE$OFF 0000                             _CARRY 0018                             _ANSEL 0188  
           __end_of_OperationMode 0C20                             _T1CON 0010                             i1l355 04F3  
                           _TMR1H 000F                             _TMR1L 000E                             _PORTA 0005  
                           _PORTB 0006                             _PORTC 0007                             _TRISA 0085  
                           _TRISB 0086                             _TRISC 0087                             _SSPIE 0463  
                           _Blink 0E13                             _bDark 006D                    __CFG_FCMEN$OFF 0000  
                 __end_of_isdigit 0C65                       _AnalogValue 0D65                             atoi@a 002B  
                           atoi@s 002D                    __CFG_BOREN$OFF 0000                             pclath 000A  
                 ??_TransiverInit 0035                             status 0003                     _intBlinkCycle 0068  
                           wtemp0 007E                    WriteSPI@buffer 0021                  __end_of_ChannelP 061D  
                __end_of_ChannelR 062A                  __end_of_ChannelS 0637                   __end_of_strncmp 0F0B  
                  __CFG_MCLRE$OFF 0000                     _intClockTimer 00A0                 _intNumberOfBlinks 00D7  
                 __initialization 0015                      __end_of_atoi 079A                      __end_of_main 0729  
                    __end_of_init 0FA4                  __end_of_ReadFIFO 0C55                     ReadFIFO@value 0024  
                     _FindChannel 01ED                     ??_RegisterSet 0028                            ??_atoi 0028  
                          ??_main 0065                            ??_init 0020                            ?_Blink 0026  
                          _ADRESH 001E                            _EEDATA 010C                            _EECON1 018C  
                          _EECON2 018D                            _ANSELH 0189                  __end_of_WriteSPI 0C47  
                          i1l2432 0515                            i1l2408 04C3                            i1l2346 0EBA  
                          i1l2450 0553                            i1l2434 0516                            i1l2426 04F6  
                          i1l2348 0EC0                            i1l2444 053A                            i1l2454 0564  
                          u211_25 04E3                            u215_25 050F                            u216_25 0527  
                          u217_25 0545                            u218_25 055E                         ??_DelayDs 0022  
                          Blink@i 0029                            Blink@n 0026                            u194_25 0E90  
                          u195_25 0EA6                            _TMR1IF 0060                            _TMR1ON 0080  
    i1OperationMode@bracketStatus 0071                            _SSPBUF 0013                         ??_ReadSPI 0023  
                          _Mode_0 0BFA                            _Mode_1 0CC7                            _Mode_2 0C2C  
                          _Mode_3 0CAE                            _Mode_4 0C65                            _Mode_5 0C76  
              __size_of_SetRFMode 006F              __size_of_eeprom_read 0024                            ___wmul 0D1E  
                          _tc_int 04A9              __end_of_eeprom_write 0E13                            _strchr 0C99  
                          _strlen 0DB7                            _strstr 0F0B                         ??_isdigit 0020  
                          saved_w 007E               __end_of_RegisterSet 0CFB                     ?_RegisterRead 0070  
              RegisterRead@adress 0026       TransmittedDataHandler@slask 003D       TransmittedDataHandler@value 005D  
                       ??_strncmp 002B                __size_of_WriteFIFO 000C           __end_of__initialization 0044  
                 eeprom_read@addr 0021           _LightWithSensController 0E46                     _bChannelFound 006C  
                   __end_of_Blink 0E46                    __pcstackCOMMON 0070                      __pidataBANK0 0003  
                    __pidataBANK1 0BF8                      _channelFound 00AF                    _OPTION_REGbits 0081  
                         ??_Blink 0028                 __end_of_SetRFMode 05E4                 eeprom_write@value 0020  
                  ??_RegisterRead 0023                        __pbssBANK0 0068                        __pbssBANK1 00A0  
                      __pbssBANK3 0190          __size_ofi1_OperationMode 0009                         ?_ReadFIFO 0070  
      timerFunction@intSetSeconds 0022                AnalogValue@channel 0027                           ?_Mode_0 0070  
                         ?_Mode_1 0070                           ?_Mode_2 0070                           ?_Mode_3 0070  
                         ?_Mode_4 0070                           ?_Mode_5 0070          __size_of_TransmittString 00D2  
                      __pmaintext 06AB                           ?___wmul 0020                        __pintentry 0004  
                         ?_tc_int 0070                         ?_WriteSPI 0070                 __end_of_WriteFIFO 0C2C  
                         ?_strchr 0020                           ?_strlen 0020                       _RegisterSet 0CE1  
                         ?_strstr 002E                     ?_TimerCounter 0070        __end_of_TransiverToReceive 1000  
           __end_of_timerFunction 0C99                      ?_AnalogValue 0070                        __stringtab 0600  
                      ??_ReadFIFO 0023                           _DelayDs 0CFB         ??_LightWithSensController 002A  
                         _ReadSPI 0BFE            __size_of_DarknessCheck 0029                   __size_of_Mode_0 0004  
                 __size_of_Mode_1 001A                   __size_of_Mode_2 000D                   __size_of_Mode_3 0019  
                 __size_of_Mode_4 0011                   __size_of_Mode_5 0011        OperationMode@bracketStatus 0021  
           __size_of_eeprom_write 0030                   __size_of___wmul 0023                      ?_FindChannel 0070  
                       _ANSELbits 0188                        ??_WriteSPI 0020                   __size_of_tc_int 00CC  
                         __ptext1 0F51                           __ptext2 0FA4                           __ptext3 079A  
                         __ptext4 0048                           __ptext5 0F0B                           __ptext6 0EC7  
                         __ptext7 0DB7                           __ptext8 0C99                           __ptext9 0DE3  
                 __size_of_strchr 0015                   __size_of_strlen 002C                         _T1CONbits 0010  
                 __size_of_strstr 0046                           _isdigit 0C55                    ??_TimerCounter 0070  
                         clrloop0 0C07                           _strncmp 0EC7              end_of_initialization 0044  
                    _eeprom_write 0DE3             __end_of_TransiverInit 03D7            __size_of_OperationMode 0009  
               ??i1_OperationMode 0070                  WriteSPI@databyte 0022              __end_of_RegisterRead 0600  
                   WriteFIFO@Data 0023          ??_TransmittedDataHandler 003C                           strlen@s 0026  
                 _intBlinkCounter 00B1                 ??_TransmittString 0037                         _PORTAbits 0005  
                       _PORTBbits 0006                         _PORTCbits 0007                     _DarknessCheck 0D8E  
                   ??_eeprom_read 0020                    __end_of_Mode_0 0BFE                    __end_of_Mode_1 0CE1  
                  __end_of_Mode_2 0C39                    __end_of_Mode_3 0CC7                    __end_of_Mode_4 0C76  
                  __end_of_Mode_5 0C87                    __end_of___wmul 0D41                    __end_of_tc_int 0575  
                  ?_DarknessCheck 0070                     _OperationMode 0C17                    __end_of_strchr 0CAE  
                  __end_of_strlen 0DE3                    __end_of_strstr 0F51               start_initialization 0015  
           _intDarkCheckIntervall 00B3        DarknessCheck@darknessValue 0029                         _SetRFMode 0575  
            __size_of_AnalogValue 0029                 __size_of_ReadFIFO 000E          __CFG_FOSC$INTRC_NOCLKOUT 0000  
                        ??_Mode_0 002A                          ??_Mode_1 002A                          ??_Mode_2 002A  
                        ??_Mode_3 002A                          ??_Mode_4 003C                          ??_Mode_5 003C  
            __end_of_TimerCounter 0EC7                          ??___wmul 0024               __end_of_eeprom_read 0D65  
                   TimerCounter@i 0073                       __pdataBANK0 006F                       __pdataBANK1 00D7  
                        ??_tc_int 0075   __size_of_TransmittedDataHandler 01A5                      ?_RegisterSet 0027  
                        ??_strchr 0022                          ??_strlen 0022                          ??_strstr 002F  
                  ?_OperationMode 0070              __size_of_FindChannel 0100         TransmittString@dataString 0035  
               RegisterRead@value 0025                 __size_of_WriteSPI 000E                       __pbssCOMMON 007C  
                       ___latbits 0002                         _WriteFIFO 0C20                     __pcstackBANK0 0020  
                    _ReceivedData 0190            SetRFMode@mcparam0_read 002D                      _isdigit$1084 0020  
                      ?_SetRFMode 0070                  eeprom_write@addr 0022                          ?_DelayDs 0020  
               RegisterSet@adress 002A                          ?_ReadSPI 0070             __size_of_RegisterRead 001C  
              _TransiverToReceive 0FA4               ?_TransiverToReceive 0070                   ??_DarknessCheck 0028  
                       __pstrings 0600                          ?_isdigit 0070       timerFunction@intTimerNumber 0020  
                  __size_of_Blink 0033                        ?_WriteFIFO 0070                   i1_OperationMode 0C0E  
            ??_TransiverToReceive 0035                      _RegisterRead 05E4                          ?_strncmp 0028  
          _TransmittedDataHandler 0048                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                          DelayDs@i 0024                      FindChannel@i 0033  
                       clear_ram0 0C06                       _eeprom_read 0D41                          _PIE1bits 008C  
                 _TransmittString 03D7                          _PIR1bits 000C            __size_of_timerFunction 0012  
                 ??_OperationMode 0020                     SetRFMode@mode 002C                        _ADCON0bits 001F  
                     __stringbase 060F                        _ADCON1bits 009F                 ___wmul@multiplier 0020  
                        _WPUBbits 0095                          _ChannelP 0610                          _ChannelR 061D  
                        _ChannelS 062A          ?_LightWithSensController 0070                       ??_SetRFMode 002B  
                        _ReadFIFO 0C47             __size_of_TimerCounter 0042                  __size_of_DelayDs 0023  
                __size_of_ReadSPI 0008                    _bTimerComplete 00AA                  _intMinuteCounter 00B7  
               _TransiverReadFIFO 079A                          _WriteSPI 0C39                __end_of__stringtab 0610  
                _intSecondCounter 006A                ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0C17  
          __size_of_TransiverInit 00EA              __size_of_RegisterSet 001A                  RegisterSet@value 0027  
                     ??_WriteFIFO 0023                  __size_of_isdigit 0010                      _TimerCounter 0E85  
                        __ptext10 0729                          __ptext11 0C55                          __ptext20 0C20  
                        __ptext12 0D1E                          __ptext21 01ED                          __ptext13 0C17  
                        __ptext30 0BFA                          __ptext22 0575                          __ptext14 0C47  
                        __ptext31 0E46                          __ptext23 0CE1                          __ptext15 02ED  
                        __ptext32 0C87                          __ptext24 05E4                          __ptext16 0E13  
                        __ptext33 0D8E                          __ptext25 0BFE                          __ptext17 0C76  
                        __ptext34 0D41                          __ptext26 0C39                          __ptext18 0C65  
                        __ptext35 0D65                          __ptext27 0CAE                          __ptext19 03D7  
                        __ptext36 0CFB                          __ptext28 0C2C                          __ptext37 04A9  
                        __ptext29 0CC7                          __ptext38 0C0E                          __ptext39 0E85  
             ??_TransiverReadFIFO 005F                     _timerFunction 0C87           __end_of_TransmittString 04A9  
 TransmittedDataHandler@slask_700 0045   TransmittedDataHandler@slask_712 0055   TransmittedDataHandler@slask_709 004D  
                __size_of_strncmp 0044                     __size_of_atoi 0071                     __size_of_main 007E  
                   __size_of_init 0053                        strncmp@len 0029                     _bValueFromPot 006F  
       __end_of_TransiverReadFIFO 0800                          atoi@sign 002A                        DelayDs@cnt 0020  
                  FindChannel@cnt 0031   __end_of_LightWithSensController 0E85              _intHalfSecondCounter 00B5  
                      _INTCONbits 000B                TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063  
                        isdigit@c 0021                    ?_timerFunction 0020                     ??_AnalogValue 0026  
               _TransmittedString 00B9                          intlevel1 0000                         strchr@chr 0020  
                       strchr@ptr 0022                     _TransiverInit 02ED                         strncmp@s1 002D  
                       strncmp@s2 0028                         stringcode 060A                        _OSCCONbits 008F  
                   ??_FindChannel 002E                  ?i1_OperationMode 0070                          strlen@cp 0027  
                        stringdir 060A                          stringtab 0600           ?_TransmittedDataHandler 0070  
                        strstr@s1 0032                          strstr@s2 002E                  ?_TransmittString 0035  
                   ?_eeprom_write 0020                    ?_TransiverInit 0070                      ?_eeprom_read 0070  
             __end_of_AnalogValue 0D8E                        _SSPCONbits 0014              _addressDarknessValue 007C  
