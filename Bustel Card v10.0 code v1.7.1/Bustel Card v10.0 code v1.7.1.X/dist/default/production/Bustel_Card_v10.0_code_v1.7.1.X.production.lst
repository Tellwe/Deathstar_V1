

Microchip Technology PIC LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 03 09:37:48 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	16F886
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	idataBANK1,global,class=CODE,delta=2
     6                           	psect	strings,global,class=STRING,delta=2
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	maintext,global,class=CODE,split=1,delta=2
    18                           	psect	text1,local,class=CODE,merge=1,delta=2
    19                           	psect	text2,local,class=CODE,merge=1,delta=2
    20                           	psect	text3,local,class=CODE,merge=1,delta=2
    21                           	psect	text4,local,class=CODE,merge=1,delta=2
    22                           	psect	text5,local,class=CODE,merge=1,delta=2
    23                           	psect	text6,local,class=CODE,merge=1,delta=2
    24                           	psect	text7,local,class=CODE,merge=1,delta=2
    25                           	psect	text8,local,class=CODE,merge=1,delta=2
    26                           	psect	text9,local,class=CODE,merge=1,delta=2
    27                           	psect	text10,local,class=CODE,merge=1,delta=2
    28                           	psect	text11,local,class=CODE,merge=1,delta=2
    29                           	psect	text12,local,class=CODE,merge=1,delta=2
    30                           	psect	text13,local,class=CODE,merge=1,delta=2
    31                           	psect	text14,local,class=CODE,merge=1,delta=2
    32                           	psect	text15,local,class=CODE,merge=1,delta=2
    33                           	psect	text16,local,class=CODE,merge=1,delta=2
    34                           	psect	text17,local,class=CODE,merge=1,delta=2
    35                           	psect	text18,local,class=CODE,merge=1,delta=2
    36                           	psect	text19,local,class=CODE,merge=1,delta=2
    37                           	psect	text20,local,class=CODE,merge=1,delta=2
    38                           	psect	text21,local,class=CODE,merge=1,delta=2
    39                           	psect	text22,local,class=CODE,merge=1,delta=2
    40                           	psect	text23,local,class=CODE,merge=1,delta=2
    41                           	psect	text24,local,class=CODE,merge=1,delta=2
    42                           	psect	text25,local,class=CODE,merge=1,delta=2
    43                           	psect	text26,local,class=CODE,merge=1,delta=2
    44                           	psect	text27,local,class=CODE,merge=1,delta=2
    45                           	psect	text28,local,class=CODE,merge=1,delta=2
    46                           	psect	text29,local,class=CODE,merge=1,delta=2
    47                           	psect	text30,local,class=CODE,merge=1,delta=2
    48                           	psect	text31,local,class=CODE,merge=1,delta=2
    49                           	psect	text32,local,class=CODE,merge=1,delta=2
    50                           	psect	text33,local,class=CODE,merge=1,delta=2
    51                           	psect	text34,local,class=CODE,merge=1,delta=2
    52                           	psect	text35,local,class=CODE,merge=1,delta=2
    53                           	psect	text36,local,class=CODE,merge=1,delta=2
    54                           	psect	intentry,global,class=CODE,delta=2
    55                           	psect	text37,local,class=CODE,merge=1,delta=2
    56                           	psect	text38,local,class=CODE,merge=1,delta=2
    57                           	dabs	1,0x7E,2
    58  0000                     	;# 
    59  0001                     	;# 
    60  0002                     	;# 
    61  0003                     	;# 
    62  0004                     	;# 
    63  0005                     	;# 
    64  0006                     	;# 
    65  0007                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  008F                     	;# 
   101  0090                     	;# 
   102  0091                     	;# 
   103  0092                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0095                     	;# 
   109  0096                     	;# 
   110  0097                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009A                     	;# 
   114  009B                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  0105                     	;# 
   120  0107                     	;# 
   121  0108                     	;# 
   122  0109                     	;# 
   123  010C                     	;# 
   124  010C                     	;# 
   125  010D                     	;# 
   126  010E                     	;# 
   127  010F                     	;# 
   128  0185                     	;# 
   129  0187                     	;# 
   130  0188                     	;# 
   131  0189                     	;# 
   132  018C                     	;# 
   133  018D                     	;# 
   134                           
   135                           	psect	idataBANK0
   136  07FF                     __pidataBANK0:	
   137                           
   138                           ;initializer for _bValueFromPot
   139  07FF  3401               	retlw	1
   140                           
   141                           	psect	idataBANK1
   142  0C1B                     __pidataBANK1:	
   143                           
   144                           ;initializer for _intNumberOfBlinks
   145  0C1B  3458               	retlw	88
   146  0C1C  3402               	retlw	2
   147                           
   148                           	psect	strings
   149  0600                     __pstrings:	
   150  0600                     stringtab:	
   151  0600                     __stringtab:	
   152                           
   153                           ;	String table - string pointers are 1 byte each
   154  0600  1BFF               	btfsc	btemp+1,7
   155  0601  2E0A               	ljmp	stringcode
   156  0602  1383               	bcf	3,7
   157  0603  187F               	btfsc	btemp+1,0
   158  0604  1783               	bsf	3,7
   159  0605  0800               	movf	0,w
   160  0606  0A84               	incf	4,f
   161  0607  1903               	skipnz
   162  0608  0AFF               	incf	btemp+1,f
   163  0609  0008               	return
   164  060A                     stringcode:	
   165  060A                     stringdir:	
   166  060A  3006               	movlw	high stringdir
   167  060B  008A               	movwf	10
   168  060C  0804               	movf	4,w
   169  060D  0A84               	incf	4,f
   170  060E  0782               	addwf	2,f
   171  060F                     __stringbase:	
   172  060F  3400               	retlw	0
   173  0610                     __end_of__stringtab:	
   174  0610                     _ChannelP:	
   175  0610  343F               	retlw	63
   176  0611  3447               	retlw	71
   177  0612  344F               	retlw	79
   178  0613  3457               	retlw	87
   179  0614  345F               	retlw	95
   180  0615  3477               	retlw	119
   181  0616  347E               	retlw	126
   182  0617  347F               	retlw	127
   183  0618  3486               	retlw	134
   184  0619  3487               	retlw	135
   185  061A  3437               	retlw	55
   186  061B  3467               	retlw	103
   187  061C  346F               	retlw	111
   188  061D                     __end_of_ChannelP:	
   189  061D                     _ChannelR:	
   190  061D  344F               	retlw	79
   191  061E  3459               	retlw	89
   192  061F  3463               	retlw	99
   193  0620  346D               	retlw	109
   194  0621  3477               	retlw	119
   195  0622  3495               	retlw	149
   196  0623  349F               	retlw	159
   197  0624  349F               	retlw	159
   198  0625  34A9               	retlw	169
   199  0626  34A9               	retlw	169
   200  0627  3445               	retlw	69
   201  0628  3481               	retlw	129
   202  0629  348B               	retlw	139
   203  062A                     __end_of_ChannelR:	
   204  062A                     _ChannelS:	
   205  062A  3418               	retlw	24
   206  062B  341B               	retlw	27
   207  062C  341E               	retlw	30
   208  062D  3421               	retlw	33
   209  062E  3424               	retlw	36
   210  062F  342D               	retlw	45
   211  0630  347B               	retlw	123
   212  0631  3430               	retlw	48
   213  0632  347E               	retlw	126
   214  0633  3433               	retlw	51
   215  0634  3415               	retlw	21
   216  0635  3427               	retlw	39
   217  0636  342A               	retlw	42
   218  0637                     __end_of_ChannelS:	
   219  001F                     _ADCON0bits	set	31
   220  001E                     _ADRESH	set	30
   221  000B                     _INTCONbits	set	11
   222  000C                     _PIR1bits	set	12
   223  0005                     _PORTA	set	5
   224  0005                     _PORTAbits	set	5
   225  0006                     _PORTB	set	6
   226  0006                     _PORTBbits	set	6
   227  0007                     _PORTC	set	7
   228  0007                     _PORTCbits	set	7
   229  0013                     _SSPBUF	set	19
   230  0014                     _SSPCONbits	set	20
   231  0010                     _T1CON	set	16
   232  0010                     _T1CONbits	set	16
   233  000F                     _TMR1H	set	15
   234  000E                     _TMR1L	set	14
   235  0018                     _CARRY	set	24
   236  005F                     _GIE	set	95
   237  0058                     _RBIF	set	88
   238  0060                     _TMR1IF	set	96
   239  0080                     _TMR1ON	set	128
   240  009F                     _ADCON1bits	set	159
   241  0096                     _IOCBbits	set	150
   242  0081                     _OPTION_REGbits	set	129
   243  008F                     _OSCCONbits	set	143
   244  008C                     _PIE1bits	set	140
   245  0094                     _SSPSTATbits	set	148
   246  0085                     _TRISA	set	133
   247  0086                     _TRISB	set	134
   248  0087                     _TRISC	set	135
   249  0095                     _WPUBbits	set	149
   250  0463                     _SSPIE	set	1123
   251  010D                     _EEADR	set	269
   252  010C                     _EEDATA	set	268
   253  0188                     _ANSEL	set	392
   254  0189                     _ANSELH	set	393
   255  0188                     _ANSELbits	set	392
   256  018C                     _EECON1	set	396
   257  018D                     _EECON2	set	397
   258  0C60                     _RD	set	3168
   259  0C61                     _WR	set	3169
   260  0C62                     _WREN	set	3170
   261  0637                     STR_9:	
   262  0637  344E               	retlw	78	;'N'
   263  0638  346F               	retlw	111	;'o'
   264  0639  3474               	retlw	116	;'t'
   265  063A  3420               	retlw	32	;' '
   266  063B  3444               	retlw	68	;'D'
   267  063C  3461               	retlw	97	;'a'
   268  063D  3472               	retlw	114	;'r'
   269  063E  346B               	retlw	107	;'k'
   270  063F  3420               	retlw	32	;' '
   271  0640  3420               	retlw	32	;' '
   272  0641  3420               	retlw	32	;' '
   273  0642  3420               	retlw	32	;' '
   274  0643  3420               	retlw	32	;' '
   275  0644  3400               	retlw	0
   276  0645                     STR_8:	
   277  0645  3449               	retlw	73	;'I'
   278  0646  3474               	retlw	116	;'t'
   279  0647  3427               	retlw	39	;'''
   280  0648  3473               	retlw	115	;'s'
   281  0649  3420               	retlw	32	;' '
   282  064A  3444               	retlw	68	;'D'
   283  064B  3461               	retlw	97	;'a'
   284  064C  3472               	retlw	114	;'r'
   285  064D  346B               	retlw	107	;'k'
   286  064E  3420               	retlw	32	;' '
   287  064F  3420               	retlw	32	;' '
   288  0650  3420               	retlw	32	;' '
   289  0651  3420               	retlw	32	;' '
   290  0652  3400               	retlw	0
   291  0653                     STR_7:	
   292  0653  3444               	retlw	68	;'D'
   293  0654  3441               	retlw	65	;'A'
   294  0655  3452               	retlw	82	;'R'
   295  0656  344B               	retlw	75	;'K'
   296  0657  3443               	retlw	67	;'C'
   297  0658  3441               	retlw	65	;'A'
   298  0659  344C               	retlw	76	;'L'
   299  065A  3443               	retlw	67	;'C'
   300  065B  3400               	retlw	0
   301  065C                     STR_13:	
   302  065C  3443               	retlw	67	;'C'
   303  065D  3448               	retlw	72	;'H'
   304  065E  3453               	retlw	83	;'S'
   305  065F  3454               	retlw	84	;'T'
   306  0660  3441               	retlw	65	;'A'
   307  0661  3454               	retlw	84	;'T'
   308  0662  3445               	retlw	69	;'E'
   309  0663  3400               	retlw	0
   310  0664                     STR_1:	
   311  0664  344E               	retlw	78	;'N'
   312  0665  3431               	retlw	49	;'1'
   313  0666  3442               	retlw	66	;'B'
   314  0667  344C               	retlw	76	;'L'
   315  0668  3449               	retlw	73	;'I'
   316  0669  344E               	retlw	78	;'N'
   317  066A  344B               	retlw	75	;'K'
   318  066B  3400               	retlw	0
   319  066C                     STR_2:	
   320  066C  344E               	retlw	78	;'N'
   321  066D  3432               	retlw	50	;'2'
   322  066E  3442               	retlw	66	;'B'
   323  066F  344C               	retlw	76	;'L'
   324  0670  3449               	retlw	73	;'I'
   325  0671  344E               	retlw	78	;'N'
   326  0672  344B               	retlw	75	;'K'
   327  0673  3400               	retlw	0
   328  0674                     STR_5:	
   329  0674  3453               	retlw	83	;'S'
   330  0675  3445               	retlw	69	;'E'
   331  0676  344E               	retlw	78	;'N'
   332  0677  3453               	retlw	83	;'S'
   333  0678  3456               	retlw	86	;'V'
   334  0679  3441               	retlw	65	;'A'
   335  067A  344C               	retlw	76	;'L'
   336  067B  3400               	retlw	0
   337  067C                     STR_10:	
   338  067C  3453               	retlw	83	;'S'
   339  067D  3454               	retlw	84	;'T'
   340  067E  3441               	retlw	65	;'A'
   341  067F  3454               	retlw	84	;'T'
   342  0680  3445               	retlw	69	;'E'
   343  0681  343F               	retlw	63	;'?'
   344  0682  3400               	retlw	0
   345  0683                     STR_4:	
   346  0683  3446               	retlw	70	;'F'
   347  0684  344C               	retlw	76	;'L'
   348  0685  3441               	retlw	65	;'A'
   349  0686  3453               	retlw	83	;'S'
   350  0687  3448               	retlw	72	;'H'
   351  0688  3442               	retlw	66	;'B'
   352  0689  3400               	retlw	0
   353  068A                     STR_6:	
   354  068A  3450               	retlw	80	;'P'
   355  068B  344F               	retlw	79	;'O'
   356  068C  3454               	retlw	84	;'T'
   357  068D  3456               	retlw	86	;'V'
   358  068E  3441               	retlw	65	;'A'
   359  068F  344C               	retlw	76	;'L'
   360  0690  3400               	retlw	0
   361  0691                     STR_3:	
   362  0691  3446               	retlw	70	;'F'
   363  0692  344C               	retlw	76	;'L'
   364  0693  3441               	retlw	65	;'A'
   365  0694  3453               	retlw	83	;'S'
   366  0695  3448               	retlw	72	;'H'
   367  0696  344C               	retlw	76	;'L'
   368  0697  3400               	retlw	0
   369  0698                     STR_15:	
   370  0698  3453               	retlw	83	;'S'
   371  0699  3445               	retlw	69	;'E'
   372  069A  3454               	retlw	84	;'T'
   373  069B  3444               	retlw	68	;'D'
   374  069C  3456               	retlw	86	;'V'
   375  069D  3400               	retlw	0
   376  069E                     STR_14:	
   377  069E  3452               	retlw	82	;'R'
   378  069F  344D               	retlw	77	;'M'
   379  06A0  3444               	retlw	68	;'D'
   380  06A1  3456               	retlw	86	;'V'
   381  06A2  3400               	retlw	0
   382  06A3                     STR_12:	
   383  06A3  3450               	retlw	80	;'P'
   384  06A4  3449               	retlw	73	;'I'
   385  06A5  3443               	retlw	67	;'C'
   386  06A6  3400               	retlw	0
   387  06A7                     STR_11:	
   388  06A7  3450               	retlw	80	;'P'
   389  06A8  346F               	retlw	111	;'o'
   390  06A9  3474               	retlw	116	;'t'
   391  06AA  3400               	retlw	0
   392  0664                     
   393                           ; #config settings
   394  0000                     
   395                           	psect	cinit
   396  0015                     start_initialization:	
   397  0015                     __initialization:	
   398                           
   399                           ; Initialize objects allocated to BANK1
   400  0015  1683               	bsf	3,5	;RP0=1, select bank1
   401  0016  1303               	bcf	3,6	;RP1=0, select bank1
   402  0017  120A  158A  241B  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   403  001C  00D7               	movwf	__pdataBANK1& (0+127)
   404  001D  120A  158A  241C  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   405  0022  00D8               	movwf	(__pdataBANK1+1)& (0+127)
   406                           
   407                           ; Initialize objects allocated to BANK0
   408  0023  1283               	bcf	3,5	;RP0=0, select bank0
   409  0024  1303               	bcf	3,6	;RP1=0, select bank0
   410  0025  120A  118A  27FF  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   411  002A  00EF               	movwf	__pdataBANK0& (0+127)
   412                           
   413                           ; Clear objects allocated to BANK3
   414  002B  1783               	bsf	3,7	;select IRP bank2
   415  002C  3090               	movlw	low __pbssBANK3
   416  002D  0084               	movwf	4
   417  002E  30B8               	movlw	low (__pbssBANK3+40)
   418  002F  120A  158A  2425  120A  118A  	fcall	clear_ram0
   419                           
   420                           ; Clear objects allocated to BANK1
   421  0034  1383               	bcf	3,7	;select IRP bank0
   422  0035  30A0               	movlw	low __pbssBANK1
   423  0036  0084               	movwf	4
   424  0037  30D7               	movlw	low (__pbssBANK1+55)
   425  0038  120A  158A  2425   	fcall	clear_ram0
   426                           
   427                           ; Clear objects allocated to BANK0
   428  003B  01E8               	clrf	__pbssBANK0& (0+127)
   429  003C  01E9               	clrf	(__pbssBANK0+1)& (0+127)
   430  003D  01EA               	clrf	(__pbssBANK0+2)& (0+127)
   431  003E  01EB               	clrf	(__pbssBANK0+3)& (0+127)
   432  003F  01EC               	clrf	(__pbssBANK0+4)& (0+127)
   433  0040  01ED               	clrf	(__pbssBANK0+5)& (0+127)
   434  0041  01EE               	clrf	(__pbssBANK0+6)& (0+127)
   435                           
   436                           ; Clear objects allocated to COMMON
   437  0042  01FC               	clrf	__pbssCOMMON& (0+127)
   438  0043  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   439  0044                     end_of_initialization:	
   440                           ;End of C runtime variable initialization code
   441                           
   442  0044                     __end_of__initialization:	
   443  0044  0183               	clrf	3
   444  0045  120A  118A  2F1C   	ljmp	_main	;jump to C main() function
   445                           
   446                           	psect	bssCOMMON
   447  007C                     __pbssCOMMON:	
   448  007C                     _addressDarknessValue:	
   449  007C                     	ds	2
   450                           
   451                           	psect	bssBANK0
   452  0068                     __pbssBANK0:	
   453  0068                     _intBlinkCycle:	
   454  0068                     	ds	2
   455  006A                     _intSecondCounter:	
   456  006A                     	ds	2
   457  006C                     _bChannelFound:	
   458  006C                     	ds	1
   459  006D                     _bDark:	
   460  006D                     	ds	1
   461  006E                     _bTransiverModeReceive:	
   462  006E                     	ds	1
   463                           
   464                           	psect	dataBANK0
   465  006F                     __pdataBANK0:	
   466  006F                     _bValueFromPot:	
   467  006F                     	ds	1
   468                           
   469                           	psect	bssBANK1
   470  00A0                     __pbssBANK1:	
   471  00A0                     _intClockTimer:	
   472  00A0                     	ds	10
   473  00AA                     _bTimerComplete:	
   474  00AA                     	ds	5
   475  00AF                     _channelFound:	
   476  00AF                     	ds	2
   477  00B1                     _intBlinkCounter:	
   478  00B1                     	ds	2
   479  00B3                     _intDarkCheckIntervall:	
   480  00B3                     	ds	2
   481  00B5                     _intHalfSecondCounter:	
   482  00B5                     	ds	2
   483  00B7                     _intMinuteCounter:	
   484  00B7                     	ds	2
   485  00B9                     _TransmittedString:	
   486  00B9                     	ds	30
   487                           
   488                           	psect	dataBANK1
   489  00D7                     __pdataBANK1:	
   490  00D7                     _intNumberOfBlinks:	
   491  00D7                     	ds	2
   492                           
   493                           	psect	bssBANK3
   494  0190                     __pbssBANK3:	
   495  0190                     _ReceivedData:	
   496  0190                     	ds	40
   497                           
   498                           	psect	clrtext
   499  0C25                     clear_ram0:	
   500                           ;	Called with FSR containing the base address, and
   501                           ;	W with the last address+1
   502                           
   503  0C25  0064               	clrwdt	;clear the watchdog before getting into this loop
   504  0C26                     clrloop0:	
   505  0C26  0180               	clrf	0	;clear RAM location pointed to by FSR
   506  0C27  0A84               	incf	4,f	;increment pointer
   507  0C28  0604               	xorwf	4,w	;XOR with final address
   508  0C29  1903               	btfsc	3,2	;have we reached the end yet?
   509  0C2A  3400               	retlw	0	;all done for this memory range, return
   510  0C2B  0604               	xorwf	4,w	;XOR again to restore value
   511  0C2C  2C26               	goto	clrloop0	;do the next byte
   512                           
   513                           	psect	cstackCOMMON
   514  0070                     __pcstackCOMMON:	
   515  0070                     ?_isdigit:	
   516  0070                     ?_init:	
   517                           ; 1 bit 
   518                           
   519  0070                     ?_TransiverInit:	
   520                           ; 1 bytes @ 0x0
   521                           
   522  0070                     ?_OperationMode:	
   523                           ; 1 bytes @ 0x0
   524                           
   525  0070                     ?_Mode_0:	
   526                           ; 1 bytes @ 0x0
   527                           
   528  0070                     ?_Mode_1:	
   529                           ; 1 bytes @ 0x0
   530                           
   531  0070                     ?_Mode_2:	
   532                           ; 1 bytes @ 0x0
   533                           
   534  0070                     ?_Mode_4:	
   535                           ; 1 bytes @ 0x0
   536                           
   537  0070                     ?_Mode_5:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_TransiverToReceive:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_TransiverReadFIFO:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_SetRFMode:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_RegisterRead:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_FindChannel:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_ReadFIFO:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ?_TransmittedDataHandler:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_AnalogValue:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_DarknessCheck:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_eeprom_read:	
   568                           ; 1 bytes @ 0x0
   569                           
   570  0070                     ?_WriteFIFO:	
   571                           ; 1 bytes @ 0x0
   572                           
   573  0070                     ?_LightWithSensController:	
   574                           ; 1 bytes @ 0x0
   575                           
   576  0070                     ?_main:	
   577                           ; 1 bytes @ 0x0
   578                           
   579  0070                     ?_TimerCounter:	
   580                           ; 1 bytes @ 0x0
   581                           
   582  0070                     ??_TimerCounter:	
   583                           ; 1 bytes @ 0x0
   584                           
   585  0070                     ?_WriteSPI:	
   586                           ; 1 bytes @ 0x0
   587                           
   588  0070                     ?_ReadSPI:	
   589                           ; 1 bytes @ 0x0
   590                           
   591  0070                     ?_tc_int:	
   592                           ; 1 bytes @ 0x0
   593                           
   594  0070                     ?i1_OperationMode:	
   595                           ; 1 bytes @ 0x0
   596                           
   597  0070                     ??i1_OperationMode:	
   598                           ; 1 bytes @ 0x0
   599                           
   600                           
   601                           ; 1 bytes @ 0x0
   602  0070                     	ds	1
   603  0071                     i1OperationMode@bracketStatus:	
   604                           
   605                           ; 1 bytes @ 0x1
   606  0071                     	ds	2
   607  0073                     TimerCounter@i:	
   608                           
   609                           ; 2 bytes @ 0x3
   610  0073                     	ds	2
   611  0075                     ??_tc_int:	
   612                           
   613                           ; 1 bytes @ 0x5
   614  0075                     	ds	7
   615                           
   616                           	psect	cstackBANK0
   617  0020                     __pcstackBANK0:	
   618  0020                     ??_init:	
   619  0020                     ??_OperationMode:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0020                     ?_timerFunction:	
   623                           ; 1 bytes @ 0x0
   624                           
   625  0020                     ?_DelayDs:	
   626                           ; 1 bytes @ 0x0
   627                           
   628  0020                     ??_eeprom_read:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0020                     ?_eeprom_write:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0020                     ??_isdigit:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0020                     ?_strchr:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0020                     ??_WriteSPI:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0020                     ?_strlen:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0020                     ?___wmul:	
   647                           ; 2 bytes @ 0x0
   648                           
   649  0020                     eeprom_write@value:	
   650                           ; 2 bytes @ 0x0
   651                           
   652  0020                     _isdigit$1080:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0020                     timerFunction@intTimerNumber:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0020                     DelayDs@cnt:	
   659                           ; 2 bytes @ 0x0
   660                           
   661  0020                     ___wmul@multiplier:	
   662                           ; 2 bytes @ 0x0
   663                           
   664  0020                     strchr@chr:	
   665                           ; 2 bytes @ 0x0
   666                           
   667                           
   668                           ; 2 bytes @ 0x0
   669  0020                     	ds	1
   670  0021                     ??_eeprom_write:	
   671  0021                     WriteSPI@buffer:	
   672                           ; 1 bytes @ 0x1
   673                           
   674  0021                     OperationMode@bracketStatus:	
   675                           ; 1 bytes @ 0x1
   676                           
   677  0021                     eeprom_read@addr:	
   678                           ; 1 bytes @ 0x1
   679                           
   680  0021                     isdigit@c:	
   681                           ; 1 bytes @ 0x1
   682                           
   683                           
   684                           ; 1 bytes @ 0x1
   685  0021                     	ds	1
   686  0022                     ??_DelayDs:	
   687  0022                     ??_strlen:	
   688                           ; 1 bytes @ 0x2
   689                           
   690  0022                     ??_strchr:	
   691                           ; 1 bytes @ 0x2
   692                           
   693  0022                     WriteSPI@databyte:	
   694                           ; 1 bytes @ 0x2
   695                           
   696  0022                     eeprom_write@addr:	
   697                           ; 1 bytes @ 0x2
   698                           
   699  0022                     strchr@ptr:	
   700                           ; 1 bytes @ 0x2
   701                           
   702  0022                     timerFunction@intSetSeconds:	
   703                           ; 1 bytes @ 0x2
   704                           
   705  0022                     ___wmul@multiplicand:	
   706                           ; 2 bytes @ 0x2
   707                           
   708                           
   709                           ; 2 bytes @ 0x2
   710  0022                     	ds	1
   711  0023                     ??_RegisterRead:	
   712  0023                     ??_ReadFIFO:	
   713                           ; 1 bytes @ 0x3
   714                           
   715  0023                     ??_WriteFIFO:	
   716                           ; 1 bytes @ 0x3
   717                           
   718  0023                     ??_ReadSPI:	
   719                           ; 1 bytes @ 0x3
   720                           
   721  0023                     WriteFIFO@Data:	
   722                           ; 1 bytes @ 0x3
   723                           
   724                           
   725                           ; 1 bytes @ 0x3
   726  0023                     	ds	1
   727  0024                     ??_timerFunction:	
   728  0024                     ??___wmul:	
   729                           ; 1 bytes @ 0x4
   730                           
   731  0024                     ReadFIFO@value:	
   732                           ; 1 bytes @ 0x4
   733                           
   734  0024                     DelayDs@i:	
   735                           ; 1 bytes @ 0x4
   736                           
   737  0024                     ___wmul@product:	
   738                           ; 2 bytes @ 0x4
   739                           
   740                           
   741                           ; 2 bytes @ 0x4
   742  0024                     	ds	1
   743  0025                     RegisterRead@value:	
   744                           
   745                           ; 1 bytes @ 0x5
   746  0025                     	ds	1
   747  0026                     ??_AnalogValue:	
   748  0026                     ?_Blink:	
   749                           ; 1 bytes @ 0x6
   750                           
   751  0026                     ?_atoi:	
   752                           ; 1 bytes @ 0x6
   753                           
   754  0026                     RegisterRead@adress:	
   755                           ; 2 bytes @ 0x6
   756                           
   757  0026                     strlen@s:	
   758                           ; 1 bytes @ 0x6
   759                           
   760  0026                     Blink@n:	
   761                           ; 1 bytes @ 0x6
   762                           
   763                           
   764                           ; 2 bytes @ 0x6
   765  0026                     	ds	1
   766  0027                     ?_RegisterSet:	
   767  0027                     RegisterSet@value:	
   768                           ; 1 bytes @ 0x7
   769                           
   770  0027                     AnalogValue@channel:	
   771                           ; 1 bytes @ 0x7
   772                           
   773  0027                     strlen@cp:	
   774                           ; 1 bytes @ 0x7
   775                           
   776                           
   777                           ; 1 bytes @ 0x7
   778  0027                     	ds	1
   779  0028                     ??_RegisterSet:	
   780  0028                     ??_DarknessCheck:	
   781                           ; 1 bytes @ 0x8
   782                           
   783  0028                     ??_atoi:	
   784                           ; 1 bytes @ 0x8
   785                           
   786  0028                     ??_Blink:	
   787                           ; 1 bytes @ 0x8
   788                           
   789  0028                     ?_strncmp:	
   790                           ; 1 bytes @ 0x8
   791                           
   792  0028                     strncmp@s2:	
   793                           ; 2 bytes @ 0x8
   794                           
   795                           
   796                           ; 1 bytes @ 0x8
   797  0028                     	ds	1
   798  0029                     DarknessCheck@darknessValue:	
   799  0029                     Blink@i:	
   800                           ; 1 bytes @ 0x9
   801                           
   802  0029                     strncmp@len:	
   803                           ; 2 bytes @ 0x9
   804                           
   805                           
   806                           ; 2 bytes @ 0x9
   807  0029                     	ds	1
   808  002A                     ??_Mode_0:	
   809  002A                     ??_Mode_1:	
   810                           ; 1 bytes @ 0xA
   811                           
   812  002A                     ??_Mode_2:	
   813                           ; 1 bytes @ 0xA
   814                           
   815  002A                     ??_LightWithSensController:	
   816                           ; 1 bytes @ 0xA
   817                           
   818  002A                     RegisterSet@adress:	
   819                           ; 1 bytes @ 0xA
   820                           
   821  002A                     atoi@sign:	
   822                           ; 1 bytes @ 0xA
   823                           
   824                           
   825                           ; 1 bytes @ 0xA
   826  002A                     	ds	1
   827  002B                     ??_SetRFMode:	
   828  002B                     ??_strncmp:	
   829                           ; 1 bytes @ 0xB
   830                           
   831  002B                     atoi@a:	
   832                           ; 1 bytes @ 0xB
   833                           
   834                           
   835                           ; 2 bytes @ 0xB
   836  002B                     	ds	1
   837  002C                     SetRFMode@mode:	
   838                           
   839                           ; 1 bytes @ 0xC
   840  002C                     	ds	1
   841  002D                     SetRFMode@mcparam0_read:	
   842  002D                     atoi@s:	
   843                           ; 1 bytes @ 0xD
   844                           
   845  002D                     strncmp@s1:	
   846                           ; 1 bytes @ 0xD
   847                           
   848                           
   849                           ; 1 bytes @ 0xD
   850  002D                     	ds	1
   851  002E                     ??_FindChannel:	
   852  002E                     ?_strstr:	
   853                           ; 1 bytes @ 0xE
   854                           
   855  002E                     strstr@s2:	
   856                           ; 1 bytes @ 0xE
   857                           
   858                           
   859                           ; 1 bytes @ 0xE
   860  002E                     	ds	1
   861  002F                     ??_strstr:	
   862                           
   863                           ; 1 bytes @ 0xF
   864  002F                     	ds	2
   865  0031                     FindChannel@cnt:	
   866                           
   867                           ; 2 bytes @ 0x11
   868  0031                     	ds	1
   869  0032                     strstr@s1:	
   870                           
   871                           ; 1 bytes @ 0x12
   872  0032                     	ds	1
   873  0033                     FindChannel@i:	
   874                           
   875                           ; 2 bytes @ 0x13
   876  0033                     	ds	2
   877  0035                     ??_TransiverInit:	
   878  0035                     ??_TransiverToReceive:	
   879                           ; 1 bytes @ 0x15
   880                           
   881  0035                     ?_TransmittString:	
   882                           ; 1 bytes @ 0x15
   883                           
   884  0035                     TransmittString@dataString:	
   885                           ; 1 bytes @ 0x15
   886                           
   887                           
   888                           ; 2 bytes @ 0x15
   889  0035                     	ds	2
   890  0037                     ??_TransmittString:	
   891                           
   892                           ; 1 bytes @ 0x17
   893  0037                     	ds	3
   894  003A                     TransmittString@i:	
   895                           
   896                           ; 2 bytes @ 0x1A
   897  003A                     	ds	2
   898  003C                     ??_Mode_4:	
   899  003C                     ??_Mode_5:	
   900                           ; 1 bytes @ 0x1C
   901                           
   902  003C                     ??_TransmittedDataHandler:	
   903                           ; 1 bytes @ 0x1C
   904                           
   905                           
   906                           ; 1 bytes @ 0x1C
   907  003C                     	ds	1
   908  003D                     TransmittedDataHandler@slask:	
   909                           
   910                           ; 8 bytes @ 0x1D
   911  003D                     	ds	8
   912  0045                     TransmittedDataHandler@slask_696:	
   913                           
   914                           ; 8 bytes @ 0x25
   915  0045                     	ds	8
   916  004D                     TransmittedDataHandler@slask_705:	
   917                           
   918                           ; 8 bytes @ 0x2D
   919  004D                     	ds	8
   920  0055                     TransmittedDataHandler@slask_708:	
   921                           
   922                           ; 8 bytes @ 0x35
   923  0055                     	ds	8
   924  005D                     TransmittedDataHandler@value:	
   925                           
   926                           ; 2 bytes @ 0x3D
   927  005D                     	ds	2
   928  005F                     ??_TransiverReadFIFO:	
   929                           
   930                           ; 1 bytes @ 0x3F
   931  005F                     	ds	2
   932  0061                     TransiverReadFIFO@i:	
   933                           
   934                           ; 2 bytes @ 0x41
   935  0061                     	ds	2
   936  0063                     TransiverReadFIFO@j:	
   937                           
   938                           ; 2 bytes @ 0x43
   939  0063                     	ds	2
   940  0065                     ??_main:	
   941                           
   942                           ; 1 bytes @ 0x45
   943  0065                     	ds	3
   944                           
   945                           	psect	maintext
   946  071C                     __pmaintext:	
   947 ;;
   948 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   949 ;;
   950 ;; *************** function _main *****************
   951 ;; Defined at:
   952 ;;		line 119 in file "../Main Card V10.0.c"
   953 ;; Parameters:    Size  Location     Type
   954 ;;		None
   955 ;; Auto vars:     Size  Location     Type
   956 ;;		None
   957 ;; Return value:  Size  Location     Type
   958 ;;                  1    wreg      void 
   959 ;; Registers used:
   960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   961 ;; Tracked objects:
   962 ;;		On entry : B00/0
   963 ;;		On exit  : 0/0
   964 ;;		Unchanged: 0/0
   965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   966 ;;      Params:         0       0       0       0       0
   967 ;;      Locals:         0       0       0       0       0
   968 ;;      Temps:          0       3       0       0       0
   969 ;;      Totals:         0       3       0       0       0
   970 ;;Total ram usage:        3 bytes
   971 ;; Hardware stack levels required when called:   10
   972 ;; This function calls:
   973 ;;		_Mode_0
   974 ;;		_Mode_1
   975 ;;		_Mode_2
   976 ;;		_Mode_4
   977 ;;		_Mode_5
   978 ;;		_OperationMode
   979 ;;		_TransiverInit
   980 ;;		_TransiverReadFIFO
   981 ;;		_TransiverToReceive
   982 ;;		_init
   983 ;; This function is called by:
   984 ;;		Startup code after reset
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           
   989                           ;psect for function _main
   990  071C                     _main:	
   991                           
   992                           ;Main Card V10.0.c: 122: init();
   993                           
   994                           ;incstack = 0
   995 ;; hardware stack exceeded
   996                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   997  071C  120A  158A  2750  120A  118A  	fcall	_init
   998                           
   999                           ;Main Card V10.0.c: 124: _delay((unsigned long)((800)*(4000000/4000.0)));
  1000  0721  3005               	movlw	5
  1001  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1002  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1003  0724  00E7               	movwf	??_main+2
  1004  0725  300F               	movlw	15
  1005  0726  00E6               	movwf	??_main+1
  1006  0727  30F4               	movlw	244
  1007  0728  00E5               	movwf	??_main
  1008  0729                     u2117:	
  1009  0729  0BE5               	decfsz	??_main,f
  1010  072A  2F29               	goto	u2117
  1011  072B  0BE6               	decfsz	??_main+1,f
  1012  072C  2F29               	goto	u2117
  1013  072D  0BE7               	decfsz	??_main+2,f
  1014  072E  2F29               	goto	u2117
  1015                           
  1016                           ;Main Card V10.0.c: 125: TransiverInit();
  1017  072F  120A  118A  22ED  120A  118A  	fcall	_TransiverInit
  1018  0734                     l2332:	
  1019                           ;Main Card V10.0.c: 127: while(1)
  1020                           
  1021                           
  1022                           ;Main Card V10.0.c: 128: {
  1023                           ;Main Card V10.0.c: 129: if(OperationMode() == 0)
  1024  0734  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1025  0739  3A00               	xorlw	0
  1026  073A  1D03               	skipz
  1027  073B  2F41               	goto	l2336
  1028                           
  1029                           ;Main Card V10.0.c: 130: {
  1030                           ;Main Card V10.0.c: 131: Mode_0();
  1031  073C  120A  118A  27FB  120A  118A  	fcall	_Mode_0
  1032  0741                     l2336:	
  1033                           
  1034                           ;Main Card V10.0.c: 132: }
  1035                           ;Main Card V10.0.c: 133: if(OperationMode() == 1)
  1036  0741  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1037  0746  3A01               	xorlw	1
  1038  0747  1D03               	skipz
  1039  0748  2F4E               	goto	l2340
  1040                           
  1041                           ;Main Card V10.0.c: 134: {
  1042                           ;Main Card V10.0.c: 135: Mode_1();
  1043  0749  120A  158A  24CD  120A  118A  	fcall	_Mode_1
  1044  074E                     l2340:	
  1045                           
  1046                           ;Main Card V10.0.c: 136: }
  1047                           ;Main Card V10.0.c: 138: if(OperationMode() == 2)
  1048  074E  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1049  0753  3A02               	xorlw	2
  1050  0754  1D03               	skipz
  1051  0755  2F5B               	goto	l2344
  1052                           
  1053                           ;Main Card V10.0.c: 139: {
  1054                           ;Main Card V10.0.c: 140: Mode_2();
  1055  0756  120A  158A  244B  120A  118A  	fcall	_Mode_2
  1056  075B                     l2344:	
  1057                           
  1058                           ;Main Card V10.0.c: 141: }
  1059                           ;Main Card V10.0.c: 143: if(OperationMode() == 4)
  1060  075B  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1061  0760  3A04               	xorlw	4
  1062  0761  1D03               	skipz
  1063  0762  2F68               	goto	l2348
  1064                           
  1065                           ;Main Card V10.0.c: 144: {
  1066                           ;Main Card V10.0.c: 145: Mode_4();
  1067  0763  120A  158A  2484  120A  118A  	fcall	_Mode_4
  1068  0768                     l2348:	
  1069                           
  1070                           ;Main Card V10.0.c: 146: }
  1071                           ;Main Card V10.0.c: 148: if(OperationMode() == 5)
  1072  0768  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1073  076D  3A05               	xorlw	5
  1074  076E  1D03               	skipz
  1075  076F  2F75               	goto	l2352
  1076                           
  1077                           ;Main Card V10.0.c: 149: {
  1078                           ;Main Card V10.0.c: 150: Mode_5();
  1079  0770  120A  158A  2495  120A  118A  	fcall	_Mode_5
  1080  0775                     l2352:	
  1081                           
  1082                           ;Main Card V10.0.c: 151: }
  1083                           ;Main Card V10.0.c: 155: if(!bTransiverModeReceive)
  1084  0775  1283               	bcf	3,5	;RP0=0, select bank0
  1085  0776  1303               	bcf	3,6	;RP1=0, select bank0
  1086  0777  086E               	movf	_bTransiverModeReceive,w
  1087  0778  1D03               	btfss	3,2
  1088  0779  2F7F               	goto	l2356
  1089                           
  1090                           ;Main Card V10.0.c: 156: TransiverToReceive();
  1091  077A  120A  158A  27A3  120A  118A  	fcall	_TransiverToReceive
  1092  077F                     l2356:	
  1093                           
  1094                           ;Main Card V10.0.c: 157: if(PORTBbits.RB4 && bTransiverModeReceive)
  1095  077F  1283               	bcf	3,5	;RP0=0, select bank0
  1096  0780  1303               	bcf	3,6	;RP1=0, select bank0
  1097  0781  1E06               	btfss	6,4	;volatile
  1098  0782  2F34               	goto	l2332
  1099  0783  086E               	movf	_bTransiverModeReceive,w
  1100  0784  1903               	btfsc	3,2
  1101  0785  2F34               	goto	l2332
  1102                           
  1103                           ;Main Card V10.0.c: 158: TransiverReadFIFO();
  1104  0786  120A  118A  2575  120A  118A  	fcall	_TransiverReadFIFO
  1105  078B  2F34               	goto	l2332
  1106  078C                     __end_of_main:	
  1107                           
  1108                           	psect	text1
  1109  0F50                     __ptext1:	
  1110 ;; *************** function _init *****************
  1111 ;; Defined at:
  1112 ;;		line 523 in file "../Main Card V10.0.c"
  1113 ;; Parameters:    Size  Location     Type
  1114 ;;		None
  1115 ;; Auto vars:     Size  Location     Type
  1116 ;;		None
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  1    wreg      void 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         0       0       0       0       0
  1127 ;;      Locals:         0       0       0       0       0
  1128 ;;      Temps:          0       0       0       0       0
  1129 ;;      Totals:         0       0       0       0       0
  1130 ;;Total ram usage:        0 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; Hardware stack levels required when called:    2
  1133 ;; This function calls:
  1134 ;;		Nothing
  1135 ;; This function is called by:
  1136 ;;		_main
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           
  1141                           ;psect for function _init
  1142  0F50                     _init:	
  1143                           
  1144                           ;Main Card V10.0.c: 526: OSCCONbits.IRCF2 = 1;
  1145                           
  1146                           ;incstack = 0
  1147                           ; Regs used in _init: [wreg+status,2+status,0]
  1148  0F50  1683               	bsf	3,5	;RP0=1, select bank1
  1149  0F51  1303               	bcf	3,6	;RP1=0, select bank1
  1150  0F52  170F               	bsf	15,6	;volatile
  1151                           
  1152                           ;Main Card V10.0.c: 527: OSCCONbits.IRCF1 = 1;
  1153  0F53  168F               	bsf	15,5	;volatile
  1154                           
  1155                           ;Main Card V10.0.c: 528: OSCCONbits.IRCF0 = 0;
  1156  0F54  120F               	bcf	15,4	;volatile
  1157                           
  1158                           ;Main Card V10.0.c: 529: OSCCONbits.SCS = 1;
  1159  0F55  140F               	bsf	15,0	;volatile
  1160                           
  1161                           ;Main Card V10.0.c: 532: PORTA = 0x00;
  1162  0F56  1283               	bcf	3,5	;RP0=0, select bank0
  1163  0F57  1303               	bcf	3,6	;RP1=0, select bank0
  1164  0F58  0185               	clrf	5	;volatile
  1165                           
  1166                           ;Main Card V10.0.c: 533: PORTB = 0x00;
  1167  0F59  0186               	clrf	6	;volatile
  1168                           
  1169                           ;Main Card V10.0.c: 534: PORTC = 0x00;
  1170  0F5A  0187               	clrf	7	;volatile
  1171                           
  1172                           ;Main Card V10.0.c: 535: TRISA = 0b00001011;
  1173  0F5B  300B               	movlw	11
  1174  0F5C  1683               	bsf	3,5	;RP0=1, select bank1
  1175  0F5D  1303               	bcf	3,6	;RP1=0, select bank1
  1176  0F5E  0085               	movwf	5	;volatile
  1177                           
  1178                           ;Main Card V10.0.c: 536: TRISB = 0b00111111;
  1179  0F5F  303F               	movlw	63
  1180  0F60  0086               	movwf	6	;volatile
  1181                           
  1182                           ;Main Card V10.0.c: 537: TRISC = 0b00010000;
  1183  0F61  3010               	movlw	16
  1184  0F62  0087               	movwf	7	;volatile
  1185                           
  1186                           ;Main Card V10.0.c: 538: ANSEL = 0b00000000;
  1187  0F63  1683               	bsf	3,5	;RP0=1, select bank3
  1188  0F64  1703               	bsf	3,6	;RP1=1, select bank3
  1189  0F65  0188               	clrf	8	;volatile
  1190                           
  1191                           ;Main Card V10.0.c: 539: ANSELH = 0b00000000;
  1192  0F66  0189               	clrf	9	;volatile
  1193                           
  1194                           ;Main Card V10.0.c: 540: ANSELbits.ANS0 = 1;
  1195  0F67  1408               	bsf	8,0	;volatile
  1196                           
  1197                           ;Main Card V10.0.c: 541: ANSELbits.ANS3 = 1;
  1198  0F68  1588               	bsf	8,3	;volatile
  1199                           
  1200                           ;Main Card V10.0.c: 542: OPTION_REGbits.nRBPU = 0;
  1201  0F69  1683               	bsf	3,5	;RP0=1, select bank1
  1202  0F6A  1303               	bcf	3,6	;RP1=0, select bank1
  1203  0F6B  1381               	bcf	1,7	;volatile
  1204                           
  1205                           ;Main Card V10.0.c: 543: WPUBbits.WPUB5 = 0;
  1206  0F6C  1295               	bcf	21,5	;volatile
  1207  0F6D                     l286:	
  1208                           ;Main Card V10.0.c: 544: while(!PORTBbits.RB5);
  1209                           
  1210  0F6D  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0F6E  1E86               	btfss	6,5	;volatile
  1212  0F6F  2F6D               	goto	l286
  1213                           
  1214                           ;Main Card V10.0.c: 547: SSPCONbits.SSPM=0x00;
  1215  0F70  30F0               	movlw	-16
  1216  0F71  0594               	andwf	20,f	;volatile
  1217                           
  1218                           ;Main Card V10.0.c: 548: SSPCONbits.CKP=0;
  1219  0F72  1214               	bcf	20,4	;volatile
  1220                           
  1221                           ;Main Card V10.0.c: 549: SSPSTATbits.CKE=1;
  1222  0F73  1683               	bsf	3,5	;RP0=1, select bank1
  1223  0F74  1303               	bcf	3,6	;RP1=0, select bank1
  1224  0F75  1714               	bsf	20,6	;volatile
  1225                           
  1226                           ;Main Card V10.0.c: 550: SSPSTATbits.SMP=0;
  1227  0F76  1394               	bcf	20,7	;volatile
  1228                           
  1229                           ;Main Card V10.0.c: 551: SSPCONbits.SSPEN=0x01;
  1230  0F77  1283               	bcf	3,5	;RP0=0, select bank0
  1231  0F78  1303               	bcf	3,6	;RP1=0, select bank0
  1232  0F79  1694               	bsf	20,5	;volatile
  1233                           
  1234                           ;Main Card V10.0.c: 552: SSPIE = 0;
  1235  0F7A  1683               	bsf	3,5	;RP0=1, select bank1
  1236  0F7B  1303               	bcf	3,6	;RP1=0, select bank1
  1237  0F7C  118C               	bcf	12,3	;volatile
  1238                           
  1239                           ;Main Card V10.0.c: 555: PORTAbits.RA5 = 1;
  1240  0F7D  1283               	bcf	3,5	;RP0=0, select bank0
  1241  0F7E  1303               	bcf	3,6	;RP1=0, select bank0
  1242  0F7F  1685               	bsf	5,5	;volatile
  1243                           
  1244                           ;Main Card V10.0.c: 556: PORTAbits.RA4 = 1;
  1245  0F80  1605               	bsf	5,4	;volatile
  1246                           
  1247                           ;Main Card V10.0.c: 559: INTCONbits.RBIE = 1;
  1248  0F81  158B               	bsf	11,3	;volatile
  1249                           
  1250                           ;Main Card V10.0.c: 560: INTCONbits.PEIE = 1;
  1251  0F82  170B               	bsf	11,6	;volatile
  1252                           
  1253                           ;Main Card V10.0.c: 561: PIE1bits.TMR1IE = 1;
  1254  0F83  1683               	bsf	3,5	;RP0=1, select bank1
  1255  0F84  1303               	bcf	3,6	;RP1=0, select bank1
  1256  0F85  140C               	bsf	12,0	;volatile
  1257                           
  1258                           ;Main Card V10.0.c: 562: INTCONbits.GIE = 1;
  1259  0F86  178B               	bsf	11,7	;volatile
  1260                           
  1261                           ;Main Card V10.0.c: 563: IOCBbits.IOCB5 = 1;
  1262  0F87  1696               	bsf	22,5	;volatile
  1263                           
  1264                           ;Main Card V10.0.c: 566: T1CON = 0b00110000;
  1265  0F88  3030               	movlw	48
  1266  0F89  1283               	bcf	3,5	;RP0=0, select bank0
  1267  0F8A  1303               	bcf	3,6	;RP1=0, select bank0
  1268  0F8B  0090               	movwf	16	;volatile
  1269                           
  1270                           ;Main Card V10.0.c: 567: TMR1H = 0x0B;
  1271  0F8C  300B               	movlw	11
  1272  0F8D  008F               	movwf	15	;volatile
  1273                           
  1274                           ;Main Card V10.0.c: 568: TMR1L = 0xDB;
  1275  0F8E  30DB               	movlw	219
  1276  0F8F  008E               	movwf	14	;volatile
  1277                           
  1278                           ;Main Card V10.0.c: 569: T1CONbits.TMR1ON = 1;
  1279  0F90  1410               	bsf	16,0	;volatile
  1280                           
  1281                           ;Main Card V10.0.c: 572: ADCON0bits.ADCS0 = 0;
  1282  0F91  131F               	bcf	31,6	;volatile
  1283                           
  1284                           ;Main Card V10.0.c: 573: ADCON0bits.ADCS1 = 0;
  1285  0F92  139F               	bcf	31,7	;volatile
  1286                           
  1287                           ;Main Card V10.0.c: 574: ADCON1bits.ADFM = 0;
  1288  0F93  1683               	bsf	3,5	;RP0=1, select bank1
  1289  0F94  1303               	bcf	3,6	;RP1=0, select bank1
  1290  0F95  139F               	bcf	31,7	;volatile
  1291                           
  1292                           ;Main Card V10.0.c: 575: ADCON1bits.VCFG1 = 0;
  1293  0F96  129F               	bcf	31,5	;volatile
  1294                           
  1295                           ;Main Card V10.0.c: 576: ADCON1bits.VCFG0 = 0;
  1296  0F97  121F               	bcf	31,4	;volatile
  1297                           
  1298                           ;Main Card V10.0.c: 579: intSecondCounter = 0;
  1299  0F98  1283               	bcf	3,5	;RP0=0, select bank0
  1300  0F99  1303               	bcf	3,6	;RP1=0, select bank0
  1301  0F9A  01EA               	clrf	_intSecondCounter
  1302  0F9B  01EB               	clrf	_intSecondCounter+1
  1303                           
  1304                           ;Main Card V10.0.c: 580: intHalfSecondCounter = 0;
  1305  0F9C  1683               	bsf	3,5	;RP0=1, select bank1
  1306  0F9D  1303               	bcf	3,6	;RP1=0, select bank1
  1307  0F9E  01B5               	clrf	_intHalfSecondCounter^(0+128)
  1308  0F9F  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  1309                           
  1310                           ;Main Card V10.0.c: 581: intMinuteCounter = 0;
  1311  0FA0  01B7               	clrf	_intMinuteCounter^(0+128)
  1312  0FA1  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  1313  0FA2  0008               	return
  1314  0FA3                     __end_of_init:	
  1315                           
  1316                           	psect	text2
  1317  0FA3                     __ptext2:	
  1318 ;; *************** function _TransiverToReceive *****************
  1319 ;; Defined at:
  1320 ;;		line 167 in file "../Main Card V10.0.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;		None
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;		None
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         0       0       0       0       0
  1336 ;;      Temps:          0       2       0       0       0
  1337 ;;      Totals:         0       2       0       0       0
  1338 ;;Total ram usage:        2 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    7
  1341 ;; This function calls:
  1342 ;;		_FindChannel
  1343 ;;		_RegisterRead
  1344 ;;		_RegisterSet
  1345 ;;		_SetRFMode
  1346 ;;		_timerFunction
  1347 ;; This function is called by:
  1348 ;;		_main
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           
  1353                           ;psect for function _TransiverToReceive
  1354  0FA3                     _TransiverToReceive:	
  1355                           
  1356                           ;Main Card V10.0.c: 169: timerFunction(2, 5);
  1357                           
  1358                           ;incstack = 0
  1359                           ; Regs used in _TransiverToReceive: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1360  0FA3  3002               	movlw	2
  1361  0FA4  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0FA5  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0FA6  00A0               	movwf	timerFunction@intTimerNumber
  1364  0FA7  3000               	movlw	0
  1365  0FA8  00A1               	movwf	timerFunction@intTimerNumber+1
  1366  0FA9  3005               	movlw	5
  1367  0FAA  00A2               	movwf	timerFunction@intSetSeconds
  1368  0FAB  3000               	movlw	0
  1369  0FAC  00A3               	movwf	timerFunction@intSetSeconds+1
  1370  0FAD  120A  158A  24A6  120A  158A  	fcall	_timerFunction
  1371                           
  1372                           ;Main Card V10.0.c: 173: SetRFMode(0x20);
  1373  0FB2  3020               	movlw	32
  1374  0FB3  120A  118A  278C  120A  158A  	fcall	_SetRFMode
  1375                           
  1376                           ;Main Card V10.0.c: 174: _delay((unsigned long)((10)*(4000000/4000.0)));
  1377  0FB8  300D               	movlw	13
  1378  0FB9  1283               	bcf	3,5	;RP0=0, select bank0
  1379  0FBA  1303               	bcf	3,6	;RP1=0, select bank0
  1380  0FBB  00B6               	movwf	??_TransiverToReceive+1
  1381  0FBC  30FB               	movlw	251
  1382  0FBD  00B5               	movwf	??_TransiverToReceive
  1383  0FBE                     u2127:	
  1384  0FBE  0BB5               	decfsz	??_TransiverToReceive,f
  1385  0FBF  2FBE               	goto	u2127
  1386  0FC0  0BB6               	decfsz	??_TransiverToReceive+1,f
  1387  0FC1  2FBE               	goto	u2127
  1388  0FC2  2FC3               	nop2
  1389                           
  1390                           ;Main Card V10.0.c: 175: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  1391  0FC3  300E               	movlw	14
  1392  0FC4  120A  158A  2501  120A  158A  	fcall	_RegisterRead
  1393  0FC9  3802               	iorlw	2
  1394  0FCA  1283               	bcf	3,5	;RP0=0, select bank0
  1395  0FCB  1303               	bcf	3,6	;RP1=0, select bank0
  1396  0FCC  00B5               	movwf	??_TransiverToReceive
  1397  0FCD  0835               	movf	??_TransiverToReceive,w
  1398  0FCE  00A7               	movwf	RegisterSet@value
  1399  0FCF  300E               	movlw	14
  1400  0FD0  120A  158A  24E7  120A  158A  	fcall	_RegisterSet
  1401                           
  1402                           ;Main Card V10.0.c: 176: SetRFMode(0x40);
  1403  0FD5  3040               	movlw	64
  1404  0FD6  120A  118A  278C  120A  158A  	fcall	_SetRFMode
  1405  0FDB                     l2264:	
  1406                           ;Main Card V10.0.c: 177: while((RegisterRead(0x0E) & 0b00000010) == 0)
  1407                           
  1408  0FDB  300E               	movlw	14
  1409  0FDC  120A  158A  2501  120A  158A  	fcall	_RegisterRead
  1410  0FE1  3902               	andlw	2
  1411  0FE2  1D03               	btfss	3,2
  1412  0FE3  2FEE               	goto	l2266
  1413                           
  1414                           ;Main Card V10.0.c: 178: {
  1415                           ;Main Card V10.0.c: 179: if(bTimerComplete[2])
  1416  0FE4  1683               	bsf	3,5	;RP0=1, select bank1
  1417  0FE5  1303               	bcf	3,6	;RP1=0, select bank1
  1418  0FE6  082C               	movf	(_bTimerComplete^(0+128)+2),w
  1419  0FE7  1903               	btfsc	3,2
  1420  0FE8  2FDB               	goto	l2264
  1421                           
  1422                           ;Main Card V10.0.c: 180: {
  1423                           ;Main Card V10.0.c: 181: FindChannel();
  1424  0FE9  120A  118A  21ED  120A  158A  	fcall	_FindChannel
  1425  0FEE                     l2266:	
  1426                           ;Main Card V10.0.c: 182: break;
  1427                           
  1428                           
  1429                           ;Main Card V10.0.c: 183: }
  1430                           ;Main Card V10.0.c: 184: }
  1431                           ;Main Card V10.0.c: 186: SetRFMode(0x60);
  1432  0FEE  3060               	movlw	96
  1433  0FEF  120A  118A  278C  120A  158A  	fcall	_SetRFMode
  1434                           
  1435                           ;Main Card V10.0.c: 187: _delay((unsigned long)((500)*(4000000/4000000.0)));
  1436  0FF4  30A6               	movlw	166
  1437  0FF5  1283               	bcf	3,5	;RP0=0, select bank0
  1438  0FF6  1303               	bcf	3,6	;RP1=0, select bank0
  1439  0FF7  00B5               	movwf	??_TransiverToReceive
  1440  0FF8                     u2137:	
  1441  0FF8  0BB5               	decfsz	??_TransiverToReceive,f
  1442  0FF9  2FF8               	goto	u2137
  1443  0FFA  0000               	nop
  1444                           
  1445                           ;Main Card V10.0.c: 188: bTransiverModeReceive = 1;
  1446  0FFB  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0FFC  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0FFD  01EE               	clrf	_bTransiverModeReceive
  1449  0FFE  0AEE               	incf	_bTransiverModeReceive,f
  1450  0FFF  0008               	return
  1451  1000                     __end_of_TransiverToReceive:	
  1452                           
  1453                           	psect	text3
  1454  0575                     __ptext3:	
  1455 ;; *************** function _TransiverReadFIFO *****************
  1456 ;; Defined at:
  1457 ;;		line 193 in file "../Main Card V10.0.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  j               2   67[BANK0 ] int 
  1462 ;;  i               2   65[BANK0 ] int 
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       4       0       0       0
  1474 ;;      Temps:          0       2       0       0       0
  1475 ;;      Totals:         0       6       0       0       0
  1476 ;;Total ram usage:        6 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    9
  1479 ;; This function calls:
  1480 ;;		_ReadFIFO
  1481 ;;		_SetRFMode
  1482 ;;		_TransmittedDataHandler
  1483 ;;		_timerFunction
  1484 ;; This function is called by:
  1485 ;;		_main
  1486 ;; This function uses a non-reentrant model
  1487 ;;
  1488                           
  1489                           
  1490                           ;psect for function _TransiverReadFIFO
  1491  0575                     _TransiverReadFIFO:	
  1492                           
  1493                           ;Main Card V10.0.c: 195: timerFunction(3, 5);
  1494                           
  1495                           ;incstack = 0
  1496 ;; hardware stack exceeded
  1497                           ; Regs used in _TransiverReadFIFO: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1498  0575  3003               	movlw	3
  1499  0576  1283               	bcf	3,5	;RP0=0, select bank0
  1500  0577  1303               	bcf	3,6	;RP1=0, select bank0
  1501  0578  00A0               	movwf	timerFunction@intTimerNumber
  1502  0579  3000               	movlw	0
  1503  057A  00A1               	movwf	timerFunction@intTimerNumber+1
  1504  057B  3005               	movlw	5
  1505  057C  00A2               	movwf	timerFunction@intSetSeconds
  1506  057D  3000               	movlw	0
  1507  057E  00A3               	movwf	timerFunction@intSetSeconds+1
  1508  057F  120A  158A  24A6  120A  118A  	fcall	_timerFunction
  1509                           
  1510                           ;Main Card V10.0.c: 197: SetRFMode(0x20);
  1511  0584  3020               	movlw	32
  1512  0585  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  1513                           
  1514                           ;Main Card V10.0.c: 198: bTransiverModeReceive = 0;
  1515  058A  1283               	bcf	3,5	;RP0=0, select bank0
  1516  058B  1303               	bcf	3,6	;RP1=0, select bank0
  1517  058C  01EE               	clrf	_bTransiverModeReceive
  1518                           
  1519                           ;Main Card V10.0.c: 199: int i = 0;
  1520  058D  01E1               	clrf	TransiverReadFIFO@i
  1521  058E  01E2               	clrf	TransiverReadFIFO@i+1
  1522                           
  1523                           ;Main Card V10.0.c: 200: for (int j = 0; j < 30; ++j)
  1524  058F  01E3               	clrf	TransiverReadFIFO@j
  1525  0590  01E4               	clrf	TransiverReadFIFO@j+1
  1526  0591                     L1:	
  1527  0591  0864               	movf	TransiverReadFIFO@j+1,w
  1528  0592  3A80               	xorlw	128
  1529  0593  00FF               	movwf	127
  1530  0594  3080               	movlw	128
  1531  0595  027F               	subwf	127,w
  1532  0596  1D03               	skipz
  1533  0597  2D9A               	goto	u1835
  1534  0598  301E               	movlw	30
  1535  0599  0263               	subwf	TransiverReadFIFO@j,w
  1536  059A                     u1835:	
  1537  059A  1803               	btfsc	3,0
  1538  059B  2DBE               	goto	l2294
  1539                           
  1540                           ;Main Card V10.0.c: 201: {
  1541                           ;Main Card V10.0.c: 202: TransmittedString[j] = 0;
  1542  059C  1283               	bcf	3,5	;RP0=0, select bank0
  1543  059D  1303               	bcf	3,6	;RP1=0, select bank0
  1544  059E  0863               	movf	TransiverReadFIFO@j,w
  1545  059F  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1546  05A0  0084               	movwf	4
  1547  05A1  1383               	bcf	3,7	;select IRP bank1
  1548  05A2  0180               	clrf	0
  1549  05A3  3001               	movlw	1
  1550  05A4  07E3               	addwf	TransiverReadFIFO@j,f
  1551  05A5  1803               	skipnc
  1552  05A6  0AE4               	incf	TransiverReadFIFO@j+1,f
  1553  05A7  3000               	movlw	0
  1554  05A8  07E4               	addwf	TransiverReadFIFO@j+1,f
  1555  05A9  2D91               	goto	L1
  1556  05AA                     l2290:	
  1557                           ;Main Card V10.0.c: 203: }
  1558                           ;Main Card V10.0.c: 204: while((PORTBbits.RB3)&&(!bTimerComplete[3]))
  1559                           
  1560                           
  1561                           ;Main Card V10.0.c: 205: {
  1562                           ;Main Card V10.0.c: 206: TransmittedString[i] = ReadFIFO();
  1563  05AA  120A  158A  2466  120A  118A  	fcall	_ReadFIFO
  1564  05AF  1283               	bcf	3,5	;RP0=0, select bank0
  1565  05B0  1303               	bcf	3,6	;RP1=0, select bank0
  1566  05B1  00DF               	movwf	??_TransiverReadFIFO
  1567  05B2  0861               	movf	TransiverReadFIFO@i,w
  1568  05B3  3EB9               	addlw	(low (_TransmittedString| 0))& (0+255)
  1569  05B4  0084               	movwf	4
  1570  05B5  085F               	movf	??_TransiverReadFIFO,w
  1571  05B6  1383               	bcf	3,7	;select IRP bank1
  1572  05B7  0080               	movwf	0
  1573                           
  1574                           ;Main Card V10.0.c: 207: i++;
  1575  05B8  3001               	movlw	1
  1576  05B9  07E1               	addwf	TransiverReadFIFO@i,f
  1577  05BA  1803               	skipnc
  1578  05BB  0AE2               	incf	TransiverReadFIFO@i+1,f
  1579  05BC  3000               	movlw	0
  1580  05BD  07E2               	addwf	TransiverReadFIFO@i+1,f
  1581  05BE                     l2294:	
  1582  05BE  1283               	bcf	3,5	;RP0=0, select bank0
  1583  05BF  1303               	bcf	3,6	;RP1=0, select bank0
  1584  05C0  1D86               	btfss	6,3	;volatile
  1585  05C1  2DC7               	goto	l2298
  1586  05C2  1683               	bsf	3,5	;RP0=1, select bank1
  1587  05C3  1303               	bcf	3,6	;RP1=0, select bank1
  1588  05C4  082D               	movf	(_bTimerComplete^(0+128)+3),w
  1589  05C5  1903               	btfsc	3,2
  1590  05C6  2DAA               	goto	l2290
  1591  05C7                     l2298:	
  1592                           
  1593                           ;Main Card V10.0.c: 208: }
  1594                           ;Main Card V10.0.c: 210: _delay((unsigned long)((10)*(4000000/4000.0)));
  1595  05C7  300D               	movlw	13
  1596  05C8  1283               	bcf	3,5	;RP0=0, select bank0
  1597  05C9  00E0               	movwf	??_TransiverReadFIFO+1
  1598  05CA  30FB               	movlw	251
  1599  05CB  00DF               	movwf	??_TransiverReadFIFO
  1600  05CC                     u2147:	
  1601  05CC  0BDF               	decfsz	??_TransiverReadFIFO,f
  1602  05CD  2DCC               	goto	u2147
  1603  05CE  0BE0               	decfsz	??_TransiverReadFIFO+1,f
  1604  05CF  2DCC               	goto	u2147
  1605  05D0  2DD1               	nop2
  1606                           
  1607                           ;Main Card V10.0.c: 211: SetRFMode(0x00);
  1608  05D1  3000               	movlw	0
  1609  05D2  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  1610                           
  1611                           ;Main Card V10.0.c: 212: TransmittedDataHandler();
  1612  05D7  120A  118A  2048   	fcall	_TransmittedDataHandler
  1613  05DA  0008               	return
  1614  05DB                     __end_of_TransiverReadFIFO:	
  1615                           
  1616                           	psect	text4
  1617  0048                     __ptext4:	
  1618 ;; *************** function _TransmittedDataHandler *****************
  1619 ;; Defined at:
  1620 ;;		line 214 in file "../Main Card V10.0.c"
  1621 ;; Parameters:    Size  Location     Type
  1622 ;;		None
  1623 ;; Auto vars:     Size  Location     Type
  1624 ;;  slask           8   53[BANK0 ] unsigned char [8]
  1625 ;;  value           2   61[BANK0 ] int 
  1626 ;;  slask           8   45[BANK0 ] unsigned char [8]
  1627 ;;  slask           8   37[BANK0 ] unsigned char [8]
  1628 ;;  slask           8   29[BANK0 ] unsigned char [8]
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1638 ;;      Params:         0       0       0       0       0
  1639 ;;      Locals:         0      34       0       0       0
  1640 ;;      Temps:          0       1       0       0       0
  1641 ;;      Totals:         0      35       0       0       0
  1642 ;;Total ram usage:       35 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    8
  1645 ;; This function calls:
  1646 ;;		_AnalogValue
  1647 ;;		_DarknessCheck
  1648 ;;		_DelayDs
  1649 ;;		_OperationMode
  1650 ;;		_TransmittString
  1651 ;;		_atoi
  1652 ;;		_eeprom_read
  1653 ;;		_eeprom_write
  1654 ;;		_strstr
  1655 ;; This function is called by:
  1656 ;;		_TransiverReadFIFO
  1657 ;; This function uses a non-reentrant model
  1658 ;;
  1659                           
  1660                           
  1661                           ;psect for function _TransmittedDataHandler
  1662  0048                     _TransmittedDataHandler:	
  1663                           
  1664                           ;Main Card V10.0.c: 217: if((strstr(TransmittedString, "N1BLINK")) && (OperationMode() =
      +                          = 6))
  1665                           
  1666                           ;incstack = 0
  1667 ;; hardware stack exceeded
  1668                           ; Regs used in _TransmittedDataHandler: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cst
      +                          ack]
  1669  0048  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1670  0049  1283               	bcf	3,5	;RP0=0, select bank0
  1671  004A  1303               	bcf	3,6	;RP1=0, select bank0
  1672  004B  00BC               	movwf	??_TransmittedDataHandler
  1673  004C  083C               	movf	??_TransmittedDataHandler,w
  1674  004D  00AE               	movwf	strstr@s2
  1675  004E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1676  004F  120A  158A  270A  120A  118A  	fcall	_strstr
  1677  0054  3A00               	xorlw	0
  1678  0055  1903               	skipnz
  1679  0056  2873               	goto	l2026
  1680  0057  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1681  005C  3A06               	xorlw	6
  1682  005D  1D03               	skipz
  1683  005E  2873               	goto	l2026
  1684                           
  1685                           ;Main Card V10.0.c: 218: {
  1686                           ;Main Card V10.0.c: 219: intBlinkCycle = 1;
  1687  005F  3001               	movlw	1
  1688  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1689  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1690  0062  00E8               	movwf	_intBlinkCycle
  1691  0063  3000               	movlw	0
  1692  0064  00E9               	movwf	_intBlinkCycle+1
  1693                           
  1694                           ;Main Card V10.0.c: 220: intBlinkCounter = 0;
  1695  0065  1683               	bsf	3,5	;RP0=1, select bank1
  1696  0066  1303               	bcf	3,6	;RP1=0, select bank1
  1697  0067  01B1               	clrf	_intBlinkCounter^(0+128)
  1698  0068  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1699                           
  1700                           ;Main Card V10.0.c: 221: DelayDs(100);
  1701  0069  3064               	movlw	100
  1702  006A  1283               	bcf	3,5	;RP0=0, select bank0
  1703  006B  1303               	bcf	3,6	;RP1=0, select bank0
  1704  006C  00A0               	movwf	DelayDs@cnt
  1705  006D  3000               	movlw	0
  1706  006E  00A1               	movwf	DelayDs@cnt+1
  1707  006F  120A  158A  2540   	fcall	_DelayDs
  1708                           
  1709                           ;Main Card V10.0.c: 222: }
  1710  0072  0008               	return
  1711  0073                     l2026:	
  1712                           
  1713                           ;Main Card V10.0.c: 223: else if((strstr(TransmittedString, "N2BLINK")) && (OperationMod
      +                          e() == 7))
  1714  0073  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1715  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1716  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1717  0076  00BC               	movwf	??_TransmittedDataHandler
  1718  0077  083C               	movf	??_TransmittedDataHandler,w
  1719  0078  00AE               	movwf	strstr@s2
  1720  0079  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1721  007A  120A  158A  270A  120A  118A  	fcall	_strstr
  1722  007F  3A00               	xorlw	0
  1723  0080  1903               	skipnz
  1724  0081  289E               	goto	l2036
  1725  0082  120A  158A  2436  120A  118A  	fcall	_OperationMode
  1726  0087  3A07               	xorlw	7
  1727  0088  1D03               	skipz
  1728  0089  289E               	goto	l2036
  1729                           
  1730                           ;Main Card V10.0.c: 224: {
  1731                           ;Main Card V10.0.c: 225: intBlinkCycle = 1;
  1732  008A  3001               	movlw	1
  1733  008B  1283               	bcf	3,5	;RP0=0, select bank0
  1734  008C  1303               	bcf	3,6	;RP1=0, select bank0
  1735  008D  00E8               	movwf	_intBlinkCycle
  1736  008E  3000               	movlw	0
  1737  008F  00E9               	movwf	_intBlinkCycle+1
  1738                           
  1739                           ;Main Card V10.0.c: 226: intBlinkCounter = 0;
  1740  0090  1683               	bsf	3,5	;RP0=1, select bank1
  1741  0091  1303               	bcf	3,6	;RP1=0, select bank1
  1742  0092  01B1               	clrf	_intBlinkCounter^(0+128)
  1743  0093  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  1744                           
  1745                           ;Main Card V10.0.c: 227: DelayDs(100);
  1746  0094  3064               	movlw	100
  1747  0095  1283               	bcf	3,5	;RP0=0, select bank0
  1748  0096  1303               	bcf	3,6	;RP1=0, select bank0
  1749  0097  00A0               	movwf	DelayDs@cnt
  1750  0098  3000               	movlw	0
  1751  0099  00A1               	movwf	DelayDs@cnt+1
  1752  009A  120A  158A  2540   	fcall	_DelayDs
  1753                           
  1754                           ;Main Card V10.0.c: 228: }
  1755  009D  0008               	return
  1756  009E                     l2036:	
  1757                           
  1758                           ;Main Card V10.0.c: 229: else if((strstr(TransmittedString,"FLASHL")))
  1759  009E  3082               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1760  009F  1283               	bcf	3,5	;RP0=0, select bank0
  1761  00A0  1303               	bcf	3,6	;RP1=0, select bank0
  1762  00A1  00BC               	movwf	??_TransmittedDataHandler
  1763  00A2  083C               	movf	??_TransmittedDataHandler,w
  1764  00A3  00AE               	movwf	strstr@s2
  1765  00A4  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1766  00A5  120A  158A  270A  120A  118A  	fcall	_strstr
  1767  00AA  3A00               	xorlw	0
  1768  00AB  1903               	skipnz
  1769  00AC  28C4               	goto	l2044
  1770                           
  1771                           ;Main Card V10.0.c: 230: {
  1772                           ;Main Card V10.0.c: 231: PORTCbits.RC2 = 1;
  1773  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1774  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  1775  00AF  1507               	bsf	7,2	;volatile
  1776                           
  1777                           ;Main Card V10.0.c: 232: DelayDs(10);
  1778  00B0  300A               	movlw	10
  1779  00B1  00A0               	movwf	DelayDs@cnt
  1780  00B2  3000               	movlw	0
  1781  00B3  00A1               	movwf	DelayDs@cnt+1
  1782  00B4  120A  158A  2540  120A  118A  	fcall	_DelayDs
  1783                           
  1784                           ;Main Card V10.0.c: 233: PORTCbits.RC2 = 0;
  1785  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1786  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1787  00BB  1107               	bcf	7,2	;volatile
  1788                           
  1789                           ;Main Card V10.0.c: 234: DelayDs(5);
  1790  00BC  3005               	movlw	5
  1791  00BD  00A0               	movwf	DelayDs@cnt
  1792  00BE  3000               	movlw	0
  1793  00BF  00A1               	movwf	DelayDs@cnt+1
  1794  00C0  120A  158A  2540   	fcall	_DelayDs
  1795                           
  1796                           ;Main Card V10.0.c: 235: }
  1797  00C3  0008               	return
  1798  00C4                     l2044:	
  1799                           
  1800                           ;Main Card V10.0.c: 236: else if((strstr(TransmittedString,"FLASHB")))
  1801  00C4  3074               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1802  00C5  1283               	bcf	3,5	;RP0=0, select bank0
  1803  00C6  1303               	bcf	3,6	;RP1=0, select bank0
  1804  00C7  00BC               	movwf	??_TransmittedDataHandler
  1805  00C8  083C               	movf	??_TransmittedDataHandler,w
  1806  00C9  00AE               	movwf	strstr@s2
  1807  00CA  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1808  00CB  120A  158A  270A  120A  118A  	fcall	_strstr
  1809  00D0  3A00               	xorlw	0
  1810  00D1  1903               	skipnz
  1811  00D2  28EA               	goto	l2052
  1812                           
  1813                           ;Main Card V10.0.c: 237: {
  1814                           ;Main Card V10.0.c: 238: PORTCbits.RC1 = 1;
  1815  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  1816  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  1817  00D5  1487               	bsf	7,1	;volatile
  1818                           
  1819                           ;Main Card V10.0.c: 239: DelayDs(10);
  1820  00D6  300A               	movlw	10
  1821  00D7  00A0               	movwf	DelayDs@cnt
  1822  00D8  3000               	movlw	0
  1823  00D9  00A1               	movwf	DelayDs@cnt+1
  1824  00DA  120A  158A  2540  120A  118A  	fcall	_DelayDs
  1825                           
  1826                           ;Main Card V10.0.c: 240: PORTCbits.RC1 = 0;
  1827  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  1828  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  1829  00E1  1087               	bcf	7,1	;volatile
  1830                           
  1831                           ;Main Card V10.0.c: 241: DelayDs(5);
  1832  00E2  3005               	movlw	5
  1833  00E3  00A0               	movwf	DelayDs@cnt
  1834  00E4  3000               	movlw	0
  1835  00E5  00A1               	movwf	DelayDs@cnt+1
  1836  00E6  120A  158A  2540   	fcall	_DelayDs
  1837                           
  1838                           ;Main Card V10.0.c: 242: }
  1839  00E9  0008               	return
  1840  00EA                     l2052:	
  1841                           
  1842                           ;Main Card V10.0.c: 243: else if((strstr(TransmittedString,"SENSVAL")))
  1843  00EA  3065               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1844  00EB  1283               	bcf	3,5	;RP0=0, select bank0
  1845  00EC  1303               	bcf	3,6	;RP1=0, select bank0
  1846  00ED  00BC               	movwf	??_TransmittedDataHandler
  1847  00EE  083C               	movf	??_TransmittedDataHandler,w
  1848  00EF  00AE               	movwf	strstr@s2
  1849  00F0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1850  00F1  120A  158A  270A  120A  118A  	fcall	_strstr
  1851  00F6  3A00               	xorlw	0
  1852  00F7  1903               	skipnz
  1853  00F8  290C               	goto	l2058
  1854                           
  1855                           ;Main Card V10.0.c: 244: {
  1856                           ;Main Card V10.0.c: 245: unsigned char slask[8];
  1857                           ;Main Card V10.0.c: 246: slask[0] = AnalogValue(0);
  1858  00F9  3000               	movlw	0
  1859  00FA  120A  158A  2564  120A  118A  	fcall	_AnalogValue
  1860  00FF  1283               	bcf	3,5	;RP0=0, select bank0
  1861  0100  1303               	bcf	3,6	;RP1=0, select bank0
  1862  0101  00BC               	movwf	??_TransmittedDataHandler
  1863  0102  083C               	movf	??_TransmittedDataHandler,w
  1864  0103  00BD               	movwf	TransmittedDataHandler@slask
  1865                           
  1866                           ;Main Card V10.0.c: 247: TransmittString(slask);
  1867  0104  303D               	movlw	(low (TransmittedDataHandler@slask| 0))& (0+255)
  1868  0105  00B5               	movwf	TransmittString@dataString
  1869  0106  3000               	movlw	0
  1870  0107  00B6               	movwf	TransmittString@dataString+1
  1871  0108  120A  118A  23D7   	fcall	_TransmittString
  1872                           
  1873                           ;Main Card V10.0.c: 248: }
  1874  010B  0008               	return
  1875  010C                     l2058:	
  1876                           
  1877                           ;Main Card V10.0.c: 249: else if((strstr(TransmittedString,"POTVAL")))
  1878  010C  307B               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1879  010D  1283               	bcf	3,5	;RP0=0, select bank0
  1880  010E  1303               	bcf	3,6	;RP1=0, select bank0
  1881  010F  00BC               	movwf	??_TransmittedDataHandler
  1882  0110  083C               	movf	??_TransmittedDataHandler,w
  1883  0111  00AE               	movwf	strstr@s2
  1884  0112  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1885  0113  120A  158A  270A  120A  118A  	fcall	_strstr
  1886  0118  3A00               	xorlw	0
  1887  0119  1903               	skipnz
  1888  011A  292E               	goto	l2064
  1889                           
  1890                           ;Main Card V10.0.c: 250: {
  1891                           ;Main Card V10.0.c: 251: unsigned char slask[8];
  1892                           ;Main Card V10.0.c: 252: slask[0] = AnalogValue(3);
  1893  011B  3003               	movlw	3
  1894  011C  120A  158A  2564  120A  118A  	fcall	_AnalogValue
  1895  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1896  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1897  0123  00BC               	movwf	??_TransmittedDataHandler
  1898  0124  083C               	movf	??_TransmittedDataHandler,w
  1899  0125  00C5               	movwf	TransmittedDataHandler@slask_696
  1900                           
  1901                           ;Main Card V10.0.c: 253: TransmittString(slask);
  1902  0126  3045               	movlw	(low (TransmittedDataHandler@slask_696| 0))& (0+255)
  1903  0127  00B5               	movwf	TransmittString@dataString
  1904  0128  3000               	movlw	0
  1905  0129  00B6               	movwf	TransmittString@dataString+1
  1906  012A  120A  118A  23D7   	fcall	_TransmittString
  1907                           
  1908                           ;Main Card V10.0.c: 254: }
  1909  012D  0008               	return
  1910  012E                     l2064:	
  1911                           
  1912                           ;Main Card V10.0.c: 255: else if((strstr(TransmittedString,"DARKCALC")))
  1913  012E  3044               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1914  012F  1283               	bcf	3,5	;RP0=0, select bank0
  1915  0130  1303               	bcf	3,6	;RP1=0, select bank0
  1916  0131  00BC               	movwf	??_TransmittedDataHandler
  1917  0132  083C               	movf	??_TransmittedDataHandler,w
  1918  0133  00AE               	movwf	strstr@s2
  1919  0134  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1920  0135  120A  158A  270A  120A  118A  	fcall	_strstr
  1921  013A  3A00               	xorlw	0
  1922  013B  1903               	skipnz
  1923  013C  2959               	goto	l2074
  1924                           
  1925                           ;Main Card V10.0.c: 256: {
  1926                           ;Main Card V10.0.c: 257: DarknessCheck();
  1927  013D  120A  158A  258D  120A  118A  	fcall	_DarknessCheck
  1928                           
  1929                           ;Main Card V10.0.c: 258: if(bDark)
  1930  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0144  086D               	movf	_bDark,w
  1933  0145  1903               	btfsc	3,2
  1934  0146  294F               	goto	l2072
  1935                           
  1936                           ;Main Card V10.0.c: 259: TransmittString("It's Dark    ");
  1937  0147  3036               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1938  0148  00B5               	movwf	TransmittString@dataString
  1939  0149  3080               	movlw	128
  1940  014A  00B6               	movwf	TransmittString@dataString+1
  1941  014B  120A  118A  23D7   	fcall	_TransmittString
  1942  014E  0008               	return
  1943  014F                     l2072:	
  1944                           
  1945                           ;Main Card V10.0.c: 260: else
  1946                           ;Main Card V10.0.c: 261: TransmittString("Not Dark     ");
  1947  014F  3028               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1948  0150  1283               	bcf	3,5	;RP0=0, select bank0
  1949  0151  1303               	bcf	3,6	;RP1=0, select bank0
  1950  0152  00B5               	movwf	TransmittString@dataString
  1951  0153  3080               	movlw	128
  1952  0154  00B6               	movwf	TransmittString@dataString+1
  1953  0155  120A  118A  23D7   	fcall	_TransmittString
  1954                           
  1955                           ;Main Card V10.0.c: 262: }
  1956  0158  0008               	return
  1957  0159                     l2074:	
  1958                           
  1959                           ;Main Card V10.0.c: 263: else if((strstr(TransmittedString,"STATE?")))
  1960  0159  306D               	movlw	(low ((STR_10-__stringbase)| (0+32768)))& (0+255)
  1961  015A  1283               	bcf	3,5	;RP0=0, select bank0
  1962  015B  1303               	bcf	3,6	;RP1=0, select bank0
  1963  015C  00BC               	movwf	??_TransmittedDataHandler
  1964  015D  083C               	movf	??_TransmittedDataHandler,w
  1965  015E  00AE               	movwf	strstr@s2
  1966  015F  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  1967  0160  120A  158A  270A  120A  118A  	fcall	_strstr
  1968  0165  3A00               	xorlw	0
  1969  0166  1903               	skipnz
  1970  0167  297F               	goto	l2082
  1971                           
  1972                           ;Main Card V10.0.c: 264: {
  1973                           ;Main Card V10.0.c: 265: if(bValueFromPot == TRUE)
  1974  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1975  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1976  016A  036F               	decf	_bValueFromPot,w
  1977  016B  1D03               	btfss	3,2
  1978  016C  2975               	goto	l2080
  1979                           
  1980                           ;Main Card V10.0.c: 266: TransmittString("Pot");
  1981  016D  3098               	movlw	(low ((STR_11-__stringbase)| (0+32768)))& (0+255)
  1982  016E  00B5               	movwf	TransmittString@dataString
  1983  016F  3080               	movlw	128
  1984  0170  00B6               	movwf	TransmittString@dataString+1
  1985  0171  120A  118A  23D7   	fcall	_TransmittString
  1986  0174  0008               	return
  1987  0175                     l2080:	
  1988                           
  1989                           ;Main Card V10.0.c: 267: else
  1990                           ;Main Card V10.0.c: 268: TransmittString("PIC");
  1991  0175  3094               	movlw	(low ((STR_12-__stringbase)| (0+32768)))& (0+255)
  1992  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1993  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1994  0178  00B5               	movwf	TransmittString@dataString
  1995  0179  3080               	movlw	128
  1996  017A  00B6               	movwf	TransmittString@dataString+1
  1997  017B  120A  118A  23D7   	fcall	_TransmittString
  1998                           
  1999                           ;Main Card V10.0.c: 270: }
  2000  017E  0008               	return
  2001  017F                     l2082:	
  2002                           
  2003                           ;Main Card V10.0.c: 271: else if((strstr(TransmittedString,"CHSTATE")))
  2004  017F  304D               	movlw	(low ((STR_13-__stringbase)| (0+32768)))& (0+255)
  2005  0180  1283               	bcf	3,5	;RP0=0, select bank0
  2006  0181  1303               	bcf	3,6	;RP1=0, select bank0
  2007  0182  00BC               	movwf	??_TransmittedDataHandler
  2008  0183  083C               	movf	??_TransmittedDataHandler,w
  2009  0184  00AE               	movwf	strstr@s2
  2010  0185  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2011  0186  120A  158A  270A  120A  118A  	fcall	_strstr
  2012  018B  3A00               	xorlw	0
  2013  018C  1903               	skipnz
  2014  018D  2998               	goto	l2088
  2015                           
  2016                           ;Main Card V10.0.c: 272: {
  2017                           ;Main Card V10.0.c: 273: if(bValueFromPot== TRUE)
  2018  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2019  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2020  0190  036F               	decf	_bValueFromPot,w
  2021  0191  1D03               	btfss	3,2
  2022  0192  2995               	goto	l220
  2023                           
  2024                           ;Main Card V10.0.c: 274: bValueFromPot= FALSE;
  2025  0193  01EF               	clrf	_bValueFromPot
  2026  0194  0008               	return
  2027  0195                     l220:	
  2028                           
  2029                           ;Main Card V10.0.c: 275: else
  2030                           ;Main Card V10.0.c: 276: bValueFromPot=TRUE;
  2031  0195  01EF               	clrf	_bValueFromPot
  2032  0196  0AEF               	incf	_bValueFromPot,f
  2033                           
  2034                           ;Main Card V10.0.c: 277: }
  2035  0197  0008               	return
  2036  0198                     l2088:	
  2037                           
  2038                           ;Main Card V10.0.c: 279: else if((strstr(TransmittedString,"RMDV")))
  2039  0198  308F               	movlw	(low ((STR_14-__stringbase)| (0+32768)))& (0+255)
  2040  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2041  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2042  019B  00BC               	movwf	??_TransmittedDataHandler
  2043  019C  083C               	movf	??_TransmittedDataHandler,w
  2044  019D  00AE               	movwf	strstr@s2
  2045  019E  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2046  019F  120A  158A  270A  120A  118A  	fcall	_strstr
  2047  01A4  3A00               	xorlw	0
  2048  01A5  1903               	skipnz
  2049  01A6  29BA               	goto	l2094
  2050                           
  2051                           ;Main Card V10.0.c: 280: {
  2052                           ;Main Card V10.0.c: 281: unsigned char slask[8];
  2053                           ;Main Card V10.0.c: 282: slask[0] = eeprom_read(addressDarknessValue);
  2054  01A7  087C               	movf	_addressDarknessValue,w
  2055  01A8  120A  118A  25DB  120A  118A  	fcall	_eeprom_read
  2056  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  2057  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  2058  01AF  00BC               	movwf	??_TransmittedDataHandler
  2059  01B0  083C               	movf	??_TransmittedDataHandler,w
  2060  01B1  00CD               	movwf	TransmittedDataHandler@slask_705
  2061                           
  2062                           ;Main Card V10.0.c: 283: TransmittString(slask);
  2063  01B2  304D               	movlw	(low (TransmittedDataHandler@slask_705| 0))& (0+255)
  2064  01B3  00B5               	movwf	TransmittString@dataString
  2065  01B4  3000               	movlw	0
  2066  01B5  00B6               	movwf	TransmittString@dataString+1
  2067  01B6  120A  118A  23D7   	fcall	_TransmittString
  2068                           
  2069                           ;Main Card V10.0.c: 285: }
  2070  01B9  0008               	return
  2071  01BA                     l2094:	
  2072                           
  2073                           ;Main Card V10.0.c: 287: else if((strstr(TransmittedString,"SETDV")))
  2074  01BA  3089               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  2075  01BB  1283               	bcf	3,5	;RP0=0, select bank0
  2076  01BC  1303               	bcf	3,6	;RP1=0, select bank0
  2077  01BD  00BC               	movwf	??_TransmittedDataHandler
  2078  01BE  083C               	movf	??_TransmittedDataHandler,w
  2079  01BF  00AE               	movwf	strstr@s2
  2080  01C0  30B9               	movlw	(low (_TransmittedString| 0))& (0+255)
  2081  01C1  120A  158A  270A  120A  118A  	fcall	_strstr
  2082  01C6  3A00               	xorlw	0
  2083  01C7  1903               	skipnz
  2084  01C8  0008               	return
  2085                           
  2086                           ;Main Card V10.0.c: 288: {
  2087                           ;Main Card V10.0.c: 290: int value;
  2088                           ;Main Card V10.0.c: 291: unsigned char slask[8];
  2089                           ;Main Card V10.0.c: 292: value = atoi(&TransmittedString[6]);
  2090  01C9  30BF               	movlw	(low ((_TransmittedString| 0+6)))& (0+255)
  2091  01CA  120A  118A  26AB  120A  118A  	fcall	_atoi
  2092  01CF  1283               	bcf	3,5	;RP0=0, select bank0
  2093  01D0  1303               	bcf	3,6	;RP1=0, select bank0
  2094  01D1  0827               	movf	?_atoi+1,w
  2095  01D2  00DE               	movwf	TransmittedDataHandler@value+1
  2096  01D3  0826               	movf	?_atoi,w
  2097  01D4  00DD               	movwf	TransmittedDataHandler@value
  2098                           
  2099                           ;Main Card V10.0.c: 293: slask[0] = (unsigned char)value;
  2100  01D5  085D               	movf	TransmittedDataHandler@value,w
  2101  01D6  00BC               	movwf	??_TransmittedDataHandler
  2102  01D7  083C               	movf	??_TransmittedDataHandler,w
  2103  01D8  00D5               	movwf	TransmittedDataHandler@slask_708
  2104                           
  2105                           ;Main Card V10.0.c: 294: TransmittString(slask);
  2106  01D9  3055               	movlw	(low (TransmittedDataHandler@slask_708| 0))& (0+255)
  2107  01DA  00B5               	movwf	TransmittString@dataString
  2108  01DB  3000               	movlw	0
  2109  01DC  00B6               	movwf	TransmittString@dataString+1
  2110  01DD  120A  118A  23D7  120A  118A  	fcall	_TransmittString
  2111                           
  2112                           ;Main Card V10.0.c: 295: eeprom_write(addressDarknessValue,(unsigned char)value);
  2113  01E2  1283               	bcf	3,5	;RP0=0, select bank0
  2114  01E3  1303               	bcf	3,6	;RP1=0, select bank0
  2115  01E4  085D               	movf	TransmittedDataHandler@value,w
  2116  01E5  00BC               	movwf	??_TransmittedDataHandler
  2117  01E6  083C               	movf	??_TransmittedDataHandler,w
  2118  01E7  00A0               	movwf	eeprom_write@value
  2119  01E8  087C               	movf	_addressDarknessValue,w
  2120  01E9  120A  158A  25E2   	fcall	_eeprom_write
  2121  01EC  0008               	return
  2122  01ED                     __end_of_TransmittedDataHandler:	
  2123                           
  2124                           	psect	text5
  2125  0F0A                     __ptext5:	
  2126 ;; *************** function _strstr *****************
  2127 ;; Defined at:
  2128 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strstr.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  s1              1    wreg     PTR const unsigned char 
  2131 ;;		 -> NULL(0), TransmittedString(30), 
  2132 ;;  s2              1   14[BANK0 ] PTR const unsigned char 
  2133 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2134 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2135 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  s1              1   18[BANK0 ] PTR const unsigned char 
  2138 ;;		 -> NULL(0), TransmittedString(30), 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      PTR unsigned char 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2148 ;;      Params:         0       1       0       0       0
  2149 ;;      Locals:         0       1       0       0       0
  2150 ;;      Temps:          0       3       0       0       0
  2151 ;;      Totals:         0       5       0       0       0
  2152 ;;Total ram usage:        5 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    3
  2155 ;; This function calls:
  2156 ;;		_strchr
  2157 ;;		_strlen
  2158 ;;		_strncmp
  2159 ;; This function is called by:
  2160 ;;		_TransmittedDataHandler
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _strstr
  2166  0F0A                     _strstr:	
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _strstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2170                           ;strstr@s1 stored from wreg
  2171  0F0A  1283               	bcf	3,5	;RP0=0, select bank0
  2172  0F0B  1303               	bcf	3,6	;RP1=0, select bank0
  2173  0F0C  00B2               	movwf	strstr@s1
  2174  0F0D  2F45               	goto	l1884
  2175  0F0E                     l1876:	
  2176  0F0E  082E               	movf	strstr@s2,w
  2177  0F0F  00AF               	movwf	??_strstr
  2178  0F10  082F               	movf	??_strstr,w
  2179  0F11  00A8               	movwf	strncmp@s2
  2180  0F12  082E               	movf	strstr@s2,w
  2181  0F13  120A  158A  25B6  120A  158A  	fcall	_strlen
  2182  0F18  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0F19  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0F1A  0821               	movf	?_strlen+1,w
  2185  0F1B  00AA               	movwf	strncmp@len+1
  2186  0F1C  0820               	movf	?_strlen,w
  2187  0F1D  00A9               	movwf	strncmp@len
  2188  0F1E  0832               	movf	strstr@s1,w
  2189  0F1F  120A  158A  26C6  120A  158A  	fcall	_strncmp
  2190  0F24  1283               	bcf	3,5	;RP0=0, select bank0
  2191  0F25  1303               	bcf	3,6	;RP1=0, select bank0
  2192  0F26  0828               	movf	?_strncmp,w
  2193  0F27  0429               	iorwf	?_strncmp+1,w
  2194  0F28  1D03               	btfss	3,2
  2195  0F29  2F2C               	goto	l1882
  2196  0F2A  0832               	movf	strstr@s1,w
  2197  0F2B  0008               	return
  2198  0F2C                     l1882:	
  2199  0F2C  082E               	movf	strstr@s2,w
  2200  0F2D  0084               	movwf	4
  2201  0F2E  120A  118A  260A  120A  158A  	fcall	stringdir
  2202  0F33  00AF               	movwf	??_strstr
  2203  0F34  01B0               	clrf	??_strstr+1
  2204  0F35  082F               	movf	??_strstr,w
  2205  0F36  00A0               	movwf	strchr@chr
  2206  0F37  0830               	movf	??_strstr+1,w
  2207  0F38  00A1               	movwf	strchr@chr+1
  2208  0F39  0832               	movf	strstr@s1,w
  2209  0F3A  3E01               	addlw	1
  2210  0F3B  120A  158A  24B8  120A  158A  	fcall	_strchr
  2211  0F40  1283               	bcf	3,5	;RP0=0, select bank0
  2212  0F41  1303               	bcf	3,6	;RP1=0, select bank0
  2213  0F42  00B1               	movwf	??_strstr+2
  2214  0F43  0831               	movf	??_strstr+2,w
  2215  0F44  00B2               	movwf	strstr@s1
  2216  0F45                     l1884:	
  2217  0F45  0832               	movf	strstr@s1,w
  2218  0F46  1903               	btfsc	3,2
  2219  0F47  2F4E               	goto	l1888
  2220  0F48  0832               	movf	strstr@s1,w
  2221  0F49  0084               	movwf	4
  2222  0F4A  1383               	bcf	3,7	;select IRP bank0
  2223  0F4B  0800               	movf	0,w
  2224  0F4C  1D03               	btfss	3,2
  2225  0F4D  2F0E               	goto	l1876
  2226  0F4E                     l1888:	
  2227  0F4E  3000               	movlw	0
  2228  0F4F  0008               	return
  2229  0F50                     __end_of_strstr:	
  2230                           
  2231                           	psect	text6
  2232  0EC6                     __ptext6:	
  2233 ;; *************** function _strncmp *****************
  2234 ;; Defined at:
  2235 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strncmp.c"
  2236 ;; Parameters:    Size  Location     Type
  2237 ;;  s1              1    wreg     PTR const unsigned char 
  2238 ;;		 -> NULL(0), TransmittedString(30), 
  2239 ;;  s2              1    8[BANK0 ] PTR const unsigned char 
  2240 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2241 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2242 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2243 ;;  len             2    9[BANK0 ] unsigned int 
  2244 ;; Auto vars:     Size  Location     Type
  2245 ;;  s1              1   13[BANK0 ] PTR const unsigned char 
  2246 ;;		 -> NULL(0), TransmittedString(30), 
  2247 ;; Return value:  Size  Location     Type
  2248 ;;                  2    8[BANK0 ] int 
  2249 ;; Registers used:
  2250 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2251 ;; Tracked objects:
  2252 ;;		On entry : 0/0
  2253 ;;		On exit  : 0/0
  2254 ;;		Unchanged: 0/0
  2255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2256 ;;      Params:         0       3       0       0       0
  2257 ;;      Locals:         0       1       0       0       0
  2258 ;;      Temps:          0       2       0       0       0
  2259 ;;      Totals:         0       6       0       0       0
  2260 ;;Total ram usage:        6 bytes
  2261 ;; Hardware stack levels used:    1
  2262 ;; Hardware stack levels required when called:    2
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		_strstr
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function _strncmp
  2272  0EC6                     _strncmp:	
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in _strncmp: [wreg-fsr0h+status,2+status,0+pclath]
  2276                           ;strncmp@s1 stored from wreg
  2277  0EC6  1283               	bcf	3,5	;RP0=0, select bank0
  2278  0EC7  1303               	bcf	3,6	;RP1=0, select bank0
  2279  0EC8  00AD               	movwf	strncmp@s1
  2280  0EC9                     l904:	
  2281  0EC9  3001               	movlw	1
  2282  0ECA  02A9               	subwf	strncmp@len,f
  2283  0ECB  3000               	movlw	0
  2284  0ECC  1C03               	skipc
  2285  0ECD  03AA               	decf	strncmp@len+1,f
  2286  0ECE  02AA               	subwf	strncmp@len+1,f
  2287  0ECF  0A29               	incf	strncmp@len,w
  2288  0ED0  1903               	btfsc	3,2
  2289  0ED1  0A2A               	incf	strncmp@len+1,w
  2290  0ED2  1903               	btfsc	3,2
  2291  0ED3  2F07               	goto	l1852
  2292  0ED4  082D               	movf	strncmp@s1,w
  2293  0ED5  0084               	movwf	4
  2294  0ED6  1383               	bcf	3,7	;select IRP bank0
  2295  0ED7  0800               	movf	0,w
  2296  0ED8  1903               	btfsc	3,2
  2297  0ED9  2EE8               	goto	l1846
  2298  0EDA  0828               	movf	strncmp@s2,w
  2299  0EDB  0084               	movwf	4
  2300  0EDC  120A  118A  260A  120A  158A  	fcall	stringdir
  2301  0EE1  00AB               	movwf	??_strncmp
  2302  0EE2  082D               	movf	strncmp@s1,w
  2303  0EE3  0084               	movwf	4
  2304  0EE4  0800               	movf	0,w
  2305  0EE5  062B               	xorwf	??_strncmp,w
  2306  0EE6  1903               	skipnz
  2307  0EE7  2EFE               	goto	l1850
  2308  0EE8                     l1846:	
  2309  0EE8  0828               	movf	strncmp@s2,w
  2310  0EE9  0084               	movwf	4
  2311  0EEA  120A  118A  260A   	fcall	stringdir
  2312  0EED  00AB               	movwf	??_strncmp
  2313  0EEE  01AC               	clrf	??_strncmp+1
  2314  0EEF  09AB               	comf	??_strncmp,f
  2315  0EF0  09AC               	comf	??_strncmp+1,f
  2316  0EF1  0AAB               	incf	??_strncmp,f
  2317  0EF2  1903               	skipnz
  2318  0EF3  0AAC               	incf	??_strncmp+1,f
  2319  0EF4  082D               	movf	strncmp@s1,w
  2320  0EF5  0084               	movwf	4
  2321  0EF6  0800               	movf	0,w
  2322  0EF7  072B               	addwf	??_strncmp,w
  2323  0EF8  00A8               	movwf	?_strncmp
  2324  0EF9  082C               	movf	??_strncmp+1,w
  2325  0EFA  1803               	skipnc
  2326  0EFB  0A2C               	incf	??_strncmp+1,w
  2327  0EFC  00A9               	movwf	?_strncmp+1
  2328  0EFD  0008               	return
  2329  0EFE                     l1850:	
  2330  0EFE  3001               	movlw	1
  2331  0EFF  00AB               	movwf	??_strncmp
  2332  0F00  082B               	movf	??_strncmp,w
  2333  0F01  07AD               	addwf	strncmp@s1,f
  2334  0F02  3001               	movlw	1
  2335  0F03  00AB               	movwf	??_strncmp
  2336  0F04  082B               	movf	??_strncmp,w
  2337  0F05  07A8               	addwf	strncmp@s2,f
  2338  0F06  2EC9               	goto	l904
  2339  0F07                     l1852:	
  2340  0F07  01A8               	clrf	?_strncmp
  2341  0F08  01A9               	clrf	?_strncmp+1
  2342  0F09  0008               	return
  2343  0F0A                     __end_of_strncmp:	
  2344                           
  2345                           	psect	text7
  2346  0DB6                     __ptext7:	
  2347 ;; *************** function _strlen *****************
  2348 ;; Defined at:
  2349 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strlen.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  s               1    wreg     PTR const unsigned char 
  2352 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2353 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2354 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2355 ;; Auto vars:     Size  Location     Type
  2356 ;;  s               1    6[BANK0 ] PTR const unsigned char 
  2357 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2358 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2359 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2360 ;;  cp              1    7[BANK0 ] PTR const unsigned char 
  2361 ;;		 -> STR_15(6), STR_14(5), STR_13(8), STR_10(7), 
  2362 ;;		 -> STR_7(9), STR_6(7), STR_5(8), STR_4(7), 
  2363 ;;		 -> STR_3(7), STR_2(8), STR_1(8), 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  2    0[BANK0 ] unsigned int 
  2366 ;; Registers used:
  2367 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       2       0       0       0
  2374 ;;      Locals:         0       2       0       0       0
  2375 ;;      Temps:          0       4       0       0       0
  2376 ;;      Totals:         0       8       0       0       0
  2377 ;;Total ram usage:        8 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    2
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_strstr
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _strlen
  2389  0DB6                     _strlen:	
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _strlen: [wreg-fsr0h+status,2+status,0+pclath]
  2393                           ;strlen@s stored from wreg
  2394  0DB6  1283               	bcf	3,5	;RP0=0, select bank0
  2395  0DB7  1303               	bcf	3,6	;RP1=0, select bank0
  2396  0DB8  00A6               	movwf	strlen@s
  2397  0DB9  0826               	movf	strlen@s,w
  2398  0DBA  00A2               	movwf	??_strlen
  2399  0DBB  0822               	movf	??_strlen,w
  2400  0DBC  00A7               	movwf	strlen@cp
  2401  0DBD                     l1834:	
  2402  0DBD  0827               	movf	strlen@cp,w
  2403  0DBE  0084               	movwf	4
  2404  0DBF  120A  118A  260A  120A  158A  	fcall	stringdir
  2405  0DC4  3A00               	xorlw	0
  2406  0DC5  1903               	btfsc	3,2
  2407  0DC6  2DCC               	goto	l1836
  2408  0DC7  3001               	movlw	1
  2409  0DC8  00A2               	movwf	??_strlen
  2410  0DC9  0822               	movf	??_strlen,w
  2411  0DCA  07A7               	addwf	strlen@cp,f
  2412  0DCB  2DBD               	goto	l1834
  2413  0DCC                     l1836:	
  2414  0DCC  0826               	movf	strlen@s,w
  2415  0DCD  00A2               	movwf	??_strlen
  2416  0DCE  3080               	movlw	128
  2417  0DCF  00A3               	movwf	??_strlen+1
  2418  0DD0  09A2               	comf	??_strlen,f
  2419  0DD1  09A3               	comf	??_strlen+1,f
  2420  0DD2  0AA2               	incf	??_strlen,f
  2421  0DD3  1903               	skipnz
  2422  0DD4  0AA3               	incf	??_strlen+1,f
  2423  0DD5  0827               	movf	strlen@cp,w
  2424  0DD6  00A4               	movwf	??_strlen+2
  2425  0DD7  3080               	movlw	128
  2426  0DD8  00A5               	movwf	??_strlen+3
  2427  0DD9  0822               	movf	??_strlen,w
  2428  0DDA  0724               	addwf	??_strlen+2,w
  2429  0DDB  00A0               	movwf	?_strlen
  2430  0DDC  0823               	movf	??_strlen+1,w
  2431  0DDD  1803               	skipnc
  2432  0DDE  0A23               	incf	??_strlen+1,w
  2433  0DDF  0725               	addwf	??_strlen+3,w
  2434  0DE0  00A1               	movwf	?_strlen+1
  2435  0DE1  0008               	return
  2436  0DE2                     __end_of_strlen:	
  2437                           
  2438                           	psect	text8
  2439  0CB8                     __ptext8:	
  2440 ;; *************** function _strchr *****************
  2441 ;; Defined at:
  2442 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\strchr.c"
  2443 ;; Parameters:    Size  Location     Type
  2444 ;;  ptr             1    wreg     PTR const unsigned char 
  2445 ;;		 -> NULL(0), TransmittedString(30), 
  2446 ;;  chr             2    0[BANK0 ] int 
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  ptr             1    2[BANK0 ] PTR const unsigned char 
  2449 ;;		 -> NULL(0), TransmittedString(30), 
  2450 ;; Return value:  Size  Location     Type
  2451 ;;                  1    wreg      PTR unsigned char 
  2452 ;; Registers used:
  2453 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2454 ;; Tracked objects:
  2455 ;;		On entry : 0/0
  2456 ;;		On exit  : 0/0
  2457 ;;		Unchanged: 0/0
  2458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2459 ;;      Params:         0       2       0       0       0
  2460 ;;      Locals:         0       1       0       0       0
  2461 ;;      Temps:          0       0       0       0       0
  2462 ;;      Totals:         0       3       0       0       0
  2463 ;;Total ram usage:        3 bytes
  2464 ;; Hardware stack levels used:    1
  2465 ;; Hardware stack levels required when called:    2
  2466 ;; This function calls:
  2467 ;;		Nothing
  2468 ;; This function is called by:
  2469 ;;		_strstr
  2470 ;; This function uses a non-reentrant model
  2471 ;;
  2472                           
  2473                           
  2474                           ;psect for function _strchr
  2475  0CB8                     _strchr:	
  2476                           
  2477                           ;incstack = 0
  2478                           ; Regs used in _strchr: [wreg-fsr0h+status,2+status,0]
  2479                           ;strchr@ptr stored from wreg
  2480  0CB8  1283               	bcf	3,5	;RP0=0, select bank0
  2481  0CB9  1303               	bcf	3,6	;RP1=0, select bank0
  2482  0CBA  00A2               	movwf	strchr@ptr
  2483  0CBB                     l892:	
  2484  0CBB  0822               	movf	strchr@ptr,w
  2485  0CBC  0084               	movwf	4
  2486  0CBD  1383               	bcf	3,7	;select IRP bank0
  2487  0CBE  0800               	movf	0,w
  2488  0CBF  0620               	xorwf	strchr@chr,w
  2489  0CC0  1D03               	skipz
  2490  0CC1  2CC4               	goto	l1862
  2491  0CC2  0822               	movf	strchr@ptr,w
  2492  0CC3  0008               	return
  2493  0CC4                     l1862:	
  2494  0CC4  0822               	movf	strchr@ptr,w
  2495  0CC5  0084               	movwf	4
  2496  0CC6  3001               	movlw	1
  2497  0CC7  07A2               	addwf	strchr@ptr,f
  2498  0CC8  0800               	movf	0,w
  2499  0CC9  1D03               	btfss	3,2
  2500  0CCA  2CBB               	goto	l892
  2501  0CCB  3000               	movlw	0
  2502  0CCC  0008               	return
  2503  0CCD                     __end_of_strchr:	
  2504                           
  2505                           	psect	text9
  2506  0DE2                     __ptext9:	
  2507 ;; *************** function _eeprom_write *****************
  2508 ;; Defined at:
  2509 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eewrite.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;  addr            1    wreg     unsigned char 
  2512 ;;  value           1    0[BANK0 ] unsigned char 
  2513 ;; Auto vars:     Size  Location     Type
  2514 ;;  addr            1    2[BANK0 ] unsigned char 
  2515 ;; Return value:  Size  Location     Type
  2516 ;;                  1    wreg      void 
  2517 ;; Registers used:
  2518 ;;		wreg, status,2, status,0
  2519 ;; Tracked objects:
  2520 ;;		On entry : 0/0
  2521 ;;		On exit  : 0/0
  2522 ;;		Unchanged: 0/0
  2523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2524 ;;      Params:         0       1       0       0       0
  2525 ;;      Locals:         0       1       0       0       0
  2526 ;;      Temps:          0       1       0       0       0
  2527 ;;      Totals:         0       3       0       0       0
  2528 ;;Total ram usage:        3 bytes
  2529 ;; Hardware stack levels used:    1
  2530 ;; Hardware stack levels required when called:    2
  2531 ;; This function calls:
  2532 ;;		Nothing
  2533 ;; This function is called by:
  2534 ;;		_TransmittedDataHandler
  2535 ;; This function uses a non-reentrant model
  2536 ;;
  2537                           
  2538                           
  2539                           ;psect for function _eeprom_write
  2540  0DE2                     _eeprom_write:	
  2541                           
  2542                           ;incstack = 0
  2543                           ; Regs used in _eeprom_write: [wreg+status,2+status,0]
  2544                           ;eeprom_write@addr stored from wreg
  2545  0DE2  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0DE3  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0DE4  00A2               	movwf	eeprom_write@addr
  2548  0DE5                     l410:	
  2549  0DE5  1683               	bsf	3,5	;RP0=1, select bank3
  2550  0DE6  1703               	bsf	3,6	;RP1=1, select bank3
  2551  0DE7  188C               	btfsc	12,1	;volsfr
  2552  0DE8  2DE5               	goto	l410
  2553  0DE9  1283               	bcf	3,5	;RP0=0, select bank0
  2554  0DEA  1303               	bcf	3,6	;RP1=0, select bank0
  2555  0DEB  0822               	movf	eeprom_write@addr,w
  2556  0DEC  1283               	bcf	3,5	;RP0=0, select bank2
  2557  0DED  1703               	bsf	3,6	;RP1=1, select bank2
  2558  0DEE  008D               	movwf	13	;volatile
  2559  0DEF  1283               	bcf	3,5	;RP0=0, select bank0
  2560  0DF0  1303               	bcf	3,6	;RP1=0, select bank0
  2561  0DF1  0820               	movf	eeprom_write@value,w
  2562  0DF2  1283               	bcf	3,5	;RP0=0, select bank2
  2563  0DF3  1703               	bsf	3,6	;RP1=1, select bank2
  2564  0DF4  008C               	movwf	12	;volatile
  2565  0DF5  303F               	movlw	63
  2566  0DF6  1283               	bcf	3,5	;RP0=0, select bank0
  2567  0DF7  1303               	bcf	3,6	;RP1=0, select bank0
  2568  0DF8  00A1               	movwf	??_eeprom_write
  2569  0DF9  0821               	movf	??_eeprom_write,w
  2570  0DFA  1683               	bsf	3,5	;RP0=1, select bank3
  2571  0DFB  1703               	bsf	3,6	;RP1=1, select bank3
  2572  0DFC  058C               	andwf	12,f	;volsfr
  2573  0DFD  1283               	bcf	3,5	;RP0=0, select bank0
  2574  0DFE  1303               	bcf	3,6	;RP1=0, select bank0
  2575  0DFF  1003               	bcf	3,0	;volatile
  2576  0E00  1B8B               	btfsc	11,7	;volatile
  2577  0E01  1403               	bsf	3,0	;volatile
  2578  0E02  138B               	bcf	11,7	;volatile
  2579  0E03  1683               	bsf	3,5	;RP0=1, select bank3
  2580  0E04  1703               	bsf	3,6	;RP1=1, select bank3
  2581  0E05  150C               	bsf	12,2	;volsfr
  2582  0E06  3055               	movlw	85
  2583  0E07  008D               	movwf	13	;volsfr
  2584  0E08  30AA               	movlw	170
  2585  0E09  008D               	movwf	13	;volsfr
  2586  0E0A  148C               	bsf	12,1	;volsfr
  2587  0E0B  110C               	bcf	12,2	;volsfr
  2588  0E0C  1283               	bcf	3,5	;RP0=0, select bank0
  2589  0E0D  1303               	bcf	3,6	;RP1=0, select bank0
  2590  0E0E  1C03               	btfss	3,0	;volatile
  2591  0E0F  0008               	return
  2592  0E10  178B               	bsf	11,7	;volatile
  2593  0E11  0008               	return
  2594  0E12                     __end_of_eeprom_write:	
  2595                           
  2596                           	psect	text10
  2597  06AB                     __ptext10:	
  2598 ;; *************** function _atoi *****************
  2599 ;; Defined at:
  2600 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\atoi.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  s               1    wreg     PTR const unsigned char 
  2603 ;;		 -> TransmittedString(30), 
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;  s               1   13[BANK0 ] PTR const unsigned char 
  2606 ;;		 -> TransmittedString(30), 
  2607 ;;  a               2   11[BANK0 ] int 
  2608 ;;  sign            1   10[BANK0 ] unsigned char 
  2609 ;; Return value:  Size  Location     Type
  2610 ;;                  2    6[BANK0 ] int 
  2611 ;; Registers used:
  2612 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2613 ;; Tracked objects:
  2614 ;;		On entry : 0/0
  2615 ;;		On exit  : 0/0
  2616 ;;		Unchanged: 0/0
  2617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2618 ;;      Params:         0       2       0       0       0
  2619 ;;      Locals:         0       4       0       0       0
  2620 ;;      Temps:          0       2       0       0       0
  2621 ;;      Totals:         0       8       0       0       0
  2622 ;;Total ram usage:        8 bytes
  2623 ;; Hardware stack levels used:    1
  2624 ;; Hardware stack levels required when called:    3
  2625 ;; This function calls:
  2626 ;;		___wmul
  2627 ;;		_isdigit
  2628 ;; This function is called by:
  2629 ;;		_TransmittedDataHandler
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           
  2634                           ;psect for function _atoi
  2635  06AB                     _atoi:	
  2636                           
  2637                           ;incstack = 0
  2638                           ; Regs used in _atoi: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2639                           ;atoi@s stored from wreg
  2640  06AB  1283               	bcf	3,5	;RP0=0, select bank0
  2641  06AC  1303               	bcf	3,6	;RP1=0, select bank0
  2642  06AD  00AD               	movwf	atoi@s
  2643  06AE                     l1956:	
  2644  06AE  082D               	movf	atoi@s,w
  2645  06AF  0084               	movwf	4
  2646  06B0  3020               	movlw	32
  2647  06B1  1383               	bcf	3,7	;select IRP bank0
  2648  06B2  0600               	xorwf	0,w
  2649  06B3  1D03               	btfss	3,2
  2650  06B4  2EBA               	goto	l1958
  2651  06B5                     l1954:	
  2652  06B5  3001               	movlw	1
  2653  06B6  00A8               	movwf	??_atoi
  2654  06B7  0828               	movf	??_atoi,w
  2655  06B8  07AD               	addwf	atoi@s,f
  2656  06B9  2EAE               	goto	l1956
  2657  06BA                     l1958:	
  2658  06BA  082D               	movf	atoi@s,w
  2659  06BB  0084               	movwf	4
  2660  06BC  3009               	movlw	9
  2661  06BD  0600               	xorwf	0,w
  2662  06BE  1903               	btfsc	3,2
  2663  06BF  2EB5               	goto	l1954
  2664  06C0  01AB               	clrf	atoi@a
  2665  06C1  01AC               	clrf	atoi@a+1
  2666  06C2  01AA               	clrf	atoi@sign
  2667  06C3  082D               	movf	atoi@s,w
  2668  06C4  0084               	movwf	4
  2669  06C5  302D               	movlw	45
  2670  06C6  0600               	xorwf	0,w
  2671  06C7  1D03               	btfss	3,2
  2672  06C8  2ECE               	goto	l1966
  2673  06C9  3001               	movlw	1
  2674  06CA  00A8               	movwf	??_atoi
  2675  06CB  0828               	movf	??_atoi,w
  2676  06CC  07AA               	addwf	atoi@sign,f
  2677  06CD  2ED4               	goto	l1972
  2678  06CE                     l1966:	
  2679  06CE  082D               	movf	atoi@s,w
  2680  06CF  0084               	movwf	4
  2681  06D0  302B               	movlw	43
  2682  06D1  0600               	xorwf	0,w
  2683  06D2  1D03               	btfss	3,2
  2684  06D3  2ED8               	goto	l1974
  2685  06D4                     l1972:	
  2686  06D4  3001               	movlw	1
  2687  06D5  00A8               	movwf	??_atoi
  2688  06D6  0828               	movf	??_atoi,w
  2689  06D7  07AD               	addwf	atoi@s,f
  2690  06D8                     l1974:	
  2691  06D8  082D               	movf	atoi@s,w
  2692  06D9  0084               	movwf	4
  2693  06DA  0800               	movf	0,w
  2694  06DB  120A  158A  2474  120A  118A  	fcall	_isdigit
  2695  06E0  1C03               	btfss	3,0
  2696  06E1  2F06               	goto	l1976
  2697  06E2  1283               	bcf	3,5	;RP0=0, select bank0
  2698  06E3  1303               	bcf	3,6	;RP1=0, select bank0
  2699  06E4  082C               	movf	atoi@a+1,w
  2700  06E5  00A1               	movwf	___wmul@multiplier+1
  2701  06E6  082B               	movf	atoi@a,w
  2702  06E7  00A0               	movwf	___wmul@multiplier
  2703  06E8  300A               	movlw	10
  2704  06E9  00A2               	movwf	___wmul@multiplicand
  2705  06EA  3000               	movlw	0
  2706  06EB  00A3               	movwf	___wmul@multiplicand+1
  2707  06EC  120A  158A  251D  120A  118A  	fcall	___wmul
  2708  06F1  1283               	bcf	3,5	;RP0=0, select bank0
  2709  06F2  1303               	bcf	3,6	;RP1=0, select bank0
  2710  06F3  082D               	movf	atoi@s,w
  2711  06F4  0084               	movwf	4
  2712  06F5  1383               	bcf	3,7	;select IRP bank0
  2713  06F6  0800               	movf	0,w
  2714  06F7  0720               	addwf	?___wmul,w
  2715  06F8  00A8               	movwf	??_atoi
  2716  06F9  0821               	movf	?___wmul+1,w
  2717  06FA  1803               	skipnc
  2718  06FB  0A21               	incf	?___wmul+1,w
  2719  06FC  00A9               	movwf	??_atoi+1
  2720  06FD  0828               	movf	??_atoi,w
  2721  06FE  3ED0               	addlw	208
  2722  06FF  00AB               	movwf	atoi@a
  2723  0700  0829               	movf	??_atoi+1,w
  2724  0701  1803               	skipnc
  2725  0702  3E01               	addlw	1
  2726  0703  3EFF               	addlw	255
  2727  0704  00AC               	movwf	atoi@a+1
  2728  0705  2ED4               	goto	l1972
  2729  0706                     l1976:	
  2730  0706  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0707  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0708  082A               	movf	atoi@sign,w
  2733  0709  1903               	btfsc	3,2
  2734  070A  2F17               	goto	l1982
  2735  070B  092B               	comf	atoi@a,w
  2736  070C  00A8               	movwf	??_atoi
  2737  070D  092C               	comf	atoi@a+1,w
  2738  070E  00A9               	movwf	??_atoi+1
  2739  070F  0AA8               	incf	??_atoi,f
  2740  0710  1903               	skipnz
  2741  0711  0AA9               	incf	??_atoi+1,f
  2742  0712  0828               	movf	??_atoi,w
  2743  0713  00A6               	movwf	?_atoi
  2744  0714  0829               	movf	??_atoi+1,w
  2745  0715  00A7               	movwf	?_atoi+1
  2746  0716  0008               	return
  2747  0717                     l1982:	
  2748  0717  082C               	movf	atoi@a+1,w
  2749  0718  00A7               	movwf	?_atoi+1
  2750  0719  082B               	movf	atoi@a,w
  2751  071A  00A6               	movwf	?_atoi
  2752  071B  0008               	return
  2753  071C                     __end_of_atoi:	
  2754                           
  2755                           	psect	text11
  2756  0C74                     __ptext11:	
  2757 ;; *************** function _isdigit *****************
  2758 ;; Defined at:
  2759 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  c               1    wreg     unsigned char 
  2762 ;; Auto vars:     Size  Location     Type
  2763 ;;  c               1    1[BANK0 ] unsigned char 
  2764 ;; Return value:  Size  Location     Type
  2765 ;;		None               void
  2766 ;; Registers used:
  2767 ;;		wreg, status,2, status,0
  2768 ;; Tracked objects:
  2769 ;;		On entry : 0/0
  2770 ;;		On exit  : 0/0
  2771 ;;		Unchanged: 0/0
  2772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2773 ;;      Params:         0       0       0       0       0
  2774 ;;      Locals:         0       2       0       0       0
  2775 ;;      Temps:          0       0       0       0       0
  2776 ;;      Totals:         0       2       0       0       0
  2777 ;;Total ram usage:        2 bytes
  2778 ;; Hardware stack levels used:    1
  2779 ;; Hardware stack levels required when called:    2
  2780 ;; This function calls:
  2781 ;;		Nothing
  2782 ;; This function is called by:
  2783 ;;		_atoi
  2784 ;; This function uses a non-reentrant model
  2785 ;;
  2786                           
  2787                           
  2788                           ;psect for function _isdigit
  2789  0C74                     _isdigit:	
  2790                           
  2791                           ;incstack = 0
  2792                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  2793                           ;isdigit@c stored from wreg
  2794  0C74  1283               	bcf	3,5	;RP0=0, select bank0
  2795  0C75  1303               	bcf	3,6	;RP1=0, select bank0
  2796  0C76  00A1               	movwf	isdigit@c
  2797  0C77  01A0               	clrf	_isdigit$1080
  2798  0C78  303A               	movlw	58
  2799  0C79  0221               	subwf	isdigit@c,w
  2800  0C7A  1803               	skipnc
  2801  0C7B  2C82               	goto	l1826
  2802  0C7C  3030               	movlw	48
  2803  0C7D  0221               	subwf	isdigit@c,w
  2804  0C7E  1C03               	skipc
  2805  0C7F  2C82               	goto	l1826
  2806  0C80  01A0               	clrf	_isdigit$1080
  2807  0C81  0AA0               	incf	_isdigit$1080,f
  2808  0C82                     l1826:	
  2809  0C82  0C20               	rrf	_isdigit$1080,w
  2810  0C83  0008               	return
  2811  0C84                     __end_of_isdigit:	
  2812                           
  2813                           	psect	text12
  2814  0D1D                     __ptext12:	
  2815 ;; *************** function ___wmul *****************
  2816 ;; Defined at:
  2817 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  2818 ;; Parameters:    Size  Location     Type
  2819 ;;  multiplier      2    0[BANK0 ] unsigned int 
  2820 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  product         2    4[BANK0 ] unsigned int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  2    0[BANK0 ] unsigned int 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2832 ;;      Params:         0       4       0       0       0
  2833 ;;      Locals:         0       2       0       0       0
  2834 ;;      Temps:          0       0       0       0       0
  2835 ;;      Totals:         0       6       0       0       0
  2836 ;;Total ram usage:        6 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; Hardware stack levels required when called:    2
  2839 ;; This function calls:
  2840 ;;		Nothing
  2841 ;; This function is called by:
  2842 ;;		_atoi
  2843 ;; This function uses a non-reentrant model
  2844 ;;
  2845                           
  2846                           
  2847                           ;psect for function ___wmul
  2848  0D1D                     ___wmul:	
  2849                           
  2850                           ;incstack = 0
  2851                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  2852  0D1D  1283               	bcf	3,5	;RP0=0, select bank0
  2853  0D1E  1303               	bcf	3,6	;RP1=0, select bank0
  2854  0D1F  01A4               	clrf	___wmul@product
  2855  0D20  01A5               	clrf	___wmul@product+1
  2856  0D21                     l1806:	
  2857  0D21  1C20               	btfss	___wmul@multiplier,0
  2858  0D22  2D29               	goto	l500
  2859  0D23  0822               	movf	___wmul@multiplicand,w
  2860  0D24  07A4               	addwf	___wmul@product,f
  2861  0D25  1803               	skipnc
  2862  0D26  0AA5               	incf	___wmul@product+1,f
  2863  0D27  0823               	movf	___wmul@multiplicand+1,w
  2864  0D28  07A5               	addwf	___wmul@product+1,f
  2865  0D29                     l500:	
  2866  0D29  3001               	movlw	1
  2867  0D2A                     u1155:	
  2868  0D2A  1003               	clrc
  2869  0D2B  0DA2               	rlf	___wmul@multiplicand,f
  2870  0D2C  0DA3               	rlf	___wmul@multiplicand+1,f
  2871  0D2D  3EFF               	addlw	-1
  2872  0D2E  1D03               	skipz
  2873  0D2F  2D2A               	goto	u1155
  2874  0D30  3001               	movlw	1
  2875  0D31                     u1165:	
  2876  0D31  1003               	clrc
  2877  0D32  0CA1               	rrf	___wmul@multiplier+1,f
  2878  0D33  0CA0               	rrf	___wmul@multiplier,f
  2879  0D34  3EFF               	addlw	-1
  2880  0D35  1D03               	skipz
  2881  0D36  2D31               	goto	u1165
  2882  0D37  0820               	movf	___wmul@multiplier,w
  2883  0D38  0421               	iorwf	___wmul@multiplier+1,w
  2884  0D39  1D03               	btfss	3,2
  2885  0D3A  2D21               	goto	l1806
  2886  0D3B  0825               	movf	___wmul@product+1,w
  2887  0D3C  00A1               	movwf	?___wmul+1
  2888  0D3D  0824               	movf	___wmul@product,w
  2889  0D3E  00A0               	movwf	?___wmul
  2890  0D3F  0008               	return
  2891  0D40                     __end_of___wmul:	
  2892                           
  2893                           	psect	text13
  2894  0C36                     __ptext13:	
  2895 ;; *************** function _OperationMode *****************
  2896 ;; Defined at:
  2897 ;;		line 1033 in file "../Main Card V10.0.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;  bracketStatu    1    1[BANK0 ] unsigned char 
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      unsigned char 
  2904 ;; Registers used:
  2905 ;;		wreg, status,2
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2911 ;;      Params:         0       0       0       0       0
  2912 ;;      Locals:         0       1       0       0       0
  2913 ;;      Temps:          0       1       0       0       0
  2914 ;;      Totals:         0       2       0       0       0
  2915 ;;Total ram usage:        2 bytes
  2916 ;; Hardware stack levels used:    1
  2917 ;; Hardware stack levels required when called:    2
  2918 ;; This function calls:
  2919 ;;		Nothing
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;;		_TransmittedDataHandler
  2923 ;; This function uses a non-reentrant model
  2924 ;;
  2925                           
  2926                           
  2927                           ;psect for function _OperationMode
  2928  0C36                     _OperationMode:	
  2929                           
  2930                           ;Main Card V10.0.c: 1035: unsigned char bracketStatus;
  2931                           ;Main Card V10.0.c: 1036: bracketStatus = ((~PORTB) & 0b00000111) ;
  2932                           
  2933                           ;incstack = 0
  2934                           ; Regs used in _OperationMode: [wreg+status,2]
  2935  0C36  1283               	bcf	3,5	;RP0=0, select bank0
  2936  0C37  1303               	bcf	3,6	;RP1=0, select bank0
  2937  0C38  0906               	comf	6,w	;volatile
  2938  0C39  3907               	andlw	7
  2939  0C3A  00A0               	movwf	??_OperationMode
  2940  0C3B  0820               	movf	??_OperationMode,w
  2941  0C3C  00A1               	movwf	OperationMode@bracketStatus
  2942                           
  2943                           ;Main Card V10.0.c: 1038: return bracketStatus;
  2944  0C3D  0821               	movf	OperationMode@bracketStatus,w
  2945  0C3E  0008               	return
  2946  0C3F                     __end_of_OperationMode:	
  2947                           
  2948                           	psect	text14
  2949  0C66                     __ptext14:	
  2950 ;; *************** function _ReadFIFO *****************
  2951 ;; Defined at:
  2952 ;;		line 850 in file "../Main Card V10.0.c"
  2953 ;; Parameters:    Size  Location     Type
  2954 ;;		None
  2955 ;; Auto vars:     Size  Location     Type
  2956 ;;  value           1    4[BANK0 ] unsigned char 
  2957 ;; Return value:  Size  Location     Type
  2958 ;;                  1    wreg      unsigned char 
  2959 ;; Registers used:
  2960 ;;		wreg, status,2, status,0, pclath, cstack
  2961 ;; Tracked objects:
  2962 ;;		On entry : 0/0
  2963 ;;		On exit  : 0/0
  2964 ;;		Unchanged: 0/0
  2965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2966 ;;      Params:         0       0       0       0       0
  2967 ;;      Locals:         0       1       0       0       0
  2968 ;;      Temps:          0       1       0       0       0
  2969 ;;      Totals:         0       2       0       0       0
  2970 ;;Total ram usage:        2 bytes
  2971 ;; Hardware stack levels used:    1
  2972 ;; Hardware stack levels required when called:    4
  2973 ;; This function calls:
  2974 ;;		_ReadSPI
  2975 ;; This function is called by:
  2976 ;;		_TransiverReadFIFO
  2977 ;; This function uses a non-reentrant model
  2978 ;;
  2979                           
  2980                           
  2981                           ;psect for function _ReadFIFO
  2982  0C66                     _ReadFIFO:	
  2983                           
  2984                           ;Main Card V10.0.c: 852: BYTE value;
  2985                           ;Main Card V10.0.c: 853: PORTAbits.RA5 = 0;
  2986                           
  2987                           ;incstack = 0
  2988                           ; Regs used in _ReadFIFO: [wreg+status,2+status,0+pclath+cstack]
  2989  0C66  1283               	bcf	3,5	;RP0=0, select bank0
  2990  0C67  1303               	bcf	3,6	;RP1=0, select bank0
  2991  0C68  1285               	bcf	5,5	;volatile
  2992                           
  2993                           ;Main Card V10.0.c: 854: value = ReadSPI();
  2994  0C69  120A  158A  241D   	fcall	_ReadSPI
  2995  0C6C  1283               	bcf	3,5	;RP0=0, select bank0
  2996  0C6D  1303               	bcf	3,6	;RP1=0, select bank0
  2997  0C6E  00A3               	movwf	??_ReadFIFO
  2998  0C6F  0823               	movf	??_ReadFIFO,w
  2999  0C70  00A4               	movwf	ReadFIFO@value
  3000                           
  3001                           ;Main Card V10.0.c: 855: PORTAbits.RA5 = 1;
  3002  0C71  1685               	bsf	5,5	;volatile
  3003                           
  3004                           ;Main Card V10.0.c: 856: return value;
  3005  0C72  0824               	movf	ReadFIFO@value,w
  3006  0C73  0008               	return
  3007  0C74                     __end_of_ReadFIFO:	
  3008                           
  3009                           	psect	text15
  3010  02ED                     __ptext15:	
  3011 ;; *************** function _TransiverInit *****************
  3012 ;; Defined at:
  3013 ;;		line 615 in file "../Main Card V10.0.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;		None
  3016 ;; Auto vars:     Size  Location     Type
  3017 ;;		None
  3018 ;; Return value:  Size  Location     Type
  3019 ;;                  1    wreg      void 
  3020 ;; Registers used:
  3021 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3022 ;; Tracked objects:
  3023 ;;		On entry : 0/0
  3024 ;;		On exit  : 0/0
  3025 ;;		Unchanged: 0/0
  3026 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3027 ;;      Params:         0       0       0       0       0
  3028 ;;      Locals:         0       0       0       0       0
  3029 ;;      Temps:          0       1       0       0       0
  3030 ;;      Totals:         0       1       0       0       0
  3031 ;;Total ram usage:        1 bytes
  3032 ;; Hardware stack levels used:    1
  3033 ;; Hardware stack levels required when called:    7
  3034 ;; This function calls:
  3035 ;;		_Blink
  3036 ;;		_FindChannel
  3037 ;;		_RegisterRead
  3038 ;;		_RegisterSet
  3039 ;;		_SetRFMode
  3040 ;; This function is called by:
  3041 ;;		_main
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           
  3046                           ;psect for function _TransiverInit
  3047  02ED                     _TransiverInit:	
  3048                           
  3049                           ;Main Card V10.0.c: 618: RegisterSet(0x00, 0x30);
  3050                           
  3051                           ;incstack = 0
  3052                           ; Regs used in _TransiverInit: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3053  02ED  3030               	movlw	48
  3054  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  3055  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  3056  02F0  00B5               	movwf	??_TransiverInit
  3057  02F1  0835               	movf	??_TransiverInit,w
  3058  02F2  00A7               	movwf	RegisterSet@value
  3059  02F3  3000               	movlw	0
  3060  02F4  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3061                           
  3062                           ;Main Card V10.0.c: 619: RegisterSet(0x01,(0xA8));
  3063  02F9  30A8               	movlw	168
  3064  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  3065  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  3066  02FC  00B5               	movwf	??_TransiverInit
  3067  02FD  0835               	movf	??_TransiverInit,w
  3068  02FE  00A7               	movwf	RegisterSet@value
  3069  02FF  3001               	movlw	1
  3070  0300  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3071                           
  3072                           ;Main Card V10.0.c: 620: RegisterSet(0x02, 0x09);
  3073  0305  3009               	movlw	9
  3074  0306  1283               	bcf	3,5	;RP0=0, select bank0
  3075  0307  1303               	bcf	3,6	;RP1=0, select bank0
  3076  0308  00B5               	movwf	??_TransiverInit
  3077  0309  0835               	movf	??_TransiverInit,w
  3078  030A  00A7               	movwf	RegisterSet@value
  3079  030B  3002               	movlw	2
  3080  030C  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3081                           
  3082                           ;Main Card V10.0.c: 621: RegisterSet(0x03, 0x07);
  3083  0311  3007               	movlw	7
  3084  0312  1283               	bcf	3,5	;RP0=0, select bank0
  3085  0313  1303               	bcf	3,6	;RP1=0, select bank0
  3086  0314  00B5               	movwf	??_TransiverInit
  3087  0315  0835               	movf	??_TransiverInit,w
  3088  0316  00A7               	movwf	RegisterSet@value
  3089  0317  3003               	movlw	3
  3090  0318  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3091                           
  3092                           ;Main Card V10.0.c: 622: RegisterSet(0x05,(0x0A));
  3093  031D  300A               	movlw	10
  3094  031E  1283               	bcf	3,5	;RP0=0, select bank0
  3095  031F  1303               	bcf	3,6	;RP1=0, select bank0
  3096  0320  00B5               	movwf	??_TransiverInit
  3097  0321  0835               	movf	??_TransiverInit,w
  3098  0322  00A7               	movwf	RegisterSet@value
  3099  0323  3005               	movlw	5
  3100  0324  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3101                           
  3102                           ;Main Card V10.0.c: 623: RegisterSet(0x0D,(0x00|0xB0|0x09));
  3103  0329  30B9               	movlw	185
  3104  032A  1283               	bcf	3,5	;RP0=0, select bank0
  3105  032B  1303               	bcf	3,6	;RP1=0, select bank0
  3106  032C  00B5               	movwf	??_TransiverInit
  3107  032D  0835               	movf	??_TransiverInit,w
  3108  032E  00A7               	movwf	RegisterSet@value
  3109  032F  300D               	movlw	13
  3110  0330  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3111                           
  3112                           ;Main Card V10.0.c: 624: RegisterSet(0x0E,(0x01|0x10|0x01));
  3113  0335  3011               	movlw	17
  3114  0336  1283               	bcf	3,5	;RP0=0, select bank0
  3115  0337  1303               	bcf	3,6	;RP1=0, select bank0
  3116  0338  00B5               	movwf	??_TransiverInit
  3117  0339  0835               	movf	??_TransiverInit,w
  3118  033A  00A7               	movwf	RegisterSet@value
  3119  033B  300E               	movlw	14
  3120  033C  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3121                           
  3122                           ;Main Card V10.0.c: 625: RegisterSet(0x10, 0xA3);
  3123  0341  30A3               	movlw	163
  3124  0342  1283               	bcf	3,5	;RP0=0, select bank0
  3125  0343  1303               	bcf	3,6	;RP1=0, select bank0
  3126  0344  00B5               	movwf	??_TransiverInit
  3127  0345  0835               	movf	??_TransiverInit,w
  3128  0346  00A7               	movwf	RegisterSet@value
  3129  0347  3010               	movlw	16
  3130  0348  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3131                           
  3132                           ;Main Card V10.0.c: 626: RegisterSet(0x12,(0x18|0x20|0x06));
  3133  034D  303E               	movlw	62
  3134  034E  1283               	bcf	3,5	;RP0=0, select bank0
  3135  034F  1303               	bcf	3,6	;RP1=0, select bank0
  3136  0350  00B5               	movwf	??_TransiverInit
  3137  0351  0835               	movf	??_TransiverInit,w
  3138  0352  00A7               	movwf	RegisterSet@value
  3139  0353  3012               	movlw	18
  3140  0354  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3141                           
  3142                           ;Main Card V10.0.c: 627: RegisterSet(0x16,('S'));
  3143  0359  3053               	movlw	83
  3144  035A  1283               	bcf	3,5	;RP0=0, select bank0
  3145  035B  1303               	bcf	3,6	;RP1=0, select bank0
  3146  035C  00B5               	movwf	??_TransiverInit
  3147  035D  0835               	movf	??_TransiverInit,w
  3148  035E  00A7               	movwf	RegisterSet@value
  3149  035F  3016               	movlw	22
  3150  0360  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3151                           
  3152                           ;Main Card V10.0.c: 628: RegisterSet(0x17,('Y'));
  3153  0365  3059               	movlw	89
  3154  0366  1283               	bcf	3,5	;RP0=0, select bank0
  3155  0367  1303               	bcf	3,6	;RP1=0, select bank0
  3156  0368  00B5               	movwf	??_TransiverInit
  3157  0369  0835               	movf	??_TransiverInit,w
  3158  036A  00A7               	movwf	RegisterSet@value
  3159  036B  3017               	movlw	23
  3160  036C  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3161                           
  3162                           ;Main Card V10.0.c: 629: RegisterSet(0x18,('N'));
  3163  0371  304E               	movlw	78
  3164  0372  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0373  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0374  00B5               	movwf	??_TransiverInit
  3167  0375  0835               	movf	??_TransiverInit,w
  3168  0376  00A7               	movwf	RegisterSet@value
  3169  0377  3018               	movlw	24
  3170  0378  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3171                           
  3172                           ;Main Card V10.0.c: 630: RegisterSet(0x19,('C'));
  3173  037D  3043               	movlw	67
  3174  037E  1283               	bcf	3,5	;RP0=0, select bank0
  3175  037F  1303               	bcf	3,6	;RP1=0, select bank0
  3176  0380  00B5               	movwf	??_TransiverInit
  3177  0381  0835               	movf	??_TransiverInit,w
  3178  0382  00A7               	movwf	RegisterSet@value
  3179  0383  3019               	movlw	25
  3180  0384  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3181                           
  3182                           ;Main Card V10.0.c: 631: RegisterSet(0x1A, 0x72);
  3183  0389  3072               	movlw	114
  3184  038A  1283               	bcf	3,5	;RP0=0, select bank0
  3185  038B  1303               	bcf	3,6	;RP1=0, select bank0
  3186  038C  00B5               	movwf	??_TransiverInit
  3187  038D  0835               	movf	??_TransiverInit,w
  3188  038E  00A7               	movwf	RegisterSet@value
  3189  038F  301A               	movlw	26
  3190  0390  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3191                           
  3192                           ;Main Card V10.0.c: 632: RegisterSet(0x1B, 0x3C);
  3193  0395  303C               	movlw	60
  3194  0396  1283               	bcf	3,5	;RP0=0, select bank0
  3195  0397  1303               	bcf	3,6	;RP1=0, select bank0
  3196  0398  00B5               	movwf	??_TransiverInit
  3197  0399  0835               	movf	??_TransiverInit,w
  3198  039A  00A7               	movwf	RegisterSet@value
  3199  039B  301B               	movlw	27
  3200  039C  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3201                           
  3202                           ;Main Card V10.0.c: 633: RegisterSet(0x1F, 0x80);
  3203  03A1  3080               	movlw	128
  3204  03A2  1283               	bcf	3,5	;RP0=0, select bank0
  3205  03A3  1303               	bcf	3,6	;RP1=0, select bank0
  3206  03A4  00B5               	movwf	??_TransiverInit
  3207  03A5  0835               	movf	??_TransiverInit,w
  3208  03A6  00A7               	movwf	RegisterSet@value
  3209  03A7  301F               	movlw	31
  3210  03A8  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3211                           
  3212                           ;Main Card V10.0.c: 634: RegisterSet(0x00, (RegisterRead(0x00)|0x01));
  3213  03AD  3000               	movlw	0
  3214  03AE  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  3215  03B3  3801               	iorlw	1
  3216  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  3217  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  3218  03B6  00B5               	movwf	??_TransiverInit
  3219  03B7  0835               	movf	??_TransiverInit,w
  3220  03B8  00A7               	movwf	RegisterSet@value
  3221  03B9  3000               	movlw	0
  3222  03BA  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3223                           
  3224                           ;Main Card V10.0.c: 636: if(FindChannel() == 1)
  3225  03BF  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3226  03C4  3A01               	xorlw	1
  3227  03C5  1D03               	skipz
  3228  03C6  2BD2               	goto	l2218
  3229                           
  3230                           ;Main Card V10.0.c: 637: Blink(1);
  3231  03C7  3001               	movlw	1
  3232  03C8  1283               	bcf	3,5	;RP0=0, select bank0
  3233  03C9  1303               	bcf	3,6	;RP1=0, select bank0
  3234  03CA  00A6               	movwf	Blink@n
  3235  03CB  3000               	movlw	0
  3236  03CC  00A7               	movwf	Blink@n+1
  3237  03CD  120A  158A  2612  120A  118A  	fcall	_Blink
  3238  03D2                     l2218:	
  3239                           
  3240                           ;Main Card V10.0.c: 638: SetRFMode(0x00);
  3241  03D2  3000               	movlw	0
  3242  03D3  120A  118A  278C   	fcall	_SetRFMode
  3243  03D6  0008               	return
  3244  03D7                     __end_of_TransiverInit:	
  3245                           
  3246                           	psect	text16
  3247  0E12                     __ptext16:	
  3248 ;; *************** function _Blink *****************
  3249 ;; Defined at:
  3250 ;;		line 763 in file "../Main Card V10.0.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;  n               2    6[BANK0 ] int 
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  i               2    9[BANK0 ] int 
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, status,2, status,0, pclath, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3264 ;;      Params:         0       2       0       0       0
  3265 ;;      Locals:         0       2       0       0       0
  3266 ;;      Temps:          0       1       0       0       0
  3267 ;;      Totals:         0       5       0       0       0
  3268 ;;Total ram usage:        5 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    3
  3271 ;; This function calls:
  3272 ;;		_DelayDs
  3273 ;; This function is called by:
  3274 ;;		_TransiverInit
  3275 ;; This function uses a non-reentrant model
  3276 ;;
  3277                           
  3278                           
  3279                           ;psect for function _Blink
  3280  0E12                     _Blink:	
  3281                           
  3282                           ;Main Card V10.0.c: 765: for(int i = 1;i<=n;i++)
  3283                           
  3284                           ;incstack = 0
  3285                           ; Regs used in _Blink: [wreg+status,2+status,0+pclath+cstack]
  3286  0E12  3001               	movlw	1
  3287  0E13  1283               	bcf	3,5	;RP0=0, select bank0
  3288  0E14  1303               	bcf	3,6	;RP1=0, select bank0
  3289  0E15  00A9               	movwf	Blink@i
  3290  0E16  3000               	movlw	0
  3291  0E17  00AA               	movwf	Blink@i+1
  3292  0E18                     l2138:	
  3293  0E18  0827               	movf	Blink@n+1,w
  3294  0E19  3A80               	xorlw	128
  3295  0E1A  00A8               	movwf	??_Blink
  3296  0E1B  082A               	movf	Blink@i+1,w
  3297  0E1C  3A80               	xorlw	128
  3298  0E1D  0228               	subwf	??_Blink,w
  3299  0E1E  1D03               	skipz
  3300  0E1F  2E22               	goto	u1715
  3301  0E20  0829               	movf	Blink@i,w
  3302  0E21  0226               	subwf	Blink@n,w
  3303  0E22                     u1715:	
  3304  0E22  1C03               	btfss	3,0
  3305  0E23  0008               	return
  3306                           
  3307                           ;Main Card V10.0.c: 766: {
  3308                           ;Main Card V10.0.c: 767: PORTCbits.RC1 = 1;
  3309  0E24  1283               	bcf	3,5	;RP0=0, select bank0
  3310  0E25  1303               	bcf	3,6	;RP1=0, select bank0
  3311  0E26  1487               	bsf	7,1	;volatile
  3312                           
  3313                           ;Main Card V10.0.c: 768: DelayDs(2);
  3314  0E27  3002               	movlw	2
  3315  0E28  00A0               	movwf	DelayDs@cnt
  3316  0E29  3000               	movlw	0
  3317  0E2A  00A1               	movwf	DelayDs@cnt+1
  3318  0E2B  120A  158A  2540  120A  158A  	fcall	_DelayDs
  3319                           
  3320                           ;Main Card V10.0.c: 769: PORTCbits.RC1 = 0;
  3321  0E30  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0E31  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0E32  1087               	bcf	7,1	;volatile
  3324                           
  3325                           ;Main Card V10.0.c: 770: DelayDs(6);
  3326  0E33  3006               	movlw	6
  3327  0E34  00A0               	movwf	DelayDs@cnt
  3328  0E35  3000               	movlw	0
  3329  0E36  00A1               	movwf	DelayDs@cnt+1
  3330  0E37  120A  158A  2540  120A  158A  	fcall	_DelayDs
  3331  0E3C  3001               	movlw	1
  3332  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  3333  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  3334  0E3F  07A9               	addwf	Blink@i,f
  3335  0E40  1803               	skipnc
  3336  0E41  0AAA               	incf	Blink@i+1,f
  3337  0E42  3000               	movlw	0
  3338  0E43  07AA               	addwf	Blink@i+1,f
  3339  0E44  2E18               	goto	l2138
  3340  0E45                     __end_of_Blink:	
  3341                           
  3342                           	psect	text17
  3343  0C95                     __ptext17:	
  3344 ;; *************** function _Mode_5 *****************
  3345 ;; Defined at:
  3346 ;;		line 424 in file "../Main Card V10.0.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;                  1    wreg      void 
  3353 ;; Registers used:
  3354 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3360 ;;      Params:         0       0       0       0       0
  3361 ;;      Locals:         0       0       0       0       0
  3362 ;;      Temps:          0       0       0       0       0
  3363 ;;      Totals:         0       0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:    8
  3367 ;; This function calls:
  3368 ;;		_LightWithSensController
  3369 ;;		_TransmittString
  3370 ;; This function is called by:
  3371 ;;		_main
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           
  3376                           ;psect for function _Mode_5
  3377  0C95                     _Mode_5:	
  3378                           
  3379                           ;Main Card V10.0.c: 426: if(!PORTBbits.RB5)
  3380                           
  3381                           ;incstack = 0
  3382 ;; hardware stack exceeded
  3383                           ; Regs used in _Mode_5: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3384  0C95  1283               	bcf	3,5	;RP0=0, select bank0
  3385  0C96  1303               	bcf	3,6	;RP1=0, select bank0
  3386  0C97  1A86               	btfsc	6,5	;volatile
  3387  0C98  2CA2               	goto	l2250
  3388                           
  3389                           ;Main Card V10.0.c: 427: {
  3390                           ;Main Card V10.0.c: 428: TransmittString("N2BLINK");
  3391  0C99  305D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  3392  0C9A  00B5               	movwf	TransmittString@dataString
  3393  0C9B  3080               	movlw	128
  3394  0C9C  00B6               	movwf	TransmittString@dataString+1
  3395  0C9D  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3396  0CA2                     l2250:	
  3397                           
  3398                           ;Main Card V10.0.c: 429: }
  3399                           ;Main Card V10.0.c: 430: LightWithSensController();
  3400  0CA2  120A  158A  2645   	fcall	_LightWithSensController
  3401  0CA5  0008               	return
  3402  0CA6                     __end_of_Mode_5:	
  3403                           
  3404                           	psect	text18
  3405  0C84                     __ptext18:	
  3406 ;; *************** function _Mode_4 *****************
  3407 ;; Defined at:
  3408 ;;		line 412 in file "../Main Card V10.0.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;		None
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;		None
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3422 ;;      Params:         0       0       0       0       0
  3423 ;;      Locals:         0       0       0       0       0
  3424 ;;      Temps:          0       0       0       0       0
  3425 ;;      Totals:         0       0       0       0       0
  3426 ;;Total ram usage:        0 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    8
  3429 ;; This function calls:
  3430 ;;		_LightWithSensController
  3431 ;;		_TransmittString
  3432 ;; This function is called by:
  3433 ;;		_main
  3434 ;; This function uses a non-reentrant model
  3435 ;;
  3436                           
  3437                           
  3438                           ;psect for function _Mode_4
  3439  0C84                     _Mode_4:	
  3440                           
  3441                           ;Main Card V10.0.c: 414: if(!PORTBbits.RB5)
  3442                           
  3443                           ;incstack = 0
  3444 ;; hardware stack exceeded
  3445                           ; Regs used in _Mode_4: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3446  0C84  1283               	bcf	3,5	;RP0=0, select bank0
  3447  0C85  1303               	bcf	3,6	;RP1=0, select bank0
  3448  0C86  1A86               	btfsc	6,5	;volatile
  3449  0C87  2C91               	goto	l2244
  3450                           
  3451                           ;Main Card V10.0.c: 415: {
  3452                           ;Main Card V10.0.c: 416: TransmittString("N1BLINK");
  3453  0C88  3055               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  3454  0C89  00B5               	movwf	TransmittString@dataString
  3455  0C8A  3080               	movlw	128
  3456  0C8B  00B6               	movwf	TransmittString@dataString+1
  3457  0C8C  120A  118A  23D7  120A  158A  	fcall	_TransmittString
  3458  0C91                     l2244:	
  3459                           
  3460                           ;Main Card V10.0.c: 417: }
  3461                           ;Main Card V10.0.c: 418: LightWithSensController();
  3462  0C91  120A  158A  2645   	fcall	_LightWithSensController
  3463  0C94  0008               	return
  3464  0C95                     __end_of_Mode_4:	
  3465                           
  3466                           	psect	text19
  3467  03D7                     __ptext19:	
  3468 ;; *************** function _TransmittString *****************
  3469 ;; Defined at:
  3470 ;;		line 318 in file "../Main Card V10.0.c"
  3471 ;; Parameters:    Size  Location     Type
  3472 ;;  dataString      2   21[BANK0 ] PTR unsigned char 
  3473 ;;		 -> STR_17(8), STR_16(8), TransmittedDataHandler@slask_708(8), TransmittedDataHandler@slask_705(8), 
  3474 ;;		 -> STR_12(4), STR_11(4), STR_9(14), STR_8(14), 
  3475 ;;		 -> TransmittedDataHandler@slask_696(8), TransmittedDataHandler@slask(8), 
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;  i               2   26[BANK0 ] int 
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3487 ;;      Params:         0       2       0       0       0
  3488 ;;      Locals:         0       2       0       0       0
  3489 ;;      Temps:          0       3       0       0       0
  3490 ;;      Totals:         0       7       0       0       0
  3491 ;;Total ram usage:        7 bytes
  3492 ;; Hardware stack levels used:    1
  3493 ;; Hardware stack levels required when called:    7
  3494 ;; This function calls:
  3495 ;;		_FindChannel
  3496 ;;		_RegisterRead
  3497 ;;		_RegisterSet
  3498 ;;		_SetRFMode
  3499 ;;		_WriteFIFO
  3500 ;;		_timerFunction
  3501 ;; This function is called by:
  3502 ;;		_TransmittedDataHandler
  3503 ;;		_Mode_4
  3504 ;;		_Mode_5
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           
  3509                           ;psect for function _TransmittString
  3510  03D7                     _TransmittString:	
  3511                           
  3512                           ;Main Card V10.0.c: 320: timerFunction(4, 5);
  3513                           
  3514                           ;incstack = 0
  3515 ;; hardware stack exceeded
  3516                           ; Regs used in _TransmittString: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3517  03D7  3004               	movlw	4
  3518  03D8  1283               	bcf	3,5	;RP0=0, select bank0
  3519  03D9  1303               	bcf	3,6	;RP1=0, select bank0
  3520  03DA  00A0               	movwf	timerFunction@intTimerNumber
  3521  03DB  3000               	movlw	0
  3522  03DC  00A1               	movwf	timerFunction@intTimerNumber+1
  3523  03DD  3005               	movlw	5
  3524  03DE  00A2               	movwf	timerFunction@intSetSeconds
  3525  03DF  3000               	movlw	0
  3526  03E0  00A3               	movwf	timerFunction@intSetSeconds+1
  3527  03E1  120A  158A  24A6  120A  118A  	fcall	_timerFunction
  3528                           
  3529                           ;Main Card V10.0.c: 322: int i = 0;
  3530  03E6  1283               	bcf	3,5	;RP0=0, select bank0
  3531  03E7  1303               	bcf	3,6	;RP1=0, select bank0
  3532  03E8  01BA               	clrf	TransmittString@i
  3533  03E9  01BB               	clrf	TransmittString@i+1
  3534                           
  3535                           ;Main Card V10.0.c: 325: SetRFMode(0x20);
  3536  03EA  3020               	movlw	32
  3537  03EB  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  3538                           
  3539                           ;Main Card V10.0.c: 326: _delay((unsigned long)((10)*(4000000/4000.0)));
  3540  03F0  300D               	movlw	13
  3541  03F1  1283               	bcf	3,5	;RP0=0, select bank0
  3542  03F2  1303               	bcf	3,6	;RP1=0, select bank0
  3543  03F3  00B8               	movwf	??_TransmittString+1
  3544  03F4  30FB               	movlw	251
  3545  03F5  00B7               	movwf	??_TransmittString
  3546  03F6                     u2157:	
  3547  03F6  0BB7               	decfsz	??_TransmittString,f
  3548  03F7  2BF6               	goto	u2157
  3549  03F8  0BB8               	decfsz	??_TransmittString+1,f
  3550  03F9  2BF6               	goto	u2157
  3551  03FA  2BFB               	nop2
  3552                           
  3553                           ;Main Card V10.0.c: 327: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3554  03FB  300E               	movlw	14
  3555  03FC  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  3556  0401  3802               	iorlw	2
  3557  0402  1283               	bcf	3,5	;RP0=0, select bank0
  3558  0403  1303               	bcf	3,6	;RP1=0, select bank0
  3559  0404  00B7               	movwf	??_TransmittString
  3560  0405  0837               	movf	??_TransmittString,w
  3561  0406  00A7               	movwf	RegisterSet@value
  3562  0407  300E               	movlw	14
  3563  0408  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3564                           
  3565                           ;Main Card V10.0.c: 328: SetRFMode(0x40);
  3566  040D  3040               	movlw	64
  3567  040E  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  3568  0413                     l1908:	
  3569                           ;Main Card V10.0.c: 329: while((RegisterRead(0x0E) & 0b00000010) == 0)
  3570                           
  3571  0413  300E               	movlw	14
  3572  0414  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  3573  0419  3902               	andlw	2
  3574  041A  1D03               	btfss	3,2
  3575  041B  2C26               	goto	l1910
  3576                           
  3577                           ;Main Card V10.0.c: 330: {
  3578                           ;Main Card V10.0.c: 331: if(bTimerComplete[4])
  3579  041C  1683               	bsf	3,5	;RP0=1, select bank1
  3580  041D  1303               	bcf	3,6	;RP1=0, select bank1
  3581  041E  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3582  041F  1903               	btfsc	3,2
  3583  0420  2C13               	goto	l1908
  3584                           
  3585                           ;Main Card V10.0.c: 332: {
  3586                           ;Main Card V10.0.c: 333: FindChannel();
  3587  0421  120A  118A  21ED  120A  118A  	fcall	_FindChannel
  3588  0426                     l1910:	
  3589                           ;Main Card V10.0.c: 334: break;
  3590                           
  3591                           
  3592                           ;Main Card V10.0.c: 335: }
  3593                           ;Main Card V10.0.c: 337: }
  3594                           ;Main Card V10.0.c: 338: SetRFMode(0x80);
  3595  0426  3080               	movlw	128
  3596  0427  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  3597                           
  3598                           ;Main Card V10.0.c: 339: _delay((unsigned long)((500)*(4000000/4000000.0)));
  3599  042C  30A6               	movlw	166
  3600  042D  1283               	bcf	3,5	;RP0=0, select bank0
  3601  042E  1303               	bcf	3,6	;RP1=0, select bank0
  3602  042F  00B7               	movwf	??_TransmittString
  3603  0430                     u2167:	
  3604  0430  0BB7               	decfsz	??_TransmittString,f
  3605  0431  2C30               	goto	u2167
  3606  0432  0000               	nop
  3607                           
  3608                           ;Main Card V10.0.c: 342: WriteFIFO('S');
  3609  0433  3053               	movlw	83
  3610  0434  120A  158A  243F  120A  118A  	fcall	_WriteFIFO
  3611                           
  3612                           ;Main Card V10.0.c: 343: WriteFIFO('Y');
  3613  0439  3059               	movlw	89
  3614  043A  120A  158A  243F  120A  118A  	fcall	_WriteFIFO
  3615                           
  3616                           ;Main Card V10.0.c: 344: WriteFIFO('N');
  3617  043F  304E               	movlw	78
  3618  0440  120A  158A  243F  120A  118A  	fcall	_WriteFIFO
  3619                           
  3620                           ;Main Card V10.0.c: 345: WriteFIFO('C');
  3621  0445  3043               	movlw	67
  3622  0446  120A  158A  243F  120A  118A  	fcall	_WriteFIFO
  3623  044B                     l1926:	
  3624                           ;Main Card V10.0.c: 348: while(dataString[i] != 0)
  3625                           
  3626  044B  1283               	bcf	3,5	;RP0=0, select bank0
  3627  044C  1303               	bcf	3,6	;RP1=0, select bank0
  3628  044D  083A               	movf	TransmittString@i,w
  3629  044E  0735               	addwf	TransmittString@dataString,w
  3630  044F  00B8               	movwf	??_TransmittString+1
  3631  0450  0836               	movf	TransmittString@dataString+1,w
  3632  0451  00B7               	movwf	??_TransmittString
  3633  0452  1803               	skipnc
  3634  0453  0AB7               	incf	??_TransmittString,f
  3635  0454  1BBA               	btfsc	TransmittString@i,7
  3636  0455  03B7               	decf	??_TransmittString,f
  3637  0456  1283               	bcf	3,5	;RP0=0, select bank0
  3638  0457  1303               	bcf	3,6	;RP1=0, select bank0
  3639  0458  0837               	movf	??_TransmittString,w
  3640  0459  00B9               	movwf	??_TransmittString+2
  3641  045A  0839               	movf	??_TransmittString+2,w
  3642  045B  00FF               	movwf	127
  3643  045C  0838               	movf	??_TransmittString+1,w
  3644  045D  0084               	movwf	4
  3645  045E  120A  118A  2600  120A  118A  	fcall	stringtab
  3646  0463  3A00               	xorlw	0
  3647  0464  1903               	btfsc	3,2
  3648  0465  2C91               	goto	l236
  3649                           
  3650                           ;Main Card V10.0.c: 349: {
  3651                           ;Main Card V10.0.c: 350: WriteFIFO(dataString[i]);
  3652  0466  1283               	bcf	3,5	;RP0=0, select bank0
  3653  0467  1303               	bcf	3,6	;RP1=0, select bank0
  3654  0468  083A               	movf	TransmittString@i,w
  3655  0469  0735               	addwf	TransmittString@dataString,w
  3656  046A  00B8               	movwf	??_TransmittString+1
  3657  046B  0836               	movf	TransmittString@dataString+1,w
  3658  046C  00B7               	movwf	??_TransmittString
  3659  046D  1803               	skipnc
  3660  046E  0AB7               	incf	??_TransmittString,f
  3661  046F  1BBA               	btfsc	TransmittString@i,7
  3662  0470  03B7               	decf	??_TransmittString,f
  3663  0471  1283               	bcf	3,5	;RP0=0, select bank0
  3664  0472  1303               	bcf	3,6	;RP1=0, select bank0
  3665  0473  0837               	movf	??_TransmittString,w
  3666  0474  00B9               	movwf	??_TransmittString+2
  3667  0475  0839               	movf	??_TransmittString+2,w
  3668  0476  00FF               	movwf	127
  3669  0477  0838               	movf	??_TransmittString+1,w
  3670  0478  0084               	movwf	4
  3671  0479  120A  118A  2600  120A  118A  	fcall	stringtab
  3672  047E  120A  158A  243F  120A  118A  	fcall	_WriteFIFO
  3673                           
  3674                           ;Main Card V10.0.c: 351: i++;
  3675  0483  3001               	movlw	1
  3676  0484  1283               	bcf	3,5	;RP0=0, select bank0
  3677  0485  1303               	bcf	3,6	;RP1=0, select bank0
  3678  0486  07BA               	addwf	TransmittString@i,f
  3679  0487  1803               	skipnc
  3680  0488  0ABB               	incf	TransmittString@i+1,f
  3681  0489  3000               	movlw	0
  3682  048A  07BB               	addwf	TransmittString@i+1,f
  3683  048B  2C4B               	goto	l1926
  3684  048C                     l1928:	
  3685                           ;Main Card V10.0.c: 352: }
  3686                           ;Main Card V10.0.c: 355: while(!PORTBbits.RB4)
  3687                           
  3688                           
  3689                           ;Main Card V10.0.c: 356: {
  3690                           ;Main Card V10.0.c: 357: if(bTimerComplete[4])
  3691  048C  1683               	bsf	3,5	;RP0=1, select bank1
  3692  048D  1303               	bcf	3,6	;RP1=0, select bank1
  3693  048E  082E               	movf	(_bTimerComplete^(0+128)+4),w
  3694  048F  1D03               	btfss	3,2
  3695  0490  2C94               	goto	l1932
  3696  0491                     l236:	
  3697                           ;Main Card V10.0.c: 358: break;
  3698                           
  3699  0491  1283               	bcf	3,5	;RP0=0, select bank0
  3700  0492  1E06               	btfss	6,4	;volatile
  3701  0493  2C8C               	goto	l1928
  3702  0494                     l1932:	
  3703                           
  3704                           ;Main Card V10.0.c: 359: }
  3705                           ;Main Card V10.0.c: 360: _delay((unsigned long)((10)*(4000000/4000000.0)));
  3706  0494  3003               	movlw	3
  3707  0495  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0496  00B7               	movwf	??_TransmittString
  3709  0497                     u2177:	
  3710  0497  0BB7               	decfsz	??_TransmittString,f
  3711  0498  2C97               	goto	u2177
  3712                           
  3713                           ;Main Card V10.0.c: 361: SetRFMode(0x00);
  3714  0499  3000               	movlw	0
  3715  049A  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  3716                           
  3717                           ;Main Card V10.0.c: 362: _delay((unsigned long)((1)*(4000000/4000.0)));
  3718  049F  30F9               	movlw	249
  3719  04A0  1283               	bcf	3,5	;RP0=0, select bank0
  3720  04A1  1303               	bcf	3,6	;RP1=0, select bank0
  3721  04A2  00B7               	movwf	??_TransmittString
  3722  04A3                     u2187:	
  3723  04A3  0000               	nop
  3724  04A4  0BB7               	decfsz	??_TransmittString,f
  3725  04A5  2CA3               	goto	u2187
  3726  04A6  2CA7               	nop2	;nop
  3727  04A7  0000               	nop
  3728  04A8  0008               	return
  3729  04A9                     __end_of_TransmittString:	
  3730                           
  3731                           	psect	text20
  3732  0C3F                     __ptext20:	
  3733 ;; *************** function _WriteFIFO *****************
  3734 ;; Defined at:
  3735 ;;		line 877 in file "../Main Card V10.0.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;  Data            1    wreg     unsigned char 
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;  Data            1    3[BANK0 ] unsigned char 
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, pclath, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3749 ;;      Params:         0       0       0       0       0
  3750 ;;      Locals:         0       1       0       0       0
  3751 ;;      Temps:          0       0       0       0       0
  3752 ;;      Totals:         0       1       0       0       0
  3753 ;;Total ram usage:        1 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    3
  3756 ;; This function calls:
  3757 ;;		_WriteSPI
  3758 ;; This function is called by:
  3759 ;;		_TransmittString
  3760 ;; This function uses a non-reentrant model
  3761 ;;
  3762                           
  3763                           
  3764                           ;psect for function _WriteFIFO
  3765  0C3F                     _WriteFIFO:	
  3766                           
  3767                           ;incstack = 0
  3768                           ; Regs used in _WriteFIFO: [wreg+status,2+status,0+pclath+cstack]
  3769                           ;WriteFIFO@Data stored from wreg
  3770  0C3F  1283               	bcf	3,5	;RP0=0, select bank0
  3771  0C40  1303               	bcf	3,6	;RP1=0, select bank0
  3772  0C41  00A3               	movwf	WriteFIFO@Data
  3773                           
  3774                           ;Main Card V10.0.c: 879: PORTAbits.RA5 = 0;
  3775  0C42  1285               	bcf	5,5	;volatile
  3776                           
  3777                           ;Main Card V10.0.c: 880: WriteSPI(Data);
  3778  0C43  0823               	movf	WriteFIFO@Data,w
  3779  0C44  120A  158A  2458   	fcall	_WriteSPI
  3780                           
  3781                           ;Main Card V10.0.c: 881: PORTAbits.RA5 = 1;
  3782  0C47  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0C48  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0C49  1685               	bsf	5,5	;volatile
  3785  0C4A  0008               	return
  3786  0C4B                     __end_of_WriteFIFO:	
  3787                           
  3788                           	psect	text21
  3789  01ED                     __ptext21:	
  3790 ;; *************** function _FindChannel *****************
  3791 ;; Defined at:
  3792 ;;		line 660 in file "../Main Card V10.0.c"
  3793 ;; Parameters:    Size  Location     Type
  3794 ;;		None
  3795 ;; Auto vars:     Size  Location     Type
  3796 ;;  i               2   19[BANK0 ] int 
  3797 ;;  cnt             2   17[BANK0 ] int 
  3798 ;; Return value:  Size  Location     Type
  3799 ;;                  1    wreg      unsigned char 
  3800 ;; Registers used:
  3801 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3802 ;; Tracked objects:
  3803 ;;		On entry : 0/0
  3804 ;;		On exit  : 0/0
  3805 ;;		Unchanged: 0/0
  3806 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3807 ;;      Params:         0       0       0       0       0
  3808 ;;      Locals:         0       4       0       0       0
  3809 ;;      Temps:          0       3       0       0       0
  3810 ;;      Totals:         0       7       0       0       0
  3811 ;;Total ram usage:        7 bytes
  3812 ;; Hardware stack levels used:    1
  3813 ;; Hardware stack levels required when called:    6
  3814 ;; This function calls:
  3815 ;;		_RegisterRead
  3816 ;;		_RegisterSet
  3817 ;;		_SetRFMode
  3818 ;; This function is called by:
  3819 ;;		_TransiverToReceive
  3820 ;;		_TransmittString
  3821 ;;		_TransiverInit
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _FindChannel
  3827  01ED                     _FindChannel:	
  3828                           
  3829                           ;Main Card V10.0.c: 662: int cnt = 0;
  3830                           
  3831                           ;incstack = 0
  3832 ;; using string table level
  3833                           ; Regs used in _FindChannel: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3834  01ED  1283               	bcf	3,5	;RP0=0, select bank0
  3835  01EE  1303               	bcf	3,6	;RP1=0, select bank0
  3836  01EF  01B1               	clrf	FindChannel@cnt
  3837  01F0  01B2               	clrf	FindChannel@cnt+1
  3838                           
  3839                           ;Main Card V10.0.c: 663: bChannelFound = 0;
  3840  01F1  01EC               	clrf	_bChannelFound
  3841                           
  3842                           ;Main Card V10.0.c: 664: channelFound = 0;
  3843  01F2  1683               	bsf	3,5	;RP0=1, select bank1
  3844  01F3  1303               	bcf	3,6	;RP1=0, select bank1
  3845  01F4  01AF               	clrf	_channelFound^(0+128)
  3846  01F5  01B0               	clrf	(_channelFound+1)^(0+128)
  3847                           
  3848                           ;Main Card V10.0.c: 666: _delay((unsigned long)((1000)*(4000000/4000.0)));
  3849  01F6  3006               	movlw	6
  3850  01F7  1283               	bcf	3,5	;RP0=0, select bank0
  3851  01F8  1303               	bcf	3,6	;RP1=0, select bank0
  3852  01F9  00B0               	movwf	??_FindChannel+2
  3853  01FA  3013               	movlw	19
  3854  01FB  00AF               	movwf	??_FindChannel+1
  3855  01FC  30B1               	movlw	177
  3856  01FD  00AE               	movwf	??_FindChannel
  3857  01FE                     u2197:	
  3858  01FE  0BAE               	decfsz	??_FindChannel,f
  3859  01FF  29FE               	goto	u2197
  3860  0200  0BAF               	decfsz	??_FindChannel+1,f
  3861  0201  29FE               	goto	u2197
  3862  0202  0BB0               	decfsz	??_FindChannel+2,f
  3863  0203  29FE               	goto	u2197
  3864  0204  2A05               	nop2
  3865                           
  3866                           ;Main Card V10.0.c: 667: for (int i = 0; i < 13; i++)
  3867  0205  1283               	bcf	3,5	;RP0=0, select bank0
  3868  0206  1303               	bcf	3,6	;RP1=0, select bank0
  3869  0207  01B3               	clrf	FindChannel@i
  3870  0208  01B4               	clrf	FindChannel@i+1
  3871  0209  0834               	movf	FindChannel@i+1,w
  3872  020A  3A80               	xorlw	128
  3873  020B  00FF               	movwf	127
  3874  020C  3080               	movlw	128
  3875  020D  027F               	subwf	127,w
  3876  020E  1D03               	skipz
  3877  020F  2A12               	goto	u1085
  3878  0210  300D               	movlw	13
  3879  0211  0233               	subwf	FindChannel@i,w
  3880  0212                     u1085:	
  3881  0212  1803               	btfsc	3,0
  3882  0213  2AEB               	goto	l1776
  3883  0214                     l1752:	
  3884                           
  3885                           ;Main Card V10.0.c: 668: {
  3886                           ;Main Card V10.0.c: 669: RegisterSet(0x06,ChannelR[i]);
  3887  0214  1283               	bcf	3,5	;RP0=0, select bank0
  3888  0215  1303               	bcf	3,6	;RP1=0, select bank0
  3889  0216  0833               	movf	FindChannel@i,w
  3890  0217  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3891  0218  0084               	movwf	4
  3892  0219  120A  118A  260A  120A  118A  	fcall	stringdir
  3893  021E  00AE               	movwf	??_FindChannel
  3894  021F  082E               	movf	??_FindChannel,w
  3895  0220  00A7               	movwf	RegisterSet@value
  3896  0221  3006               	movlw	6
  3897  0222  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3898                           
  3899                           ;Main Card V10.0.c: 670: RegisterSet(0x07,ChannelP[i]);
  3900  0227  1283               	bcf	3,5	;RP0=0, select bank0
  3901  0228  1303               	bcf	3,6	;RP1=0, select bank0
  3902  0229  0833               	movf	FindChannel@i,w
  3903  022A  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3904  022B  0084               	movwf	4
  3905  022C  120A  118A  260A  120A  118A  	fcall	stringdir
  3906  0231  00AE               	movwf	??_FindChannel
  3907  0232  082E               	movf	??_FindChannel,w
  3908  0233  00A7               	movwf	RegisterSet@value
  3909  0234  3007               	movlw	7
  3910  0235  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3911                           
  3912                           ;Main Card V10.0.c: 671: RegisterSet(0x08,ChannelS[i]);
  3913  023A  1283               	bcf	3,5	;RP0=0, select bank0
  3914  023B  1303               	bcf	3,6	;RP1=0, select bank0
  3915  023C  0833               	movf	FindChannel@i,w
  3916  023D  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  3917  023E  0084               	movwf	4
  3918  023F  120A  118A  260A  120A  118A  	fcall	stringdir
  3919  0244  00AE               	movwf	??_FindChannel
  3920  0245  082E               	movf	??_FindChannel,w
  3921  0246  00A7               	movwf	RegisterSet@value
  3922  0247  3008               	movlw	8
  3923  0248  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3924                           
  3925                           ;Main Card V10.0.c: 672: RegisterSet(0x09,ChannelR[i]);
  3926  024D  1283               	bcf	3,5	;RP0=0, select bank0
  3927  024E  1303               	bcf	3,6	;RP1=0, select bank0
  3928  024F  0833               	movf	FindChannel@i,w
  3929  0250  3E0E               	addlw	low ((_ChannelR-__stringbase)| (0+32768))
  3930  0251  0084               	movwf	4
  3931  0252  120A  118A  260A  120A  118A  	fcall	stringdir
  3932  0257  00AE               	movwf	??_FindChannel
  3933  0258  082E               	movf	??_FindChannel,w
  3934  0259  00A7               	movwf	RegisterSet@value
  3935  025A  3009               	movlw	9
  3936  025B  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3937                           
  3938                           ;Main Card V10.0.c: 673: RegisterSet(0x0A,ChannelP[i]);
  3939  0260  1283               	bcf	3,5	;RP0=0, select bank0
  3940  0261  1303               	bcf	3,6	;RP1=0, select bank0
  3941  0262  0833               	movf	FindChannel@i,w
  3942  0263  3E01               	addlw	low ((_ChannelP-__stringbase)| (0+32768))
  3943  0264  0084               	movwf	4
  3944  0265  120A  118A  260A  120A  118A  	fcall	stringdir
  3945  026A  00AE               	movwf	??_FindChannel
  3946  026B  082E               	movf	??_FindChannel,w
  3947  026C  00A7               	movwf	RegisterSet@value
  3948  026D  300A               	movlw	10
  3949  026E  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3950                           
  3951                           ;Main Card V10.0.c: 674: RegisterSet(0x0B,ChannelS[i]);
  3952  0273  1283               	bcf	3,5	;RP0=0, select bank0
  3953  0274  1303               	bcf	3,6	;RP1=0, select bank0
  3954  0275  0833               	movf	FindChannel@i,w
  3955  0276  3E1B               	addlw	low ((_ChannelS-__stringbase)| (0+32768))
  3956  0277  0084               	movwf	4
  3957  0278  120A  118A  260A  120A  118A  	fcall	stringdir
  3958  027D  00AE               	movwf	??_FindChannel
  3959  027E  082E               	movf	??_FindChannel,w
  3960  027F  00A7               	movwf	RegisterSet@value
  3961  0280  300B               	movlw	11
  3962  0281  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3963                           
  3964                           ;Main Card V10.0.c: 675: RegisterSet(0x0E,(RegisterRead(0x0E)|0x02));
  3965  0286  300E               	movlw	14
  3966  0287  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  3967  028C  3802               	iorlw	2
  3968  028D  1283               	bcf	3,5	;RP0=0, select bank0
  3969  028E  1303               	bcf	3,6	;RP1=0, select bank0
  3970  028F  00AE               	movwf	??_FindChannel
  3971  0290  082E               	movf	??_FindChannel,w
  3972  0291  00A7               	movwf	RegisterSet@value
  3973  0292  300E               	movlw	14
  3974  0293  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  3975                           
  3976                           ;Main Card V10.0.c: 676: SetRFMode(0x40);
  3977  0298  3040               	movlw	64
  3978  0299  120A  118A  278C  120A  118A  	fcall	_SetRFMode
  3979                           
  3980                           ;Main Card V10.0.c: 677: cnt = 0;
  3981  029E  1283               	bcf	3,5	;RP0=0, select bank0
  3982  029F  1303               	bcf	3,6	;RP1=0, select bank0
  3983  02A0  01B1               	clrf	FindChannel@cnt
  3984  02A1  01B2               	clrf	FindChannel@cnt+1
  3985  02A2                     l1770:	
  3986                           ;Main Card V10.0.c: 678: while(cnt < 5)
  3987                           
  3988  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  3989  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  3990  02A4  0832               	movf	FindChannel@cnt+1,w
  3991  02A5  3A80               	xorlw	128
  3992  02A6  00FF               	movwf	127
  3993  02A7  3080               	movlw	128
  3994  02A8  027F               	subwf	127,w
  3995  02A9  1D03               	skipz
  3996  02AA  2AAD               	goto	u1105
  3997  02AB  3005               	movlw	5
  3998  02AC  0231               	subwf	FindChannel@cnt,w
  3999  02AD                     u1105:	
  4000  02AD  1803               	btfsc	3,0
  4001  02AE  2AD8               	goto	l1772
  4002                           
  4003                           ;Main Card V10.0.c: 679: {
  4004                           ;Main Card V10.0.c: 681: if((RegisterRead(0x0E) & 0b00000010) != 0)
  4005  02AF  300E               	movlw	14
  4006  02B0  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  4007  02B5  3902               	andlw	2
  4008  02B6  1903               	btfsc	3,2
  4009  02B7  2AC8               	goto	l1768
  4010                           
  4011                           ;Main Card V10.0.c: 682: {
  4012                           ;Main Card V10.0.c: 683: bChannelFound = 1;
  4013  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  4014  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  4015  02BA  01EC               	clrf	_bChannelFound
  4016  02BB  0AEC               	incf	_bChannelFound,f
  4017                           
  4018                           ;Main Card V10.0.c: 684: channelFound = i;
  4019  02BC  0834               	movf	FindChannel@i+1,w
  4020  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  4021  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  4022  02BF  00B0               	movwf	(_channelFound+1)^(0+128)
  4023  02C0  1283               	bcf	3,5	;RP0=0, select bank0
  4024  02C1  1303               	bcf	3,6	;RP1=0, select bank0
  4025  02C2  0833               	movf	FindChannel@i,w
  4026  02C3  1683               	bsf	3,5	;RP0=1, select bank1
  4027  02C4  1303               	bcf	3,6	;RP1=0, select bank1
  4028  02C5  00AF               	movwf	_channelFound^(0+128)
  4029                           
  4030                           ;Main Card V10.0.c: 685: return 1;
  4031  02C6  3001               	movlw	1
  4032  02C7  0008               	return
  4033  02C8                     l1768:	
  4034                           
  4035                           ;Main Card V10.0.c: 686: }
  4036                           ;Main Card V10.0.c: 687: cnt++;
  4037  02C8  3001               	movlw	1
  4038  02C9  1283               	bcf	3,5	;RP0=0, select bank0
  4039  02CA  1303               	bcf	3,6	;RP1=0, select bank0
  4040  02CB  07B1               	addwf	FindChannel@cnt,f
  4041  02CC  1803               	skipnc
  4042  02CD  0AB2               	incf	FindChannel@cnt+1,f
  4043  02CE  3000               	movlw	0
  4044  02CF  07B2               	addwf	FindChannel@cnt+1,f
  4045                           
  4046                           ;Main Card V10.0.c: 688: _delay((unsigned long)((1000)*(4000000/4000000.0)));
  4047  02D0  30F9               	movlw	249
  4048  02D1  00AE               	movwf	??_FindChannel
  4049  02D2                     u2207:	
  4050  02D2  0000               	nop
  4051  02D3  0BAE               	decfsz	??_FindChannel,f
  4052  02D4  2AD2               	goto	u2207
  4053  02D5  2AD6               	nop2	;nop
  4054  02D6  0000               	nop
  4055  02D7  2AA2               	goto	l1770
  4056  02D8                     l1772:	
  4057  02D8  3001               	movlw	1
  4058  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  4059  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  4060  02DB  07B3               	addwf	FindChannel@i,f
  4061  02DC  1803               	skipnc
  4062  02DD  0AB4               	incf	FindChannel@i+1,f
  4063  02DE  3000               	movlw	0
  4064  02DF  07B4               	addwf	FindChannel@i+1,f
  4065  02E0  0834               	movf	FindChannel@i+1,w
  4066  02E1  3A80               	xorlw	128
  4067  02E2  00FF               	movwf	127
  4068  02E3  3080               	movlw	128
  4069  02E4  027F               	subwf	127,w
  4070  02E5  1D03               	skipz
  4071  02E6  2AE9               	goto	u1115
  4072  02E7  300D               	movlw	13
  4073  02E8  0233               	subwf	FindChannel@i,w
  4074  02E9                     u1115:	
  4075  02E9  1C03               	skipc
  4076  02EA  2A14               	goto	l1752
  4077  02EB                     l1776:	
  4078                           
  4079                           ;Main Card V10.0.c: 689: }
  4080                           ;Main Card V10.0.c: 692: }
  4081                           ;Main Card V10.0.c: 693: return 0;
  4082  02EB  3000               	movlw	0
  4083  02EC  0008               	return
  4084  02ED                     __end_of_FindChannel:	
  4085                           
  4086                           	psect	text22
  4087  078C                     __ptext22:	
  4088 ;; *************** function _SetRFMode *****************
  4089 ;; Defined at:
  4090 ;;		line 715 in file "../Main Card V10.0.c"
  4091 ;; Parameters:    Size  Location     Type
  4092 ;;  mode            1    wreg     unsigned char 
  4093 ;; Auto vars:     Size  Location     Type
  4094 ;;  mode            1   12[BANK0 ] unsigned char 
  4095 ;;  mcparam0_rea    1   13[BANK0 ] unsigned char 
  4096 ;; Return value:  Size  Location     Type
  4097 ;;                  1    wreg      void 
  4098 ;; Registers used:
  4099 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4100 ;; Tracked objects:
  4101 ;;		On entry : 0/0
  4102 ;;		On exit  : 0/0
  4103 ;;		Unchanged: 0/0
  4104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4105 ;;      Params:         0       0       0       0       0
  4106 ;;      Locals:         0       2       0       0       0
  4107 ;;      Temps:          0       1       0       0       0
  4108 ;;      Totals:         0       3       0       0       0
  4109 ;;Total ram usage:        3 bytes
  4110 ;; Hardware stack levels used:    1
  4111 ;; Hardware stack levels required when called:    5
  4112 ;; This function calls:
  4113 ;;		_RegisterRead
  4114 ;;		_RegisterSet
  4115 ;; This function is called by:
  4116 ;;		_TransiverToReceive
  4117 ;;		_TransiverReadFIFO
  4118 ;;		_TransmittString
  4119 ;;		_TransiverInit
  4120 ;;		_FindChannel
  4121 ;; This function uses a non-reentrant model
  4122 ;;
  4123                           
  4124                           
  4125                           ;psect for function _SetRFMode
  4126  078C                     _SetRFMode:	
  4127                           
  4128                           ;incstack = 0
  4129                           ; Regs used in _SetRFMode: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4130                           ;SetRFMode@mode stored from wreg
  4131  078C  1283               	bcf	3,5	;RP0=0, select bank0
  4132  078D  1303               	bcf	3,6	;RP1=0, select bank0
  4133  078E  00AC               	movwf	SetRFMode@mode
  4134                           
  4135                           ;Main Card V10.0.c: 717: PORTAbits.RA4 = 0;
  4136  078F  1205               	bcf	5,4	;volatile
  4137                           
  4138                           ;Main Card V10.0.c: 718: BYTE mcparam0_read;
  4139                           ;Main Card V10.0.c: 719: mcparam0_read = RegisterRead(0);
  4140  0790  3000               	movlw	0
  4141  0791  120A  158A  2501  120A  118A  	fcall	_RegisterRead
  4142  0796  1283               	bcf	3,5	;RP0=0, select bank0
  4143  0797  1303               	bcf	3,6	;RP1=0, select bank0
  4144  0798  00AB               	movwf	??_SetRFMode
  4145  0799  082B               	movf	??_SetRFMode,w
  4146  079A  00AD               	movwf	SetRFMode@mcparam0_read
  4147                           
  4148                           ;Main Card V10.0.c: 720: switch (mode) {
  4149  079B  2FE4               	goto	l1732
  4150  079C                     l1720:	
  4151                           ;Main Card V10.0.c: 721: case 0x80:
  4152                           
  4153                           
  4154                           ;Main Card V10.0.c: 722: RegisterSet(0, (mcparam0_read & 0x1F) | 0x80);
  4155  079C  082D               	movf	SetRFMode@mcparam0_read,w
  4156  079D  391F               	andlw	31
  4157  079E  3880               	iorlw	128
  4158  079F  00AB               	movwf	??_SetRFMode
  4159  07A0  082B               	movf	??_SetRFMode,w
  4160  07A1  00A7               	movwf	RegisterSet@value
  4161  07A2  3000               	movlw	0
  4162  07A3  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  4163                           
  4164                           ;Main Card V10.0.c: 724: break;
  4165  07A8  2FF7               	goto	l322
  4166  07A9                     l1722:	
  4167                           ;Main Card V10.0.c: 725: case 0x60:
  4168                           
  4169                           
  4170                           ;Main Card V10.0.c: 726: RegisterSet(0, (mcparam0_read & 0x1F) | 0x60);
  4171  07A9  1283               	bcf	3,5	;RP0=0, select bank0
  4172  07AA  1303               	bcf	3,6	;RP1=0, select bank0
  4173  07AB  082D               	movf	SetRFMode@mcparam0_read,w
  4174  07AC  391F               	andlw	31
  4175  07AD  3860               	iorlw	96
  4176  07AE  00AB               	movwf	??_SetRFMode
  4177  07AF  082B               	movf	??_SetRFMode,w
  4178  07B0  00A7               	movwf	RegisterSet@value
  4179  07B1  3000               	movlw	0
  4180  07B2  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  4181                           
  4182                           ;Main Card V10.0.c: 728: break;
  4183  07B7  2FF7               	goto	l322
  4184  07B8                     l1724:	
  4185                           ;Main Card V10.0.c: 729: case 0x40:
  4186                           
  4187                           
  4188                           ;Main Card V10.0.c: 730: RegisterSet(0, (mcparam0_read & 0x1F) | 0x40);
  4189  07B8  1283               	bcf	3,5	;RP0=0, select bank0
  4190  07B9  1303               	bcf	3,6	;RP1=0, select bank0
  4191  07BA  082D               	movf	SetRFMode@mcparam0_read,w
  4192  07BB  391F               	andlw	31
  4193  07BC  3840               	iorlw	64
  4194  07BD  00AB               	movwf	??_SetRFMode
  4195  07BE  082B               	movf	??_SetRFMode,w
  4196  07BF  00A7               	movwf	RegisterSet@value
  4197  07C0  3000               	movlw	0
  4198  07C1  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  4199                           
  4200                           ;Main Card V10.0.c: 732: break;
  4201  07C6  2FF7               	goto	l322
  4202  07C7                     l1726:	
  4203                           ;Main Card V10.0.c: 733: case 0x20:
  4204                           
  4205                           
  4206                           ;Main Card V10.0.c: 734: RegisterSet(0, (mcparam0_read & 0x1F) | 0x20);
  4207  07C7  1283               	bcf	3,5	;RP0=0, select bank0
  4208  07C8  1303               	bcf	3,6	;RP1=0, select bank0
  4209  07C9  082D               	movf	SetRFMode@mcparam0_read,w
  4210  07CA  391F               	andlw	31
  4211  07CB  3820               	iorlw	32
  4212  07CC  00AB               	movwf	??_SetRFMode
  4213  07CD  082B               	movf	??_SetRFMode,w
  4214  07CE  00A7               	movwf	RegisterSet@value
  4215  07CF  3000               	movlw	0
  4216  07D0  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  4217                           
  4218                           ;Main Card V10.0.c: 736: break;
  4219  07D5  2FF7               	goto	l322
  4220  07D6                     l1728:	
  4221                           ;Main Card V10.0.c: 737: case 0x00:
  4222                           
  4223                           
  4224                           ;Main Card V10.0.c: 738: RegisterSet(0, (mcparam0_read & 0x1F) | 0x00);
  4225  07D6  1283               	bcf	3,5	;RP0=0, select bank0
  4226  07D7  1303               	bcf	3,6	;RP1=0, select bank0
  4227  07D8  082D               	movf	SetRFMode@mcparam0_read,w
  4228  07D9  391F               	andlw	31
  4229  07DA  00AB               	movwf	??_SetRFMode
  4230  07DB  082B               	movf	??_SetRFMode,w
  4231  07DC  00A7               	movwf	RegisterSet@value
  4232  07DD  3000               	movlw	0
  4233  07DE  120A  158A  24E7  120A  118A  	fcall	_RegisterSet
  4234                           
  4235                           ;Main Card V10.0.c: 741: }
  4236                           
  4237                           ;Main Card V10.0.c: 740: break;
  4238  07E3  2FF7               	goto	l322
  4239  07E4                     l1732:	
  4240  07E4  1283               	bcf	3,5	;RP0=0, select bank0
  4241  07E5  1303               	bcf	3,6	;RP1=0, select bank0
  4242  07E6  082C               	movf	SetRFMode@mode,w
  4243                           
  4244                           ; Switch size 1, requested type "space"
  4245                           ; Number of cases is 5, Range of values is 0 to 128
  4246                           ; switch strategies available:
  4247                           ; Name         Instructions Cycles
  4248                           ; simple_byte           16     9 (average)
  4249                           ; jumptable            260     6 (fixed)
  4250                           ;	Chosen strategy is simple_byte
  4251  07E7  3A00               	xorlw	0	; case 0
  4252  07E8  1903               	skipnz
  4253  07E9  2FD6               	goto	l1728
  4254  07EA  3A20               	xorlw	32	; case 32
  4255  07EB  1903               	skipnz
  4256  07EC  2FC7               	goto	l1726
  4257  07ED  3A60               	xorlw	96	; case 64
  4258  07EE  1903               	skipnz
  4259  07EF  2FB8               	goto	l1724
  4260  07F0  3A20               	xorlw	32	; case 96
  4261  07F1  1903               	skipnz
  4262  07F2  2FA9               	goto	l1722
  4263  07F3  3AE0               	xorlw	224	; case 128
  4264  07F4  1903               	skipnz
  4265  07F5  2F9C               	goto	l1720
  4266  07F6  2FF7               	goto	l322
  4267  07F7                     l322:	
  4268                           
  4269                           ;Main Card V10.0.c: 742: PORTAbits.RA4 = 1;
  4270  07F7  1283               	bcf	3,5	;RP0=0, select bank0
  4271  07F8  1303               	bcf	3,6	;RP1=0, select bank0
  4272  07F9  1605               	bsf	5,4	;volatile
  4273  07FA  0008               	return
  4274  07FB                     __end_of_SetRFMode:	
  4275                           
  4276                           	psect	text23
  4277  0CE7                     __ptext23:	
  4278 ;; *************** function _RegisterSet *****************
  4279 ;; Defined at:
  4280 ;;		line 824 in file "../Main Card V10.0.c"
  4281 ;; Parameters:    Size  Location     Type
  4282 ;;  adress          1    wreg     unsigned char 
  4283 ;;  value           1    7[BANK0 ] unsigned char 
  4284 ;; Auto vars:     Size  Location     Type
  4285 ;;  adress          1   10[BANK0 ] unsigned char 
  4286 ;; Return value:  Size  Location     Type
  4287 ;;                  1    wreg      void 
  4288 ;; Registers used:
  4289 ;;		wreg, status,2, status,0, pclath, cstack
  4290 ;; Tracked objects:
  4291 ;;		On entry : 0/0
  4292 ;;		On exit  : 0/0
  4293 ;;		Unchanged: 0/0
  4294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4295 ;;      Params:         0       1       0       0       0
  4296 ;;      Locals:         0       1       0       0       0
  4297 ;;      Temps:          0       2       0       0       0
  4298 ;;      Totals:         0       4       0       0       0
  4299 ;;Total ram usage:        4 bytes
  4300 ;; Hardware stack levels used:    1
  4301 ;; Hardware stack levels required when called:    3
  4302 ;; This function calls:
  4303 ;;		_WriteSPI
  4304 ;; This function is called by:
  4305 ;;		_TransiverToReceive
  4306 ;;		_TransmittString
  4307 ;;		_TransiverInit
  4308 ;;		_FindChannel
  4309 ;;		_SetRFMode
  4310 ;; This function uses a non-reentrant model
  4311 ;;
  4312                           
  4313                           
  4314                           ;psect for function _RegisterSet
  4315  0CE7                     _RegisterSet:	
  4316                           
  4317                           ;incstack = 0
  4318                           ; Regs used in _RegisterSet: [wreg+status,2+status,0+pclath+cstack]
  4319                           ;RegisterSet@adress stored from wreg
  4320  0CE7  1283               	bcf	3,5	;RP0=0, select bank0
  4321  0CE8  1303               	bcf	3,6	;RP1=0, select bank0
  4322  0CE9  00AA               	movwf	RegisterSet@adress
  4323                           
  4324                           ;Main Card V10.0.c: 826: PORTAbits.RA4 = 0;
  4325  0CEA  1205               	bcf	5,4	;volatile
  4326                           
  4327                           ;Main Card V10.0.c: 827: adress = (adress<<1);
  4328  0CEB  082A               	movf	RegisterSet@adress,w
  4329  0CEC  00A8               	movwf	??_RegisterSet
  4330  0CED  0728               	addwf	??_RegisterSet,w
  4331  0CEE  00A9               	movwf	??_RegisterSet+1
  4332  0CEF  0829               	movf	??_RegisterSet+1,w
  4333  0CF0  00AA               	movwf	RegisterSet@adress
  4334                           
  4335                           ;Main Card V10.0.c: 828: WriteSPI(adress);
  4336  0CF1  082A               	movf	RegisterSet@adress,w
  4337  0CF2  120A  158A  2458  120A  158A  	fcall	_WriteSPI
  4338                           
  4339                           ;Main Card V10.0.c: 829: WriteSPI(value);
  4340  0CF7  1283               	bcf	3,5	;RP0=0, select bank0
  4341  0CF8  1303               	bcf	3,6	;RP1=0, select bank0
  4342  0CF9  0827               	movf	RegisterSet@value,w
  4343  0CFA  120A  158A  2458   	fcall	_WriteSPI
  4344                           
  4345                           ;Main Card V10.0.c: 830: PORTAbits.RA4 = 1;
  4346  0CFD  1283               	bcf	3,5	;RP0=0, select bank0
  4347  0CFE  1303               	bcf	3,6	;RP1=0, select bank0
  4348  0CFF  1605               	bsf	5,4	;volatile
  4349  0D00  0008               	return
  4350  0D01                     __end_of_RegisterSet:	
  4351                           
  4352                           	psect	text24
  4353  0D01                     __ptext24:	
  4354 ;; *************** function _RegisterRead *****************
  4355 ;; Defined at:
  4356 ;;		line 794 in file "../Main Card V10.0.c"
  4357 ;; Parameters:    Size  Location     Type
  4358 ;;  adress          1    wreg     unsigned char 
  4359 ;; Auto vars:     Size  Location     Type
  4360 ;;  adress          1    6[BANK0 ] unsigned char 
  4361 ;;  value           1    5[BANK0 ] unsigned char 
  4362 ;; Return value:  Size  Location     Type
  4363 ;;                  1    wreg      unsigned char 
  4364 ;; Registers used:
  4365 ;;		wreg, status,2, status,0, pclath, cstack
  4366 ;; Tracked objects:
  4367 ;;		On entry : 0/0
  4368 ;;		On exit  : 0/0
  4369 ;;		Unchanged: 0/0
  4370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4371 ;;      Params:         0       0       0       0       0
  4372 ;;      Locals:         0       2       0       0       0
  4373 ;;      Temps:          0       2       0       0       0
  4374 ;;      Totals:         0       4       0       0       0
  4375 ;;Total ram usage:        4 bytes
  4376 ;; Hardware stack levels used:    1
  4377 ;; Hardware stack levels required when called:    4
  4378 ;; This function calls:
  4379 ;;		_ReadSPI
  4380 ;;		_WriteSPI
  4381 ;; This function is called by:
  4382 ;;		_TransiverToReceive
  4383 ;;		_TransmittString
  4384 ;;		_TransiverInit
  4385 ;;		_FindChannel
  4386 ;;		_SetRFMode
  4387 ;; This function uses a non-reentrant model
  4388 ;;
  4389                           
  4390                           
  4391                           ;psect for function _RegisterRead
  4392  0D01                     _RegisterRead:	
  4393                           
  4394                           ;incstack = 0
  4395                           ; Regs used in _RegisterRead: [wreg+status,2+status,0+pclath+cstack]
  4396                           ;RegisterRead@adress stored from wreg
  4397  0D01  1283               	bcf	3,5	;RP0=0, select bank0
  4398  0D02  1303               	bcf	3,6	;RP1=0, select bank0
  4399  0D03  00A6               	movwf	RegisterRead@adress
  4400                           
  4401                           ;Main Card V10.0.c: 796: BYTE value;
  4402                           ;Main Card V10.0.c: 797: PORTAbits.RA4 = 0;
  4403  0D04  1205               	bcf	5,4	;volatile
  4404                           
  4405                           ;Main Card V10.0.c: 798: adress = ((adress<<1)|0x40);
  4406  0D05  0826               	movf	RegisterRead@adress,w
  4407  0D06  00A3               	movwf	??_RegisterRead
  4408  0D07  0723               	addwf	??_RegisterRead,w
  4409  0D08  3840               	iorlw	64
  4410  0D09  00A4               	movwf	??_RegisterRead+1
  4411  0D0A  0824               	movf	??_RegisterRead+1,w
  4412  0D0B  00A6               	movwf	RegisterRead@adress
  4413                           
  4414                           ;Main Card V10.0.c: 799: WriteSPI(adress);
  4415  0D0C  0826               	movf	RegisterRead@adress,w
  4416  0D0D  120A  158A  2458  120A  158A  	fcall	_WriteSPI
  4417                           
  4418                           ;Main Card V10.0.c: 800: value = ReadSPI();
  4419  0D12  120A  158A  241D   	fcall	_ReadSPI
  4420  0D15  1283               	bcf	3,5	;RP0=0, select bank0
  4421  0D16  1303               	bcf	3,6	;RP1=0, select bank0
  4422  0D17  00A3               	movwf	??_RegisterRead
  4423  0D18  0823               	movf	??_RegisterRead,w
  4424  0D19  00A5               	movwf	RegisterRead@value
  4425                           
  4426                           ;Main Card V10.0.c: 801: PORTAbits.RA4 = 1;
  4427  0D1A  1605               	bsf	5,4	;volatile
  4428                           
  4429                           ;Main Card V10.0.c: 802: return value;
  4430  0D1B  0825               	movf	RegisterRead@value,w
  4431  0D1C  0008               	return
  4432  0D1D                     __end_of_RegisterRead:	
  4433                           
  4434                           	psect	text25
  4435  0C1D                     __ptext25:	
  4436 ;; *************** function _ReadSPI *****************
  4437 ;; Defined at:
  4438 ;;		line 607 in file "../Main Card V10.0.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;		None
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      unsigned char 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, pclath, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0
  4455 ;;      Totals:         0       0       0       0       0
  4456 ;;Total ram usage:        0 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    3
  4459 ;; This function calls:
  4460 ;;		_WriteSPI
  4461 ;; This function is called by:
  4462 ;;		_RegisterRead
  4463 ;;		_ReadFIFO
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           
  4468                           ;psect for function _ReadSPI
  4469  0C1D                     _ReadSPI:	
  4470                           
  4471                           ;Main Card V10.0.c: 609: WriteSPI(0x00);
  4472                           
  4473                           ;incstack = 0
  4474                           ; Regs used in _ReadSPI: [wreg+status,2+status,0+pclath+cstack]
  4475  0C1D  3000               	movlw	0
  4476  0C1E  120A  158A  2458   	fcall	_WriteSPI
  4477                           
  4478                           ;Main Card V10.0.c: 610: return SSPBUF;
  4479  0C21  1283               	bcf	3,5	;RP0=0, select bank0
  4480  0C22  1303               	bcf	3,6	;RP1=0, select bank0
  4481  0C23  0813               	movf	19,w	;volatile
  4482  0C24  0008               	return
  4483  0C25                     __end_of_ReadSPI:	
  4484                           
  4485                           	psect	text26
  4486  0C58                     __ptext26:	
  4487 ;; *************** function _WriteSPI *****************
  4488 ;; Defined at:
  4489 ;;		line 595 in file "../Main Card V10.0.c"
  4490 ;; Parameters:    Size  Location     Type
  4491 ;;  databyte        1    wreg     unsigned char 
  4492 ;; Auto vars:     Size  Location     Type
  4493 ;;  databyte        1    2[BANK0 ] unsigned char 
  4494 ;;  buffer          1    1[BANK0 ] unsigned char 
  4495 ;; Return value:  Size  Location     Type
  4496 ;;                  1    wreg      void 
  4497 ;; Registers used:
  4498 ;;		wreg
  4499 ;; Tracked objects:
  4500 ;;		On entry : 0/0
  4501 ;;		On exit  : 0/0
  4502 ;;		Unchanged: 0/0
  4503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4504 ;;      Params:         0       0       0       0       0
  4505 ;;      Locals:         0       2       0       0       0
  4506 ;;      Temps:          0       1       0       0       0
  4507 ;;      Totals:         0       3       0       0       0
  4508 ;;Total ram usage:        3 bytes
  4509 ;; Hardware stack levels used:    1
  4510 ;; Hardware stack levels required when called:    2
  4511 ;; This function calls:
  4512 ;;		Nothing
  4513 ;; This function is called by:
  4514 ;;		_ReadSPI
  4515 ;;		_RegisterRead
  4516 ;;		_RegisterSet
  4517 ;;		_WriteFIFO
  4518 ;; This function uses a non-reentrant model
  4519 ;;
  4520                           
  4521                           
  4522                           ;psect for function _WriteSPI
  4523  0C58                     _WriteSPI:	
  4524                           
  4525                           ;incstack = 0
  4526                           ; Regs used in _WriteSPI: [wreg]
  4527                           ;WriteSPI@databyte stored from wreg
  4528  0C58  1283               	bcf	3,5	;RP0=0, select bank0
  4529  0C59  1303               	bcf	3,6	;RP1=0, select bank0
  4530  0C5A  00A2               	movwf	WriteSPI@databyte
  4531                           
  4532                           ;Main Card V10.0.c: 597: unsigned char buffer;
  4533                           ;Main Card V10.0.c: 598: buffer = SSPBUF;
  4534  0C5B  0813               	movf	19,w	;volatile
  4535  0C5C  00A0               	movwf	??_WriteSPI
  4536  0C5D  0820               	movf	??_WriteSPI,w
  4537  0C5E  00A1               	movwf	WriteSPI@buffer
  4538                           
  4539                           ;Main Card V10.0.c: 599: PIR1bits.SSPIF=0;
  4540  0C5F  118C               	bcf	12,3	;volatile
  4541                           
  4542                           ;Main Card V10.0.c: 600: SSPBUF = databyte;
  4543  0C60  0822               	movf	WriteSPI@databyte,w
  4544  0C61  0093               	movwf	19	;volatile
  4545  0C62                     l298:	
  4546                           ;Main Card V10.0.c: 601: while(PIR1bits.SSPIF == 0);
  4547                           
  4548  0C62  1D8C               	btfss	12,3	;volatile
  4549  0C63  2C62               	goto	l298
  4550                           
  4551                           ;Main Card V10.0.c: 602: PIR1bits.SSPIF = 0;
  4552  0C64  118C               	bcf	12,3	;volatile
  4553  0C65  0008               	return
  4554  0C66                     __end_of_WriteSPI:	
  4555                           
  4556                           	psect	text27
  4557  0C4B                     __ptext27:	
  4558 ;; *************** function _Mode_2 *****************
  4559 ;; Defined at:
  4560 ;;		line 393 in file "../Main Card V10.0.c"
  4561 ;; Parameters:    Size  Location     Type
  4562 ;;		None
  4563 ;; Auto vars:     Size  Location     Type
  4564 ;;		None
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  1    wreg      void 
  4567 ;; Registers used:
  4568 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         0       0       0       0       0
  4575 ;;      Locals:         0       0       0       0       0
  4576 ;;      Temps:          0       0       0       0       0
  4577 ;;      Totals:         0       0       0       0       0
  4578 ;;Total ram usage:        0 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; Hardware stack levels required when called:    6
  4581 ;; This function calls:
  4582 ;;		_LightWithSensController
  4583 ;; This function is called by:
  4584 ;;		_main
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           
  4589                           ;psect for function _Mode_2
  4590  0C4B                     _Mode_2:	
  4591                           
  4592                           ;Main Card V10.0.c: 395: LightWithSensController();
  4593                           
  4594                           ;incstack = 0
  4595                           ; Regs used in _Mode_2: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4596  0C4B  120A  158A  2645  120A  158A  	fcall	_LightWithSensController
  4597                           
  4598                           ;Main Card V10.0.c: 396: if(PORTCbits.RC2)
  4599  0C50  1283               	bcf	3,5	;RP0=0, select bank0
  4600  0C51  1303               	bcf	3,6	;RP1=0, select bank0
  4601  0C52  1D07               	btfss	7,2	;volatile
  4602  0C53  2C56               	goto	l252
  4603                           
  4604                           ;Main Card V10.0.c: 397: PORTCbits.RC1 = 1;
  4605  0C54  1487               	bsf	7,1	;volatile
  4606  0C55  0008               	return
  4607  0C56                     l252:	
  4608                           
  4609                           ;Main Card V10.0.c: 398: else
  4610                           ;Main Card V10.0.c: 399: PORTCbits.RC1 = 0;
  4611  0C56  1087               	bcf	7,1	;volatile
  4612  0C57  0008               	return
  4613  0C58                     __end_of_Mode_2:	
  4614                           
  4615                           	psect	text28
  4616  0CCD                     __ptext28:	
  4617 ;; *************** function _Mode_1 *****************
  4618 ;; Defined at:
  4619 ;;		line 379 in file "../Main Card V10.0.c"
  4620 ;; Parameters:    Size  Location     Type
  4621 ;;		None
  4622 ;; Auto vars:     Size  Location     Type
  4623 ;;		None
  4624 ;; Return value:  Size  Location     Type
  4625 ;;                  1    wreg      void 
  4626 ;; Registers used:
  4627 ;;		wreg, status,2, status,0, pclath, cstack
  4628 ;; Tracked objects:
  4629 ;;		On entry : 0/0
  4630 ;;		On exit  : 0/0
  4631 ;;		Unchanged: 0/0
  4632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4633 ;;      Params:         0       0       0       0       0
  4634 ;;      Locals:         0       0       0       0       0
  4635 ;;      Temps:          0       0       0       0       0
  4636 ;;      Totals:         0       0       0       0       0
  4637 ;;Total ram usage:        0 bytes
  4638 ;; Hardware stack levels used:    1
  4639 ;; Hardware stack levels required when called:    5
  4640 ;; This function calls:
  4641 ;;		_DarknessCheck
  4642 ;; This function is called by:
  4643 ;;		_main
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           
  4648                           ;psect for function _Mode_1
  4649  0CCD                     _Mode_1:	
  4650                           
  4651                           ;Main Card V10.0.c: 382: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4652                           
  4653                           ;incstack = 0
  4654                           ; Regs used in _Mode_1: [wreg+status,2+status,0+pclath+cstack]
  4655  0CCD  301E               	movlw	30
  4656  0CCE  1283               	bcf	3,5	;RP0=0, select bank0
  4657  0CCF  1303               	bcf	3,6	;RP1=0, select bank0
  4658  0CD0  066A               	xorwf	_intSecondCounter,w
  4659  0CD1  046B               	iorwf	_intSecondCounter+1,w
  4660  0CD2  1903               	btfsc	3,2
  4661  0CD3  1907               	btfsc	7,2	;volatile
  4662  0CD4  2CDA               	goto	l2228
  4663                           
  4664                           ;Main Card V10.0.c: 383: DarknessCheck();
  4665  0CD5  120A  158A  258D  120A  158A  	fcall	_DarknessCheck
  4666  0CDA                     l2228:	
  4667                           
  4668                           ;Main Card V10.0.c: 384: if((intBlinkCycle == 1)&&(bDark == 1))
  4669  0CDA  1283               	bcf	3,5	;RP0=0, select bank0
  4670  0CDB  1303               	bcf	3,6	;RP1=0, select bank0
  4671  0CDC  0368               	decf	_intBlinkCycle,w
  4672  0CDD  0469               	iorwf	_intBlinkCycle+1,w
  4673  0CDE  1D03               	btfss	3,2
  4674  0CDF  2CE5               	goto	l247
  4675  0CE0  036D               	decf	_bDark,w
  4676  0CE1  1D03               	btfss	3,2
  4677  0CE2  2CE5               	goto	l247
  4678                           
  4679                           ;Main Card V10.0.c: 385: PORTCbits.RC2 = 1;
  4680  0CE3  1507               	bsf	7,2	;volatile
  4681  0CE4  0008               	return
  4682  0CE5                     l247:	
  4683                           
  4684                           ;Main Card V10.0.c: 386: else
  4685                           ;Main Card V10.0.c: 387: PORTCbits.RC2 = 0;
  4686  0CE5  1107               	bcf	7,2	;volatile
  4687  0CE6  0008               	return
  4688  0CE7                     __end_of_Mode_1:	
  4689                           
  4690                           	psect	text29
  4691  07FB                     __ptext29:	
  4692 ;; *************** function _Mode_0 *****************
  4693 ;; Defined at:
  4694 ;;		line 371 in file "../Main Card V10.0.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;		None
  4699 ;; Return value:  Size  Location     Type
  4700 ;;                  1    wreg      void 
  4701 ;; Registers used:
  4702 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4703 ;; Tracked objects:
  4704 ;;		On entry : 0/0
  4705 ;;		On exit  : 0/0
  4706 ;;		Unchanged: 0/0
  4707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4708 ;;      Params:         0       0       0       0       0
  4709 ;;      Locals:         0       0       0       0       0
  4710 ;;      Temps:          0       0       0       0       0
  4711 ;;      Totals:         0       0       0       0       0
  4712 ;;Total ram usage:        0 bytes
  4713 ;; Hardware stack levels used:    1
  4714 ;; Hardware stack levels required when called:    6
  4715 ;; This function calls:
  4716 ;;		_LightWithSensController
  4717 ;; This function is called by:
  4718 ;;		_main
  4719 ;; This function uses a non-reentrant model
  4720 ;;
  4721                           
  4722                           
  4723                           ;psect for function _Mode_0
  4724  07FB                     _Mode_0:	
  4725                           
  4726                           ;Main Card V10.0.c: 373: LightWithSensController();
  4727                           
  4728                           ;incstack = 0
  4729                           ; Regs used in _Mode_0: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4730  07FB  120A  158A  2645   	fcall	_LightWithSensController
  4731  07FE  0008               	return
  4732  07FF                     __end_of_Mode_0:	
  4733                           
  4734                           	psect	text30
  4735  0E45                     __ptext30:	
  4736 ;; *************** function _LightWithSensController *****************
  4737 ;; Defined at:
  4738 ;;		line 437 in file "../Main Card V10.0.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;		None
  4741 ;; Auto vars:     Size  Location     Type
  4742 ;;		None
  4743 ;; Return value:  Size  Location     Type
  4744 ;;                  1    wreg      void 
  4745 ;; Registers used:
  4746 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4747 ;; Tracked objects:
  4748 ;;		On entry : 0/0
  4749 ;;		On exit  : 0/0
  4750 ;;		Unchanged: 0/0
  4751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4752 ;;      Params:         0       0       0       0       0
  4753 ;;      Locals:         0       0       0       0       0
  4754 ;;      Temps:          0       0       0       0       0
  4755 ;;      Totals:         0       0       0       0       0
  4756 ;;Total ram usage:        0 bytes
  4757 ;; Hardware stack levels used:    1
  4758 ;; Hardware stack levels required when called:    5
  4759 ;; This function calls:
  4760 ;;		_DarknessCheck
  4761 ;;		_timerFunction
  4762 ;; This function is called by:
  4763 ;;		_Mode_0
  4764 ;;		_Mode_2
  4765 ;;		_Mode_4
  4766 ;;		_Mode_5
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           
  4771                           ;psect for function _LightWithSensController
  4772  0E45                     _LightWithSensController:	
  4773                           
  4774                           ;Main Card V10.0.c: 441: if((intSecondCounter == 30)&&(!PORTCbits.RC2))
  4775                           
  4776                           ;incstack = 0
  4777                           ; Regs used in _LightWithSensController: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4778  0E45  301E               	movlw	30
  4779  0E46  1283               	bcf	3,5	;RP0=0, select bank0
  4780  0E47  1303               	bcf	3,6	;RP1=0, select bank0
  4781  0E48  066A               	xorwf	_intSecondCounter,w
  4782  0E49  046B               	iorwf	_intSecondCounter+1,w
  4783  0E4A  1903               	btfsc	3,2
  4784  0E4B  1907               	btfsc	7,2	;volatile
  4785  0E4C  2E52               	goto	l2110
  4786                           
  4787                           ;Main Card V10.0.c: 442: DarknessCheck();
  4788  0E4D  120A  158A  258D  120A  158A  	fcall	_DarknessCheck
  4789  0E52                     l2110:	
  4790                           
  4791                           ;Main Card V10.0.c: 446: if((bDark == 1)&&(PORTAbits.RA1)&&(!PORTCbits.RC2))
  4792  0E52  1283               	bcf	3,5	;RP0=0, select bank0
  4793  0E53  1303               	bcf	3,6	;RP1=0, select bank0
  4794  0E54  036D               	decf	_bDark,w
  4795  0E55  1903               	btfsc	3,2
  4796  0E56  1C85               	btfss	5,1	;volatile
  4797  0E57  2E67               	goto	l2120
  4798  0E58  1907               	btfsc	7,2	;volatile
  4799  0E59  2E67               	goto	l2120
  4800                           
  4801                           ;Main Card V10.0.c: 447: {
  4802                           ;Main Card V10.0.c: 449: PORTCbits.RC2 = 1;
  4803  0E5A  1507               	bsf	7,2	;volatile
  4804                           
  4805                           ;Main Card V10.0.c: 451: timerFunction(0,120);
  4806  0E5B  3000               	movlw	0
  4807  0E5C  00A0               	movwf	timerFunction@intTimerNumber
  4808  0E5D  00A1               	movwf	timerFunction@intTimerNumber+1
  4809  0E5E  3078               	movlw	120
  4810  0E5F  00A2               	movwf	timerFunction@intSetSeconds
  4811  0E60  3000               	movlw	0
  4812  0E61  00A3               	movwf	timerFunction@intSetSeconds+1
  4813  0E62  120A  158A  24A6  120A  158A  	fcall	_timerFunction
  4814  0E67                     l2120:	
  4815                           
  4816                           ;Main Card V10.0.c: 452: }
  4817                           ;Main Card V10.0.c: 455: if(bTimerComplete[0])
  4818  0E67  1683               	bsf	3,5	;RP0=1, select bank1
  4819  0E68  1303               	bcf	3,6	;RP1=0, select bank1
  4820  0E69  082A               	movf	_bTimerComplete^(0+128),w
  4821  0E6A  1903               	btfsc	3,2
  4822  0E6B  0008               	return
  4823                           
  4824                           ;Main Card V10.0.c: 456: {
  4825                           ;Main Card V10.0.c: 457: DarknessCheck();
  4826  0E6C  120A  158A  258D  120A  158A  	fcall	_DarknessCheck
  4827                           
  4828                           ;Main Card V10.0.c: 458: if((bDark)&&(PORTAbits.RA1))
  4829  0E71  1283               	bcf	3,5	;RP0=0, select bank0
  4830  0E72  1303               	bcf	3,6	;RP1=0, select bank0
  4831  0E73  086D               	movf	_bDark,w
  4832  0E74  1D03               	btfss	3,2
  4833  0E75  1C85               	btfss	5,1	;volatile
  4834  0E76  2E82               	goto	l271
  4835                           
  4836                           ;Main Card V10.0.c: 459: {
  4837                           ;Main Card V10.0.c: 460: timerFunction(0,120);
  4838  0E77  3000               	movlw	0
  4839  0E78  00A0               	movwf	timerFunction@intTimerNumber
  4840  0E79  00A1               	movwf	timerFunction@intTimerNumber+1
  4841  0E7A  3078               	movlw	120
  4842  0E7B  00A2               	movwf	timerFunction@intSetSeconds
  4843  0E7C  3000               	movlw	0
  4844  0E7D  00A3               	movwf	timerFunction@intSetSeconds+1
  4845  0E7E  120A  158A  24A6   	fcall	_timerFunction
  4846                           
  4847                           ;Main Card V10.0.c: 461: }
  4848  0E81  0008               	return
  4849  0E82                     l271:	
  4850                           
  4851                           ;Main Card V10.0.c: 462: else
  4852                           ;Main Card V10.0.c: 463: PORTCbits.RC2 = 0;
  4853  0E82  1107               	bcf	7,2	;volatile
  4854  0E83  0008               	return
  4855  0E84                     __end_of_LightWithSensController:	
  4856                           
  4857                           	psect	text31
  4858  0CA6                     __ptext31:	
  4859 ;; *************** function _timerFunction *****************
  4860 ;; Defined at:
  4861 ;;		line 488 in file "../Main Card V10.0.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;  intTimerNumb    2    0[BANK0 ] int 
  4864 ;;  intSetSecond    2    2[BANK0 ] int 
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      unsigned char 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4876 ;;      Params:         0       4       0       0       0
  4877 ;;      Locals:         0       0       0       0       0
  4878 ;;      Temps:          0       1       0       0       0
  4879 ;;      Totals:         0       5       0       0       0
  4880 ;;Total ram usage:        5 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:    2
  4883 ;; This function calls:
  4884 ;;		Nothing
  4885 ;; This function is called by:
  4886 ;;		_TransiverToReceive
  4887 ;;		_TransiverReadFIFO
  4888 ;;		_TransmittString
  4889 ;;		_LightWithSensController
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           
  4894                           ;psect for function _timerFunction
  4895  0CA6                     _timerFunction:	
  4896                           
  4897                           ;Main Card V10.0.c: 490: intClockTimer[intTimerNumber] = intSetSeconds;
  4898                           
  4899                           ;incstack = 0
  4900                           ; Regs used in _timerFunction: [wreg-fsr0h+status,2+status,0]
  4901  0CA6  1283               	bcf	3,5	;RP0=0, select bank0
  4902  0CA7  1303               	bcf	3,6	;RP1=0, select bank0
  4903  0CA8  0820               	movf	timerFunction@intTimerNumber,w
  4904  0CA9  00A4               	movwf	??_timerFunction
  4905  0CAA  0724               	addwf	??_timerFunction,w
  4906  0CAB  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  4907  0CAC  0084               	movwf	4
  4908  0CAD  0822               	movf	timerFunction@intSetSeconds,w
  4909  0CAE  1383               	bcf	3,7	;select IRP bank1
  4910  0CAF  0080               	movwf	0
  4911  0CB0  0A84               	incf	4,f
  4912  0CB1  0823               	movf	timerFunction@intSetSeconds+1,w
  4913  0CB2  0080               	movwf	0
  4914                           
  4915                           ;Main Card V10.0.c: 491: bTimerComplete[intTimerNumber] = 0;
  4916  0CB3  0820               	movf	timerFunction@intTimerNumber,w
  4917  0CB4  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  4918  0CB5  0084               	movwf	4
  4919  0CB6  0180               	clrf	0
  4920  0CB7  0008               	return
  4921  0CB8                     __end_of_timerFunction:	
  4922                           ;Main Card V10.0.c: 492: return 1;
  4923                           ;	Return value of _timerFunction is never used
  4924                           
  4925                           
  4926                           	psect	text32
  4927  0D8D                     __ptext32:	
  4928 ;; *************** function _DarknessCheck *****************
  4929 ;; Defined at:
  4930 ;;		line 999 in file "../Main Card V10.0.c"
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;		None
  4933 ;; Auto vars:     Size  Location     Type
  4934 ;;  darknessValu    1    9[BANK0 ] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  1    wreg      void 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0, pclath, cstack
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         0       0       0       0       0
  4945 ;;      Locals:         0       1       0       0       0
  4946 ;;      Temps:          0       1       0       0       0
  4947 ;;      Totals:         0       2       0       0       0
  4948 ;;Total ram usage:        2 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; Hardware stack levels required when called:    4
  4951 ;; This function calls:
  4952 ;;		_AnalogValue
  4953 ;;		_eeprom_read
  4954 ;; This function is called by:
  4955 ;;		_TransmittedDataHandler
  4956 ;;		_Mode_1
  4957 ;;		_LightWithSensController
  4958 ;; This function uses a non-reentrant model
  4959 ;;
  4960                           
  4961                           
  4962                           ;psect for function _DarknessCheck
  4963  0D8D                     _DarknessCheck:	
  4964                           
  4965                           ;Main Card V10.0.c: 1001: unsigned char darknessValue;
  4966                           ;Main Card V10.0.c: 1002: PORTCbits.RC0 = 0;
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in _DarknessCheck: [wreg+status,2+status,0+pclath+cstack]
  4970  0D8D  1283               	bcf	3,5	;RP0=0, select bank0
  4971  0D8E  1303               	bcf	3,6	;RP1=0, select bank0
  4972  0D8F  1007               	bcf	7,0	;volatile
  4973                           
  4974                           ;Main Card V10.0.c: 1004: if(bValueFromPot == TRUE)
  4975  0D90  036F               	decf	_bValueFromPot,w
  4976  0D91  1D03               	btfss	3,2
  4977  0D92  2D9A               	goto	l1944
  4978                           
  4979                           ;Main Card V10.0.c: 1005: darknessValue= AnalogValue(3);
  4980  0D93  3003               	movlw	3
  4981  0D94  120A  158A  2564  120A  158A  	fcall	_AnalogValue
  4982  0D99  2DA0               	goto	L2
  4983  0D9A                     l1944:	
  4984                           
  4985                           ;Main Card V10.0.c: 1006: else
  4986                           ;Main Card V10.0.c: 1007: darknessValue=eeprom_read(addressDarknessValue);
  4987  0D9A  087C               	movf	_addressDarknessValue,w
  4988  0D9B  120A  118A  25DB  120A  158A  	fcall	_eeprom_read
  4989  0DA0                     L2:	
  4990  0DA0  1283               	bcf	3,5	;RP0=0, select bank0
  4991  0DA1  1303               	bcf	3,6	;RP1=0, select bank0
  4992  0DA2  00A8               	movwf	??_DarknessCheck
  4993  0DA3  0828               	movf	??_DarknessCheck,w
  4994  0DA4  00A9               	movwf	DarknessCheck@darknessValue
  4995                           
  4996                           ;Main Card V10.0.c: 1009: if(AnalogValue(0)>darknessValue)
  4997  0DA5  3000               	movlw	0
  4998  0DA6  120A  158A  2564  120A  158A  	fcall	_AnalogValue
  4999  0DAB  1283               	bcf	3,5	;RP0=0, select bank0
  5000  0DAC  1303               	bcf	3,6	;RP1=0, select bank0
  5001  0DAD  0229               	subwf	DarknessCheck@darknessValue,w
  5002  0DAE  1803               	skipnc
  5003  0DAF  2DB3               	goto	l1948
  5004                           
  5005                           ;Main Card V10.0.c: 1010: bDark = 1;
  5006  0DB0  01ED               	clrf	_bDark
  5007  0DB1  0AED               	incf	_bDark,f
  5008  0DB2  2DB4               	goto	l1950
  5009  0DB3                     l1948:	
  5010                           
  5011                           ;Main Card V10.0.c: 1011: else
  5012                           ;Main Card V10.0.c: 1012: bDark = 0;
  5013  0DB3  01ED               	clrf	_bDark
  5014  0DB4                     l1950:	
  5015                           
  5016                           ;Main Card V10.0.c: 1013: PORTCbits.RC0 = 0;
  5017  0DB4  1007               	bcf	7,0	;volatile
  5018  0DB5  0008               	return
  5019  0DB6                     __end_of_DarknessCheck:	
  5020                           
  5021                           	psect	text33
  5022  05DB                     __ptext33:	
  5023 ;; *************** function _eeprom_read *****************
  5024 ;; Defined at:
  5025 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\pic\eeread.c"
  5026 ;; Parameters:    Size  Location     Type
  5027 ;;  addr            1    wreg     unsigned char 
  5028 ;; Auto vars:     Size  Location     Type
  5029 ;;  addr            1    1[BANK0 ] unsigned char 
  5030 ;; Return value:  Size  Location     Type
  5031 ;;                  1    wreg      unsigned char 
  5032 ;; Registers used:
  5033 ;;		wreg, status,2, status,0
  5034 ;; Tracked objects:
  5035 ;;		On entry : 0/0
  5036 ;;		On exit  : 0/0
  5037 ;;		Unchanged: 0/0
  5038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5039 ;;      Params:         0       0       0       0       0
  5040 ;;      Locals:         0       1       0       0       0
  5041 ;;      Temps:          0       1       0       0       0
  5042 ;;      Totals:         0       2       0       0       0
  5043 ;;Total ram usage:        2 bytes
  5044 ;; Hardware stack levels used:    1
  5045 ;; Hardware stack levels required when called:    2
  5046 ;; This function calls:
  5047 ;;		Nothing
  5048 ;; This function is called by:
  5049 ;;		_TransmittedDataHandler
  5050 ;;		_DarknessCheck
  5051 ;; This function uses a non-reentrant model
  5052 ;;
  5053                           
  5054                           
  5055                           ;psect for function _eeprom_read
  5056  05DB                     _eeprom_read:	
  5057                           
  5058                           ;incstack = 0
  5059                           ; Regs used in _eeprom_read: [wreg+status,2+status,0]
  5060                           ;eeprom_read@addr stored from wreg
  5061  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  5062  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  5063  05DD  00A1               	movwf	eeprom_read@addr
  5064  05DE  2DE1               	goto	l388
  5065  05DF                     u1131:	
  5066  05DF  1283               	bcf	3,5	;RP0=0, select bank0
  5067  05E0  1303               	bcf	3,6	;RP1=0, select bank0
  5068  05E1                     l388:	
  5069  05E1  0064               	clrwdt	;# 
  5070  05E2  1683               	bsf	3,5	;RP0=1, select bank3
  5071  05E3  1703               	bsf	3,6	;RP1=1, select bank3
  5072  05E4  188C               	btfsc	12,1	;volsfr
  5073  05E5  2DDF               	goto	u1131
  5074  05E6  1283               	bcf	3,5	;RP0=0, select bank0
  5075  05E7  1303               	bcf	3,6	;RP1=0, select bank0
  5076  05E8  0821               	movf	eeprom_read@addr,w
  5077  05E9  1283               	bcf	3,5	;RP0=0, select bank2
  5078  05EA  1703               	bsf	3,6	;RP1=1, select bank2
  5079  05EB  008D               	movwf	13	;volatile
  5080  05EC  303F               	movlw	63
  5081  05ED  1283               	bcf	3,5	;RP0=0, select bank0
  5082  05EE  1303               	bcf	3,6	;RP1=0, select bank0
  5083  05EF  00A0               	movwf	??_eeprom_read
  5084  05F0  0820               	movf	??_eeprom_read,w
  5085  05F1  1683               	bsf	3,5	;RP0=1, select bank3
  5086  05F2  1703               	bsf	3,6	;RP1=1, select bank3
  5087  05F3  058C               	andwf	12,f	;volsfr
  5088  05F4  140C               	bsf	12,0	;volsfr
  5089  05F5  1003               	clrc
  5090  05F6  180C               	btfsc	12,0	;volsfr
  5091  05F7  1403               	setc
  5092  05F8  3000               	movlw	0
  5093  05F9  1803               	skipnc
  5094  05FA  3001               	movlw	1
  5095  05FB  1283               	bcf	3,5	;RP0=0, select bank2
  5096  05FC  1703               	bsf	3,6	;RP1=1, select bank2
  5097  05FD  080C               	movf	12,w	;volatile
  5098  05FE  0008               	return
  5099  05FF                     __end_of_eeprom_read:	
  5100                           
  5101                           	psect	text34
  5102  0D64                     __ptext34:	
  5103 ;; *************** function _AnalogValue *****************
  5104 ;; Defined at:
  5105 ;;		line 972 in file "../Main Card V10.0.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;  channel         1    wreg     unsigned char 
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;  channel         1    7[BANK0 ] unsigned char 
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      unsigned char 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, status,0, pclath, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5119 ;;      Params:         0       0       0       0       0
  5120 ;;      Locals:         0       1       0       0       0
  5121 ;;      Temps:          0       1       0       0       0
  5122 ;;      Totals:         0       2       0       0       0
  5123 ;;Total ram usage:        2 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    3
  5126 ;; This function calls:
  5127 ;;		_DelayDs
  5128 ;; This function is called by:
  5129 ;;		_TransmittedDataHandler
  5130 ;;		_DarknessCheck
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           
  5135                           ;psect for function _AnalogValue
  5136  0D64                     _AnalogValue:	
  5137                           
  5138                           ;incstack = 0
  5139                           ; Regs used in _AnalogValue: [wreg+status,2+status,0+pclath+cstack]
  5140                           ;AnalogValue@channel stored from wreg
  5141  0D64  1283               	bcf	3,5	;RP0=0, select bank0
  5142  0D65  1303               	bcf	3,6	;RP1=0, select bank0
  5143  0D66  00A7               	movwf	AnalogValue@channel
  5144                           
  5145                           ;Main Card V10.0.c: 974: ADCON0bits.CHS = channel;
  5146  0D67  0827               	movf	AnalogValue@channel,w
  5147  0D68  00A6               	movwf	??_AnalogValue
  5148  0D69  0DA6               	rlf	??_AnalogValue,f
  5149  0D6A  0DA6               	rlf	??_AnalogValue,f
  5150  0D6B  081F               	movf	31,w	;volatile
  5151  0D6C  0626               	xorwf	??_AnalogValue,w
  5152  0D6D  39C3               	andlw	-61
  5153  0D6E  0626               	xorwf	??_AnalogValue,w
  5154  0D6F  009F               	movwf	31	;volatile
  5155                           
  5156                           ;Main Card V10.0.c: 975: ADCON0bits.ADON = 1;
  5157  0D70  141F               	bsf	31,0	;volatile
  5158                           
  5159                           ;Main Card V10.0.c: 976: DelayDs(1);
  5160  0D71  3001               	movlw	1
  5161  0D72  00A0               	movwf	DelayDs@cnt
  5162  0D73  3000               	movlw	0
  5163  0D74  00A1               	movwf	DelayDs@cnt+1
  5164  0D75  120A  158A  2540  120A  158A  	fcall	_DelayDs
  5165                           
  5166                           ;Main Card V10.0.c: 977: ADCON0bits.GO = 1;
  5167  0D7A  1283               	bcf	3,5	;RP0=0, select bank0
  5168  0D7B  1303               	bcf	3,6	;RP1=0, select bank0
  5169  0D7C  149F               	bsf	31,1	;volatile
  5170                           
  5171                           ;Main Card V10.0.c: 978: DelayDs(1);
  5172  0D7D  3001               	movlw	1
  5173  0D7E  00A0               	movwf	DelayDs@cnt
  5174  0D7F  3000               	movlw	0
  5175  0D80  00A1               	movwf	DelayDs@cnt+1
  5176  0D81  120A  158A  2540  120A  158A  	fcall	_DelayDs
  5177  0D86                     l362:	
  5178                           ;Main Card V10.0.c: 979: while(ADCON0bits.GO);
  5179                           
  5180  0D86  1283               	bcf	3,5	;RP0=0, select bank0
  5181  0D87  1303               	bcf	3,6	;RP1=0, select bank0
  5182  0D88  189F               	btfsc	31,1	;volatile
  5183  0D89  2D86               	goto	l362
  5184                           
  5185                           ;Main Card V10.0.c: 980: ADCON0bits.ADON = 0;
  5186  0D8A  101F               	bcf	31,0	;volatile
  5187                           
  5188                           ;Main Card V10.0.c: 981: return ADRESH;
  5189  0D8B  081E               	movf	30,w	;volatile
  5190  0D8C  0008               	return
  5191  0D8D                     __end_of_AnalogValue:	
  5192                           
  5193                           	psect	text35
  5194  0D40                     __ptext35:	
  5195 ;; *************** function _DelayDs *****************
  5196 ;; Defined at:
  5197 ;;		line 586 in file "../Main Card V10.0.c"
  5198 ;; Parameters:    Size  Location     Type
  5199 ;;  cnt             2    0[BANK0 ] int 
  5200 ;; Auto vars:     Size  Location     Type
  5201 ;;  i               2    4[BANK0 ] int 
  5202 ;; Return value:  Size  Location     Type
  5203 ;;                  1    wreg      void 
  5204 ;; Registers used:
  5205 ;;		wreg, status,2
  5206 ;; Tracked objects:
  5207 ;;		On entry : 0/0
  5208 ;;		On exit  : 0/0
  5209 ;;		Unchanged: 0/0
  5210 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5211 ;;      Params:         0       2       0       0       0
  5212 ;;      Locals:         0       2       0       0       0
  5213 ;;      Temps:          0       2       0       0       0
  5214 ;;      Totals:         0       6       0       0       0
  5215 ;;Total ram usage:        6 bytes
  5216 ;; Hardware stack levels used:    1
  5217 ;; Hardware stack levels required when called:    2
  5218 ;; This function calls:
  5219 ;;		Nothing
  5220 ;; This function is called by:
  5221 ;;		_TransmittedDataHandler
  5222 ;;		_Blink
  5223 ;;		_AnalogValue
  5224 ;; This function uses a non-reentrant model
  5225 ;;
  5226                           
  5227                           
  5228                           ;psect for function _DelayDs
  5229  0D40                     _DelayDs:	
  5230                           
  5231                           ;Main Card V10.0.c: 587: int i;
  5232                           ;Main Card V10.0.c: 588: for(i=0;i<cnt;i++){
  5233                           
  5234                           ;incstack = 0
  5235                           ; Regs used in _DelayDs: [wreg+status,2]
  5236  0D40  1283               	bcf	3,5	;RP0=0, select bank0
  5237  0D41  1303               	bcf	3,6	;RP1=0, select bank0
  5238  0D42  01A4               	clrf	DelayDs@i
  5239  0D43  01A5               	clrf	DelayDs@i+1
  5240  0D44                     l292:	
  5241  0D44  0825               	movf	DelayDs@i+1,w
  5242  0D45  3A80               	xorlw	128
  5243  0D46  00A2               	movwf	??_DelayDs
  5244  0D47  0821               	movf	DelayDs@cnt+1,w
  5245  0D48  3A80               	xorlw	128
  5246  0D49  0222               	subwf	??_DelayDs,w
  5247  0D4A  1D03               	skipz
  5248  0D4B  2D4E               	goto	u1075
  5249  0D4C  0820               	movf	DelayDs@cnt,w
  5250  0D4D  0224               	subwf	DelayDs@i,w
  5251  0D4E                     u1075:	
  5252  0D4E  1803               	btfsc	3,0
  5253  0D4F  0008               	return
  5254                           
  5255                           ;Main Card V10.0.c: 589: _delay((unsigned long)((100)*(4000000/4000.0)));
  5256  0D50  3082               	movlw	130
  5257  0D51  1283               	bcf	3,5	;RP0=0, select bank0
  5258  0D52  1303               	bcf	3,6	;RP1=0, select bank0
  5259  0D53  00A3               	movwf	??_DelayDs+1
  5260  0D54  30DD               	movlw	221
  5261  0D55  00A2               	movwf	??_DelayDs
  5262  0D56                     u2217:	
  5263  0D56  0BA2               	decfsz	??_DelayDs,f
  5264  0D57  2D56               	goto	u2217
  5265  0D58  0BA3               	decfsz	??_DelayDs+1,f
  5266  0D59  2D56               	goto	u2217
  5267  0D5A  2D5B               	nop2
  5268  0D5B  3001               	movlw	1
  5269  0D5C  1283               	bcf	3,5	;RP0=0, select bank0
  5270  0D5D  1303               	bcf	3,6	;RP1=0, select bank0
  5271  0D5E  07A4               	addwf	DelayDs@i,f
  5272  0D5F  1803               	skipnc
  5273  0D60  0AA5               	incf	DelayDs@i+1,f
  5274  0D61  3000               	movlw	0
  5275  0D62  07A5               	addwf	DelayDs@i+1,f
  5276  0D63  2D44               	goto	l292
  5277  0D64                     __end_of_DelayDs:	
  5278                           
  5279                           	psect	text36
  5280  04A9                     __ptext36:	
  5281 ;; *************** function _tc_int *****************
  5282 ;; Defined at:
  5283 ;;		line 901 in file "../Main Card V10.0.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;		None
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  1    wreg      void 
  5290 ;; Registers used:
  5291 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5297 ;;      Params:         0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0
  5299 ;;      Temps:          7       0       0       0       0
  5300 ;;      Totals:         7       0       0       0       0
  5301 ;;Total ram usage:        7 bytes
  5302 ;; Hardware stack levels used:    1
  5303 ;; Hardware stack levels required when called:    1
  5304 ;; This function calls:
  5305 ;;		_TimerCounter
  5306 ;;		i1_OperationMode
  5307 ;; This function is called by:
  5308 ;;		Interrupt level 1
  5309 ;; This function uses a non-reentrant model
  5310 ;;
  5311                           
  5312                           
  5313                           ;psect for function _tc_int
  5314  04A9                     _tc_int:	
  5315                           
  5316                           ;Main Card V10.0.c: 905: if((PORTBbits.RB5 == 0)&&(intBlinkCycle == 0)&&(OperationMode()
      +                           < 2)){
  5317  04A9  1A86               	btfsc	6,5	;volatile
  5318  04AA  2CC3               	goto	i1l2372
  5319  04AB  0868               	movf	_intBlinkCycle,w
  5320  04AC  0469               	iorwf	_intBlinkCycle+1,w
  5321  04AD  1D03               	btfss	3,2
  5322  04AE  2CC3               	goto	i1l2372
  5323  04AF  120A  158A  242D  120A  118A  	fcall	i1_OperationMode
  5324  04B4  00F5               	movwf	??_tc_int
  5325  04B5  3002               	movlw	2
  5326  04B6  0275               	subwf	??_tc_int,w
  5327  04B7  1803               	skipnc
  5328  04B8  2CC3               	goto	i1l2372
  5329                           
  5330                           ;Main Card V10.0.c: 906: intBlinkCycle = 1;
  5331  04B9  3001               	movlw	1
  5332  04BA  1283               	bcf	3,5	;RP0=0, select bank0
  5333  04BB  1303               	bcf	3,6	;RP1=0, select bank0
  5334  04BC  00E8               	movwf	_intBlinkCycle
  5335  04BD  3000               	movlw	0
  5336  04BE  00E9               	movwf	_intBlinkCycle+1
  5337                           
  5338                           ;Main Card V10.0.c: 907: intBlinkCounter = 0;
  5339  04BF  1683               	bsf	3,5	;RP0=1, select bank1
  5340  04C0  1303               	bcf	3,6	;RP1=0, select bank1
  5341  04C1  01B1               	clrf	_intBlinkCounter^(0+128)
  5342  04C2  01B2               	clrf	(_intBlinkCounter+1)^(0+128)
  5343  04C3                     i1l2372:	
  5344                           
  5345                           ;Main Card V10.0.c: 909: }
  5346                           ;Main Card V10.0.c: 910: if(TMR1IF ==1){
  5347  04C3  1283               	bcf	3,5	;RP0=0, select bank0
  5348  04C4  1303               	bcf	3,6	;RP1=0, select bank0
  5349  04C5  1C0C               	btfss	12,0	;volatile
  5350  04C6  2D68               	goto	L3
  5351                           
  5352                           ;Main Card V10.0.c: 911: TMR1ON = 0;
  5353  04C7  1010               	bcf	16,0	;volatile
  5354                           
  5355                           ;Main Card V10.0.c: 912: TMR1H = 0x0B;
  5356  04C8  300B               	movlw	11
  5357  04C9  008F               	movwf	15	;volatile
  5358                           
  5359                           ;Main Card V10.0.c: 913: TMR1L = 0xDB;
  5360  04CA  30DB               	movlw	219
  5361  04CB  008E               	movwf	14	;volatile
  5362                           
  5363                           ;Main Card V10.0.c: 915: if((intBlinkCycle == 1)&&(intBlinkCounter<intNumberOfBlinks*2))
      +                          {
  5364  04CC  0368               	decf	_intBlinkCycle,w
  5365  04CD  0469               	iorwf	_intBlinkCycle+1,w
  5366  04CE  1D03               	btfss	3,2
  5367  04CF  2CF6               	goto	i1l2390
  5368  04D0  1683               	bsf	3,5	;RP0=1, select bank1
  5369  04D1  1303               	bcf	3,6	;RP1=0, select bank1
  5370  04D2  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5371  04D3  00F6               	movwf	??_tc_int+1
  5372  04D4  0857               	movf	_intNumberOfBlinks^(0+128),w
  5373  04D5  00F5               	movwf	??_tc_int
  5374  04D6  1003               	clrc
  5375  04D7  0DF5               	rlf	??_tc_int,f
  5376  04D8  0DF6               	rlf	??_tc_int+1,f
  5377  04D9  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5378  04DA  3A80               	xorlw	128
  5379  04DB  00F7               	movwf	??_tc_int+2
  5380  04DC  0876               	movf	??_tc_int+1,w
  5381  04DD  3A80               	xorlw	128
  5382  04DE  0277               	subwf	??_tc_int+2,w
  5383  04DF  1D03               	skipz
  5384  04E0  2CE3               	goto	u203_25
  5385  04E1  0875               	movf	??_tc_int,w
  5386  04E2  0231               	subwf	_intBlinkCounter^(0+128),w
  5387  04E3                     u203_25:	
  5388  04E3  1803               	skipnc
  5389  04E4  2CF6               	goto	i1l2390
  5390                           
  5391                           ;Main Card V10.0.c: 916: intBlinkCounter++;
  5392  04E5  3001               	movlw	1
  5393  04E6  1683               	bsf	3,5	;RP0=1, select bank1
  5394  04E7  1303               	bcf	3,6	;RP1=0, select bank1
  5395  04E8  07B1               	addwf	_intBlinkCounter^(0+128),f
  5396  04E9  1803               	skipnc
  5397  04EA  0AB2               	incf	(_intBlinkCounter+1)^(0+128),f
  5398  04EB  3000               	movlw	0
  5399  04EC  07B2               	addwf	(_intBlinkCounter+1)^(0+128),f
  5400                           
  5401                           ;Main Card V10.0.c: 918: if(PORTCbits.RC1 == 0)
  5402  04ED  1283               	bcf	3,5	;RP0=0, select bank0
  5403  04EE  1303               	bcf	3,6	;RP1=0, select bank0
  5404  04EF  1887               	btfsc	7,1	;volatile
  5405  04F0  2CF3               	goto	i1l351
  5406                           
  5407                           ;Main Card V10.0.c: 919: PORTCbits.RC1 = 1;
  5408  04F1  1487               	bsf	7,1	;volatile
  5409  04F2  2D16               	goto	i1l2398
  5410  04F3                     i1l351:	
  5411                           
  5412                           ;Main Card V10.0.c: 920: else if(PORTCbits.RC1 == 1)
  5413  04F3  1C87               	btfss	7,1	;volatile
  5414  04F4  2D16               	goto	i1l2398
  5415  04F5  2D15               	goto	i1l2396
  5416  04F6                     i1l2390:	
  5417                           ;Main Card V10.0.c: 922: }
  5418                           
  5419                           ;Main Card V10.0.c: 921: PORTCbits.RC1 = 0;
  5420                           
  5421                           
  5422                           ;Main Card V10.0.c: 924: else if((intBlinkCycle == 1)&&(intBlinkCounter >=intNumberOfBli
      +                          nks*2)){
  5423  04F6  1283               	bcf	3,5	;RP0=0, select bank0
  5424  04F7  1303               	bcf	3,6	;RP1=0, select bank0
  5425  04F8  0368               	decf	_intBlinkCycle,w
  5426  04F9  0469               	iorwf	_intBlinkCycle+1,w
  5427  04FA  1D03               	btfss	3,2
  5428  04FB  2D16               	goto	i1l2398
  5429  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  5430  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  5431  04FE  0858               	movf	(_intNumberOfBlinks+1)^(0+128),w
  5432  04FF  00F6               	movwf	??_tc_int+1
  5433  0500  0857               	movf	_intNumberOfBlinks^(0+128),w
  5434  0501  00F5               	movwf	??_tc_int
  5435  0502  1003               	clrc
  5436  0503  0DF5               	rlf	??_tc_int,f
  5437  0504  0DF6               	rlf	??_tc_int+1,f
  5438  0505  0832               	movf	(_intBlinkCounter+1)^(0+128),w
  5439  0506  3A80               	xorlw	128
  5440  0507  00F7               	movwf	??_tc_int+2
  5441  0508  0876               	movf	??_tc_int+1,w
  5442  0509  3A80               	xorlw	128
  5443  050A  0277               	subwf	??_tc_int+2,w
  5444  050B  1D03               	skipz
  5445  050C  2D0F               	goto	u207_25
  5446  050D  0875               	movf	??_tc_int,w
  5447  050E  0231               	subwf	_intBlinkCounter^(0+128),w
  5448  050F                     u207_25:	
  5449  050F  1C03               	skipc
  5450  0510  2D16               	goto	i1l2398
  5451                           
  5452                           ;Main Card V10.0.c: 925: intBlinkCycle = 0;
  5453  0511  1283               	bcf	3,5	;RP0=0, select bank0
  5454  0512  1303               	bcf	3,6	;RP1=0, select bank0
  5455  0513  01E8               	clrf	_intBlinkCycle
  5456  0514  01E9               	clrf	_intBlinkCycle+1
  5457  0515                     i1l2396:	
  5458                           
  5459                           ;Main Card V10.0.c: 926: PORTCbits.RC1 = 0;
  5460  0515  1087               	bcf	7,1	;volatile
  5461  0516                     i1l2398:	
  5462                           
  5463                           ;Main Card V10.0.c: 927: }
  5464                           ;Main Card V10.0.c: 930: intHalfSecondCounter++;
  5465  0516  3001               	movlw	1
  5466  0517  1683               	bsf	3,5	;RP0=1, select bank1
  5467  0518  1303               	bcf	3,6	;RP1=0, select bank1
  5468  0519  07B5               	addwf	_intHalfSecondCounter^(0+128),f
  5469  051A  1803               	skipnc
  5470  051B  0AB6               	incf	(_intHalfSecondCounter+1)^(0+128),f
  5471  051C  3000               	movlw	0
  5472  051D  07B6               	addwf	(_intHalfSecondCounter+1)^(0+128),f
  5473                           
  5474                           ;Main Card V10.0.c: 931: if(intHalfSecondCounter>=2)
  5475  051E  0836               	movf	(_intHalfSecondCounter+1)^(0+128),w
  5476  051F  3A80               	xorlw	128
  5477  0520  00FF               	movwf	127
  5478  0521  3080               	movlw	128
  5479  0522  027F               	subwf	127,w
  5480  0523  1D03               	skipz
  5481  0524  2D27               	goto	u208_25
  5482  0525  3002               	movlw	2
  5483  0526  0235               	subwf	_intHalfSecondCounter^(0+128),w
  5484  0527                     u208_25:	
  5485  0527  1C03               	skipc
  5486  0528  2D3A               	goto	i1l2408
  5487                           
  5488                           ;Main Card V10.0.c: 932: {
  5489                           ;Main Card V10.0.c: 933: intHalfSecondCounter = 0;
  5490  0529  1683               	bsf	3,5	;RP0=1, select bank1
  5491  052A  1303               	bcf	3,6	;RP1=0, select bank1
  5492  052B  01B5               	clrf	_intHalfSecondCounter^(0+128)
  5493  052C  01B6               	clrf	(_intHalfSecondCounter+1)^(0+128)
  5494                           
  5495                           ;Main Card V10.0.c: 934: intSecondCounter++;
  5496  052D  3001               	movlw	1
  5497  052E  1283               	bcf	3,5	;RP0=0, select bank0
  5498  052F  1303               	bcf	3,6	;RP1=0, select bank0
  5499  0530  07EA               	addwf	_intSecondCounter,f
  5500  0531  1803               	skipnc
  5501  0532  0AEB               	incf	_intSecondCounter+1,f
  5502  0533  3000               	movlw	0
  5503  0534  07EB               	addwf	_intSecondCounter+1,f
  5504                           
  5505                           ;Main Card V10.0.c: 935: TimerCounter();
  5506  0535  120A  158A  2684  120A  118A  	fcall	_TimerCounter
  5507  053A                     i1l2408:	
  5508                           
  5509                           ;Main Card V10.0.c: 936: }
  5510                           ;Main Card V10.0.c: 937: if(intSecondCounter >=60)
  5511  053A  1283               	bcf	3,5	;RP0=0, select bank0
  5512  053B  1303               	bcf	3,6	;RP1=0, select bank0
  5513  053C  086B               	movf	_intSecondCounter+1,w
  5514  053D  3A80               	xorlw	128
  5515  053E  00FF               	movwf	127
  5516  053F  3080               	movlw	128
  5517  0540  027F               	subwf	127,w
  5518  0541  1D03               	skipz
  5519  0542  2D45               	goto	u209_25
  5520  0543  303C               	movlw	60
  5521  0544  026A               	subwf	_intSecondCounter,w
  5522  0545                     u209_25:	
  5523  0545  1C03               	skipc
  5524  0546  2D53               	goto	i1l2414
  5525                           
  5526                           ;Main Card V10.0.c: 938: {
  5527                           ;Main Card V10.0.c: 939: intSecondCounter = 0;
  5528  0547  1283               	bcf	3,5	;RP0=0, select bank0
  5529  0548  1303               	bcf	3,6	;RP1=0, select bank0
  5530  0549  01EA               	clrf	_intSecondCounter
  5531  054A  01EB               	clrf	_intSecondCounter+1
  5532                           
  5533                           ;Main Card V10.0.c: 940: intMinuteCounter++;
  5534  054B  3001               	movlw	1
  5535  054C  1683               	bsf	3,5	;RP0=1, select bank1
  5536  054D  1303               	bcf	3,6	;RP1=0, select bank1
  5537  054E  07B7               	addwf	_intMinuteCounter^(0+128),f
  5538  054F  1803               	skipnc
  5539  0550  0AB8               	incf	(_intMinuteCounter+1)^(0+128),f
  5540  0551  3000               	movlw	0
  5541  0552  07B8               	addwf	(_intMinuteCounter+1)^(0+128),f
  5542  0553                     i1l2414:	
  5543                           
  5544                           ;Main Card V10.0.c: 941: }
  5545                           ;Main Card V10.0.c: 942: if(intMinuteCounter >= 60)
  5546  0553  1683               	bsf	3,5	;RP0=1, select bank1
  5547  0554  1303               	bcf	3,6	;RP1=0, select bank1
  5548  0555  0838               	movf	(_intMinuteCounter+1)^(0+128),w
  5549  0556  3A80               	xorlw	128
  5550  0557  00FF               	movwf	127
  5551  0558  3080               	movlw	128
  5552  0559  027F               	subwf	127,w
  5553  055A  1D03               	skipz
  5554  055B  2D5E               	goto	u210_25
  5555  055C  303C               	movlw	60
  5556  055D  0237               	subwf	_intMinuteCounter^(0+128),w
  5557  055E                     u210_25:	
  5558  055E  1C03               	skipc
  5559  055F  2D64               	goto	i1l2418
  5560                           
  5561                           ;Main Card V10.0.c: 943: {
  5562                           ;Main Card V10.0.c: 944: intMinuteCounter = 0;
  5563  0560  1683               	bsf	3,5	;RP0=1, select bank1
  5564  0561  1303               	bcf	3,6	;RP1=0, select bank1
  5565  0562  01B7               	clrf	_intMinuteCounter^(0+128)
  5566  0563  01B8               	clrf	(_intMinuteCounter+1)^(0+128)
  5567  0564                     i1l2418:	
  5568                           
  5569                           ;Main Card V10.0.c: 945: }
  5570                           ;Main Card V10.0.c: 948: TMR1ON = 1;
  5571  0564  1283               	bcf	3,5	;RP0=0, select bank0
  5572  0565  1303               	bcf	3,6	;RP1=0, select bank0
  5573  0566  1410               	bsf	16,0	;volatile
  5574                           
  5575                           ;Main Card V10.0.c: 949: }
  5576                           ;Main Card V10.0.c: 950: TMR1IF = 0;
  5577  0567  100C               	bcf	12,0	;volatile
  5578  0568                     L3:	
  5579                           
  5580                           ;Main Card V10.0.c: 951: RBIF = 0;
  5581  0568  100B               	bcf	11,0	;volatile
  5582                           
  5583                           ;Main Card V10.0.c: 952: GIE = 1;
  5584  0569  178B               	bsf	11,7	;volatile
  5585                           
  5586                           ;Main Card V10.0.c: 953: return;
  5587  056A  087B               	movf	??_tc_int+6,w
  5588  056B  00FF               	movwf	127
  5589  056C  087A               	movf	??_tc_int+5,w
  5590  056D  008A               	movwf	10
  5591  056E  0879               	movf	??_tc_int+4,w
  5592  056F  0084               	movwf	4
  5593  0570  0E78               	swapf	(??_tc_int+3)^(0+-128),w
  5594  0571  0083               	movwf	3
  5595  0572  0EFE               	swapf	126,f
  5596  0573  0E7E               	swapf	126,w
  5597  0574  0009               	retfie
  5598  0575                     __end_of_tc_int:	
  5599                           
  5600                           	psect	intentry
  5601  0004                     __pintentry:	
  5602                           ;incstack = 0
  5603 ;; hardware stack exceeded
  5604                           ; Regs used in _tc_int: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5605                           
  5606  0004                     interrupt_function:	
  5607  007E                     saved_w	set	btemp
  5608  0004  00FE               	movwf	btemp
  5609  0005  0E03               	swapf	3,w
  5610  0006  00F8               	movwf	??_tc_int+3
  5611  0007  0804               	movf	4,w
  5612  0008  00F9               	movwf	??_tc_int+4
  5613  0009  080A               	movf	10,w
  5614  000A  00FA               	movwf	??_tc_int+5
  5615  000B  1283               	bcf	3,5	;RP0=0, select bank0
  5616  000C  1303               	bcf	3,6	;RP1=0, select bank0
  5617  000D  087F               	movf	btemp+1,w
  5618  000E  00FB               	movwf	??_tc_int+6
  5619  000F  120A  118A  2CA9   	ljmp	_tc_int
  5620                           
  5621                           	psect	text37
  5622  0C2D                     __ptext37:	
  5623 ;; *************** function i1_OperationMode *****************
  5624 ;; Defined at:
  5625 ;;		line 1033 in file "../Main Card V10.0.c"
  5626 ;; Parameters:    Size  Location     Type
  5627 ;;		None
  5628 ;; Auto vars:     Size  Location     Type
  5629 ;;  OperationMod    1    1[COMMON] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  1    wreg      unsigned char 
  5632 ;; Registers used:
  5633 ;;		wreg, status,2
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5639 ;;      Params:         0       0       0       0       0
  5640 ;;      Locals:         1       0       0       0       0
  5641 ;;      Temps:          1       0       0       0       0
  5642 ;;      Totals:         2       0       0       0       0
  5643 ;;Total ram usage:        2 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; This function calls:
  5646 ;;		Nothing
  5647 ;; This function is called by:
  5648 ;;		_tc_int
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           
  5653                           ;psect for function i1_OperationMode
  5654  0C2D                     i1_OperationMode:	
  5655                           
  5656                           ;Main Card V10.0.c: 1035: unsigned char bracketStatus;
  5657                           ;Main Card V10.0.c: 1036: bracketStatus = ((~PORTB) & 0b00000111) ;
  5658                           
  5659                           ;incstack = 0
  5660 ;; hardware stack exceeded
  5661                           ; Regs used in i1_OperationMode: [wreg+status,2]
  5662  0C2D  1283               	bcf	3,5	;RP0=0, select bank0
  5663  0C2E  1303               	bcf	3,6	;RP1=0, select bank0
  5664  0C2F  0906               	comf	6,w	;volatile
  5665  0C30  3907               	andlw	7
  5666  0C31  00F0               	movwf	??i1_OperationMode
  5667  0C32  0870               	movf	??i1_OperationMode,w
  5668  0C33  00F1               	movwf	i1OperationMode@bracketStatus
  5669                           
  5670                           ;Main Card V10.0.c: 1038: return bracketStatus;
  5671  0C34  0871               	movf	i1OperationMode@bracketStatus,w
  5672  0C35  0008               	return
  5673  0C36                     __end_ofi1_OperationMode:	
  5674                           
  5675                           	psect	text38
  5676  0E84                     __ptext38:	
  5677 ;; *************** function _TimerCounter *****************
  5678 ;; Defined at:
  5679 ;;		line 510 in file "../Main Card V10.0.c"
  5680 ;; Parameters:    Size  Location     Type
  5681 ;;		None
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  i               2    3[COMMON] int 
  5684 ;; Return value:  Size  Location     Type
  5685 ;;                  1    wreg      void 
  5686 ;; Registers used:
  5687 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
  5688 ;; Tracked objects:
  5689 ;;		On entry : 0/0
  5690 ;;		On exit  : 0/0
  5691 ;;		Unchanged: 0/0
  5692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5693 ;;      Params:         0       0       0       0       0
  5694 ;;      Locals:         2       0       0       0       0
  5695 ;;      Temps:          3       0       0       0       0
  5696 ;;      Totals:         5       0       0       0       0
  5697 ;;Total ram usage:        5 bytes
  5698 ;; Hardware stack levels used:    1
  5699 ;; This function calls:
  5700 ;;		Nothing
  5701 ;; This function is called by:
  5702 ;;		_tc_int
  5703 ;; This function uses a non-reentrant model
  5704 ;;
  5705                           
  5706                           
  5707                           ;psect for function _TimerCounter
  5708  0E84                     _TimerCounter:	
  5709                           
  5710                           ;Main Card V10.0.c: 512: for (int i = 0; i < 5; i++)
  5711                           
  5712                           ;incstack = 0
  5713 ;; hardware stack exceeded
  5714                           ; Regs used in _TimerCounter: [wreg-fsr0h+status,2+status,0+btemp+1]
  5715  0E84  01F3               	clrf	TimerCounter@i
  5716  0E85  01F4               	clrf	TimerCounter@i+1
  5717  0E86                     L4:	
  5718  0E86  0874               	movf	TimerCounter@i+1,w
  5719  0E87  3A80               	xorlw	128
  5720  0E88  00FF               	movwf	127
  5721  0E89  3080               	movlw	128
  5722  0E8A  027F               	subwf	127,w
  5723  0E8B  1D03               	skipz
  5724  0E8C  2E8F               	goto	u187_25
  5725  0E8D  3005               	movlw	5
  5726  0E8E  0273               	subwf	TimerCounter@i,w
  5727  0E8F                     u187_25:	
  5728  0E8F  1803               	btfsc	3,0
  5729  0E90  0008               	return
  5730                           
  5731                           ;Main Card V10.0.c: 513: {
  5732                           ;Main Card V10.0.c: 514: if(intClockTimer[i]>0)
  5733  0E91  0873               	movf	TimerCounter@i,w
  5734  0E92  00F0               	movwf	??_TimerCounter
  5735  0E93  0770               	addwf	??_TimerCounter,w
  5736  0E94  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5737  0E95  0084               	movwf	4
  5738  0E96  1383               	bcf	3,7	;select IRP bank1
  5739  0E97  0800               	movf	0,w
  5740  0E98  00F1               	movwf	??_TimerCounter+1
  5741  0E99  0A84               	incf	4,f
  5742  0E9A  0800               	movf	0,w
  5743  0E9B  00F2               	movwf	??_TimerCounter+2
  5744  0E9C  0872               	movf	??_TimerCounter+2,w
  5745  0E9D  3A80               	xorlw	128
  5746  0E9E  00FF               	movwf	127
  5747  0E9F  3080               	movlw	128
  5748  0EA0  027F               	subwf	127,w
  5749  0EA1  1D03               	skipz
  5750  0EA2  2EA5               	goto	u188_25
  5751  0EA3  3001               	movlw	1
  5752  0EA4  0271               	subwf	??_TimerCounter+1,w
  5753  0EA5                     u188_25:	
  5754  0EA5  1C03               	skipc
  5755  0EA6  2EB9               	goto	i1l2314
  5756                           
  5757                           ;Main Card V10.0.c: 515: intClockTimer[i]--;
  5758  0EA7  0873               	movf	TimerCounter@i,w
  5759  0EA8  00F0               	movwf	??_TimerCounter
  5760  0EA9  0770               	addwf	??_TimerCounter,w
  5761  0EAA  3EA0               	addlw	(low (_intClockTimer| 0))& (0+255)
  5762  0EAB  0084               	movwf	4
  5763  0EAC  30FF               	movlw	255
  5764  0EAD  1383               	bcf	3,7	;select IRP bank1
  5765  0EAE  0780               	addwf	0,f
  5766  0EAF  0F84               	incfsz	4,f
  5767  0EB0  0800               	movf	0,w
  5768  0EB1  1803               	skipnc
  5769  0EB2  0A00               	incf	0,w
  5770  0EB3  00FF               	movwf	127
  5771  0EB4  30FF               	movlw	255
  5772  0EB5  077F               	addwf	127,w
  5773  0EB6  0080               	movwf	0
  5774  0EB7  0384               	decf	4,f
  5775  0EB8  2EBF               	goto	i1l2316
  5776  0EB9                     i1l2314:	
  5777                           
  5778                           ;Main Card V10.0.c: 516: else
  5779                           ;Main Card V10.0.c: 517: bTimerComplete[i] = 1;
  5780  0EB9  0873               	movf	TimerCounter@i,w
  5781  0EBA  3EAA               	addlw	(low (_bTimerComplete| 0))& (0+255)
  5782  0EBB  0084               	movwf	4
  5783  0EBC  1383               	bcf	3,7	;select IRP bank1
  5784  0EBD  0180               	clrf	0
  5785  0EBE  0A80               	incf	0,f
  5786  0EBF                     i1l2316:	
  5787  0EBF  3001               	movlw	1
  5788  0EC0  07F3               	addwf	TimerCounter@i,f
  5789  0EC1  1803               	skipnc
  5790  0EC2  0AF4               	incf	TimerCounter@i+1,f
  5791  0EC3  3000               	movlw	0
  5792  0EC4  07F4               	addwf	TimerCounter@i+1,f
  5793  0EC5  2E86               	goto	L4
  5794  0EC6                     __end_of_TimerCounter:	
  5795  007E                     btemp	set	126	;btemp
  5796  007E                     wtemp	set	126
  5797  007E                     wtemp0	set	126
  5798  0080                     wtemp1	set	128
  5799  0082                     wtemp2	set	130
  5800  0084                     wtemp3	set	132
  5801  0086                     wtemp4	set	134
  5802  0088                     wtemp5	set	136
  5803  007F                     wtemp6	set	127
  5804  007E                     ttemp	set	126
  5805  007E                     ttemp0	set	126
  5806  0081                     ttemp1	set	129
  5807  0084                     ttemp2	set	132
  5808  0087                     ttemp3	set	135
  5809  007F                     ttemp4	set	127
  5810  007E                     ltemp	set	126
  5811  007E                     ltemp0	set	126
  5812  0082                     ltemp1	set	130
  5813  0086                     ltemp2	set	134
  5814  0080                     ltemp3	set	128


Data Sizes:
    Strings     116
    Constant    39
    Data        3
    BSS         104
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80     72      80
    BANK1            80      0      57
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strncmp@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strlen@s	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strlen@cp	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strchr@ptr	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    sp__strchr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    strstr@s2	PTR const unsigned char  size(1) Largest target is 9
		 -> STR_15(CODE[6]), STR_14(CODE[5]), STR_13(CODE[8]), STR_10(CODE[7]), 
		 -> STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[8]), STR_4(CODE[7]), 
		 -> STR_3(CODE[7]), STR_2(CODE[8]), STR_1(CODE[8]), 

    strstr@s1	PTR const unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 

    atoi@s	PTR const unsigned char  size(1) Largest target is 30
		 -> TransmittedString(BANK1[30]), 

    TransmittString@dataString	PTR unsigned char  size(2) Largest target is 14
		 -> STR_17(CODE[8]), STR_16(CODE[8]), TransmittedDataHandler@slask_708(BANK0[8]), TransmittedDataHandler@slask_705(BANK0[8]), 
		 -> STR_12(CODE[4]), STR_11(CODE[4]), STR_9(CODE[14]), STR_8(CODE[14]), 
		 -> TransmittedDataHandler@slask_696(BANK0[8]), TransmittedDataHandler@slask(BANK0[8]), 

    sp__strstr	PTR unsigned char  size(1) Largest target is 30
		 -> NULL(NULL[0]), TransmittedString(BANK1[30]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tc_int in COMMON

    _tc_int->_TimerCounter

Critical Paths under _main in BANK0

    _main->_TransiverReadFIFO
    _TransiverToReceive->_FindChannel
    _TransiverReadFIFO->_TransmittedDataHandler
    _TransmittedDataHandler->_TransmittString
    _strstr->_strncmp
    _strncmp->_strlen
    _atoi->___wmul
    _TransiverInit->_FindChannel
    _Blink->_DelayDs
    _Mode_5->_TransmittString
    _Mode_4->_TransmittString
    _TransmittString->_FindChannel
    _WriteFIFO->_WriteSPI
    _FindChannel->_SetRFMode
    _SetRFMode->_RegisterSet
    _RegisterSet->_RegisterRead
    _RegisterRead->_WriteSPI
    _ReadSPI->_WriteSPI
    _Mode_1->_DarknessCheck
    _LightWithSensController->_DarknessCheck
    _DarknessCheck->_AnalogValue
    _AnalogValue->_DelayDs

Critical Paths under _tc_int in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _tc_int in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _tc_int in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tc_int in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   66739
                                             69 BANK0      3     3      0
                             _Mode_0
                             _Mode_1
                             _Mode_2
                             _Mode_4
                             _Mode_5
                      _OperationMode
                      _TransiverInit
                  _TransiverReadFIFO
                 _TransiverToReceive
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TransiverToReceive                                   2     2      0    9949
                                             21 BANK0      2     2      0
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                      _timerFunction
 ---------------------------------------------------------------------------------
 (1) _TransiverReadFIFO                                    6     6      0   18686
                                             63 BANK0      6     6      0
                           _ReadFIFO
                          _SetRFMode
             _TransmittedDataHandler
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _TransmittedDataHandler                              35    35      0   15521
                                             28 BANK0     35    35      0
                        _AnalogValue
                      _DarknessCheck
                            _DelayDs
                      _OperationMode
                    _TransmittString
                               _atoi
                        _eeprom_read
                       _eeprom_write
                             _strstr
 ---------------------------------------------------------------------------------
 (3) _strstr                                               5     4      1    1805
                                             14 BANK0      5     4      1
                             _strchr
                             _strlen
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              6     3      3     292
                                              8 BANK0      6     3      3
                             _strlen (ARG)
 ---------------------------------------------------------------------------------
 (4) _strlen                                               8     6      2     120
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (4) _strchr                                               3     1      2     182
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (3) _eeprom_write                                         3     2      1     108
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (3) _atoi                                                 8     6      2     546
                                              6 BANK0      8     6      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     220
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) _OperationMode                                        2     2      0      23
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _ReadFIFO                                             2     2      0      46
                                              3 BANK0      2     2      0
                            _ReadSPI
 ---------------------------------------------------------------------------------
 (1) _TransiverInit                                        1     1      0   10039
                                             21 BANK0      1     1      0
                              _Blink
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _Blink                                                5     3      2     796
                                              6 BANK0      5     3      2
                            _DelayDs
 ---------------------------------------------------------------------------------
 (1) _Mode_5                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (1) _Mode_4                                               0     0      0   12184
            _LightWithSensController
                    _TransmittString
 ---------------------------------------------------------------------------------
 (3) _TransmittString                                      7     5      2   10724
                                             21 BANK0      7     5      2
                        _FindChannel
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
                          _WriteFIFO
                      _timerFunction
 ---------------------------------------------------------------------------------
 (4) _WriteFIFO                                            1     1      0      45
                                              3 BANK0      1     1      0
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (2) _FindChannel                                          7     7      0    4734
                                             14 BANK0      7     7      0
                       _RegisterRead
                        _RegisterSet
                          _SetRFMode
 ---------------------------------------------------------------------------------
 (2) _SetRFMode                                            3     3      0    2321
                                             11 BANK0      3     3      0
                       _RegisterRead
                        _RegisterSet
 ---------------------------------------------------------------------------------
 (3) _RegisterSet                                          4     3      1    2074
                                              7 BANK0      4     3      1
                       _RegisterRead (ARG)
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _RegisterRead                                         4     4      0     114
                                              3 BANK0      4     4      0
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _ReadSPI                                              0     0      0      23
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (4) _WriteSPI                                             3     3      0      23
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _Mode_2                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (1) _Mode_1                                               0     0      0     754
                      _DarknessCheck
 ---------------------------------------------------------------------------------
 (1) _Mode_0                                               0     0      0    1460
            _LightWithSensController
 ---------------------------------------------------------------------------------
 (2) _LightWithSensController                              0     0      0    1460
                      _DarknessCheck
                      _timerFunction
 ---------------------------------------------------------------------------------
 (2) _timerFunction                                        5     1      4     706
                                              0 BANK0      5     1      4
 ---------------------------------------------------------------------------------
 (3) _DarknessCheck                                        2     2      0     754
                                              8 BANK0      2     2      0
                        _AnalogValue
                        _eeprom_read
 ---------------------------------------------------------------------------------
 (3) _eeprom_read                                          2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _AnalogValue                                          2     2      0     708
                                              6 BANK0      2     2      0
                            _DelayDs
 ---------------------------------------------------------------------------------
 (3) _DelayDs                                              6     4      2     686
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _tc_int                                               7     7      0     135
                                              5 COMMON     7     7      0
                       _TimerCounter
                    i1_OperationMode
 ---------------------------------------------------------------------------------
 (10) i1_OperationMode                                     2     2      0      23
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (10) _TimerCounter                                        5     5      0     112
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Mode_0
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_1
     _DarknessCheck
       _AnalogValue
         _DelayDs
       _eeprom_read
   _Mode_2
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
   _Mode_4
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _Mode_5
     _LightWithSensController
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _timerFunction
     _TransmittString
       _FindChannel
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
       _WriteFIFO
         _WriteSPI
       _timerFunction
   _OperationMode
   _TransiverInit
     _Blink
       _DelayDs
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
   _TransiverReadFIFO
     _ReadFIFO
       _ReadSPI
         _WriteSPI
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _TransmittedDataHandler
       _AnalogValue
         _DelayDs
       _DarknessCheck
         _AnalogValue
           _DelayDs
         _eeprom_read
       _DelayDs
       _OperationMode
       _TransmittString
         _FindChannel
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
           _SetRFMode
             _RegisterRead
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _RegisterSet
               _RegisterRead (ARG)
                 _ReadSPI
                   _WriteSPI
                 _WriteSPI
               _WriteSPI (ARG)
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
         _SetRFMode
           _RegisterRead
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _RegisterSet
             _RegisterRead (ARG)
               _ReadSPI
                 _WriteSPI
               _WriteSPI
             _WriteSPI (ARG)
         _WriteFIFO
           _WriteSPI
         _timerFunction
       _atoi
         ___wmul
         _isdigit
       _eeprom_read
       _eeprom_write
       _strstr
         _strchr
         _strlen
         _strncmp
           _strlen (ARG)
     _timerFunction
   _TransiverToReceive
     _FindChannel
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
       _SetRFMode
         _RegisterRead
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _RegisterSet
           _RegisterRead (ARG)
             _ReadSPI
               _WriteSPI
             _WriteSPI
           _WriteSPI (ARG)
     _RegisterRead
       _ReadSPI
         _WriteSPI
       _WriteSPI
     _RegisterSet
       _RegisterRead (ARG)
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _WriteSPI (ARG)
     _SetRFMode
       _RegisterRead
         _ReadSPI
           _WriteSPI
         _WriteSPI
       _RegisterSet
         _RegisterRead (ARG)
           _ReadSPI
             _WriteSPI
           _WriteSPI
         _WriteSPI (ARG)
     _timerFunction
   _init

 _tc_int (ROOT)
   _TimerCounter
   i1_OperationMode

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      39       7       71.3%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     48      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      BF      12        0.0%
ABS                  0      0      BF       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 03 09:37:48 2016

                      __CFG_CP$ON 0000                                 pc 0002        __size_of_TransiverReadFIFO 0066  
           _bTransiverModeReceive 006E                       _SSPSTATbits 0094                                _RD 0C60  
                     __CFG_CPD$ON 0000                                _WR 0C61                                fsr 0004  
             ___wmul@multiplicand 0022                               l220 0195                               l322 07F7  
                             l410 0DE5                               l252 0C56                               l236 0491  
                             l500 0D29                               l271 0E82                               l247 0CE5  
                             l362 0D86                               l292 0D44                               l286 0F6D  
                             l298 0C62                               l388 05E1                               l904 0EC9  
                             l892 0CBB                               _GIE 005F             __end_of_DarknessCheck 0DB6  
                             fsr0 0004                               indf 0000               __end_of_FindChannel 02ED  
  __end_of_TransmittedDataHandler 01ED                   ??_timerFunction 0024                      __CFG_LVP$OFF 0000  
                            l2110 0E52                              l2120 0E67                              l2026 0073  
                            l2052 00EA                              l2044 00C4                              l2036 009E  
                            l2080 0175                              l2072 014F                              l2064 012E  
                            l2250 0CA2                              l2138 0E18                              l2218 03D2  
                            l2082 017F                              l2074 0159                              l2058 010C  
                            l2228 0CDA                              l2244 0C91                              l2340 074E  
                            l2332 0734                              l2094 01BA                              l1720 079C  
                            l2088 0198                              l2264 0FDB                              l2352 0775  
                            l2344 075B                              l2336 0741                              l1722 07A9  
                            l2290 05AA                              l2266 0FEE                              l1724 07B8  
                            l1732 07E4                              l2356 077F                              l2348 0768  
                            l1726 07C7                              l1910 0426                              l1806 0D21  
                            l2294 05BE                              l1728 07D6                              l1752 0214  
                            l1770 02A2                              l1826 0C82                              l1834 0DBD  
                            l1850 0EFE                              l2298 05C7                              l1772 02D8  
                            l1932 0494                              l1908 0413                              l1836 0DCC  
                            l1852 0F07                              l1950 0DB4                              l1926 044B  
                            l1862 0CC4                              l1846 0EE8                              l1944 0D9A  
                            l1768 02C8                              l1776 02EB                              l1928 048C  
                            l1954 06B5                              l1882 0F2C                              l1948 0DB3  
                            l1972 06D4                              l1956 06AE                              l1876 0F0E  
                            l1884 0F45                              l1982 0717                              l1974 06D8  
                            l1966 06CE                              l1958 06BA                              l1976 0706  
                            l1888 0F4E       __size_of_TransiverToReceive 005D                              STR_1 0664  
                            STR_2 066C                              STR_3 0691                              STR_4 0683  
                            STR_5 0674                              STR_6 068A                              STR_7 0653  
                            STR_8 0645                              STR_9 0637                              u1105 02AD  
                            u1131 05DF                              u1115 02E9                              u1075 0D4E  
                            u1155 0D2A                              u1085 0212                              u1165 0D31  
                            u2117 0729                              u2207 02D2                              u2127 0FBE  
                            u2217 0D56                              u2137 0FF8                              u2147 05CC  
                            u2157 03F6                              u2167 0430                              u2177 0497  
                            u2187 04A3                              u1715 0E22                              u2197 01FE  
                            u1835 059A                              _RBIF 0058                              _WREN 0C62  
                  ??_eeprom_write 0021                              _atoi 06AB                              _main 071C  
                            _init 0F50                              btemp 007E                              ltemp 007E  
                            start 0012                              ttemp 007E                              wtemp 007E  
                   __CFG_IESO$OFF 0000                   __end_of_DelayDs 0D64                  TransmittString@i 003A  
__size_of_LightWithSensController 003F                   __end_of_ReadSPI 0C25                             ?_atoi 0026  
                           ?_main 0070                             ?_init 0070                             _EEADR 010D  
                           STR_10 067C                             STR_11 06A7                             STR_12 06A3  
                           STR_13 065C                             STR_14 069E                             STR_15 0698  
                           STR_16 0664                             STR_17 066C                     __CFG_WDTE$OFF 0000  
                           _CARRY 0018                             _ANSEL 0188             __end_of_OperationMode 0C3F  
                           _T1CON 0010                             i1l351 04F3                             _TMR1H 000F  
                           _TMR1L 000E                             _PORTA 0005                             _PORTB 0006  
                           _PORTC 0007                             _TRISA 0085                             _TRISB 0086  
                           _TRISC 0087                             _SSPIE 0463                             _Blink 0E12  
                           _bDark 006D                    __CFG_FCMEN$OFF 0000                   __end_of_isdigit 0C84  
                     _AnalogValue 0D64                             atoi@a 002B                             atoi@s 002D  
                  __CFG_BOREN$OFF 0000                             pclath 000A                             ltemp0 007E  
                           ltemp1 0082                             ltemp2 0086                             ltemp3 0080  
                 ??_TransiverInit 0035                             ttemp0 007E                             ttemp1 0081  
                           ttemp2 0084                             ttemp3 0087                             ttemp4 007F  
                           status 0003                     _intBlinkCycle 0068                             wtemp0 007E  
                           wtemp1 0080                             wtemp2 0082                             wtemp3 0084  
                           wtemp4 0086                             wtemp5 0088                             wtemp6 007F  
                  WriteSPI@buffer 0021                  __end_of_ChannelP 061D                  __end_of_ChannelR 062A  
                __end_of_ChannelS 0637                   __end_of_strncmp 0F0A                    __CFG_MCLRE$OFF 0000  
                   _intClockTimer 00A0                 _intNumberOfBlinks 00D7                   __initialization 0015  
                    __end_of_atoi 071C                      __end_of_main 078C                      __end_of_init 0FA3  
                __end_of_ReadFIFO 0C74                     ReadFIFO@value 0024                       _FindChannel 01ED  
                   ??_RegisterSet 0028                            ??_atoi 0028                            ??_main 0065  
                          ??_init 0020                            ?_Blink 0026                            _ADRESH 001E  
                          _EEDATA 010C                            _EECON1 018C                            _EECON2 018D  
                          _ANSELH 0189                  __end_of_WriteSPI 0C66                            i1l2314 0EB9  
                          i1l2316 0EBF                            i1l2414 0553                            i1l2408 053A  
                          i1l2418 0564                            i1l2372 04C3                            i1l2390 04F6  
                          i1l2396 0515                            u210_25 055E                            i1l2398 0516  
                          u203_25 04E3                            u207_25 050F                            u208_25 0527  
                          u209_25 0545                         ??_DelayDs 0022                            Blink@i 0029  
                          Blink@n 0026                            u187_25 0E8F                            u188_25 0EA5  
                          _TMR1IF 0060                            _TMR1ON 0080      i1OperationMode@bracketStatus 0071  
                          _SSPBUF 0013                         ??_ReadSPI 0023                            _Mode_0 07FB  
                          _Mode_1 0CCD                            _Mode_2 0C4B                            _Mode_4 0C84  
                          _Mode_5 0C95                __size_of_SetRFMode 006F              __size_of_eeprom_read 0024  
                          ___wmul 0D1D                            _tc_int 04A9              __end_of_eeprom_write 0E12  
                          _strchr 0CB8                            _strlen 0DB6                            _strstr 0F0A  
                       ??_isdigit 0020                            saved_w 007E               __end_of_RegisterSet 0D01  
                   ?_RegisterRead 0070                RegisterRead@adress 0026       TransmittedDataHandler@slask 003D  
     TransmittedDataHandler@value 005D                         ??_strncmp 002B                __size_of_WriteFIFO 000C  
         __end_of__initialization 0044                   eeprom_read@addr 0021           _LightWithSensController 0E45  
                   _bChannelFound 006C                     __end_of_Blink 0E45                    __pcstackCOMMON 0070  
                    __pidataBANK0 07FF                      __pidataBANK1 0C1B                      _channelFound 00AF  
                  _OPTION_REGbits 0081                           ??_Blink 0028                 __end_of_SetRFMode 07FB  
               eeprom_write@value 0020                    ??_RegisterRead 0023                        __pbssBANK0 0068  
                      __pbssBANK1 00A0                        __pbssBANK3 0190          __size_ofi1_OperationMode 0009  
                       ?_ReadFIFO 0070        timerFunction@intSetSeconds 0022                AnalogValue@channel 0027  
                         ?_Mode_0 0070                           ?_Mode_1 0070                           ?_Mode_2 0070  
                         ?_Mode_4 0070                           ?_Mode_5 0070          __size_of_TransmittString 00D2  
                      __pmaintext 071C                           ?___wmul 0020                        __pintentry 0004  
                         ?_tc_int 0070                         ?_WriteSPI 0070                 __end_of_WriteFIFO 0C4B  
                         ?_strchr 0020                           ?_strlen 0020                       _RegisterSet 0CE7  
                         ?_strstr 002E                     ?_TimerCounter 0070        __end_of_TransiverToReceive 1000  
           __end_of_timerFunction 0CB8                      ?_AnalogValue 0070                        __stringtab 0600  
                      ??_ReadFIFO 0023                           _DelayDs 0D40         ??_LightWithSensController 002A  
                         _ReadSPI 0C1D            __size_of_DarknessCheck 0029                   __size_of_Mode_0 0004  
                 __size_of_Mode_1 001A                   __size_of_Mode_2 000D                   __size_of_Mode_4 0011  
                 __size_of_Mode_5 0011        OperationMode@bracketStatus 0021             __size_of_eeprom_write 0030  
                 __size_of___wmul 0023                      ?_FindChannel 0070                         _ANSELbits 0188  
                      ??_WriteSPI 0020                   __size_of_tc_int 00CC                           __ptext1 0F50  
                         __ptext2 0FA3                           __ptext3 0575                           __ptext4 0048  
                         __ptext5 0F0A                           __ptext6 0EC6                           __ptext7 0DB6  
                         __ptext8 0CB8                           __ptext9 0DE2                   __size_of_strchr 0015  
                 __size_of_strlen 002C                         _T1CONbits 0010                   __size_of_strstr 0046  
                         _isdigit 0C74                    ??_TimerCounter 0070                           clrloop0 0C26  
                         _strncmp 0EC6              end_of_initialization 0044                      _eeprom_write 0DE2  
           __end_of_TransiverInit 03D7            __size_of_OperationMode 0009                 ??i1_OperationMode 0070  
                WriteSPI@databyte 0022              __end_of_RegisterRead 0D1D                     WriteFIFO@Data 0023  
        ??_TransmittedDataHandler 003C                           strlen@s 0026                   _intBlinkCounter 00B1  
               ??_TransmittString 0037                         _PORTAbits 0005                         _PORTBbits 0006  
                       _PORTCbits 0007                     _DarknessCheck 0D8D                     ??_eeprom_read 0020  
                  __end_of_Mode_0 07FF                    __end_of_Mode_1 0CE7                    __end_of_Mode_2 0C58  
                  __end_of_Mode_4 0C95                    __end_of_Mode_5 0CA6                    __end_of___wmul 0D40  
                  __end_of_tc_int 0575                    ?_DarknessCheck 0070                     _OperationMode 0C36  
                  __end_of_strchr 0CCD                    __end_of_strlen 0DE2                    __end_of_strstr 0F50  
             start_initialization 0015             _intDarkCheckIntervall 00B3        DarknessCheck@darknessValue 0029  
                       _SetRFMode 078C              __size_of_AnalogValue 0029                 __size_of_ReadFIFO 000E  
        __CFG_FOSC$INTRC_NOCLKOUT 0000                          ??_Mode_0 002A                          ??_Mode_1 002A  
                        ??_Mode_2 002A                          ??_Mode_4 003C                          ??_Mode_5 003C  
            __end_of_TimerCounter 0EC6                          ??___wmul 0024               __end_of_eeprom_read 05FF  
                   TimerCounter@i 0073                       __pdataBANK0 006F                       __pdataBANK1 00D7  
                        ??_tc_int 0075   __size_of_TransmittedDataHandler 01A5                      ?_RegisterSet 0027  
                        ??_strchr 0022                          ??_strlen 0022                          ??_strstr 002F  
                  ?_OperationMode 0070              __size_of_FindChannel 0100         TransmittString@dataString 0035  
               RegisterRead@value 0025                 __size_of_WriteSPI 000E                       __pbssCOMMON 007C  
                       ___latbits 0002                         _WriteFIFO 0C3F                     __pcstackBANK0 0020  
                    _ReceivedData 0190            SetRFMode@mcparam0_read 002D                      _isdigit$1080 0020  
                      ?_SetRFMode 0070                  eeprom_write@addr 0022                          ?_DelayDs 0020  
               RegisterSet@adress 002A                          ?_ReadSPI 0070             __size_of_RegisterRead 001C  
              _TransiverToReceive 0FA3               ?_TransiverToReceive 0070                   ??_DarknessCheck 0028  
                       __pstrings 0600                          ?_isdigit 0070       timerFunction@intTimerNumber 0020  
                  __size_of_Blink 0033                        ?_WriteFIFO 0070                   i1_OperationMode 0C2D  
            ??_TransiverToReceive 0035                      _RegisterRead 0D01                          ?_strncmp 0028  
          _TransmittedDataHandler 0048                 interrupt_function 0004                    ___wmul@product 0024  
                        _IOCBbits 0096                          DelayDs@i 0024                      FindChannel@i 0033  
                       clear_ram0 0C25                       _eeprom_read 05DB                          _PIE1bits 008C  
                 _TransmittString 03D7                          _PIR1bits 000C            __size_of_timerFunction 0012  
                 ??_OperationMode 0020                     SetRFMode@mode 002C                        _ADCON0bits 001F  
                     __stringbase 060F                        _ADCON1bits 009F                 ___wmul@multiplier 0020  
                        _WPUBbits 0095                          _ChannelP 0610                          _ChannelR 061D  
                        _ChannelS 062A          ?_LightWithSensController 0070                       ??_SetRFMode 002B  
                        _ReadFIFO 0C66             __size_of_TimerCounter 0042                  __size_of_DelayDs 0024  
                __size_of_ReadSPI 0008                    _bTimerComplete 00AA                  _intMinuteCounter 00B7  
               _TransiverReadFIFO 0575                          _WriteSPI 0C58                __end_of__stringtab 0610  
                _intSecondCounter 006A                ?_TransiverReadFIFO 0070           __end_ofi1_OperationMode 0C36  
          __size_of_TransiverInit 00EA              __size_of_RegisterSet 001A                  RegisterSet@value 0027  
                     ??_WriteFIFO 0023                  __size_of_isdigit 0010                      _TimerCounter 0E84  
                        __ptext10 06AB                          __ptext11 0C74                          __ptext20 0C3F  
                        __ptext12 0D1D                          __ptext21 01ED                          __ptext13 0C36  
                        __ptext30 0E45                          __ptext22 078C                          __ptext14 0C66  
                        __ptext31 0CA6                          __ptext23 0CE7                          __ptext15 02ED  
                        __ptext32 0D8D                          __ptext24 0D01                          __ptext16 0E12  
                        __ptext33 05DB                          __ptext25 0C1D                          __ptext17 0C95  
                        __ptext34 0D64                          __ptext26 0C58                          __ptext18 0C84  
                        __ptext35 0D40                          __ptext27 0C4B                          __ptext19 03D7  
                        __ptext36 04A9                          __ptext28 0CCD                          __ptext37 0C2D  
                        __ptext29 07FB                          __ptext38 0E84               ??_TransiverReadFIFO 005F  
                   _timerFunction 0CA6           __end_of_TransmittString 04A9   TransmittedDataHandler@slask_705 004D  
 TransmittedDataHandler@slask_708 0055   TransmittedDataHandler@slask_696 0045                  __size_of_strncmp 0044  
                   __size_of_atoi 0071                     __size_of_main 0070                     __size_of_init 0053  
                      strncmp@len 0029                     _bValueFromPot 006F         __end_of_TransiverReadFIFO 05DB  
                        atoi@sign 002A                        DelayDs@cnt 0020                    FindChannel@cnt 0031  
 __end_of_LightWithSensController 0E84              _intHalfSecondCounter 00B5                        _INTCONbits 000B  
              TransiverReadFIFO@i 0061                TransiverReadFIFO@j 0063                          isdigit@c 0021  
                  ?_timerFunction 0020                     ??_AnalogValue 0026                 _TransmittedString 00B9  
                        intlevel1 0000                         strchr@chr 0020                         strchr@ptr 0022  
                   _TransiverInit 02ED                         strncmp@s1 002D                         strncmp@s2 0028  
                       stringcode 060A                        _OSCCONbits 008F                     ??_FindChannel 002E  
                ?i1_OperationMode 0070                          strlen@cp 0027                          stringdir 060A  
                        stringtab 0600           ?_TransmittedDataHandler 0070                          strstr@s1 0032  
                        strstr@s2 002E                  ?_TransmittString 0035                     ?_eeprom_write 0020  
                  ?_TransiverInit 0070                      ?_eeprom_read 0070               __end_of_AnalogValue 0D8D  
                      _SSPCONbits 0014              _addressDarknessValue 007C  
